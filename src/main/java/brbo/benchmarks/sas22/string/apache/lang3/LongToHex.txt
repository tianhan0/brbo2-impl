public static String longToHex(final long src, final int srcPos, final String dstInit, final int dstPos,
        final int nHexs) {
    if (0 == nHexs) {
        return dstInit;
    }
    if ((nHexs - 1) * 4 + srcPos >= 64) {
        throw new IllegalArgumentException("(nHexs-1)*4+srcPos is greater or equal to than 64");
    }
    final StringBuilder sb = new StringBuilder(dstInit);
    int append = sb.length();
    for (int i = 0; i < nHexs; i++) {
        final int shift = i * 4 + srcPos;
        final int bits = (int) (0xF & (src >> shift));
        if (dstPos + i == append) {
            ++append;
            sb.append(intToHexDigit(bits));
        } else {
            sb.setCharAt(dstPos + i, intToHexDigit(bits));
        }
    }
    return sb.toString();
}
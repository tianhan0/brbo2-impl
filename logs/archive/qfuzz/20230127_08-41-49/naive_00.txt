2023-01-27 08:41:49,198 INFO     Arguments:
2023-01-27 08:41:49,198 INFO     timeout	60
2023-01-27 08:41:49,198 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-27 08:41:49,198 INFO     samples	0
2023-01-27 08:41:49,198 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-27 08:41:49,198 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-27 08:41:49,198 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-27 08:41:49,198 INFO     dry	False
2023-01-27 08:41:49,198 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/naive_00.txt
2023-01-27 08:41:49,199 INFO     mode	naive
2023-01-27 08:41:49,199 INFO     version	master
2023-01-27 08:41:49,199 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
2023-01-27 08:41:49,199 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-27 08:41:49,205 INFO     Done. Execution time: 0.005784034729003906 seconds
2023-01-27 08:41:49,205 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "ffe05f2003f15bd1be0b484430fb302e9885b399"`
2023-01-27 08:41:49,211 INFO     Done. Execution time: 0.005297183990478516 seconds
2023-01-27 08:41:49,211 INFO     Build a new version: "ffe05f2003f15bd1be0b484430fb302e9885b399"
2023-01-27 08:41:49,211 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-27 08:42:07,090 INFO     Done. Execution time: 17.878845691680908 seconds
2023-01-27 08:42:07,090 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 1 Scala source and 1 Java source to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 11 s, completed Jan 27, 2023 8:42:06 AM

2023-01-27 08:42:07,094 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-27 08:42:07,095 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:43:13,610 INFO     Done. Execution time: 66.51506567001343 seconds
2023-01-27 08:43:13,610 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz8645578531499033186/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8645578531499033186/bin -o /tmp/qfuzz8645578531499033186/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8645578531499033186/bin
Found file /tmp/qfuzz8645578531499033186/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz8645578531499033186/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8645578531499033186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8645578531499033186/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8645578531499033186/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8645578531499033186/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 130075 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8645578531499033186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8645578531499033186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8645578531499033186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.505s
user	0m25.123s
sys	0m1.841s

2023-01-27 08:43:13,610 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-27 08:43:13,611 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-27 08:43:19,492 INFO     Done. Execution time: 5.881450414657593 seconds
2023-01-27 08:43:19,493 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 48):
                                                                                            
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |   text    |
--------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [25,17]  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [25,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [25,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |  [25,17]  |
    14  |                     int chunk = 0;  |         |   0  |      0  |     |  [25,17]  |
    16  |                         int i = 0;  |         |   0  |      0  |  0  |  [25,17]  |
    22  |        chunk = arrayRead(text, i);  |         |   0  |     25  |  0  |  [25,17]  |
    25  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |  [25,17]  |
    29  |                         i = i + 1;  |         |  25  |     25  |  1  |  [25,17]  |
    30  |              resetPlaceHolder_1();  |         |  25  |     25  |  1  |  [25,17]  |
    36  |        chunk = arrayRead(text, i);  |         |  25  |     17  |  1  |  [25,17]  |
    39  |                     R = R + chunk;  |     17  |  42  |     17  |  1  |  [25,17]  |
    43  |                         i = i + 1;  |         |  42  |     17  |  2  |  [25,17]  |
    44  |              resetPlaceHolder_1();  |         |  42  |     17  |  2  |  [25,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 39]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 39]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25,39}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     25  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     17  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m5.872s
user	0m10.417s
sys	0m1.789s

2023-01-27 08:43:19,493 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:43:28,002 INFO     Done. Execution time: 8.509361267089844 seconds
2023-01-27 08:43:28,003 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0843-transparentAmortize-60s-mostPrecise/stac-raw-0127-0843-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.500s
user	0m18.872s
sys	0m2.299s

2023-01-27 08:43:28,003 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-27 08:43:28,003 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:44:34,164 INFO     Done. Execution time: 66.16021585464478 seconds
2023-01-27 08:44:34,164 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz7139099307224578837/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7139099307224578837/bin -o /tmp/qfuzz7139099307224578837/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7139099307224578837/bin
Found file /tmp/qfuzz7139099307224578837/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz7139099307224578837/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7139099307224578837/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7139099307224578837/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7139099307224578837/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz7139099307224578837/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 120447 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 14, 5, 23, 13, 4, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7139099307224578837/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,14], 2, 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 2, 19
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.151s
user	0m25.589s
sys	0m1.682s

2023-01-27 08:44:34,164 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-27 08:44:34,164 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-27 08:44:44,587 INFO     Done. Execution time: 10.422491550445557 seconds
2023-01-27 08:44:44,587 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,14], 2, 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 2, 19)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 124):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |   text    |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         23  |           2  |  [25,14]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         23  |           2  |  [25,14]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         23  |           2  |  [25,14]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         23  |           2  |  [25,14]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         23  |           2  |  [25,14]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         23  |           2  |  [25,14]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         23  |           2  |  [25,14]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     25  |  0  |  0  |         23  |           2  |  [25,14]  |
    46  |                     R = R + chunk;  |     25  |   25  |     25  |  0  |  0  |         23  |           2  |  [25,14]  |
    50  |                         j = j + 1;  |         |   25  |     25  |  0  |  1  |         23  |           2  |  [25,14]  |
    51  |              resetPlaceHolder_2();  |         |   25  |     25  |  0  |  1  |         23  |           2  |  [25,14]  |
    57  |        chunk = arrayRead(text, j);  |         |   25  |     14  |  0  |  1  |         23  |           2  |  [25,14]  |
    60  |                     R = R + chunk;  |     14  |   39  |     14  |  0  |  1  |         23  |           2  |  [25,14]  |
    64  |                         j = j + 1;  |         |   39  |     14  |  0  |  2  |         23  |           2  |  [25,14]  |
    65  |              resetPlaceHolder_2();  |         |   39  |     14  |  0  |  2  |         23  |           2  |  [25,14]  |
    71  |                 R = R + separator;  |     23  |   62  |     14  |  0  |  2  |         23  |           2  |  [25,14]  |
    75  |                         i = i + 1;  |         |   62  |     14  |  1  |  2  |         23  |           2  |  [25,14]  |
    76  |              resetPlaceHolder_1();  |         |   62  |     14  |  1  |  2  |         23  |           2  |  [25,14]  |
    81  |                         int j = 0;  |         |   62  |     14  |  1  |  0  |         23  |           2  |  [25,14]  |
    87  |        chunk = arrayRead(text, j);  |         |   62  |     25  |  1  |  0  |         23  |           2  |  [25,14]  |
    90  |                     R = R + chunk;  |     25  |   87  |     25  |  1  |  0  |         23  |           2  |  [25,14]  |
    94  |                         j = j + 1;  |         |   87  |     25  |  1  |  1  |         23  |           2  |  [25,14]  |
    95  |              resetPlaceHolder_2();  |         |   87  |     25  |  1  |  1  |         23  |           2  |  [25,14]  |
   101  |        chunk = arrayRead(text, j);  |         |   87  |     14  |  1  |  1  |         23  |           2  |  [25,14]  |
   104  |                     R = R + chunk;  |     14  |  101  |     14  |  1  |  1  |         23  |           2  |  [25,14]  |
   108  |                         j = j + 1;  |         |  101  |     14  |  1  |  2  |         23  |           2  |  [25,14]  |
   109  |              resetPlaceHolder_2();  |         |  101  |     14  |  1  |  2  |         23  |           2  |  [25,14]  |
   115  |                 R = R + separator;  |     23  |  124  |     14  |  1  |  2  |         23  |           2  |  [25,14]  |
   119  |                         i = i + 1;  |         |  124  |     14  |  2  |  2  |         23  |           2  |  [25,14]  |
   120  |              resetPlaceHolder_1();  |         |  124  |     14  |  2  |  2  |         23  |           2  |  [25,14]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [115, 46, 60, 71, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {104}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {115}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {115}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     25  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     14  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    71  |     R = R + separator;  |     23  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |     25  |                            |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     14  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |
   115  |     R = R + separator;  |     23  |                         1  |
   120  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {46}; {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {46}; {90}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [46, 60, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,90}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {46,60}; {90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(0, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {46,60}; {90,104}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [46, 60, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,90}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {115}; {71}
GroupID(1): {46,60,90,104}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     25  |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |
    60  |         R = R + chunk;  |     14  |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |
    71  |     R = R + separator;  |     23  |                         0  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |     25  |                            |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |         R = R + chunk;  |     14  |                            |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |                            |
   115  |     R = R + separator;  |     23  |                         1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(76)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.413s
user	0m18.859s
sys	0m4.433s

2023-01-27 08:44:44,587 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:45:40,441 INFO     Done. Execution time: 55.85368227958679 seconds
2023-01-27 08:45:40,442 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `53.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0844-transparentAmortize-60s-mostPrecise/stac-raw-0127-0844-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m55.846s
user	2m25.425s
sys	0m14.097s

2023-01-27 08:45:40,442 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-27 08:45:40,442 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:46:46,478 INFO     Done. Execution time: 66.03637051582336 seconds
2023-01-27 08:46:46,479 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz6364391932825476216/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6364391932825476216/bin -o /tmp/qfuzz6364391932825476216/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6364391932825476216/bin
Found file /tmp/qfuzz6364391932825476216/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz6364391932825476216/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6364391932825476216/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6364391932825476216/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6364391932825476216/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz6364391932825476216/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 135840 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 21, 15, 21, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz6364391932825476216/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,21], 2, 21, 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 2, 19, 28
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.028s
user	0m24.338s
sys	0m1.697s

2023-01-27 08:46:46,479 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-27 08:46:46,479 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-27 08:46:57,046 INFO     Done. Execution time: 10.567006826400757 seconds
2023-01-27 08:46:57,047 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,21], 2, 21, 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 2, 19, 28)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 144):
                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |   text    |  ts  |
--------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |   23  |   21  |  [20,21]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |   23  |   21  |  [20,21]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |   23  |   21  |  [20,21]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |   23  |   21  |  [20,21]  |   2  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |     |   23  |   21  |  [20,21]  |   2  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |     |   23  |   21  |  [20,21]  |   2  |
    45  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |   23  |   21  |  [20,21]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |     20  |  0  |  0  |   23  |   21  |  [20,21]  |   2  |
    54  |                     R = R + chunk;  |     20  |   20  |     20  |  0  |  0  |   23  |   21  |  [20,21]  |   2  |
    57  |                       R = R + rep;  |     23  |   43  |     20  |  0  |  0  |   23  |   21  |  [20,21]  |   2  |
    61  |                         j = j + 1;  |         |   43  |     20  |  0  |  1  |   23  |   21  |  [20,21]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   43  |     20  |  0  |  1  |   23  |   21  |  [20,21]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   43  |     21  |  0  |  1  |   23  |   21  |  [20,21]  |   2  |
    71  |                     R = R + chunk;  |     21  |   64  |     21  |  0  |  1  |   23  |   21  |  [20,21]  |   2  |
    74  |                       R = R + rep;  |     23  |   87  |     21  |  0  |  1  |   23  |   21  |  [20,21]  |   2  |
    78  |                         j = j + 1;  |         |   87  |     21  |  0  |  2  |   23  |   21  |  [20,21]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   87  |     21  |  0  |  2  |   23  |   21  |  [20,21]  |   2  |
    85  |                       R = R + sep;  |     21  |  108  |     21  |  0  |  2  |   23  |   21  |  [20,21]  |   2  |
    89  |                         i = i + 1;  |         |  108  |     21  |  1  |  2  |   23  |   21  |  [20,21]  |   2  |
    90  |              resetPlaceHolder_1();  |         |  108  |     21  |  1  |  2  |   23  |   21  |  [20,21]  |   2  |
    95  |                         int j = 0;  |         |  108  |     21  |  1  |  0  |   23  |   21  |  [20,21]  |   2  |
   101  |        chunk = arrayRead(text, j);  |         |  108  |     20  |  1  |  0  |   23  |   21  |  [20,21]  |   2  |
   104  |                     R = R + chunk;  |     20  |  128  |     20  |  1  |  0  |   23  |   21  |  [20,21]  |   2  |
   107  |                       R = R + rep;  |     23  |  151  |     20  |  1  |  0  |   23  |   21  |  [20,21]  |   2  |
   111  |                         j = j + 1;  |         |  151  |     20  |  1  |  1  |   23  |   21  |  [20,21]  |   2  |
   112  |              resetPlaceHolder_2();  |         |  151  |     20  |  1  |  1  |   23  |   21  |  [20,21]  |   2  |
   118  |        chunk = arrayRead(text, j);  |         |  151  |     21  |  1  |  1  |   23  |   21  |  [20,21]  |   2  |
   121  |                     R = R + chunk;  |     21  |  172  |     21  |  1  |  1  |   23  |   21  |  [20,21]  |   2  |
   124  |                       R = R + rep;  |     23  |  195  |     21  |  1  |  1  |   23  |   21  |  [20,21]  |   2  |
   128  |                         j = j + 1;  |         |  195  |     21  |  1  |  2  |   23  |   21  |  [20,21]  |   2  |
   129  |              resetPlaceHolder_2();  |         |  195  |     21  |  1  |  2  |   23  |   21  |  [20,21]  |   2  |
   135  |                       R = R + sep;  |     21  |  216  |     21  |  1  |  2  |   23  |   21  |  [20,21]  |   2  |
   139  |                         i = i + 1;  |         |  216  |     21  |  2  |  2  |   23  |   21  |  [20,21]  |   2  |
   140  |              resetPlaceHolder_1();  |         |  216  |     21  |  2  |  2  |   23  |   21  |  [20,21]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 121, 74, 85, 124, 71, 54, 135, 104, 107]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {104}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {124}; {57}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {124}; {57}; {74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     20  |                            |
    57  |           R = R + rep;  |     23  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     21  |                            |
    74  |           R = R + rep;  |     23  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |           R = R + sep;  |     21  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     20  |                            |
   107  |           R = R + rep;  |     23  |                         2  |
   112  |  resetPlaceHolder_2();  |         |                            |
   121  |         R = R + chunk;  |     21  |                            |
   124  |           R = R + rep;  |     23  |                         3  |
   129  |  resetPlaceHolder_2();  |         |                            |
   135  |           R = R + sep;  |     21  |                            |
   140  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {85}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {135}; {71}; {85}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121}; {135}; {71}; {85} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     20  |                            |
    57  |           R = R + rep;  |     23  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     21  |                         0  |
    74  |           R = R + rep;  |     23  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |           R = R + sep;  |     21  |                         1  |
    90  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     20  |                            |
   107  |           R = R + rep;  |     23  |                            |
   112  |  resetPlaceHolder_2();  |         |                            |
   121  |         R = R + chunk;  |     21  |                         2  |
   124  |           R = R + rep;  |     23  |                            |
   129  |  resetPlaceHolder_2();  |         |                            |
   135  |           R = R + sep;  |     21  |                         3  |
   140  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [54, 104]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {107}; {124}; {57}; {74}
GroupID(1): {121}; {135}; {71}; {85}
GroupID(2): {54,104}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     20  |                            |                            |                         0  |
    57  |           R = R + rep;  |     23  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     21  |                            |                         0  |                            |
    74  |           R = R + rep;  |     23  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    85  |           R = R + sep;  |     21  |                            |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   104  |         R = R + chunk;  |     20  |                            |                            |                         0  |
   107  |           R = R + rep;  |     23  |                         2  |                            |                            |
   112  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     21  |                            |                         2  |                            |
   124  |           R = R + rep;  |     23  |                         3  |                            |                            |
   129  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   135  |           R = R + sep;  |     21  |                            |                         3  |                            |
   140  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [72, 84])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     20  |                            |                            |                         0  |
    57  |           R = R + rep;  |     23  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     21  |                            |                         0  |                            |
    74  |           R = R + rep;  |     23  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    85  |           R = R + sep;  |     21  |                            |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   104  |         R = R + chunk;  |     20  |                            |                            |                         0  |
   107  |           R = R + rep;  |     23  |                         2  |                            |                            |
   112  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     21  |                            |                         2  |                            |
   124  |           R = R + rep;  |     23  |                         3  |                            |                            |
   129  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   135  |           R = R + sep;  |     21  |                            |                         3  |                            |
   140  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 2 and 3 segment (index range: [122, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     20  |                            |                            |                         0  |
    57  |           R = R + rep;  |     23  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     21  |                            |                         0  |                            |
    74  |           R = R + rep;  |     23  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    85  |           R = R + sep;  |     21  |                            |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   104  |         R = R + chunk;  |     20  |                            |                            |                         0  |
   107  |           R = R + rep;  |     23  |                         2  |                            |                            |
   112  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     21  |                            |                         2  |                            |
   124  |           R = R + rep;  |     23  |                         3  |                            |                            |
   129  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   135  |           R = R + sep;  |     21  |                            |                         3  |                            |
   140  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(62, 79, 112)
GroupID(1): Set(90)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> if ((j < 0) || (j == 0))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
use R rep -> R0 = R0 + rep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m10.555s
user	0m19.951s
sys	0m4.200s

2023-01-27 08:46:57,047 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:48:56,156 INFO     Done. Execution time: 119.10884737968445 seconds
2023-01-27 08:48:56,156 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5610197482277773984.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1235305980027876024.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-151996880063936955.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7452146687852049273.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!4 (<= D1p (+ 0 (* 1 1 sep) (* 1 1 text))))
      (a!5 (or (<= D0p (+ 0 (* 1 1 rep))) (= D0p 0)))
      (a!6 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2 D2 a!3))
       a!4
       (or a!4 (= D1p 0))
       (<= D0p (+ 0 (* 1 1 rep)))
       a!5
       (<= D2p 0)
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 sep) (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 rep))) (= D0 0)))
      (a!3 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun D2 () Int    (- 4))  (define-fun D0 () Int    4)  (define-fun D1 () Int    (- 8))  (define-fun C1 () Int    14)  (define-fun rep () Int    10)  (define-fun sep () Int    12)  (define-fun text () Int    4)  (define-fun ts () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    5)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `116.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0846-transparentAmortize-60s-mostPrecise/stac-raw-0127-0846-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m59.101s
user	6m34.520s
sys	0m12.725s

2023-01-27 08:48:56,157 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-27 08:48:56,157 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:50:02,463 INFO     Done. Execution time: 66.3061306476593 seconds
2023-01-27 08:50:02,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz1873046108026412935/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1873046108026412935/bin -o /tmp/qfuzz1873046108026412935/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1873046108026412935/bin
Found file /tmp/qfuzz1873046108026412935/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz1873046108026412935/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1873046108026412935/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1873046108026412935/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1873046108026412935/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz1873046108026412935/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 126733 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1873046108026412935/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1873046108026412935/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz1873046108026412935/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.296s
user	0m25.742s
sys	0m1.934s

2023-01-27 08:50:02,464 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-27 08:50:02,464 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-27 08:50:08,573 INFO     Done. Execution time: 6.109265089035034 seconds
2023-01-27 08:50:08,574 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 46):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  tag  |   text    |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |       |  [25,17]  |
    10  |                      // int R = 0;  |         |   0  |         |     |       |  [25,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |       |  [25,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |       |  [25,17]  |
    14  |                     int chunk = 0;  |         |   0  |      0  |     |       |  [25,17]  |
    16  |                       int tag = 0;  |         |   0  |      0  |     |    0  |  [25,17]  |
    18  |                         int i = 0;  |         |   0  |      0  |  0  |    0  |  [25,17]  |
    21  |        chunk = arrayRead(text, i);  |         |   0  |     25  |  0  |    0  |  [25,17]  |
    24  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |    0  |  [25,17]  |
    28  |                         i = i + 1;  |         |  25  |     25  |  1  |    0  |  [25,17]  |
    34  |        chunk = arrayRead(text, i);  |         |  25  |     17  |  1  |    0  |  [25,17]  |
    37  |                     R = R + chunk;  |     17  |  42  |     17  |  1  |    0  |  [25,17]  |
    41  |                         i = i + 1;  |         |  42  |     17  |  2  |    0  |  [25,17]  |
    42  |              resetPlaceHolder_1();  |         |  42  |     17  |  2  |    0  |  [25,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     25  |                         0  |
    37  |         R = R + chunk;  |     17  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m6.098s
user	0m10.944s
sys	0m1.710s

2023-01-27 08:50:08,574 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:50:17,987 INFO     Done. Execution time: 9.413067817687988 seconds
2023-01-27 08:50:17,988 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0850-transparentAmortize-60s-mostPrecise/stac-raw-0127-0850-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.404s
user	0m20.805s
sys	0m2.375s

2023-01-27 08:50:17,988 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-27 08:50:17,988 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:51:24,353 INFO     Done. Execution time: 66.36500906944275 seconds
2023-01-27 08:51:24,353 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz960367567926620777/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz960367567926620777/bin -o /tmp/qfuzz960367567926620777/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz960367567926620777/bin
Found file /tmp/qfuzz960367567926620777/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz960367567926620777/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz960367567926620777/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz960367567926620777/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz960367567926620777/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz960367567926620777/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz960367567926620777/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz960367567926620777/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 14, exec speed = 124088 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m14 to 14 bits (average: 14.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz960367567926620777/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz960367567926620777/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz960367567926620777/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.355s
user	0m24.953s
sys	0m1.835s

2023-01-27 08:51:24,354 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-27 08:51:24,354 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-27 08:51:30,459 INFO     Done. Execution time: 6.104893922805786 seconds
2023-01-27 08:51:30,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   25  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   25  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   25  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   25  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   25  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   25  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   25  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   25  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       26  |  1  |   25  |      2  |
    41  |                       R = R + sep;  |     25  |  26  |       26  |  1  |   25  |      2  |
    45  |             builder = builder + 1;  |         |  26  |       27  |  1  |   25  |      2  |
    48  |                         R = R + 1;  |      1  |  27  |       27  |  1  |   25  |      2  |
    52  |                         i = i + 1;  |         |  27  |       27  |  2  |   25  |      2  |
    53  |              resetPlaceHolder_1();  |         |  27  |       27  |  2  |   25  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     25  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     25  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     25  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.095s
user	0m11.842s
sys	0m1.936s

2023-01-27 08:51:30,459 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:51:46,430 INFO     Done. Execution time: 15.970933675765991 seconds
2023-01-27 08:51:46,431 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `13.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0851-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0851-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.963s
user	0m42.907s
sys	0m5.901s

2023-01-27 08:51:46,431 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-27 08:51:46,431 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:52:52,464 INFO     Done. Execution time: 66.03259778022766 seconds
2023-01-27 08:52:52,464 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz4807027744980727603/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4807027744980727603/bin -o /tmp/qfuzz4807027744980727603/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4807027744980727603/bin
Found file /tmp/qfuzz4807027744980727603/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz4807027744980727603/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4807027744980727603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4807027744980727603/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4807027744980727603/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4807027744980727603/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 15, exec speed = 132324 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m15 to 15 bits (average: 15.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4807027744980727603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4807027744980727603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4807027744980727603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.024s
user	0m24.470s
sys	0m1.749s

2023-01-27 08:52:52,464 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-27 08:52:52,465 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-27 08:52:58,426 INFO     Done. Execution time: 5.961304187774658 seconds
2023-01-27 08:52:58,427 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.954s
user	0m11.342s
sys	0m2.027s

2023-01-27 08:52:58,427 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:53:07,703 INFO     Done. Execution time: 9.276049375534058 seconds
2023-01-27 08:53:07,703 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0852-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0852-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.266s
user	0m20.528s
sys	0m2.768s

2023-01-27 08:53:07,704 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-27 08:53:07,704 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:54:14,215 INFO     Done. Execution time: 66.51097369194031 seconds
2023-01-27 08:54:14,215 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz8578184025337420371/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8578184025337420371/bin -o /tmp/qfuzz8578184025337420371/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8578184025337420371/bin
Found file /tmp/qfuzz8578184025337420371/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz8578184025337420371/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8578184025337420371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8578184025337420371/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8578184025337420371/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8578184025337420371/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 128673 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]
3; /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 1; 0.00; [0.00]
8; /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 17, 4, 4, 11, 14, 24, 19, 29, 29, 8, 23, 28, 19, 4, 29, 20, 18, 18, 18, 18, 9, 5, 18, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8578184025337420371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.502s
user	0m25.336s
sys	0m1.811s

2023-01-27 08:54:14,215 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-27 08:54:14,216 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-27 08:54:21,782 INFO     Done. Execution time: 7.565880060195923 seconds
2023-01-27 08:54:21,782 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 289):
                                                                                                  
 Index  |              Commands               |  Costs  |  R   |  entry  |  i  |  j   |  sorted  |
--------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |      |  [4,17]  |
    10  |                      // int R = 0;  |         |   0  |         |     |      |  [4,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |      |  [4,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |      |  [4,17]  |
    14  |                     int entry = 0;  |         |   0  |      0  |     |      |  [4,17]  |
    16  |                         int i = 0;  |         |   0  |      0  |  0  |      |  [4,17]  |
    22  |      entry = arrayRead(sorted, i);  |         |   0  |      4  |  0  |      |  [4,17]  |
    24  |                         int j = 0;  |         |   0  |      4  |  0  |   0  |  [4,17]  |
    30  |                         R = R + 2;  |      2  |   2  |      4  |  0  |   0  |  [4,17]  |
    34  |                         j = j + 1;  |         |   2  |      4  |  0  |   1  |  [4,17]  |
    35  |              resetPlaceHolder_2();  |         |   2  |      4  |  0  |   1  |  [4,17]  |
    41  |                         R = R + 2;  |      2  |   4  |      4  |  0  |   1  |  [4,17]  |
    45  |                         j = j + 1;  |         |   4  |      4  |  0  |   2  |  [4,17]  |
    46  |              resetPlaceHolder_2();  |         |   4  |      4  |  0  |   2  |  [4,17]  |
    52  |                         R = R + 2;  |      2  |   6  |      4  |  0  |   2  |  [4,17]  |
    56  |                         j = j + 1;  |         |   6  |      4  |  0  |   3  |  [4,17]  |
    57  |              resetPlaceHolder_2();  |         |   6  |      4  |  0  |   3  |  [4,17]  |
    63  |                         R = R + 2;  |      2  |   8  |      4  |  0  |   3  |  [4,17]  |
    67  |                         j = j + 1;  |         |   8  |      4  |  0  |   4  |  [4,17]  |
    68  |              resetPlaceHolder_2();  |         |   8  |      4  |  0  |   4  |  [4,17]  |
    74  |                         R = R + 1;  |      1  |   9  |      4  |  0  |   4  |  [4,17]  |
    78  |                         i = i + 1;  |         |   9  |      4  |  1  |   4  |  [4,17]  |
    79  |              resetPlaceHolder_1();  |         |   9  |      4  |  1  |   4  |  [4,17]  |
    85  |      entry = arrayRead(sorted, i);  |         |   9  |     17  |  1  |   4  |  [4,17]  |
    87  |                         int j = 0;  |         |   9  |     17  |  1  |   0  |  [4,17]  |
    93  |                         R = R + 2;  |      2  |  11  |     17  |  1  |   0  |  [4,17]  |
    97  |                         j = j + 1;  |         |  11  |     17  |  1  |   1  |  [4,17]  |
    98  |              resetPlaceHolder_2();  |         |  11  |     17  |  1  |   1  |  [4,17]  |
   104  |                         R = R + 2;  |      2  |  13  |     17  |  1  |   1  |  [4,17]  |
   108  |                         j = j + 1;  |         |  13  |     17  |  1  |   2  |  [4,17]  |
   109  |              resetPlaceHolder_2();  |         |  13  |     17  |  1  |   2  |  [4,17]  |
   115  |                         R = R + 2;  |      2  |  15  |     17  |  1  |   2  |  [4,17]  |
   119  |                         j = j + 1;  |         |  15  |     17  |  1  |   3  |  [4,17]  |
   120  |              resetPlaceHolder_2();  |         |  15  |     17  |  1  |   3  |  [4,17]  |
   126  |                         R = R + 2;  |      2  |  17  |     17  |  1  |   3  |  [4,17]  |
   130  |                         j = j + 1;  |         |  17  |     17  |  1  |   4  |  [4,17]  |
   131  |              resetPlaceHolder_2();  |         |  17  |     17  |  1  |   4  |  [4,17]  |
   137  |                         R = R + 2;  |      2  |  19  |     17  |  1  |   4  |  [4,17]  |
   141  |                         j = j + 1;  |         |  19  |     17  |  1  |   5  |  [4,17]  |
   142  |              resetPlaceHolder_2();  |         |  19  |     17  |  1  |   5  |  [4,17]  |
   148  |                         R = R + 2;  |      2  |  21  |     17  |  1  |   5  |  [4,17]  |
   152  |                         j = j + 1;  |         |  21  |     17  |  1  |   6  |  [4,17]  |
   153  |              resetPlaceHolder_2();  |         |  21  |     17  |  1  |   6  |  [4,17]  |
   159  |                         R = R + 2;  |      2  |  23  |     17  |  1  |   6  |  [4,17]  |
   163  |                         j = j + 1;  |         |  23  |     17  |  1  |   7  |  [4,17]  |
   164  |              resetPlaceHolder_2();  |         |  23  |     17  |  1  |   7  |  [4,17]  |
   170  |                         R = R + 2;  |      2  |  25  |     17  |  1  |   7  |  [4,17]  |
   174  |                         j = j + 1;  |         |  25  |     17  |  1  |   8  |  [4,17]  |
   175  |              resetPlaceHolder_2();  |         |  25  |     17  |  1  |   8  |  [4,17]  |
   181  |                         R = R + 2;  |      2  |  27  |     17  |  1  |   8  |  [4,17]  |
   185  |                         j = j + 1;  |         |  27  |     17  |  1  |   9  |  [4,17]  |
   186  |              resetPlaceHolder_2();  |         |  27  |     17  |  1  |   9  |  [4,17]  |
   192  |                         R = R + 2;  |      2  |  29  |     17  |  1  |   9  |  [4,17]  |
   196  |                         j = j + 1;  |         |  29  |     17  |  1  |  10  |  [4,17]  |
   197  |              resetPlaceHolder_2();  |         |  29  |     17  |  1  |  10  |  [4,17]  |
   203  |                         R = R + 2;  |      2  |  31  |     17  |  1  |  10  |  [4,17]  |
   207  |                         j = j + 1;  |         |  31  |     17  |  1  |  11  |  [4,17]  |
   208  |              resetPlaceHolder_2();  |         |  31  |     17  |  1  |  11  |  [4,17]  |
   214  |                         R = R + 2;  |      2  |  33  |     17  |  1  |  11  |  [4,17]  |
   218  |                         j = j + 1;  |         |  33  |     17  |  1  |  12  |  [4,17]  |
   219  |              resetPlaceHolder_2();  |         |  33  |     17  |  1  |  12  |  [4,17]  |
   225  |                         R = R + 2;  |      2  |  35  |     17  |  1  |  12  |  [4,17]  |
   229  |                         j = j + 1;  |         |  35  |     17  |  1  |  13  |  [4,17]  |
   230  |              resetPlaceHolder_2();  |         |  35  |     17  |  1  |  13  |  [4,17]  |
   236  |                         R = R + 2;  |      2  |  37  |     17  |  1  |  13  |  [4,17]  |
   240  |                         j = j + 1;  |         |  37  |     17  |  1  |  14  |  [4,17]  |
   241  |              resetPlaceHolder_2();  |         |  37  |     17  |  1  |  14  |  [4,17]  |
   247  |                         R = R + 2;  |      2  |  39  |     17  |  1  |  14  |  [4,17]  |
   251  |                         j = j + 1;  |         |  39  |     17  |  1  |  15  |  [4,17]  |
   252  |              resetPlaceHolder_2();  |         |  39  |     17  |  1  |  15  |  [4,17]  |
   258  |                         R = R + 2;  |      2  |  41  |     17  |  1  |  15  |  [4,17]  |
   262  |                         j = j + 1;  |         |  41  |     17  |  1  |  16  |  [4,17]  |
   263  |              resetPlaceHolder_2();  |         |  41  |     17  |  1  |  16  |  [4,17]  |
   269  |                         R = R + 2;  |      2  |  43  |     17  |  1  |  16  |  [4,17]  |
   273  |                         j = j + 1;  |         |  43  |     17  |  1  |  17  |  [4,17]  |
   274  |              resetPlaceHolder_2();  |         |  43  |     17  |  1  |  17  |  [4,17]  |
   280  |                         R = R + 1;  |      1  |  44  |     17  |  1  |  17  |  [4,17]  |
   284  |                         i = i + 1;  |         |  44  |     17  |  2  |  17  |  [4,17]  |
   285  |              resetPlaceHolder_1();  |         |  44  |     17  |  2  |  17  |  [4,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [170, 115, 247, 269, 52, 93, 280, 74, 192, 137, 225, 41, 148, 236, 181, 159, 63, 203, 104, 258, 214, 30, 126]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {126}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {137}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {148}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {181}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {203}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {214}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {236}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {247}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {258}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {269}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {30}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {41}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {52}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {63}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {93}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {115}; {126}; {137}; {148}; {159}; {170}; {181}; {192}; {203}; {214}; {225}; {236}; {247}; {258}; {269}; {30}; {41}; {52}; {63}; {93}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {115}; {126}; {137}; {148}; {159}; {170}; {181}; {192}; {203}; {214}; {225}; {236}; {247}; {258}; {269}; {30}; {41}; {52}; {63}; {93} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         2  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         3  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 1;  |      1  |                            |
    79  |  resetPlaceHolder_1();  |         |                            |
    93  |             R = R + 2;  |      2  |                         4  |
    98  |  resetPlaceHolder_2();  |         |                            |
   104  |             R = R + 2;  |      2  |                         5  |
   109  |  resetPlaceHolder_2();  |         |                            |
   115  |             R = R + 2;  |      2  |                         6  |
   120  |  resetPlaceHolder_2();  |         |                            |
   126  |             R = R + 2;  |      2  |                         7  |
   131  |  resetPlaceHolder_2();  |         |                            |
   137  |             R = R + 2;  |      2  |                         8  |
   142  |  resetPlaceHolder_2();  |         |                            |
   148  |             R = R + 2;  |      2  |                         9  |
   153  |  resetPlaceHolder_2();  |         |                            |
   159  |             R = R + 2;  |      2  |                        10  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |             R = R + 2;  |      2  |                        11  |
   175  |  resetPlaceHolder_2();  |         |                            |
   181  |             R = R + 2;  |      2  |                        12  |
   186  |  resetPlaceHolder_2();  |         |                            |
   192  |             R = R + 2;  |      2  |                        13  |
   197  |  resetPlaceHolder_2();  |         |                            |
   203  |             R = R + 2;  |      2  |                        14  |
   208  |  resetPlaceHolder_2();  |         |                            |
   214  |             R = R + 2;  |      2  |                        15  |
   219  |  resetPlaceHolder_2();  |         |                            |
   225  |             R = R + 2;  |      2  |                        16  |
   230  |  resetPlaceHolder_2();  |         |                            |
   236  |             R = R + 2;  |      2  |                        17  |
   241  |  resetPlaceHolder_2();  |         |                            |
   247  |             R = R + 2;  |      2  |                        18  |
   252  |  resetPlaceHolder_2();  |         |                            |
   258  |             R = R + 2;  |      2  |                        19  |
   263  |  resetPlaceHolder_2();  |         |                            |
   269  |             R = R + 2;  |      2  |                        20  |
   274  |  resetPlaceHolder_2();  |         |                            |
   280  |             R = R + 1;  |      1  |                            |
   285  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {280}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {280}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {280}; {74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                            |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                            |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                            |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                            |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 1;  |      1  |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |
    93  |             R = R + 2;  |      2  |                            |
    98  |  resetPlaceHolder_2();  |         |                            |
   104  |             R = R + 2;  |      2  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |
   115  |             R = R + 2;  |      2  |                            |
   120  |  resetPlaceHolder_2();  |         |                            |
   126  |             R = R + 2;  |      2  |                            |
   131  |  resetPlaceHolder_2();  |         |                            |
   137  |             R = R + 2;  |      2  |                            |
   142  |  resetPlaceHolder_2();  |         |                            |
   148  |             R = R + 2;  |      2  |                            |
   153  |  resetPlaceHolder_2();  |         |                            |
   159  |             R = R + 2;  |      2  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |             R = R + 2;  |      2  |                            |
   175  |  resetPlaceHolder_2();  |         |                            |
   181  |             R = R + 2;  |      2  |                            |
   186  |  resetPlaceHolder_2();  |         |                            |
   192  |             R = R + 2;  |      2  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   203  |             R = R + 2;  |      2  |                            |
   208  |  resetPlaceHolder_2();  |         |                            |
   214  |             R = R + 2;  |      2  |                            |
   219  |  resetPlaceHolder_2();  |         |                            |
   225  |             R = R + 2;  |      2  |                            |
   230  |  resetPlaceHolder_2();  |         |                            |
   236  |             R = R + 2;  |      2  |                            |
   241  |  resetPlaceHolder_2();  |         |                            |
   247  |             R = R + 2;  |      2  |                            |
   252  |  resetPlaceHolder_2();  |         |                            |
   258  |             R = R + 2;  |      2  |                            |
   263  |  resetPlaceHolder_2();  |         |                            |
   269  |             R = R + 2;  |      2  |                            |
   274  |  resetPlaceHolder_2();  |         |                            |
   280  |             R = R + 1;  |      1  |                         1  |
   285  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {115}; {126}; {137}; {148}; {159}; {170}; {181}; {192}; {203}; {214}; {225}; {236}; {247}; {258}; {269}; {30}; {41}; {52}; {63}; {93}
GroupID(1): {280}; {74}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |                            |
    35  |  resetPlaceHolder_2();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_2();  |         |                            |                            |
    52  |             R = R + 2;  |      2  |                         2  |                            |
    57  |  resetPlaceHolder_2();  |         |                            |                            |
    63  |             R = R + 2;  |      2  |                         3  |                            |
    68  |  resetPlaceHolder_2();  |         |                            |                            |
    74  |             R = R + 1;  |      1  |                            |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 2;  |      2  |                         4  |                            |
    98  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |             R = R + 2;  |      2  |                         5  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |                            |
   115  |             R = R + 2;  |      2  |                         6  |                            |
   120  |  resetPlaceHolder_2();  |         |                            |                            |
   126  |             R = R + 2;  |      2  |                         7  |                            |
   131  |  resetPlaceHolder_2();  |         |                            |                            |
   137  |             R = R + 2;  |      2  |                         8  |                            |
   142  |  resetPlaceHolder_2();  |         |                            |                            |
   148  |             R = R + 2;  |      2  |                         9  |                            |
   153  |  resetPlaceHolder_2();  |         |                            |                            |
   159  |             R = R + 2;  |      2  |                        10  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |
   170  |             R = R + 2;  |      2  |                        11  |                            |
   175  |  resetPlaceHolder_2();  |         |                            |                            |
   181  |             R = R + 2;  |      2  |                        12  |                            |
   186  |  resetPlaceHolder_2();  |         |                            |                            |
   192  |             R = R + 2;  |      2  |                        13  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |             R = R + 2;  |      2  |                        14  |                            |
   208  |  resetPlaceHolder_2();  |         |                            |                            |
   214  |             R = R + 2;  |      2  |                        15  |                            |
   219  |  resetPlaceHolder_2();  |         |                            |                            |
   225  |             R = R + 2;  |      2  |                        16  |                            |
   230  |  resetPlaceHolder_2();  |         |                            |                            |
   236  |             R = R + 2;  |      2  |                        17  |                            |
   241  |  resetPlaceHolder_2();  |         |                            |                            |
   247  |             R = R + 2;  |      2  |                        18  |                            |
   252  |  resetPlaceHolder_2();  |         |                            |                            |
   258  |             R = R + 2;  |      2  |                        19  |                            |
   263  |  resetPlaceHolder_2();  |         |                            |                            |
   269  |             R = R + 2;  |      2  |                        20  |                            |
   274  |  resetPlaceHolder_2();  |         |                            |                            |
   280  |             R = R + 1;  |      1  |                            |                         1  |
   285  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(120, 142, 153, 46, 57, 164, 252, 197, 109, 219, 230, 98, 208, 241, 35, 263, 175, 186, 131, 68)
GroupID(1): Set(79)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_2(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	0m7.557s
user	0m16.472s
sys	0m2.950s

2023-01-27 08:54:21,782 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:54:43,438 INFO     Done. Execution time: 21.656111240386963 seconds
2023-01-27 08:54:43,439 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * sorted) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (sorted + (2 * sorted))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + 1;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * sorted) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (sorted + (2 * sorted))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + 1;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 sorted)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 sorted)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `19.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0854-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0854-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m21.649s
user	1m8.284s
sys	0m5.190s

2023-01-27 08:54:43,439 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-27 08:54:43,439 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:54:45,333 INFO     Done. Execution time: 1.8943774700164795 seconds
2023-01-27 08:54:45,334 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.886s
user	0m3.471s
sys	0m0.190s

2023-01-27 08:54:45,334 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-27 08:54:45,334 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-27 08:54:47,239 INFO     Done. Execution time: 1.9041695594787598 seconds
2023-01-27 08:54:47,239 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.895s
user	0m3.667s
sys	0m0.154s

2023-01-27 08:54:47,239 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:54:48,288 INFO     Done. Execution time: 1.0485713481903076 seconds
2023-01-27 08:54:48,288 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.040s
user	0m1.711s
sys	0m0.116s

2023-01-27 08:54:48,288 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-27 08:54:48,288 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:55:54,304 INFO     Done. Execution time: 66.0157413482666 seconds
2023-01-27 08:55:54,304 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz1979285129836067388/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1979285129836067388/bin -o /tmp/qfuzz1979285129836067388/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1979285129836067388/bin
Found file /tmp/qfuzz1979285129836067388/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz1979285129836067388/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1979285129836067388/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1979285129836067388/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1979285129836067388/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz1979285129836067388/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 8, exec speed = 137413 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m8 to 8 bits (average: 8.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 29, 16, 19, 10, 27, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz1979285129836067388/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [29,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [17,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.006s
user	0m24.804s
sys	0m1.788s

2023-01-27 08:55:54,305 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-27 08:55:54,305 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-27 08:55:57,176 INFO     Done. Execution time: 2.8708810806274414 seconds
2023-01-27 08:55:57,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [29,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [17,4])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 19):
                                                                  
 Index  |   Commands   |  Costs  |  R  |  pattern  |  stopIndex  |
------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |        2  |    [29,16]  |
    18  |     return;  |         |  0  |        2  |    [29,16]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.862s
user	0m5.760s
sys	0m0.271s

2023-01-27 08:55:57,176 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:55:59,644 INFO     Done. Execution time: 2.4672467708587646 seconds
2023-01-27 08:55:59,644 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 17) || (choice == 17))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 17) || (choice == 17))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0855-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0855-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.458s
user	0m4.320s
sys	0m0.232s

2023-01-27 08:55:59,644 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-27 08:55:59,644 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:57:05,892 INFO     Done. Execution time: 66.24786758422852 seconds
2023-01-27 08:57:05,893 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz7582909497342480126/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7582909497342480126/bin -o /tmp/qfuzz7582909497342480126/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7582909497342480126/bin
Found file /tmp/qfuzz7582909497342480126/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz7582909497342480126/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7582909497342480126/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7582909497342480126/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7582909497342480126/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz7582909497342480126/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 130391 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7582909497342480126/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7582909497342480126/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7582909497342480126/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.239s
user	0m25.015s
sys	0m1.840s

2023-01-27 08:57:05,893 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-27 08:57:05,893 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-27 08:57:09,001 INFO     Done. Execution time: 3.1079776287078857 seconds
2023-01-27 08:57:09,001 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                         
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d  |  recursiveTypeIndexes  |
-----------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |             25  |  4  |                     2  |
    32  |     return;  |         |  0  |             25  |  4  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m3.099s
user	0m6.246s
sys	0m0.254s

2023-01-27 08:57:09,002 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:57:11,085 INFO     Done. Execution time: 2.0830769538879395 seconds
2023-01-27 08:57:11,085 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0857-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0857-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.075s
user	0m3.891s
sys	0m0.218s

2023-01-27 08:57:11,085 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-27 08:57:11,085 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:58:17,316 INFO     Done. Execution time: 66.23087477684021 seconds
2023-01-27 08:58:17,317 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz1653102887351297058/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1653102887351297058/bin -o /tmp/qfuzz1653102887351297058/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1653102887351297058/bin
Found file /tmp/qfuzz1653102887351297058/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz1653102887351297058/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1653102887351297058/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1653102887351297058/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1653102887351297058/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz1653102887351297058/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 127196 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1653102887351297058/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1653102887351297058/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz1653102887351297058/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.222s
user	0m24.980s
sys	0m1.773s

2023-01-27 08:58:17,317 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-27 08:58:17,317 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-27 08:58:23,388 INFO     Done. Execution time: 6.070872068405151 seconds
2023-01-27 08:58:23,389 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m6.061s
user	0m10.909s
sys	0m1.796s

2023-01-27 08:58:23,389 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:58:31,983 INFO     Done. Execution time: 8.59430456161499 seconds
2023-01-27 08:58:31,983 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0858-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0858-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.585s
user	0m18.281s
sys	0m2.470s

2023-01-27 08:58:31,984 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-27 08:58:31,984 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 08:59:37,831 INFO     Done. Execution time: 65.84730815887451 seconds
2023-01-27 08:59:37,831 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz366405008390798718/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz366405008390798718/bin -o /tmp/qfuzz366405008390798718/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz366405008390798718/bin
Found file /tmp/qfuzz366405008390798718/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz366405008390798718/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz366405008390798718/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz366405008390798718/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz366405008390798718/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz366405008390798718/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz366405008390798718/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz366405008390798718/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 20, exec speed = 127727 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz366405008390798718/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz366405008390798718/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz366405008390798718/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.839s
user	0m24.737s
sys	0m1.698s

2023-01-27 08:59:37,831 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-27 08:59:37,832 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-27 08:59:43,200 INFO     Done. Execution time: 5.367831707000732 seconds
2023-01-27 08:59:43,200 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 52):
                                                                                                                          
 Index  |              Commands               |  Costs  |  R   |  chunk  |   diff    |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |  [25,17]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |   0  |         |  [25,17]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |   0  |         |  [25,17]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |   0  |         |  [25,17]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |   0  |         |  [25,17]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |  [25,17]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |   0  |      0  |  [25,17]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |   0  |      0  |  [25,17]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |   0  |     25  |  [25,17]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     25  |  25  |     25  |  [25,17]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  25  |     25  |  [25,17]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  25  |     25  |  [25,17]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  25  |     17  |  [25,17]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     17  |  42  |     17  |  [25,17]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  42  |     17  |  [25,17]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  42  |     17  |  [25,17]  |  2  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [29, 43]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     25  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     17  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m5.358s
user	0m9.922s
sys	0m1.679s

2023-01-27 08:59:43,200 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 08:59:51,214 INFO     Done. Execution time: 8.013859510421753 seconds
2023-01-27 08:59:51,214 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0859-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0859-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.007s
user	0m17.717s
sys	0m2.087s

2023-01-27 08:59:51,215 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-27 08:59:51,215 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:00:57,459 INFO     Done. Execution time: 66.2436158657074 seconds
2023-01-27 09:00:57,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz7194794023941316683/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7194794023941316683/bin -o /tmp/qfuzz7194794023941316683/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7194794023941316683/bin
Found file /tmp/qfuzz7194794023941316683/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz7194794023941316683/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7194794023941316683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7194794023941316683/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7194794023941316683/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz7194794023941316683/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 132672 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7194794023941316683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7194794023941316683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7194794023941316683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 4, 19
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.235s
user	0m27.034s
sys	0m1.834s

2023-01-27 09:00:57,459 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-27 09:00:57,459 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-27 09:01:06,201 INFO     Done. Execution time: 8.741362810134888 seconds
2023-01-27 09:01:06,201 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 4, 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 76):
                                                                                                                 
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  months  |  tokens   |  years  |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |      19  |  [25,17]  |      4  |
    26  |                      // int R = 0;  |         |   0  |         |     |      19  |  [25,17]  |      4  |
    27  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |      19  |  [25,17]  |      4  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |      19  |  [25,17]  |      4  |
    30  |                     int chunk = 0;  |         |   0  |      0  |     |      19  |  [25,17]  |      4  |
    32  |                         int i = 0;  |         |   0  |      0  |  0  |      19  |  [25,17]  |      4  |
    38  |      chunk = arrayRead(tokens, i);  |         |   0  |     25  |  0  |      19  |  [25,17]  |      4  |
    41  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |      19  |  [25,17]  |      4  |
    44  |                     R = R + years;  |      4  |  29  |     25  |  0  |      19  |  [25,17]  |      4  |
    47  |                    R = R + months;  |     19  |  48  |     25  |  0  |      19  |  [25,17]  |      4  |
    51  |                         i = i + 1;  |         |  48  |     25  |  1  |      19  |  [25,17]  |      4  |
    52  |              resetPlaceHolder_1();  |         |  48  |     25  |  1  |      19  |  [25,17]  |      4  |
    58  |      chunk = arrayRead(tokens, i);  |         |  48  |     17  |  1  |      19  |  [25,17]  |      4  |
    61  |                     R = R + chunk;  |     17  |  65  |     17  |  1  |      19  |  [25,17]  |      4  |
    64  |                     R = R + years;  |      4  |  69  |     17  |  1  |      19  |  [25,17]  |      4  |
    67  |                    R = R + months;  |     19  |  88  |     17  |  1  |      19  |  [25,17]  |      4  |
    71  |                         i = i + 1;  |         |  88  |     17  |  2  |      19  |  [25,17]  |      4  |
    72  |              resetPlaceHolder_1();  |         |  88  |     17  |  2  |      19  |  [25,17]  |      4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [61, 41, 64, 44, 67, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {64}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {64}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {44}; {64} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     25  |                            |
    44  |         R = R + years;  |      4  |                         0  |
    47  |        R = R + months;  |     19  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     17  |                            |
    64  |         R = R + years;  |      4  |                         1  |
    67  |        R = R + months;  |     19  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {47}; {67}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {47}; {67} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     25  |                            |
    44  |         R = R + years;  |      4  |                            |
    47  |        R = R + months;  |     19  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     17  |                            |
    64  |         R = R + years;  |      4  |                            |
    67  |        R = R + months;  |     19  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [61, 41]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}; {64}
GroupID(1): {47}; {67}
GroupID(2): {41,61}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     25  |                            |                            |                         0  |
    44  |         R = R + years;  |      4  |                         0  |                            |                            |
    47  |        R = R + months;  |     19  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     17  |                            |                            |                         0  |
    64  |         R = R + years;  |      4  |                         1  |                            |                            |
    67  |        R = R + months;  |     19  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52)
GroupID(1): Set(52)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m8.733s
user	0m15.917s
sys	0m3.379s

2023-01-27 09:01:06,201 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:02:11,473 INFO     Done. Execution time: 65.27174377441406 seconds
2023-01-27 09:02:11,473 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `63.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0901-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0901-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m5.263s
user	3m23.645s
sys	0m19.033s

2023-01-27 09:02:11,474 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-27 09:02:11,474 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:03:17,463 INFO     Done. Execution time: 65.98848628997803 seconds
2023-01-27 09:03:17,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz9196305972015779948/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9196305972015779948/bin -o /tmp/qfuzz9196305972015779948/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9196305972015779948/bin
Found file /tmp/qfuzz9196305972015779948/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz9196305972015779948/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9196305972015779948/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9196305972015779948/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9196305972015779948/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz9196305972015779948/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 10, exec speed = 131609 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz9196305972015779948/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9196305972015779948/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz9196305972015779948/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.980s
user	0m24.567s
sys	0m1.732s

2023-01-27 09:03:17,463 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-27 09:03:17,463 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-27 09:03:23,387 INFO     Done. Execution time: 5.923024892807007 seconds
2023-01-27 09:03:23,387 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.915s
user	0m10.403s
sys	0m1.828s

2023-01-27 09:03:23,387 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:03:31,563 INFO     Done. Execution time: 8.175782442092896 seconds
2023-01-27 09:03:31,563 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0903-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0903-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.162s
user	0m17.601s
sys	0m2.173s

2023-01-27 09:03:31,564 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-27 09:03:31,564 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:04:37,831 INFO     Done. Execution time: 66.26679849624634 seconds
2023-01-27 09:04:37,831 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz6719463687668592479/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6719463687668592479/bin -o /tmp/qfuzz6719463687668592479/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6719463687668592479/bin
Found file /tmp/qfuzz6719463687668592479/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz6719463687668592479/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6719463687668592479/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6719463687668592479/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6719463687668592479/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz6719463687668592479/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 19, exec speed = 126252 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6719463687668592479/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6719463687668592479/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz6719463687668592479/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.256s
user	0m24.138s
sys	0m1.798s

2023-01-27 09:04:37,831 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-27 09:04:37,832 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-27 09:04:47,694 INFO     Done. Execution time: 9.862308025360107 seconds
2023-01-27 09:04:47,695 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 95):
                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  baseMessage  |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      [25,17]  |          |         |     |
    11  |                    int buffer = 0;  |         |   0  |      [25,17]  |       0  |         |     |
    12  |                      // int R = 0;  |         |   0  |      [25,17]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |   0  |      [25,17]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |   0  |      [25,17]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |   1  |      [25,17]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |   2  |      [25,17]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |   2  |      [25,17]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |   2  |      [25,17]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |   2  |      [25,17]  |       0  |     25  |  0  |
    33  |                         R = R + 1;  |      1  |   3  |      [25,17]  |       0  |     25  |  0  |
    36  |                         R = R + 1;  |      1  |   4  |      [25,17]  |       0  |     25  |  0  |
    39  |                         R = R + 1;  |      1  |   5  |      [25,17]  |       0  |     25  |  0  |
    42  |                     R = R + chunk;  |     25  |  30  |      [25,17]  |       0  |     25  |  0  |
    45  |                         R = R + 1;  |      1  |  31  |      [25,17]  |       0  |     25  |  0  |
    48  |                         R = R + 1;  |      1  |  32  |      [25,17]  |       0  |     25  |  0  |
    51  |                         R = R + 1;  |      1  |  33  |      [25,17]  |       0  |     25  |  0  |
    55  |                         i = i + 1;  |         |  33  |      [25,17]  |       0  |     25  |  1  |
    56  |              resetPlaceHolder_1();  |         |  33  |      [25,17]  |       0  |     25  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  33  |      [25,17]  |       0  |     17  |  1  |
    65  |                         R = R + 1;  |      1  |  34  |      [25,17]  |       0  |     17  |  1  |
    68  |                         R = R + 1;  |      1  |  35  |      [25,17]  |       0  |     17  |  1  |
    71  |                         R = R + 1;  |      1  |  36  |      [25,17]  |       0  |     17  |  1  |
    74  |                     R = R + chunk;  |     17  |  53  |      [25,17]  |       0  |     17  |  1  |
    77  |                         R = R + 1;  |      1  |  54  |      [25,17]  |       0  |     17  |  1  |
    80  |                         R = R + 1;  |      1  |  55  |      [25,17]  |       0  |     17  |  1  |
    83  |                         R = R + 1;  |      1  |  56  |      [25,17]  |       0  |     17  |  1  |
    87  |                         i = i + 1;  |         |  56  |      [25,17]  |       0  |     17  |  2  |
    88  |              resetPlaceHolder_1();  |         |  56  |      [25,17]  |       0  |     17  |  2  |
    94  |                         R = R + 1;  |      1  |  57  |      [25,17]  |       0  |     17  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [42, 20, 74, 33, 65, 77, 45, 17, 71, 39, 80, 48, 36, 51, 94, 68, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {94}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {17}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {94}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {17}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {94} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     25  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     17  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    94  |             R = R + 1;  |      1  |                        14  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [42, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {17}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {94}
GroupID(1): {42,74}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 93])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     25  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     17  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    94  |             R = R + 1;  |      1  |                        14  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m9.853s
user	0m24.531s
sys	0m4.614s

2023-01-27 09:04:47,695 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:05:01,458 INFO     Done. Execution time: 13.762850284576416 seconds
2023-01-27 09:05:01,458 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0904-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0904-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.755s
user	0m39.839s
sys	0m4.628s

2023-01-27 09:05:01,459 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-27 09:05:01,459 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:06:07,886 INFO     Done. Execution time: 66.42713856697083 seconds
2023-01-27 09:06:07,886 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz4898706163903883340/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4898706163903883340/bin -o /tmp/qfuzz4898706163903883340/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4898706163903883340/bin
Found file /tmp/qfuzz4898706163903883340/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz4898706163903883340/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4898706163903883340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4898706163903883340/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4898706163903883340/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4898706163903883340/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 126938 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 1; 0.00; [0.00]
11; /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32; 1; 0.00; [0.00]
17; /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
/tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32
/tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 4, 4, 24, 13, 17, 18, 5, 8, 20, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4898706163903883340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.416s
user	0m25.212s
sys	0m1.726s

2023-01-27 09:06:07,887 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-27 09:06:07,887 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-27 09:06:13,787 INFO     Done. Execution time: 5.900002956390381 seconds
2023-01-27 09:06:13,788 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 614):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         28  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         28  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         28  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         28  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         28  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         28  |          28  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         28  |          27  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         28  |          27  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         28  |          27  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         28  |          27  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         28  |          26  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         28  |          26  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         28  |          26  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         28  |          26  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         28  |          25  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         28  |          25  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         28  |          25  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         28  |          25  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         28  |          24  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         28  |          24  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         28  |          24  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         28  |          24  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         28  |          23  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         28  |          23  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         28  |          23  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         28  |          23  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         28  |          22  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         28  |          22  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         28  |          22  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         28  |          22  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         28  |          21  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         28  |          21  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         28  |          21  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         28  |          21  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         28  |          20  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         28  |          20  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         28  |          20  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         28  |          20  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         28  |          19  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         28  |          19  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         28  |          19  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         28  |          19  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         28  |          18  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         28  |          18  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         28  |          18  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         28  |          18  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         28  |          17  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         28  |          17  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         28  |          17  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         28  |          17  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         28  |          16  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         28  |          16  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         28  |          16  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         28  |          16  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         28  |          15  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         28  |          15  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         28  |          15  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         28  |          15  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         28  |          14  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         28  |          14  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         28  |          14  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         28  |          14  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         28  |          13  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         28  |          13  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         28  |          13  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         28  |          13  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         28  |          12  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         28  |          12  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         28  |          12  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         28  |          12  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         28  |          11  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         28  |          11  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         28  |          11  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         28  |          11  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         28  |          10  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         28  |          10  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         28  |          10  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         28  |          10  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         28  |           9  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         28  |           9  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         28  |           9  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         28  |           9  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         28  |           8  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         28  |           8  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         28  |           8  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         28  |           8  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         28  |           7  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         28  |           7  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         28  |           7  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         28  |           7  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         28  |           6  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         28  |           6  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         28  |           6  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         28  |           6  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         28  |           5  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         28  |           5  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         28  |           5  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         28  |           5  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         28  |           4  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         28  |           4  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         28  |           4  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         28  |           4  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         28  |           3  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         28  |           3  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         28  |           3  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         28  |           3  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         28  |           2  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         28  |           2  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         28  |           2  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         28  |           2  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         28  |           1  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         28  |           1  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         28  |           1  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         28  |           1  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         28  |           0  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         28  |           0  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         28  |           0  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         28  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [582, 120, 288, 372, 57, 78, 561, 435, 456, 519, 141, 225, 393, 204, 498, 540, 477, 330, 267, 162, 414, 99, 351, 246, 36, 183, 603, 309]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 247, 142, 436, 37, 184, 289, 121, 583, 499, 457, 205, 541, 562, 520, 394, 226, 310, 331, 58, 478, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m5.891s
user	0m10.857s
sys	0m1.880s

2023-01-27 09:06:13,788 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:06:22,569 INFO     Done. Execution time: 8.781448125839233 seconds
2023-01-27 09:06:22,570 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0906-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0906-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.774s
user	0m19.033s
sys	0m2.593s

2023-01-27 09:06:22,570 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-27 09:06:22,570 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:07:28,879 INFO     Done. Execution time: 66.30887126922607 seconds
2023-01-27 09:07:28,879 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz5771534700746928017/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5771534700746928017/bin -o /tmp/qfuzz5771534700746928017/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5771534700746928017/bin
Found file /tmp/qfuzz5771534700746928017/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz5771534700746928017/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5771534700746928017/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5771534700746928017/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5771534700746928017/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz5771534700746928017/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 20, exec speed = 129710 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5771534700746928017/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5771534700746928017/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz5771534700746928017/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.300s
user	0m24.835s
sys	0m1.935s

2023-01-27 09:07:28,879 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-27 09:07:28,880 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-27 09:07:34,890 INFO     Done. Execution time: 6.0098912715911865 seconds
2023-01-27 09:07:34,890 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m6.002s
user	0m11.940s
sys	0m1.932s

2023-01-27 09:07:34,890 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:07:42,784 INFO     Done. Execution time: 7.893962144851685 seconds
2023-01-27 09:07:42,785 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0907-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0907-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.885s
user	0m17.971s
sys	0m2.281s

2023-01-27 09:07:42,785 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-27 09:07:42,785 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:08:49,065 INFO     Done. Execution time: 66.2797360420227 seconds
2023-01-27 09:08:49,065 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5193657955825709575/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5193657955825709575/bin -o /tmp/qfuzz5193657955825709575/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5193657955825709575/bin
Found file /tmp/qfuzz5193657955825709575/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5193657955825709575/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5193657955825709575/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5193657955825709575/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5193657955825709575/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz5193657955825709575/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 16, exec speed = 124863 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m16 to 16 bits (average: 16.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5193657955825709575/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5193657955825709575/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz5193657955825709575/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.271s
user	0m25.662s
sys	0m1.734s

2023-01-27 09:08:49,065 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-27 09:08:49,066 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-27 09:08:53,490 INFO     Done. Execution time: 4.423772573471069 seconds
2023-01-27 09:08:53,490 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.413s
user	0m7.850s
sys	0m1.041s

2023-01-27 09:08:53,490 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:09:00,325 INFO     Done. Execution time: 6.835169315338135 seconds
2023-01-27 09:09:00,326 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0908-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0908-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.828s
user	0m15.370s
sys	0m1.921s

2023-01-27 09:09:00,326 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-27 09:09:00,326 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:10:07,059 INFO     Done. Execution time: 66.7330572605133 seconds
2023-01-27 09:10:07,059 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz8080311889013860304/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8080311889013860304/bin -o /tmp/qfuzz8080311889013860304/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8080311889013860304/bin
Found file /tmp/qfuzz8080311889013860304/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz8080311889013860304/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8080311889013860304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8080311889013860304/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8080311889013860304/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8080311889013860304/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 133250 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8080311889013860304/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8080311889013860304/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8080311889013860304/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.724s
user	0m26.072s
sys	0m1.820s

2023-01-27 09:10:07,060 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-27 09:10:07,060 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-27 09:10:13,753 INFO     Done. Execution time: 6.693338632583618 seconds
2023-01-27 09:10:13,754 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m6.682s
user	0m11.189s
sys	0m2.040s

2023-01-27 09:10:13,754 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:10:22,445 INFO     Done. Execution time: 8.691293001174927 seconds
2023-01-27 09:10:22,446 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0910-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0910-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.682s
user	0m18.861s
sys	0m2.644s

2023-01-27 09:10:22,446 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-27 09:10:22,446 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:11:28,713 INFO     Done. Execution time: 66.26693034172058 seconds
2023-01-27 09:11:28,713 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz4726077444237792326/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4726077444237792326/bin -o /tmp/qfuzz4726077444237792326/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4726077444237792326/bin
Found file /tmp/qfuzz4726077444237792326/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz4726077444237792326/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4726077444237792326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4726077444237792326/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4726077444237792326/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4726077444237792326/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 129045 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4726077444237792326/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4726077444237792326/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4726077444237792326/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.256s
user	0m25.392s
sys	0m1.785s

2023-01-27 09:11:28,713 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-27 09:11:28,714 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-27 09:11:34,607 INFO     Done. Execution time: 5.893445014953613 seconds
2023-01-27 09:11:34,608 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.885s
user	0m10.575s
sys	0m2.100s

2023-01-27 09:11:34,608 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:11:42,891 INFO     Done. Execution time: 8.282275676727295 seconds
2023-01-27 09:11:42,891 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0911-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0911-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.274s
user	0m18.344s
sys	0m2.436s

2023-01-27 09:11:42,891 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-27 09:11:42,891 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:12:49,048 INFO     Done. Execution time: 66.15632510185242 seconds
2023-01-27 09:12:49,048 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz7280174336864004497/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7280174336864004497/bin -o /tmp/qfuzz7280174336864004497/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7280174336864004497/bin
Found file /tmp/qfuzz7280174336864004497/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz7280174336864004497/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7280174336864004497/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7280174336864004497/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7280174336864004497/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz7280174336864004497/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 98378 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m98.4k to 98.4k us (average: 98.4k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 8, 15, 21, 6, 7, 5, 30, 15, 8, 10, 14, 14, 10, 29, 26, 8, 13, 8, 30, 4, 29, 6, 11, 26, 12, 16, 29, 14, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7280174336864004497/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.147s
user	0m25.342s
sys	0m1.791s

2023-01-27 09:12:49,048 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-27 09:12:49,048 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-27 09:12:52,311 INFO     Done. Execution time: 3.26226544380188 seconds
2023-01-27 09:12:52,311 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.253s
user	0m6.637s
sys	0m0.282s

2023-01-27 09:12:52,311 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:12:54,744 INFO     Done. Execution time: 2.4326398372650146 seconds
2023-01-27 09:12:54,744 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0912-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0912-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.424s
user	0m4.315s
sys	0m0.255s

2023-01-27 09:12:54,745 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-27 09:12:54,745 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:14:01,030 INFO     Done. Execution time: 66.28502368927002 seconds
2023-01-27 09:14:01,030 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz4181230288076918179/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4181230288076918179/bin -o /tmp/qfuzz4181230288076918179/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4181230288076918179/bin
Found file /tmp/qfuzz4181230288076918179/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz4181230288076918179/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4181230288076918179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4181230288076918179/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4181230288076918179/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4181230288076918179/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 13, exec speed = 122733 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m13 to 13 bits (average: 13.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4181230288076918179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4181230288076918179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4181230288076918179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.275s
user	0m25.574s
sys	0m1.663s

2023-01-27 09:14:01,030 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-27 09:14:01,031 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-27 09:14:09,453 INFO     Done. Execution time: 8.421847820281982 seconds
2023-01-27 09:14:09,453 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m8.413s
user	0m14.984s
sys	0m2.839s

2023-01-27 09:14:09,453 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:14:21,186 INFO     Done. Execution time: 11.732187032699585 seconds
2023-01-27 09:14:21,186 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0914-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0914-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.725s
user	0m32.250s
sys	0m4.169s

2023-01-27 09:14:21,186 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-27 09:14:21,186 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:15:27,611 INFO     Done. Execution time: 66.42492723464966 seconds
2023-01-27 09:15:27,612 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4968196070884189110/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4968196070884189110/bin -o /tmp/qfuzz4968196070884189110/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4968196070884189110/bin
Found file /tmp/qfuzz4968196070884189110/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4968196070884189110/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4968196070884189110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4968196070884189110/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4968196070884189110/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4968196070884189110/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 132810 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4968196070884189110/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4968196070884189110/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4968196070884189110/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.415s
user	0m26.328s
sys	0m1.828s

2023-01-27 09:15:27,612 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-27 09:15:27,612 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-27 09:15:33,670 INFO     Done. Execution time: 6.057415008544922 seconds
2023-01-27 09:15:33,670 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m6.048s
user	0m10.605s
sys	0m1.873s

2023-01-27 09:15:33,670 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:15:42,756 INFO     Done. Execution time: 9.085718154907227 seconds
2023-01-27 09:15:42,756 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0915-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0915-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.076s
user	0m19.298s
sys	0m2.717s

2023-01-27 09:15:42,757 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-27 09:15:42,757 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:16:48,977 INFO     Done. Execution time: 66.22031545639038 seconds
2023-01-27 09:16:48,977 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz6776956916475036187/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6776956916475036187/bin -o /tmp/qfuzz6776956916475036187/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6776956916475036187/bin
Found file /tmp/qfuzz6776956916475036187/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz6776956916475036187/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6776956916475036187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6776956916475036187/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6776956916475036187/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz6776956916475036187/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 12, exec speed = 137657 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6776956916475036187/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6776956916475036187/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz6776956916475036187/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.211s
user	0m25.063s
sys	0m1.789s

2023-01-27 09:16:48,978 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-27 09:16:48,978 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-27 09:16:53,275 INFO     Done. Execution time: 4.296782493591309 seconds
2023-01-27 09:16:53,275 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.289s
user	0m7.618s
sys	0m1.036s

2023-01-27 09:16:53,275 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:17:00,353 INFO     Done. Execution time: 7.077084064483643 seconds
2023-01-27 09:17:00,353 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0916-transparentAmortize-60s-mostPrecise/lang3-raw-0127-0916-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.069s
user	0m15.573s
sys	0m2.145s

2023-01-27 09:17:00,353 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-27 09:17:00,353 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:18:06,936 INFO     Done. Execution time: 66.58232593536377 seconds
2023-01-27 09:18:06,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz3364072322210315132/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3364072322210315132/bin -o /tmp/qfuzz3364072322210315132/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3364072322210315132/bin
Found file /tmp/qfuzz3364072322210315132/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz3364072322210315132/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3364072322210315132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3364072322210315132/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3364072322210315132/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz3364072322210315132/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 8, exec speed = 131723 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m8 to 8 bits (average: 8.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]
4; /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 27, 11, 16, 29, 8, 30, 29, 28, 4, 24, 16, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz3364072322210315132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [17,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.574s
user	0m26.403s
sys	0m1.760s

2023-01-27 09:18:06,936 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-27 09:18:06,937 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-27 09:18:10,350 INFO     Done. Execution time: 3.413166046142578 seconds
2023-01-27 09:18:10,350 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [22])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [17,4])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 15):
                                                            
 Index  |   Commands   |  Costs  |  R  |  choices  |  str  |
------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [22]  |    2  |
    14  |     return;  |         |  0  |     [22]  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m3.404s
user	0m6.831s
sys	0m0.333s

2023-01-27 09:18:10,350 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:18:12,740 INFO     Done. Execution time: 2.3889706134796143 seconds
2023-01-27 09:18:12,740 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 17)) && !((choice == 17)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 17)) && !((choice == 17)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0918-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0918-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.380s
user	0m4.250s
sys	0m0.247s

2023-01-27 09:18:12,740 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-27 09:18:12,740 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:19:19,120 INFO     Done. Execution time: 66.37949633598328 seconds
2023-01-27 09:19:19,120 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz2550513362524621930/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2550513362524621930/bin -o /tmp/qfuzz2550513362524621930/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2550513362524621930/bin
Found file /tmp/qfuzz2550513362524621930/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz2550513362524621930/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2550513362524621930/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2550513362524621930/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2550513362524621930/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz2550513362524621930/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 127619 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2550513362524621930/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2550513362524621930/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz2550513362524621930/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.371s
user	0m25.059s
sys	0m1.811s

2023-01-27 09:19:19,120 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-27 09:19:19,121 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-27 09:19:22,302 INFO     Done. Execution time: 3.1811652183532715 seconds
2023-01-27 09:19:22,302 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                
 Index  |   Commands   |  Costs  |  R  |   array   |  endIndex  |  startIndex  |
--------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [25,17]  |         2  |           4  |
    48  |     return;  |         |  0  |  [25,17]  |         2  |           4  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.170s
user	0m5.994s
sys	0m0.275s

2023-01-27 09:19:22,303 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:19:24,524 INFO     Done. Execution time: 2.2208688259124756 seconds
2023-01-27 09:19:24,524 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0919-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0919-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.211s
user	0m4.145s
sys	0m0.174s

2023-01-27 09:19:24,524 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-27 09:19:24,524 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:20:30,546 INFO     Done. Execution time: 66.0215916633606 seconds
2023-01-27 09:20:30,546 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz2469520801676720373/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2469520801676720373/bin -o /tmp/qfuzz2469520801676720373/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2469520801676720373/bin
Found file /tmp/qfuzz2469520801676720373/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz2469520801676720373/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2469520801676720373/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2469520801676720373/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2469520801676720373/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz2469520801676720373/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 122809 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2469520801676720373/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2469520801676720373/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz2469520801676720373/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.013s
user	0m24.734s
sys	0m1.991s

2023-01-27 09:20:30,547 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-27 09:20:30,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-27 09:20:38,578 INFO     Done. Execution time: 8.030864238739014 seconds
2023-01-27 09:20:38,578 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 47):
                                                                                            
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  objects  |
--------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [25,17]  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [25,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [25,17]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |  [25,17]  |
    14  |                         int i = 0;  |         |   0  |         |  0  |  [25,17]  |
    16  |                     int chunk = 0;  |         |   0  |      0  |  0  |  [25,17]  |
    19  |     chunk = arrayRead(objects, i);  |         |   0  |     25  |  0  |  [25,17]  |
    22  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |  [25,17]  |
    26  |                         i = i + 1;  |         |  25  |     25  |  1  |  [25,17]  |
    32  |                         R = R + 1;  |      1  |  26  |     25  |  1  |  [25,17]  |
    35  |     chunk = arrayRead(objects, i);  |         |  26  |     17  |  1  |  [25,17]  |
    38  |                     R = R + chunk;  |     17  |  43  |     17  |  1  |  [25,17]  |
    42  |                         i = i + 1;  |         |  43  |     17  |  2  |  [25,17]  |
    43  |              resetPlaceHolder_1();  |         |  43  |     17  |  2  |  [25,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [22, 32, 38]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [22, 32, 38]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [22, 32, 38]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {22,32,38}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     25  |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     17  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m8.022s
user	0m14.363s
sys	0m2.939s

2023-01-27 09:20:38,578 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:20:47,686 INFO     Done. Execution time: 9.107549667358398 seconds
2023-01-27 09:20:47,686 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (objects + objects)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (objects + objects)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects objects)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects objects))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects objects)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects objects))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 objects)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 objects))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 objects))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects objects)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects objects))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    12)  (define-fun objects () Int    2)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects objects)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects objects))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `7.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0920-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0920-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.100s
user	0m21.270s
sys	0m2.230s

2023-01-27 09:20:47,687 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-27 09:20:47,687 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:21:53,909 INFO     Done. Execution time: 66.22241640090942 seconds
2023-01-27 09:21:53,910 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz1531564691439147873/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1531564691439147873/bin -o /tmp/qfuzz1531564691439147873/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1531564691439147873/bin
Found file /tmp/qfuzz1531564691439147873/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz1531564691439147873/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1531564691439147873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1531564691439147873/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1531564691439147873/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz1531564691439147873/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 135571 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1531564691439147873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1531564691439147873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz1531564691439147873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.213s
user	0m25.220s
sys	0m1.968s

2023-01-27 09:21:53,910 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-27 09:21:53,910 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-27 09:22:01,536 INFO     Done. Execution time: 7.625458478927612 seconds
2023-01-27 09:22:01,536 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 47):
                                                                                                          
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  objects  |  separator  |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [25,17]  |          4  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [25,17]  |          4  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [25,17]  |          4  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |  [25,17]  |          4  |
    14  |                         int i = 0;  |         |   0  |         |  0  |  [25,17]  |          4  |
    16  |                     int chunk = 0;  |         |   0  |      0  |  0  |  [25,17]  |          4  |
    19  |     chunk = arrayRead(objects, i);  |         |   0  |     25  |  0  |  [25,17]  |          4  |
    22  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |  [25,17]  |          4  |
    26  |                         i = i + 1;  |         |  25  |     25  |  1  |  [25,17]  |          4  |
    32  |                 R = R + separator;  |      4  |  29  |     25  |  1  |  [25,17]  |          4  |
    35  |     chunk = arrayRead(objects, i);  |         |  29  |     17  |  1  |  [25,17]  |          4  |
    38  |                     R = R + chunk;  |     17  |  46  |     17  |  1  |  [25,17]  |          4  |
    42  |                         i = i + 1;  |         |  46  |     17  |  2  |  [25,17]  |          4  |
    43  |              resetPlaceHolder_1();  |         |  46  |     17  |  2  |  [25,17]  |          4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [22, 32, 38]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [22, 32, 38]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [22, 32, 38]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {22,32,38}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     25  |                         0  |
    32  |     R = R + separator;  |      4  |                         0  |
    38  |         R = R + chunk;  |     17  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m7.616s
user	0m13.552s
sys	0m2.874s

2023-01-27 09:22:01,536 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:22:09,223 INFO     Done. Execution time: 7.686358213424683 seconds
2023-01-27 09:22:09,223 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (objects + (objects * separator))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (objects + (objects * separator))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     true))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun objects () Int    1)  (define-fun separator () Int    11)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ objects (* objects separator)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0922-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0922-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.677s
user	0m13.284s
sys	0m1.312s

2023-01-27 09:22:09,223 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-27 09:22:09,223 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:23:15,268 INFO     Done. Execution time: 66.04433107376099 seconds
2023-01-27 09:23:15,268 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz8126520625966656999/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8126520625966656999/bin -o /tmp/qfuzz8126520625966656999/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8126520625966656999/bin
Found file /tmp/qfuzz8126520625966656999/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz8126520625966656999/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8126520625966656999/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8126520625966656999/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8126520625966656999/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8126520625966656999/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 20, exec speed = 128378 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8126520625966656999/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8126520625966656999/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8126520625966656999/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 4, 19, 28
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.034s
user	0m25.767s
sys	0m1.869s

2023-01-27 09:23:15,269 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-27 09:23:15,269 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-27 09:23:21,806 INFO     Done. Execution time: 6.537017107009888 seconds
2023-01-27 09:23:21,806 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 4, 19, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 70):
                                                                                                                                     
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  max  |  replacement  |  searchString  |   text    |
-------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |   28  |           19  |             4  |  [25,17]  |
    34  |                      // int R = 0;  |         |   0  |         |     |   28  |           19  |             4  |  [25,17]  |
    35  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |   28  |           19  |             4  |  [25,17]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |   28  |           19  |             4  |  [25,17]  |
    38  |                     int chunk = 0;  |         |   0  |      0  |     |   28  |           19  |             4  |  [25,17]  |
    40  |                         int i = 0;  |         |   0  |      0  |  0  |   28  |           19  |             4  |  [25,17]  |
    48  |        chunk = arrayRead(text, i);  |         |   0  |     25  |  0  |   28  |           19  |             4  |  [25,17]  |
    51  |                     R = R + chunk;  |     25  |  25  |     25  |  0  |   28  |           19  |             4  |  [25,17]  |
    54  |               R = R + replacement;  |     19  |  44  |     25  |  0  |   28  |           19  |             4  |  [25,17]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  44  |     17  |  0  |   28  |           19  |             4  |  [25,17]  |
    63  |                         i = i + 2;  |         |  44  |     17  |  2  |   28  |           19  |             4  |  [25,17]  |
    64  |              resetPlaceHolder_1();  |         |  44  |     17  |  2  |   28  |           19  |             4  |  [25,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {51,54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     25  |                         0  |
    54  |   R = R + replacement;  |     19  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.526s
user	0m10.982s
sys	0m2.247s

2023-01-27 09:23:21,806 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:24:35,461 INFO     Done. Execution time: 73.65416550636292 seconds
2023-01-27 09:24:35,461 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (text + (text * replacement))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (text + (text * replacement))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun replacement () Int)
(declare-fun text () Int)
(declare-fun searchString () Int)
(declare-fun max () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> replacement 0))
(assert (> text 0))
(assert (> searchString 0))
(assert (> max 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun text () Int    1)  (define-fun replacement () Int    12)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0)  (define-fun max () Int    1)  (define-fun searchString () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ text (* text replacement)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `71.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0923-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0923-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m13.646s
user	1m27.889s
sys	0m8.363s

2023-01-27 09:24:35,461 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-27 09:24:35,461 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:25:41,536 INFO     Done. Execution time: 66.07480335235596 seconds
2023-01-27 09:25:41,537 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz5668152944619120297/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5668152944619120297/bin -o /tmp/qfuzz5668152944619120297/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5668152944619120297/bin
Found file /tmp/qfuzz5668152944619120297/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz5668152944619120297/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5668152944619120297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5668152944619120297/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5668152944619120297/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz5668152944619120297/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 126698 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5668152944619120297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5668152944619120297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz5668152944619120297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 17
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.067s
user	0m24.629s
sys	0m1.843s

2023-01-27 09:25:41,537 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-27 09:25:41,537 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-27 09:25:47,975 INFO     Done. Execution time: 6.438046932220459 seconds
2023-01-27 09:25:47,975 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 17)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            17  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            17  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            17  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            17  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            17  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            17  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            17  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            17  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            17  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            17  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            17  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            17  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m6.428s
user	0m12.750s
sys	0m2.095s

2023-01-27 09:25:47,976 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:26:10,685 INFO     Done. Execution time: 22.708715677261353 seconds
2023-01-27 09:26:10,685 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 17;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `20.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0925-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0925-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.699s
user	0m41.943s
sys	0m4.107s

2023-01-27 09:26:10,685 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-27 09:26:10,685 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:27:16,946 INFO     Done. Execution time: 66.26100826263428 seconds
2023-01-27 09:27:16,947 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz4534558556241701200/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4534558556241701200/bin -o /tmp/qfuzz4534558556241701200/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4534558556241701200/bin
Found file /tmp/qfuzz4534558556241701200/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz4534558556241701200/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4534558556241701200/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4534558556241701200/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4534558556241701200/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz4534558556241701200/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 122349 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4534558556241701200/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4534558556241701200/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz4534558556241701200/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 4, 19
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.252s
user	0m25.968s
sys	0m1.769s

2023-01-27 09:27:16,947 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-27 09:27:16,947 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-27 09:27:20,029 INFO     Done. Execution time: 3.0810763835906982 seconds
2023-01-27 09:27:20,029 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 4, 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 29):
                                                                            
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |    str    |
----------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            4  |   19  |  [25,17]  |
    28  |     return;  |         |  0  |            4  |   19  |  [25,17]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m3.072s
user	0m6.081s
sys	0m0.265s

2023-01-27 09:27:20,029 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:27:22,251 INFO     Done. Execution time: 2.222297191619873 seconds
2023-01-27 09:27:22,252 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0927-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0927-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.212s
user	0m4.001s
sys	0m0.219s

2023-01-27 09:27:22,252 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-27 09:27:22,252 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:28:28,462 INFO     Done. Execution time: 66.2097578048706 seconds
2023-01-27 09:28:28,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz8182143509403840180/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8182143509403840180/bin -o /tmp/qfuzz8182143509403840180/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8182143509403840180/bin
Found file /tmp/qfuzz8182143509403840180/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz8182143509403840180/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8182143509403840180/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8182143509403840180/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8182143509403840180/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8182143509403840180/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 31, exec speed = 135833 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8182143509403840180/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8182143509403840180/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8182143509403840180/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.200s
user	0m25.167s
sys	0m1.781s

2023-01-27 09:28:28,463 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-27 09:28:28,463 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-27 09:28:31,536 INFO     Done. Execution time: 3.072873592376709 seconds
2023-01-27 09:28:31,537 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m3.063s
user	0m5.805s
sys	0m0.283s

2023-01-27 09:28:31,537 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:28:33,968 INFO     Done. Execution time: 2.430567502975464 seconds
2023-01-27 09:28:33,968 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0928-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0928-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.421s
user	0m4.409s
sys	0m0.205s

2023-01-27 09:28:33,968 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-27 09:28:33,968 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:29:40,372 INFO     Done. Execution time: 66.40338683128357 seconds
2023-01-27 09:29:40,372 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz872349534143768577/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz872349534143768577/bin -o /tmp/qfuzz872349534143768577/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz872349534143768577/bin
Found file /tmp/qfuzz872349534143768577/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz872349534143768577/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz872349534143768577/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz872349534143768577/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz872349534143768577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz872349534143768577/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz872349534143768577/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz872349534143768577/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 121366 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz872349534143768577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz872349534143768577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz872349534143768577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 17, 4, false, 28
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.393s
user	0m25.653s
sys	0m1.846s

2023-01-27 09:29:40,373 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-27 09:29:40,373 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-27 09:29:43,435 INFO     Done. Execution time: 3.061635732650757 seconds
2023-01-27 09:29:43,435 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 17, 4, false, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      28  |    4  |              false  |              17  |    2  |
    32  |     return;  |         |  0  |      28  |    4  |              false  |              17  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m3.054s
user	0m6.741s
sys	0m0.265s

2023-01-27 09:29:43,435 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:29:45,847 INFO     Done. Execution time: 2.4117634296417236 seconds
2023-01-27 09:29:45,847 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0929-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0929-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.404s
user	0m4.476s
sys	0m0.238s

2023-01-27 09:29:45,847 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-27 09:29:45,847 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:30:51,754 INFO     Done. Execution time: 65.90589904785156 seconds
2023-01-27 09:30:51,754 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz7983920343146984516/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7983920343146984516/bin -o /tmp/qfuzz7983920343146984516/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7983920343146984516/bin
Found file /tmp/qfuzz7983920343146984516/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz7983920343146984516/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7983920343146984516/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7983920343146984516/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7983920343146984516/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz7983920343146984516/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 121880 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 24, 17, 11, 15, 25, 16, 10, 7, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz7983920343146984516/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.897s
user	0m25.878s
sys	0m1.796s

2023-01-27 09:30:51,754 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-27 09:30:51,754 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-27 09:30:55,023 INFO     Done. Execution time: 3.268437623977661 seconds
2023-01-27 09:30:55,023 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m3.260s
user	0m6.477s
sys	0m0.280s

2023-01-27 09:30:55,024 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:30:57,437 INFO     Done. Execution time: 2.4130055904388428 seconds
2023-01-27 09:30:57,437 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0930-transparentAmortize-60s-mostPrecise/stringutils-raw-0127-0930-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.403s
user	0m4.309s
sys	0m0.226s

2023-01-27 09:30:57,437 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-27 09:30:57,437 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:32:03,717 INFO     Done. Execution time: 66.27927303314209 seconds
2023-01-27 09:32:03,717 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz2540241588040971064/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2540241588040971064/bin -o /tmp/qfuzz2540241588040971064/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2540241588040971064/bin
Found file /tmp/qfuzz2540241588040971064/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz2540241588040971064/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2540241588040971064/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2540241588040971064/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2540241588040971064/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz2540241588040971064/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 135868 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 17, 7, 4, 18, 22, 23, 27, 9, 12, 7, 6, 30, 25, 11, 26, 27, 7, 30, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz2540241588040971064/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,17], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,17], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.271s
user	0m25.254s
sys	0m1.779s

2023-01-27 09:32:03,717 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-27 09:32:03,718 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-27 09:32:09,863 INFO     Done. Execution time: 6.145443677902222 seconds
2023-01-27 09:32:09,863 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,17], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,17], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 58):
                                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  args  |  chunk  |  i  |  separator  |  template  |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |     2  |         |     |             |   [18,17]  |
    18  |                      // int R = 0;  |         |   0  |     2  |         |     |             |   [18,17]  |
    19  |  // mostPreciseBound(R <= array...  |         |   0  |     2  |         |     |             |   [18,17]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |   0  |     2  |         |     |             |   [18,17]  |
    22  |                     int chunk = 0;  |         |   0  |     2  |      0  |     |             |   [18,17]  |
    24  |                 int separator = 0;  |         |   0  |     2  |      0  |     |          0  |   [18,17]  |
    26  |                         int i = 0;  |         |   0  |     2  |      0  |  0  |          0  |   [18,17]  |
    29  |  chunk = arrayRead(template, i)...  |         |   0  |     2  |     18  |  0  |          0  |   [18,17]  |
    32  |                     R = R + chunk;  |     18  |  18  |     2  |     18  |  0  |          0  |   [18,17]  |
    36  |                         i = i + 1;  |         |  18  |     2  |     18  |  1  |          0  |   [18,17]  |
    47  |                         R = R + 1;  |      1  |  19  |     2  |     18  |  1  |          0  |   [18,17]  |
    50  |                         R = R + 1;  |      1  |  20  |     2  |     18  |  1  |          0  |   [18,17]  |
    54  |                         i = i + 1;  |         |  20  |     2  |     18  |  2  |          0  |   [18,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 47, 50]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {50}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {47}; {50}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {47}; {50} on trace:
                                                                   
 Index  |     Commands     |  Costs  |  SegmentIDs in PrintGroup  |
-------------------------------------------------------------------
    32  |  R = R + chunk;  |     18  |                            |
    47  |      R = R + 1;  |      1  |                         0  |
    50  |      R = R + 1;  |      1  |                         1  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {47}; {50}
GroupID(1): {32}
                                                                                                
 Index  |     Commands     |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
------------------------------------------------------------------------------------------------
    32  |  R = R + chunk;  |     18  |                            |                         0  |
    47  |      R = R + 1;  |      1  |                         0  |                            |
    50  |      R = R + 1;  |      1  |                         1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [48, 49])
                                                                                                
 Index  |     Commands     |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
------------------------------------------------------------------------------------------------
    32  |  R = R + chunk;  |     18  |                            |                         0  |
    47  |      R = R + 1;  |      1  |                         0  |                            |
    50  |      R = R + 1;  |      1  |                         1  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.135s
user	0m11.960s
sys	0m2.057s

2023-01-27 09:32:09,864 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:32:11,739 INFO     Done. Execution time: 1.875274896621704 seconds
2023-01-27 09:32:11,739 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:48: error: cannot find symbol
      R = R + chunk;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:48: error: cannot find symbol
      R = R + chunk;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:59: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:59: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:60: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:60: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
6 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.868s
user	0m3.400s
sys	0m0.199s

2023-01-27 09:32:11,739 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-27 09:32:11,740 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:33:18,002 INFO     Done. Execution time: 66.26257610321045 seconds
2023-01-27 09:33:18,003 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz8779123869044168048/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8779123869044168048/bin -o /tmp/qfuzz8779123869044168048/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8779123869044168048/bin
Found file /tmp/qfuzz8779123869044168048/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz8779123869044168048/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8779123869044168048/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8779123869044168048/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8779123869044168048/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz8779123869044168048/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 10, exec speed = 131508 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8779123869044168048/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8779123869044168048/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz8779123869044168048/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.252s
user	0m25.247s
sys	0m1.728s

2023-01-27 09:33:18,003 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-27 09:33:18,003 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-27 09:33:22,589 INFO     Done. Execution time: 4.585748910903931 seconds
2023-01-27 09:33:22,589 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      25  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      25  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      25  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      25  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      25  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  25  |      25  |
    29  |                    R = R + string;  |     25  |  25  |      |          2  |  25  |      25  |
    31  |                    int i = string;  |         |  25  |  25  |          2  |  25  |      25  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     25  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.576s
user	0m8.105s
sys	0m0.998s

2023-01-27 09:33:22,589 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:33:24,321 INFO     Done. Execution time: 1.7312202453613281 seconds
2023-01-27 09:33:24,321 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.723s
user	0m3.187s
sys	0m0.174s

2023-01-27 09:33:24,321 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-27 09:33:24,321 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds`
2023-01-27 09:34:30,634 INFO     Done. Execution time: 66.31287360191345 seconds
2023-01-27 09:34:30,635 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz2413272997139795197/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2413272997139795197/bin -o /tmp/qfuzz2413272997139795197/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2413272997139795197/bin
Found file /tmp/qfuzz2413272997139795197/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz2413272997139795197/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2413272997139795197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2413272997139795197/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2413272997139795197/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds -o /tmp/qfuzz2413272997139795197/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 111915 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m111k to 111k us (average: 111k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2413272997139795197/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2413272997139795197/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 30] from /tmp/qfuzz2413272997139795197/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 17, 4, 19, 28, 12, 7, 4, 30, 6, 11, 26, 10, 7, 5, 6, 12, 14, 24, 19, 29, 16, 18, 7, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.303s
user	0m24.880s
sys	0m1.749s

2023-01-27 09:34:30,635 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-27 09:34:30,635 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-27 09:34:33,482 INFO     Done. Execution time: 2.8473031520843506 seconds
2023-01-27 09:34:33,483 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |      25  |
    22  |     return;  |         |  0  |          2  |      25  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.838s
user	0m5.916s
sys	0m0.340s

2023-01-27 09:34:33,483 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-27 09:34:35,625 INFO     Done. Execution time: 2.141997814178467 seconds
2023-01-27 09:34:35,625 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 17;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0127-0934-transparentAmortize-60s-mostPrecise/guava-raw-0127-0934-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.134s
user	0m3.928s
sys	0m0.203s

2023-01-27 09:34:35,626 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.51506567001343,
    5.881450414657593,
    8.509361267089844
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.16021585464478,
    10.422491550445557,
    55.85368227958679
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.03637051582336,
    10.567006826400757,
    119.10884737968445
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    66.3061306476593,
    6.109265089035034,
    9.413067817687988
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.36500906944275,
    6.104893922805786,
    15.970933675765991
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.03259778022766,
    5.961304187774658,
    9.276049375534058
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.51097369194031,
    7.565880060195923,
    21.656111240386963
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.8943774700164795,
    1.9041695594787598,
    1.0485713481903076
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.0157413482666,
    2.8708810806274414,
    2.4672467708587646
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.24786758422852,
    3.1079776287078857,
    2.0830769538879395
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.23087477684021,
    6.070872068405151,
    8.59430456161499
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    65.84730815887451,
    5.367831707000732,
    8.013859510421753
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.2436158657074,
    8.741362810134888,
    65.27174377441406
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    65.98848628997803,
    5.923024892807007,
    8.175782442092896
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.26679849624634,
    9.862308025360107,
    13.762850284576416
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.42713856697083,
    5.900002956390381,
    8.781448125839233
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.30887126922607,
    6.0098912715911865,
    7.893962144851685
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.2797360420227,
    4.423772573471069,
    6.835169315338135
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.7330572605133,
    6.693338632583618,
    8.691293001174927
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.26693034172058,
    5.893445014953613,
    8.282275676727295
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.15632510185242,
    3.26226544380188,
    2.4326398372650146
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.28502368927002,
    8.421847820281982,
    11.732187032699585
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.42492723464966,
    6.057415008544922,
    9.085718154907227
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.22031545639038,
    4.296782493591309,
    7.077084064483643
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.58232593536377,
    3.413166046142578,
    2.3889706134796143
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.37949633598328,
    3.1811652183532715,
    2.2208688259124756
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.0215916633606,
    8.030864238739014,
    9.107549667358398
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    66.22241640090942,
    7.625458478927612,
    7.686358213424683
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.04433107376099,
    6.537017107009888,
    73.65416550636292
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    66.07480335235596,
    6.438046932220459,
    22.708715677261353
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.26100826263428,
    3.0810763835906982,
    2.222297191619873
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.2097578048706,
    3.072873592376709,
    2.430567502975464
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.40338683128357,
    3.061635732650757,
    2.4117634296417236
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    65.90589904785156,
    3.268437623977661,
    2.4130055904388428
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.27927303314209,
    6.145443677902222,
    1.875274896621704
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.26257610321045,
    4.585748910903931,
    1.7312202453613281
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.31287360191345,
    2.8473031520843506,
    2.141997814178467
  ]
}
2023-01-27 09:34:35,626 INFO     Total time elapsed: 3148.441236972809 seconds
2023-01-27 09:34:35,626 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-27 09:34:35,626 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 17,
  "stringutils": 7,
  "guava": 1
}
2023-01-27 09:34:35,626 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 2,
  "stringutils": 3
}
2023-01-27 09:34:35,626 INFO     Number of unknown programs: {
  "lang3": 1,
  "guava": 2
}
2023-01-27 09:34:35,627 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230127_08-41-49/naive_00.json

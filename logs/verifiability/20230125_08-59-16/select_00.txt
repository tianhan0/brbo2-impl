2023-01-25 09:54:34,803 INFO     Arguments:
2023-01-25 09:54:34,803 INFO     timeout	60
2023-01-25 09:54:34,803 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 09:54:34,803 INFO     samples	0
2023-01-25 09:54:34,803 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 09:54:34,803 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 09:54:34,803 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 09:54:34,803 INFO     dry	False
2023-01-25 09:54:34,803 INFO     log	/root/Documents/workspace/brbo2-impl/logs/verifiability/20230125_08-59-16/select_00.txt
2023-01-25 09:54:34,803 INFO     mode	qfuzz
2023-01-25 09:54:34,803 INFO     version	master
2023-01-25 09:54:34,803 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 09:54:34,808 INFO     Done. Execution time: 0.004263877868652344 seconds
2023-01-25 09:54:34,808 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "6e714ec111c8ccd51668ffe5fbaae44dd31d0dd1"`
2023-01-25 09:54:34,812 INFO     Done. Execution time: 0.004128694534301758 seconds
2023-01-25 09:54:34,813 INFO     Build a new version: "6e714ec111c8ccd51668ffe5fbaae44dd31d0dd1"
2023-01-25 09:54:34,813 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 09:54:43,515 INFO     Done. Execution time: 8.702148675918579 seconds
2023-01-25 09:54:43,515 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 25, 2023 9:54:43 AM

2023-01-25 09:54:43,519 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 09:54:43,519 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:55:49,439 INFO     Done. Execution time: 65.91970467567444 seconds
2023-01-25 09:55:49,439 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz1989344723167178591/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1989344723167178591/bin -o /tmp/qfuzz1989344723167178591/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1989344723167178591/bin
Found file /tmp/qfuzz1989344723167178591/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz1989344723167178591/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1989344723167178591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1989344723167178591/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1989344723167178591/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1989344723167178591/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 129509 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 680.00; [679.00,1359.00,3762.00]
3; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 3.00; [1359.00,3759.00,3762.00]
4; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 3; 1103.00; [679.00,2659.00,3762.00]
5; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 317.00; [1359.00,3222.00,3539.00]
7; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 857.00; [19.00,3022.00,3879.00]
8; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 3; 1237.00; [319.00,1842.00,3079.00]
10; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 1000.00; [359.00,1359.00,3762.00]
16; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 3; 1240.00; [119.00,1359.00,3762.00]
19; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta; 3; 1263.00; [839.00,2659.00,3922.00]
21; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta; 3; 1337.00; [439.00,2322.00,3659.00]
26; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta; 3; 1480.00; [739.00,2219.00,3762.00]
28; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta; 3; 1600.00; [299.00,1899.00,3762.00]
32; /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4,+delta; 3; 1603.00; [339.00,2219.00,3822.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 97, 86, 50, 170, 93, 184, 153, 67, 50, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 94, 94, 8, 14, 55, 68, 109, 15, 76, 15, 15, 15, 122, 15, 15, 15, 15, 15, 15, 11, 109, 170, 62, 8, 198, 88, 34, 56, 158)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 36, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 66, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(115, 16, 182, 5, 21, 153, 67, 50, 170, 111, 16, 189, 31, 107, 164, 189, 30, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 166, 132, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 4, 5, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 145, 67, 50, 170, 93, 16, 169, 110, 33, 153, 67, 50, 170, 101, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 58, 17, 153, 67, 50, 170, 92, 58, 194, 187, 110, 35, 153, 57, 187, 110, 4, 153, 153, 57, 160, 160, 160, 160, 20, 161, 160, 160, 160, 160, 146, 154, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 110, 15, 12, 153, 67, 48, 170, 93, 56, 66, 110, 171, 153, 67, 50, 170, 94, 129, 196, 4, 174, 16, 54, 110, 33, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(150, 5, 193, 158)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 110, 176, 119, 67, 50, 170, 93, 16, 161, 110, 33, 157, 67, 50, 193, 93, 16, 187, 115, 187, 110, 33, 157, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 73, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 132, 153, 67, 50, 167, 93, 187, 110, 33, 153, 132, 153, 67, 50, 167, 93, 16, 71, 110, 35, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 187, 22, 67, 50, 170, 93, 16, 187, 110, 56, 153, 67, 50, 170, 93, 24, 187, 110, 33, 153, 67, 50, 117, 26, 153, 67, 16, 187, 110, 33, 153, 67, 50, 170, 93, 144, 48, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1989344723167178591/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,93,16,187,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,94,94,8,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,36,187,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [115,16,182,5,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,166,132,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,4,5,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,58,17,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [91,110,15,12,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [150,5,193,158]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,110,176,119,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,187,22,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.910s
user	0m23.849s
sys	0m1.793s

2023-01-25 09:55:49,440 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 09:55:49,440 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 09:55:49,444 INFO     Done. Execution time: 0.0036249160766601562 seconds
2023-01-25 09:55:49,444 INFO     Output: 
2023-01-25 09:55:49,444 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 09:55:55,833 INFO     Done. Execution time: 6.388650417327881 seconds
2023-01-25 09:55:55,833 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,93,16,187,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,94,94,8,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,36,187,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([115,16,182,5,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,166,132,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,4,5,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,58,17,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([91,110,15,12,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([150,5,193,158])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,110,176,119,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,187,22,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [190,93,16,187,110]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [190,93,16,187,110]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [190,93,16,187,110]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [190,93,16,187,110]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [190,93,16,187,110]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [190,93,16,187,110]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [190,93,16,187,110]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    190  |  0  |    0  |  [190,93,16,187,110]  |
    24  |                     R = R + chunk;  |    190  |  190  |    190  |  0  |    0  |  [190,93,16,187,110]  |
    28  |                         i = i + 1;  |         |  190  |    190  |  1  |    0  |  [190,93,16,187,110]  |
    36  |          tag = arrayRead(text, i);  |         |  190  |    190  |  1  |   93  |  [190,93,16,187,110]  |
    40  |                         i = i + 1;  |         |  190  |    190  |  2  |   93  |  [190,93,16,187,110]  |
    43  |        chunk = arrayRead(text, i);  |         |  190  |     16  |  2  |   93  |  [190,93,16,187,110]  |
    46  |                     R = R + chunk;  |     16  |  206  |     16  |  2  |   93  |  [190,93,16,187,110]  |
    50  |                         i = i + 1;  |         |  206  |     16  |  3  |   93  |  [190,93,16,187,110]  |
    51  |              resetPlaceHolder_1();  |         |  206  |     16  |  3  |   93  |  [190,93,16,187,110]  |
    59  |          tag = arrayRead(text, i);  |         |  206  |     16  |  3  |  187  |  [190,93,16,187,110]  |
    63  |                         i = i + 1;  |         |  206  |     16  |  4  |  187  |  [190,93,16,187,110]  |
    66  |        chunk = arrayRead(text, i);  |         |  206  |    110  |  4  |  187  |  [190,93,16,187,110]  |
    69  |                     R = R + chunk;  |    110  |  316  |    110  |  4  |  187  |  [190,93,16,187,110]  |
    73  |                         i = i + 1;  |         |  316  |    110  |  5  |  187  |  [190,93,16,187,110]  |
    74  |              resetPlaceHolder_1();  |         |  316  |    110  |  5  |  187  |  [190,93,16,187,110]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    190  |                         0  |
    46  |         R = R + chunk;  |     16  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |    110  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.381s
user	0m11.498s
sys	0m2.348s

2023-01-25 09:55:55,833 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 09:56:04,623 INFO     Done. Execution time: 8.790130853652954 seconds
2023-01-25 09:56:04,624 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0955-transparentAmortize-60s-mostPrecise/stac-raw-0125-0955-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.783s
user	0m19.694s
sys	0m2.705s

2023-01-25 09:56:04,624 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 09:56:04,624 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:57:10,849 INFO     Done. Execution time: 66.22542548179626 seconds
2023-01-25 09:57:10,850 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz8533395618238045452/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8533395618238045452/bin -o /tmp/qfuzz8533395618238045452/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8533395618238045452/bin
Found file /tmp/qfuzz8533395618238045452/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz8533395618238045452/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8533395618238045452/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8533395618238045452/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8533395618238045452/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8533395618238045452/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 136835 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 12.00; [679.00,1359.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 5; 12.00; [93.00,105.00,339.00,2219.00,3073.00]
3; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 12.00; [259.00,379.00,1093.00,3753.00,3765.00]
4; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 12.00; [933.00,1053.00,1065.00,2539.00,3579.00]
6; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 5; 6.00; [679.00,2473.00,3753.00,3759.00,3765.00]
24; /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 12.00; [279.00,1359.00,3413.00,3753.00,3765.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 13, 153, 67, 50, 170, 133, 16, 88, 110, 33, 97, 12, 196, 4, 66, 16, 84, 110, 33, 128, 33, 97, 12, 196, 4, 66, 16, 186, 33, 153, 67, 63, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 79, 187, 79, 33, 159, 123, 30, 33, 137, 67, 30, 170, 107, 153, 70, 61, 192, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52, 20, 178, 52, 126, 126, 46, 126, 126, 126, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 12, 153, 18, 5, 54, 58, 130, 153, 125, 50, 185, 176, 110, 170, 153, 93, 29, 90, 93, 16, 44, 110, 71, 186, 186, 186, 186, 186, 186, 153, 125, 50, 185, 176, 110, 170, 153, 93, 29, 90, 87, 186, 15, 10, 186, 186, 186, 186, 186, 186, 192, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 67, 16, 187, 110, 33, 153, 67, 195, 58, 4, 4, 67, 50, 170, 93, 16, 187, 110, 33, 162, 67, 130, 170, 93, 16, 192, 16, 187, 110, 33, 153, 67, 50, 170, 87, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 5, 70, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8533395618238045452/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,13,153,67], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,79,187,79,33], 2, 123
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52,20,178,52,126], 2, 46
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,12,153,18], 2, 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,67,16,187,110], 2, 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.217s
user	0m26.632s
sys	0m1.769s

2023-01-25 09:57:10,850 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 09:57:10,850 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 09:57:10,854 INFO     Done. Execution time: 0.003942012786865234 seconds
2023-01-25 09:57:10,854 INFO     Output: 
2023-01-25 09:57:10,854 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 09:57:20,293 INFO     Done. Execution time: 9.438331842422485 seconds
2023-01-25 09:57:20,293 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,13,153,67], 2, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,79,187,79,33], 2, 123)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52,20,178,52,126], 2, 46)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,12,153,18], 2, 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,67,16,187,110], 2, 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |        170  |       |           2  |  [187,110,13,153,67]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |        170  |       |           2  |  [187,110,13,153,67]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |        170  |       |           2  |  [187,110,13,153,67]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |        170  |       |           2  |  [187,110,13,153,67]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |        170  |       |           2  |  [187,110,13,153,67]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |        170  |       |           2  |  [187,110,13,153,67]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |        170  |       |           2  |  [187,110,13,153,67]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |        170  |    0  |           2  |  [187,110,13,153,67]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |        170  |    0  |           2  |  [187,110,13,153,67]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |    187  |  0  |  0  |        170  |    0  |           2  |  [187,110,13,153,67]  |
    47  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  0  |        170  |    0  |           2  |  [187,110,13,153,67]  |
    51  |                         j = j + 1;  |         |  187  |    187  |  0  |  1  |        170  |    0  |           2  |  [187,110,13,153,67]  |
    59  |          tag = arrayRead(text, j);  |         |  187  |    187  |  0  |  1  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    63  |                         j = j + 1;  |         |  187  |    187  |  0  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    66  |        chunk = arrayRead(text, j);  |         |  187  |     13  |  0  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    69  |                     R = R + chunk;  |     13  |  200  |     13  |  0  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    73  |                         j = j + 1;  |         |  200  |     13  |  0  |  3  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    74  |              resetPlaceHolder_2();  |         |  200  |     13  |  0  |  3  |        170  |  110  |           2  |  [187,110,13,153,67]  |
    82  |          tag = arrayRead(text, j);  |         |  200  |     13  |  0  |  3  |        170  |  153  |           2  |  [187,110,13,153,67]  |
    86  |                         j = j + 1;  |         |  200  |     13  |  0  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
    89  |        chunk = arrayRead(text, j);  |         |  200  |     67  |  0  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
    92  |                     R = R + chunk;  |     67  |  267  |     67  |  0  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
    96  |                         j = j + 1;  |         |  267  |     67  |  0  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
    97  |              resetPlaceHolder_2();  |         |  267  |     67  |  0  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   106  |                         i = i + 1;  |         |  267  |     67  |  1  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   109  |                 R = R + separator;  |    170  |  437  |     67  |  1  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   110  |              resetPlaceHolder_1();  |         |  437  |     67  |  1  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   115  |                             j = 0;  |         |  437  |     67  |  1  |  0  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   118  |        chunk = arrayRead(text, j);  |         |  437  |    187  |  1  |  0  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   121  |                     R = R + chunk;  |    187  |  624  |    187  |  1  |  0  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   125  |                         j = j + 1;  |         |  624  |    187  |  1  |  1  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   133  |          tag = arrayRead(text, j);  |         |  624  |    187  |  1  |  1  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   137  |                         j = j + 1;  |         |  624  |    187  |  1  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   140  |        chunk = arrayRead(text, j);  |         |  624  |     13  |  1  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   143  |                     R = R + chunk;  |     13  |  637  |     13  |  1  |  2  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   147  |                         j = j + 1;  |         |  637  |     13  |  1  |  3  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   148  |              resetPlaceHolder_2();  |         |  637  |     13  |  1  |  3  |        170  |  110  |           2  |  [187,110,13,153,67]  |
   156  |          tag = arrayRead(text, j);  |         |  637  |     13  |  1  |  3  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   160  |                         j = j + 1;  |         |  637  |     13  |  1  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   163  |        chunk = arrayRead(text, j);  |         |  637  |     67  |  1  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   166  |                     R = R + chunk;  |     67  |  704  |     67  |  1  |  4  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   170  |                         j = j + 1;  |         |  704  |     67  |  1  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   171  |              resetPlaceHolder_2();  |         |  704  |     67  |  1  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   180  |                         i = i + 1;  |         |  704  |     67  |  2  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   183  |                 R = R + separator;  |    170  |  874  |     67  |  2  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
   184  |              resetPlaceHolder_1();  |         |  874  |     67  |  2  |  5  |        170  |  153  |           2  |  [187,110,13,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |
    69  |         R = R + chunk;  |     13  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     67  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    170  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                            |
   143  |         R = R + chunk;  |     13  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     67  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    170  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                         0  |
    69  |         R = R + chunk;  |     13  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     67  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    170  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                         1  |
   143  |         R = R + chunk;  |     13  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     67  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    170  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |                         0  |
    69  |         R = R + chunk;  |     13  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |     67  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    170  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    187  |                            |                         1  |
   143  |         R = R + chunk;  |     13  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |     67  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    170  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m9.429s
user	0m18.451s
sys	0m3.963s

2023-01-25 09:57:20,293 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 09:58:40,576 INFO     Done. Execution time: 80.28213238716125 seconds
2023-01-25 09:58:40,576 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `78.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0957-transparentAmortize-60s-mostPrecise/stac-raw-0125-0957-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m20.273s
user	3m27.711s
sys	0m15.633s

2023-01-25 09:58:40,576 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 09:58:40,576 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:59:46,631 INFO     Done. Execution time: 66.05474877357483 seconds
2023-01-25 09:59:46,632 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7472495193281590607/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7472495193281590607/bin -o /tmp/qfuzz7472495193281590607/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7472495193281590607/bin
Found file /tmp/qfuzz7472495193281590607/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7472495193281590607/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7472495193281590607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7472495193281590607/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7472495193281590607/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7472495193281590607/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 143949 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 12.00; [679.00,1359.00,1868.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 5.00; [88.00,93.00,99.00,105.00,1273.00,2899.00]
3; /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 12.00; [328.00,679.00,1359.00,3413.00,3753.00,3765.00]
7; /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 6; 12.00; [679.00,1359.00,1868.00,3413.00,3753.00,3765.00]
8; /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 6; 12.00; [159.00,679.00,1868.00,3413.00,3753.00,3765.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 7, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 73, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 91, 170, 93, 16, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 165, 67, 83, 170, 16, 192, 169, 68, 33, 15, 79, 88, 106, 174, 153, 112, 49, 167, 186, 33, 153, 179, 93, 16, 50, 110, 127, 153, 67, 50, 170, 30, 40, 170, 129, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 144, 90, 63, 4, 16, 187, 110, 168, 153, 93, 10, 109, 110, 67, 50, 170, 93, 61, 183, 110, 33, 4, 4, 4, 141, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 163, 109, 108, 4, 4, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7472495193281590607/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,7], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,165,67], 2, 170, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,144], 2, 63, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.043s
user	0m27.076s
sys	0m1.563s

2023-01-25 09:59:46,632 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 09:59:46,632 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 09:59:46,635 INFO     Done. Execution time: 0.0033168792724609375 seconds
2023-01-25 09:59:46,636 INFO     Output: 
2023-01-25 09:59:46,636 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 09:59:57,212 INFO     Done. Execution time: 10.576645135879517 seconds
2023-01-25 09:59:57,213 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,7], 2, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,165,67], 2, 170, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,144], 2, 63, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170, 93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text         |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |   93  |  170  |       |  [187,110,33,153,7]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |   93  |  170  |    0  |  [187,110,33,153,7]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |   93  |  170  |    0  |  [187,110,33,153,7]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    187  |  0  |  0  |   93  |  170  |    0  |  [187,110,33,153,7]  |   2  |
    55  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |  0  |   93  |  170  |    0  |  [187,110,33,153,7]  |   2  |
    59  |                         j = j + 1;  |         |   187  |    187  |  0  |  1  |   93  |  170  |    0  |  [187,110,33,153,7]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   187  |    187  |  0  |  1  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    71  |                         j = j + 1;  |         |   187  |    187  |  0  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   187  |     33  |  0  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    77  |                     R = R + chunk;  |     33  |   220  |     33  |  0  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    80  |                       R = R + rep;  |     93  |   313  |     33  |  0  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    84  |                         j = j + 1;  |         |   313  |     33  |  0  |  3  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   313  |     33  |  0  |  3  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   313  |     33  |  0  |  3  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
    97  |                         j = j + 1;  |         |   313  |     33  |  0  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   313  |      7  |  0  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   103  |                     R = R + chunk;  |      7  |   320  |      7  |  0  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   106  |                       R = R + rep;  |     93  |   413  |      7  |  0  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   110  |                         j = j + 1;  |         |   413  |      7  |  0  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   413  |      7  |  0  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   120  |                         i = i + 1;  |         |   413  |      7  |  1  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   123  |                       R = R + sep;  |    170  |   583  |      7  |  1  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   583  |      7  |  1  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   129  |                             j = 0;  |         |   583  |      7  |  1  |  0  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   583  |    187  |  1  |  0  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   135  |                     R = R + chunk;  |    187  |   770  |    187  |  1  |  0  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   139  |                         j = j + 1;  |         |   770  |    187  |  1  |  1  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   770  |    187  |  1  |  1  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   151  |                         j = j + 1;  |         |   770  |    187  |  1  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   770  |     33  |  1  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   157  |                     R = R + chunk;  |     33  |   803  |     33  |  1  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   160  |                       R = R + rep;  |     93  |   896  |     33  |  1  |  2  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   164  |                         j = j + 1;  |         |   896  |     33  |  1  |  3  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   165  |              resetPlaceHolder_2();  |         |   896  |     33  |  1  |  3  |   93  |  170  |  110  |  [187,110,33,153,7]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |   896  |     33  |  1  |  3  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   177  |                         j = j + 1;  |         |   896  |     33  |  1  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |   896  |      7  |  1  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   183  |                     R = R + chunk;  |      7  |   903  |      7  |  1  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   186  |                       R = R + rep;  |     93  |   996  |      7  |  1  |  4  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   190  |                         j = j + 1;  |         |   996  |      7  |  1  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   191  |              resetPlaceHolder_2();  |         |   996  |      7  |  1  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   200  |                         i = i + 1;  |         |   996  |      7  |  2  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   203  |                       R = R + sep;  |    170  |  1166  |      7  |  2  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1166  |      7  |  2  |  5  |   93  |  170  |  153  |  [187,110,33,153,7]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |     93  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |      7  |                            |
   106  |           R = R + rep;  |     93  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |     93  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |      7  |                            |
   186  |           R = R + rep;  |     93  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |     93  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |      7  |                            |
   106  |           R = R + rep;  |     93  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |     93  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |      7  |                            |
   186  |           R = R + rep;  |     93  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                         0  |
    77  |         R = R + chunk;  |     33  |                         0  |
    80  |           R = R + rep;  |     93  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |      7  |                         0  |
   106  |           R = R + rep;  |     93  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                         1  |
   157  |         R = R + chunk;  |     33  |                         1  |
   160  |           R = R + rep;  |     93  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |      7  |                         1  |
   186  |           R = R + rep;  |     93  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    80  |           R = R + rep;  |     93  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   106  |           R = R + rep;  |     93  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    170  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                            |                         1  |
   160  |           R = R + rep;  |     93  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |      7  |                            |                            |                         1  |
   186  |           R = R + rep;  |     93  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    170  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R rep -> R0 = R0 + rep;
use R chunk -> R2 = R2 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m10.568s
user	0m21.427s
sys	0m5.061s

2023-01-25 09:59:57,213 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:04:42,857 INFO     Done. Execution time: 285.64401268959045 seconds
2023-01-25 10:04:42,857 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1818663379239678920.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6172162787819787707.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `283.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0959-transparentAmortize-60s-mostPrecise/stac-raw-0125-0959-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m45.637s
user	15m28.474s
sys	0m44.736s

2023-01-25 10:04:42,858 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:04:42,858 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:05:49,291 INFO     Done. Execution time: 66.43291687965393 seconds
2023-01-25 10:05:49,291 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2945401479321873736/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2945401479321873736/bin -o /tmp/qfuzz2945401479321873736/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2945401479321873736/bin
Found file /tmp/qfuzz2945401479321873736/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2945401479321873736/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2945401479321873736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2945401479321873736/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2945401479321873736/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2945401479321873736/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 129942 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3762.00]
2; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 1047.00; [15.00,1062.00]
3; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 40.00; [302.00,1315.00,1355.00,2215.00,2755.00]
7; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 5; 140.00; [875.00,1215.00,1355.00,2215.00,3762.00]
11; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 5; 160.00; [115.00,435.00,595.00,3455.00,3762.00]
13; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 5; 687.00; [675.00,1475.00,2215.00,3075.00,3762.00]
35; /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 340.00; [1195.00,2902.00,3355.00,3695.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(144, 184, 59, 167, 184, 110, 35, 15, 83, 50, 170, 196, 156, 120, 77, 73, 30, 30, 59, 4, 184, 110, 47, 181, 61, 15, 122, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 73, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 144, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 172, 29, 5, 21, 186, 145, 137, 145, 145, 135, 164, 102, 33, 152, 16, 132, 170, 110, 37, 5, 29, 186, 112, 145, 145, 145, 145, 63, 110, 33, 152, 16, 143, 24, 94, 67, 84, 47, 45, 75, 71, 75, 75, 75, 75, 75, 75, 4, 20, 75, 75, 43, 4, 169, 50, 172, 93, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 43, 60, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 74, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 110, 65, 137, 67, 54, 57, 14, 156, 110, 190, 93, 16, 187, 147, 113, 20, 17, 11, 56, 10, 4, 67, 96, 4, 67, 93, 16, 134, 76, 55, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2945401479321873736/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [144,184,59,167,184]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,73]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,172,29,5,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,43,60,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,110,65,137,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.423s
user	0m24.715s
sys	0m1.641s

2023-01-25 10:05:49,291 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:05:49,291 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:05:49,295 INFO     Done. Execution time: 0.003249645233154297 seconds
2023-01-25 10:05:49,295 INFO     Output: 
2023-01-25 10:05:49,295 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:05:57,613 INFO     Done. Execution time: 8.317425966262817 seconds
2023-01-25 10:05:57,613 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([144,184,59,167,184])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,73])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,172,29,5,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,43,60,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,110,65,137,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [144,184,59,167,184]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [144,184,59,167,184]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [144,184,59,167,184]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [144,184,59,167,184]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [144,184,59,167,184]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [144,184,59,167,184]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [144,184,59,167,184]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    144  |  0  |    0  |  [144,184,59,167,184]  |
    24  |                     R = R + chunk;  |    144  |  144  |    144  |  0  |    0  |  [144,184,59,167,184]  |
    28  |                         i = i + 1;  |         |  144  |    144  |  1  |    0  |  [144,184,59,167,184]  |
    34  |        chunk = arrayRead(text, i);  |         |  144  |    184  |  1  |    0  |  [144,184,59,167,184]  |
    37  |                     R = R + chunk;  |    184  |  328  |    184  |  1  |    0  |  [144,184,59,167,184]  |
    41  |                         i = i + 1;  |         |  328  |    184  |  2  |    0  |  [144,184,59,167,184]  |
    42  |              resetPlaceHolder_1();  |         |  328  |    184  |  2  |    0  |  [144,184,59,167,184]  |
    48  |        chunk = arrayRead(text, i);  |         |  328  |     59  |  2  |    0  |  [144,184,59,167,184]  |
    51  |                     R = R + chunk;  |     59  |  387  |     59  |  2  |    0  |  [144,184,59,167,184]  |
    55  |                         i = i + 1;  |         |  387  |     59  |  3  |    0  |  [144,184,59,167,184]  |
    56  |              resetPlaceHolder_1();  |         |  387  |     59  |  3  |    0  |  [144,184,59,167,184]  |
    62  |        chunk = arrayRead(text, i);  |         |  387  |    167  |  3  |    0  |  [144,184,59,167,184]  |
    65  |                     R = R + chunk;  |    167  |  554  |    167  |  3  |    0  |  [144,184,59,167,184]  |
    69  |                         i = i + 1;  |         |  554  |    167  |  4  |    0  |  [144,184,59,167,184]  |
    70  |              resetPlaceHolder_1();  |         |  554  |    167  |  4  |    0  |  [144,184,59,167,184]  |
    76  |        chunk = arrayRead(text, i);  |         |  554  |    184  |  4  |    0  |  [144,184,59,167,184]  |
    79  |                     R = R + chunk;  |    184  |  738  |    184  |  4  |    0  |  [144,184,59,167,184]  |
    83  |                         i = i + 1;  |         |  738  |    184  |  5  |    0  |  [144,184,59,167,184]  |
    84  |              resetPlaceHolder_1();  |         |  738  |    184  |  5  |    0  |  [144,184,59,167,184]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {79}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {37}; {79}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {37}; {79} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    144  |                            |
    37  |         R = R + chunk;  |    184  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     59  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    167  |                            |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |    184  |                         1  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 65, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 65, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {37}; {79}
GroupID(1): {24,51,65}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    24  |         R = R + chunk;  |    144  |                            |                         0  |
    37  |         R = R + chunk;  |    184  |                         0  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    51  |         R = R + chunk;  |     59  |                            |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |         R = R + chunk;  |    167  |                            |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |                            |
    79  |         R = R + chunk;  |    184  |                         1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 2) || (i == 2))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((i < 1) || (i == 1))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R0 = R0 + chunk;
  }
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m8.309s
user	0m13.051s
sys	0m3.035s

2023-01-25 10:05:57,613 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:06:40,811 INFO     Done. Execution time: 43.19801902770996 seconds
2023-01-25 10:06:40,812 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!4 (or (<= D0p (+ 0 (* 1 1 text))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 (<= D0p (+ 0 (* 1 1 text))) a!4)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 text))) (= D0 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    6)  (define-fun D1 () Int    3)  (define-fun text () Int    6)  (define-fun D0p () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `41.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1005-transparentAmortize-60s-mostPrecise/stac-raw-0125-1005-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m43.191s
user	2m4.901s
sys	0m5.726s

2023-01-25 10:06:40,812 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:06:40,812 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:07:46,926 INFO     Done. Execution time: 66.11367893218994 seconds
2023-01-25 10:07:46,926 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz8979617045951529442/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8979617045951529442/bin -o /tmp/qfuzz8979617045951529442/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8979617045951529442/bin
Found file /tmp/qfuzz8979617045951529442/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz8979617045951529442/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8979617045951529442/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8979617045951529442/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8979617045951529442/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8979617045951529442/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 40, exec speed = 126185 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,3751.00]
2; /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,3751.00]
4; /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,1471.00]
5; /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,3791.00]
23; /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,2551.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 180, 184, 178, 104, 197, 6, 175)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(189, 33, 153, 67, 129, 7, 92, 153, 67, 129, 7, 97, 188, 4, 153, 67, 129, 135, 16, 60, 129, 135, 191, 167, 192, 153, 67, 125, 16, 69, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(73, 67, 50, 170, 93, 16, 187, 110, 33, 94, 67, 91, 170, 93, 16, 16, 111, 4, 105, 67, 50, 170, 93, 16, 187, 142, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 171, 33, 38, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 83, 16, 15, 15, 199, 17, 104)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8979617045951529442/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 127, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 189, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 73, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.104s
user	0m22.903s
sys	0m1.675s

2023-01-25 10:07:46,926 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:07:46,926 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:07:46,930 INFO     Done. Execution time: 0.0033206939697265625 seconds
2023-01-25 10:07:46,930 INFO     Output: 
2023-01-25 10:07:46,930 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:07:52,669 INFO     Done. Execution time: 5.73889684677124 seconds
2023-01-25 10:07:52,669 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(127, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(189, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(73, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  127  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  127  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  127  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  127  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  127  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  127  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  127  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  127  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      128  |  1  |  127  |      2  |
    41  |                       R = R + sep;  |    127  |  128  |      128  |  1  |  127  |      2  |
    45  |             builder = builder + 1;  |         |  128  |      129  |  1  |  127  |      2  |
    48  |                         R = R + 1;  |      1  |  129  |      129  |  1  |  127  |      2  |
    52  |                         i = i + 1;  |         |  129  |      129  |  2  |  127  |      2  |
    53  |              resetPlaceHolder_1();  |         |  129  |      129  |  2  |  127  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    127  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    127  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    127  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.730s
user	0m11.487s
sys	0m1.737s

2023-01-25 10:07:52,669 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:08:07,638 INFO     Done. Execution time: 14.968836069107056 seconds
2023-01-25 10:08:07,639 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `13.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1007-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1007-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.961s
user	0m37.809s
sys	0m6.697s

2023-01-25 10:08:07,639 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:08:07,639 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:09:13,655 INFO     Done. Execution time: 66.01628041267395 seconds
2023-01-25 10:09:13,656 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz1566641106169986797/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1566641106169986797/bin -o /tmp/qfuzz1566641106169986797/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1566641106169986797/bin
Found file /tmp/qfuzz1566641106169986797/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz1566641106169986797/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1566641106169986797/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1566641106169986797/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1566641106169986797/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1566641106169986797/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 119254 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 110, 47, 153, 64, 50, 170, 93, 16, 5, 74, 74, 63, 4, 91, 170, 93, 16, 192, 37, 153, 5, 33, 72)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1566641106169986797/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.008s
user	0m22.385s
sys	0m1.692s

2023-01-25 10:09:13,656 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:09:13,656 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:09:13,660 INFO     Done. Execution time: 0.003414154052734375 seconds
2023-01-25 10:09:13,660 INFO     Output: 
2023-01-25 10:09:13,660 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:09:18,854 INFO     Done. Execution time: 5.193821430206299 seconds
2023-01-25 10:09:18,854 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.179s
user	0m9.808s
sys	0m1.768s

2023-01-25 10:09:18,854 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:09:26,582 INFO     Done. Execution time: 7.727044582366943 seconds
2023-01-25 10:09:26,582 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1009-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1009-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.719s
user	0m16.422s
sys	0m2.657s

2023-01-25 10:09:26,582 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:09:26,582 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:10:32,960 INFO     Done. Execution time: 66.3776113986969 seconds
2023-01-25 10:10:32,960 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz966172387873114859/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz966172387873114859/bin -o /tmp/qfuzz966172387873114859/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz966172387873114859/bin
Found file /tmp/qfuzz966172387873114859/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz966172387873114859/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz966172387873114859/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz966172387873114859/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz966172387873114859/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz966172387873114859/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz966172387873114859/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz966172387873114859/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 140274 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m140k to 140k us (average: 140k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
8; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
13; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
26; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
33; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
37; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
39; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
48; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
50; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
54; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
56; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
59; /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 32, 32, 32, 36, 20, 59, 58, 145, 65, 50, 156, 93, 9, 110, 33, 132, 33, 170, 49, 16, 187, 5, 21, 38, 180, 39, 5, 50, 192, 93, 86, 187, 110, 50, 153, 50, 86, 170, 70, 16, 20, 59, 58, 145, 65, 50, 156, 93, 16, 98)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 129, 67, 50, 170, 93, 9, 111, 97, 16, 187, 110, 135, 191, 153, 67, 50, 170, 93, 170, 93, 16, 187, 110, 33, 129, 16, 187, 110, 33, 129, 50, 51, 93, 16, 187, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 172, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 153, 50, 170, 93, 16, 187, 110, 33, 153, 67, 122, 170, 38, 4, 44, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 5, 196, 196, 196, 196, 196, 196, 184, 196, 10, 196, 196, 144, 14, 196, 182)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 119, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 189, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 109, 153, 67, 50, 193, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 101, 191, 23, 69, 29, 101, 21, 34, 34, 34, 34, 34, 136, 34, 34, 34, 34, 34, 34, 34, 34, 101, 101, 122, 101, 91, 163, 112, 20, 183)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 5, 4, 67, 50, 170, 93, 16, 187, 110, 35, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 174, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(150, 110, 186, 186, 186, 186, 33, 137, 67, 66, 160, 93, 16, 194, 110, 181, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 67, 4, 31, 153, 141, 149, 170, 93, 16, 187, 144, 60, 63, 80, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 110, 33, 152, 152, 152, 152, 152, 152, 152, 154, 187, 110, 200, 153, 67, 50, 170, 67, 54, 16, 187, 110, 36, 187, 110, 33, 153, 67, 110, 33, 153, 67, 50, 170, 93, 48, 187, 91, 33, 153, 67, 170, 93, 16, 137, 63, 58, 153, 67, 50, 173, 93, 180, 187, 110, 171, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 9, 61, 9, 16, 5, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 70, 9, 153, 4, 104, 4, 50, 170, 90, 177, 50, 170, 93, 16, 127, 20, 33, 187, 67, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 147, 110, 16, 160, 187, 32, 70, 16, 187, 93, 10, 117, 93, 16, 58, 112, 153, 67, 36, 198, 93, 16, 187, 110, 26, 114, 67, 48, 50, 68, 93, 16, 187, 110, 115, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 5, 29, 141, 134, 179, 100, 168, 168, 168, 168, 168, 168, 168, 19, 19, 27, 108, 118, 54, 179, 171, 171, 171, 90, 26, 73, 102, 37, 112, 170, 44, 138, 67, 125, 70, 153, 26, 151, 20, 187, 11, 120, 97, 140, 5, 80, 148, 171, 20, 4, 19, 19, 7, 116, 21, 179, 101, 71, 171, 153, 15, 171, 20, 149, 125, 133, 131, 54, 171, 171, 169, 171, 20, 115, 43, 20, 12, 171, 170, 167, 165)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(167, 110, 50, 95, 34, 50, 31, 144, 49, 49, 63, 49, 49, 138, 138, 138, 138, 31, 144, 49, 49, 63, 12, 49, 138, 138, 138, 138, 138, 138, 138, 49, 49, 72, 20, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 60, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 76, 133, 10, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 115, 187, 110, 170, 93, 99, 187, 110, 33, 153, 5, 50, 117, 15, 30, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 46, 109, 170, 93, 16, 187, 116, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108, 110, 33, 153, 67, 50, 170, 93, 16, 187, 109, 170, 93, 16, 187, 110, 33, 153, 188, 50, 170, 93, 16, 68, 170, 59, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 26, 192, 132, 181, 4, 50, 60, 92, 27, 101, 16, 78, 5, 9, 109, 196, 50, 60, 92, 27, 101, 16, 78, 5, 9, 20, 37, 135, 64, 147, 173, 16, 129, 165, 197, 68, 132, 170, 18, 16, 4, 5, 5, 16, 109, 196, 50, 60, 92, 27, 101, 16, 78, 5, 9, 20, 37, 186, 33, 34, 187, 110, 156, 153, 192, 153, 18, 62, 63, 119, 92, 27, 101, 16, 11, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 110, 33, 153, 67, 50, 170, 80, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 33, 153, 67, 50, 170, 93, 16, 192, 144, 36, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 106, 7, 67, 50, 170, 93, 115, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 160, 4, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 143, 126, 87, 50, 170, 93, 14, 16, 187, 89, 35, 67, 48, 50, 113, 16, 187, 110, 33, 187, 59, 33, 153, 153, 102, 50, 61, 183, 16, 187, 110, 33, 153, 67, 187, 191, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 14, 50, 170, 91, 93, 16, 186, 50, 170, 115, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 199, 153, 67, 50, 170, 93, 77, 187, 110, 33, 153, 62, 50, 170, 93, 16, 187, 110, 33, 97, 122, 55, 170, 93, 16, 113, 110, 33, 153, 5, 50, 170, 93, 18, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 153, 110, 130, 33, 110, 33, 153, 93, 38, 153, 67, 56, 68, 116, 69, 6, 37, 75, 75, 75, 75, 111, 75, 74, 110, 5, 4, 67, 66, 170, 89, 109, 87, 109, 109, 109, 109, 109, 92, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 156)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 195, 67, 50, 170, 93, 16, 187, 110, 4, 54, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 167, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(158, 108, 101, 33, 153, 67, 50, 129, 93, 170, 11, 46, 187, 101, 33, 153, 67, 50, 129, 93, 134, 187, 110, 34, 170, 11, 46, 187, 101, 32, 93, 134, 187, 110, 33, 153, 67, 50, 129, 93, 134, 187, 110, 33, 151, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(109, 15, 133, 43, 157, 70, 53, 115, 134, 187, 111, 176, 38, 88, 16, 15, 164, 49, 151, 7, 67, 50, 31, 33, 195, 5, 67, 50, 32, 74, 113, 55, 67, 127, 97, 56, 96, 16, 187, 111, 176, 38, 88, 16, 15, 77, 49, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 58, 170, 93, 16, 187, 110, 33, 153, 67, 49, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz966172387873114859/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,32,32,32,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,129,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,172,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,5,196,196,196]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,119,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,101,191,23,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,5,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [150,110,186,186,186]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [75,67,4,31,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [166,110,33,152,152]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [61,9,61,9,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,70,9,153,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,147,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,5,29,141,134]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [167,110,50,95,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,60,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,115,187,110,170]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,46,109,170,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [108,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,26,192,132,181]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,143,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,14,50,170,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,199,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,153,110,130,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,156]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,195,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [158,108,101,33,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [109,15,133,43,157]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.369s
user	0m27.861s
sys	0m3.643s

2023-01-25 10:10:32,961 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:10:32,961 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:10:32,965 INFO     Done. Execution time: 0.003570079803466797 seconds
2023-01-25 10:10:32,965 INFO     Output: 
2023-01-25 10:10:32,965 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:11:01,645 INFO     Done. Execution time: 28.68048882484436 seconds
2023-01-25 10:11:01,646 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,32,32,32,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,129,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 33 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,172,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,5,196,196,196])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,119,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,101,191,23,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,5,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([150,110,186,186,186])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([75,67,4,31,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 33 (24.24%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([166,110,33,152,152])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([61,9,61,9,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,70,9,153,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,147,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,5,29,141,134])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([167,110,50,95,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,60,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,115,187,110,170])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 33 (48.48%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,46,109,170,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([108,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,26,192,132,181])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,143,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,14,50,170,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,199,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,153,110,130,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,156])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,195,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([158,108,101,33,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([109,15,133,43,157])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 33)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 33 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 3690):
                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |       sorted        |
---------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [193,32,32,32,36]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [193,32,32,32,36]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [193,32,32,32,36]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [193,32,32,32,36]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |       |  [193,32,32,32,36]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [193,32,32,32,36]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |    193  |  0  |       |  [193,32,32,32,36]  |
    24  |                         int j = 0;  |         |    0  |    193  |  0  |    0  |  [193,32,32,32,36]  |
    30  |                         R = R + 2;  |      2  |    2  |    193  |  0  |    0  |  [193,32,32,32,36]  |
    34  |                         j = j + 1;  |         |    2  |    193  |  0  |    1  |  [193,32,32,32,36]  |
    35  |              resetPlaceHolder_2();  |         |    2  |    193  |  0  |    1  |  [193,32,32,32,36]  |
    41  |                         R = R + 2;  |      2  |    4  |    193  |  0  |    1  |  [193,32,32,32,36]  |
    45  |                         j = j + 1;  |         |    4  |    193  |  0  |    2  |  [193,32,32,32,36]  |
    46  |              resetPlaceHolder_2();  |         |    4  |    193  |  0  |    2  |  [193,32,32,32,36]  |
    52  |                         R = R + 2;  |      2  |    6  |    193  |  0  |    2  |  [193,32,32,32,36]  |
    56  |                         j = j + 1;  |         |    6  |    193  |  0  |    3  |  [193,32,32,32,36]  |
    57  |              resetPlaceHolder_2();  |         |    6  |    193  |  0  |    3  |  [193,32,32,32,36]  |
    63  |                         R = R + 2;  |      2  |    8  |    193  |  0  |    3  |  [193,32,32,32,36]  |
    67  |                         j = j + 1;  |         |    8  |    193  |  0  |    4  |  [193,32,32,32,36]  |
    68  |              resetPlaceHolder_2();  |         |    8  |    193  |  0  |    4  |  [193,32,32,32,36]  |
    74  |                         R = R + 2;  |      2  |   10  |    193  |  0  |    4  |  [193,32,32,32,36]  |
    78  |                         j = j + 1;  |         |   10  |    193  |  0  |    5  |  [193,32,32,32,36]  |
    79  |              resetPlaceHolder_2();  |         |   10  |    193  |  0  |    5  |  [193,32,32,32,36]  |
    85  |                         R = R + 2;  |      2  |   12  |    193  |  0  |    5  |  [193,32,32,32,36]  |
    89  |                         j = j + 1;  |         |   12  |    193  |  0  |    6  |  [193,32,32,32,36]  |
    90  |              resetPlaceHolder_2();  |         |   12  |    193  |  0  |    6  |  [193,32,32,32,36]  |
    96  |                         R = R + 2;  |      2  |   14  |    193  |  0  |    6  |  [193,32,32,32,36]  |
   100  |                         j = j + 1;  |         |   14  |    193  |  0  |    7  |  [193,32,32,32,36]  |
   101  |              resetPlaceHolder_2();  |         |   14  |    193  |  0  |    7  |  [193,32,32,32,36]  |
   107  |                         R = R + 2;  |      2  |   16  |    193  |  0  |    7  |  [193,32,32,32,36]  |
   111  |                         j = j + 1;  |         |   16  |    193  |  0  |    8  |  [193,32,32,32,36]  |
   112  |              resetPlaceHolder_2();  |         |   16  |    193  |  0  |    8  |  [193,32,32,32,36]  |
   118  |                         R = R + 2;  |      2  |   18  |    193  |  0  |    8  |  [193,32,32,32,36]  |
   122  |                         j = j + 1;  |         |   18  |    193  |  0  |    9  |  [193,32,32,32,36]  |
   123  |              resetPlaceHolder_2();  |         |   18  |    193  |  0  |    9  |  [193,32,32,32,36]  |
   129  |                         R = R + 2;  |      2  |   20  |    193  |  0  |    9  |  [193,32,32,32,36]  |
   133  |                         j = j + 1;  |         |   20  |    193  |  0  |   10  |  [193,32,32,32,36]  |
   134  |              resetPlaceHolder_2();  |         |   20  |    193  |  0  |   10  |  [193,32,32,32,36]  |
   140  |                         R = R + 2;  |      2  |   22  |    193  |  0  |   10  |  [193,32,32,32,36]  |
   144  |                         j = j + 1;  |         |   22  |    193  |  0  |   11  |  [193,32,32,32,36]  |
   145  |              resetPlaceHolder_2();  |         |   22  |    193  |  0  |   11  |  [193,32,32,32,36]  |
   151  |                         R = R + 2;  |      2  |   24  |    193  |  0  |   11  |  [193,32,32,32,36]  |
   155  |                         j = j + 1;  |         |   24  |    193  |  0  |   12  |  [193,32,32,32,36]  |
   156  |              resetPlaceHolder_2();  |         |   24  |    193  |  0  |   12  |  [193,32,32,32,36]  |
   162  |                         R = R + 2;  |      2  |   26  |    193  |  0  |   12  |  [193,32,32,32,36]  |
   166  |                         j = j + 1;  |         |   26  |    193  |  0  |   13  |  [193,32,32,32,36]  |
   167  |              resetPlaceHolder_2();  |         |   26  |    193  |  0  |   13  |  [193,32,32,32,36]  |
   173  |                         R = R + 2;  |      2  |   28  |    193  |  0  |   13  |  [193,32,32,32,36]  |
   177  |                         j = j + 1;  |         |   28  |    193  |  0  |   14  |  [193,32,32,32,36]  |
   178  |              resetPlaceHolder_2();  |         |   28  |    193  |  0  |   14  |  [193,32,32,32,36]  |
   184  |                         R = R + 2;  |      2  |   30  |    193  |  0  |   14  |  [193,32,32,32,36]  |
   188  |                         j = j + 1;  |         |   30  |    193  |  0  |   15  |  [193,32,32,32,36]  |
   189  |              resetPlaceHolder_2();  |         |   30  |    193  |  0  |   15  |  [193,32,32,32,36]  |
   195  |                         R = R + 2;  |      2  |   32  |    193  |  0  |   15  |  [193,32,32,32,36]  |
   199  |                         j = j + 1;  |         |   32  |    193  |  0  |   16  |  [193,32,32,32,36]  |
   200  |              resetPlaceHolder_2();  |         |   32  |    193  |  0  |   16  |  [193,32,32,32,36]  |
   206  |                         R = R + 2;  |      2  |   34  |    193  |  0  |   16  |  [193,32,32,32,36]  |
   210  |                         j = j + 1;  |         |   34  |    193  |  0  |   17  |  [193,32,32,32,36]  |
   211  |              resetPlaceHolder_2();  |         |   34  |    193  |  0  |   17  |  [193,32,32,32,36]  |
   217  |                         R = R + 2;  |      2  |   36  |    193  |  0  |   17  |  [193,32,32,32,36]  |
   221  |                         j = j + 1;  |         |   36  |    193  |  0  |   18  |  [193,32,32,32,36]  |
   222  |              resetPlaceHolder_2();  |         |   36  |    193  |  0  |   18  |  [193,32,32,32,36]  |
   228  |                         R = R + 2;  |      2  |   38  |    193  |  0  |   18  |  [193,32,32,32,36]  |
   232  |                         j = j + 1;  |         |   38  |    193  |  0  |   19  |  [193,32,32,32,36]  |
   233  |              resetPlaceHolder_2();  |         |   38  |    193  |  0  |   19  |  [193,32,32,32,36]  |
   239  |                         R = R + 2;  |      2  |   40  |    193  |  0  |   19  |  [193,32,32,32,36]  |
   243  |                         j = j + 1;  |         |   40  |    193  |  0  |   20  |  [193,32,32,32,36]  |
   244  |              resetPlaceHolder_2();  |         |   40  |    193  |  0  |   20  |  [193,32,32,32,36]  |
   250  |                         R = R + 2;  |      2  |   42  |    193  |  0  |   20  |  [193,32,32,32,36]  |
   254  |                         j = j + 1;  |         |   42  |    193  |  0  |   21  |  [193,32,32,32,36]  |
   255  |              resetPlaceHolder_2();  |         |   42  |    193  |  0  |   21  |  [193,32,32,32,36]  |
   261  |                         R = R + 2;  |      2  |   44  |    193  |  0  |   21  |  [193,32,32,32,36]  |
   265  |                         j = j + 1;  |         |   44  |    193  |  0  |   22  |  [193,32,32,32,36]  |
   266  |              resetPlaceHolder_2();  |         |   44  |    193  |  0  |   22  |  [193,32,32,32,36]  |
   272  |                         R = R + 2;  |      2  |   46  |    193  |  0  |   22  |  [193,32,32,32,36]  |
   276  |                         j = j + 1;  |         |   46  |    193  |  0  |   23  |  [193,32,32,32,36]  |
   277  |              resetPlaceHolder_2();  |         |   46  |    193  |  0  |   23  |  [193,32,32,32,36]  |
   283  |                         R = R + 2;  |      2  |   48  |    193  |  0  |   23  |  [193,32,32,32,36]  |
   287  |                         j = j + 1;  |         |   48  |    193  |  0  |   24  |  [193,32,32,32,36]  |
   288  |              resetPlaceHolder_2();  |         |   48  |    193  |  0  |   24  |  [193,32,32,32,36]  |
   294  |                         R = R + 2;  |      2  |   50  |    193  |  0  |   24  |  [193,32,32,32,36]  |
   298  |                         j = j + 1;  |         |   50  |    193  |  0  |   25  |  [193,32,32,32,36]  |
   299  |              resetPlaceHolder_2();  |         |   50  |    193  |  0  |   25  |  [193,32,32,32,36]  |
   305  |                         R = R + 2;  |      2  |   52  |    193  |  0  |   25  |  [193,32,32,32,36]  |
   309  |                         j = j + 1;  |         |   52  |    193  |  0  |   26  |  [193,32,32,32,36]  |
   310  |              resetPlaceHolder_2();  |         |   52  |    193  |  0  |   26  |  [193,32,32,32,36]  |
   316  |                         R = R + 2;  |      2  |   54  |    193  |  0  |   26  |  [193,32,32,32,36]  |
   320  |                         j = j + 1;  |         |   54  |    193  |  0  |   27  |  [193,32,32,32,36]  |
   321  |              resetPlaceHolder_2();  |         |   54  |    193  |  0  |   27  |  [193,32,32,32,36]  |
   327  |                         R = R + 2;  |      2  |   56  |    193  |  0  |   27  |  [193,32,32,32,36]  |
   331  |                         j = j + 1;  |         |   56  |    193  |  0  |   28  |  [193,32,32,32,36]  |
   332  |              resetPlaceHolder_2();  |         |   56  |    193  |  0  |   28  |  [193,32,32,32,36]  |
   338  |                         R = R + 2;  |      2  |   58  |    193  |  0  |   28  |  [193,32,32,32,36]  |
   342  |                         j = j + 1;  |         |   58  |    193  |  0  |   29  |  [193,32,32,32,36]  |
   343  |              resetPlaceHolder_2();  |         |   58  |    193  |  0  |   29  |  [193,32,32,32,36]  |
   349  |                         R = R + 2;  |      2  |   60  |    193  |  0  |   29  |  [193,32,32,32,36]  |
   353  |                         j = j + 1;  |         |   60  |    193  |  0  |   30  |  [193,32,32,32,36]  |
   354  |              resetPlaceHolder_2();  |         |   60  |    193  |  0  |   30  |  [193,32,32,32,36]  |
   360  |                         R = R + 2;  |      2  |   62  |    193  |  0  |   30  |  [193,32,32,32,36]  |
   364  |                         j = j + 1;  |         |   62  |    193  |  0  |   31  |  [193,32,32,32,36]  |
   365  |              resetPlaceHolder_2();  |         |   62  |    193  |  0  |   31  |  [193,32,32,32,36]  |
   371  |                         R = R + 2;  |      2  |   64  |    193  |  0  |   31  |  [193,32,32,32,36]  |
   375  |                         j = j + 1;  |         |   64  |    193  |  0  |   32  |  [193,32,32,32,36]  |
   376  |              resetPlaceHolder_2();  |         |   64  |    193  |  0  |   32  |  [193,32,32,32,36]  |
   382  |                         R = R + 2;  |      2  |   66  |    193  |  0  |   32  |  [193,32,32,32,36]  |
   386  |                         j = j + 1;  |         |   66  |    193  |  0  |   33  |  [193,32,32,32,36]  |
   387  |              resetPlaceHolder_2();  |         |   66  |    193  |  0  |   33  |  [193,32,32,32,36]  |
   393  |                         R = R + 2;  |      2  |   68  |    193  |  0  |   33  |  [193,32,32,32,36]  |
   397  |                         j = j + 1;  |         |   68  |    193  |  0  |   34  |  [193,32,32,32,36]  |
   398  |              resetPlaceHolder_2();  |         |   68  |    193  |  0  |   34  |  [193,32,32,32,36]  |
   404  |                         R = R + 2;  |      2  |   70  |    193  |  0  |   34  |  [193,32,32,32,36]  |
   408  |                         j = j + 1;  |         |   70  |    193  |  0  |   35  |  [193,32,32,32,36]  |
   409  |              resetPlaceHolder_2();  |         |   70  |    193  |  0  |   35  |  [193,32,32,32,36]  |
   415  |                         R = R + 2;  |      2  |   72  |    193  |  0  |   35  |  [193,32,32,32,36]  |
   419  |                         j = j + 1;  |         |   72  |    193  |  0  |   36  |  [193,32,32,32,36]  |
   420  |              resetPlaceHolder_2();  |         |   72  |    193  |  0  |   36  |  [193,32,32,32,36]  |
   426  |                         R = R + 2;  |      2  |   74  |    193  |  0  |   36  |  [193,32,32,32,36]  |
   430  |                         j = j + 1;  |         |   74  |    193  |  0  |   37  |  [193,32,32,32,36]  |
   431  |              resetPlaceHolder_2();  |         |   74  |    193  |  0  |   37  |  [193,32,32,32,36]  |
   437  |                         R = R + 2;  |      2  |   76  |    193  |  0  |   37  |  [193,32,32,32,36]  |
   441  |                         j = j + 1;  |         |   76  |    193  |  0  |   38  |  [193,32,32,32,36]  |
   442  |              resetPlaceHolder_2();  |         |   76  |    193  |  0  |   38  |  [193,32,32,32,36]  |
   448  |                         R = R + 2;  |      2  |   78  |    193  |  0  |   38  |  [193,32,32,32,36]  |
   452  |                         j = j + 1;  |         |   78  |    193  |  0  |   39  |  [193,32,32,32,36]  |
   453  |              resetPlaceHolder_2();  |         |   78  |    193  |  0  |   39  |  [193,32,32,32,36]  |
   459  |                         R = R + 2;  |      2  |   80  |    193  |  0  |   39  |  [193,32,32,32,36]  |
   463  |                         j = j + 1;  |         |   80  |    193  |  0  |   40  |  [193,32,32,32,36]  |
   464  |              resetPlaceHolder_2();  |         |   80  |    193  |  0  |   40  |  [193,32,32,32,36]  |
   470  |                         R = R + 2;  |      2  |   82  |    193  |  0  |   40  |  [193,32,32,32,36]  |
   474  |                         j = j + 1;  |         |   82  |    193  |  0  |   41  |  [193,32,32,32,36]  |
   475  |              resetPlaceHolder_2();  |         |   82  |    193  |  0  |   41  |  [193,32,32,32,36]  |
   481  |                         R = R + 2;  |      2  |   84  |    193  |  0  |   41  |  [193,32,32,32,36]  |
   485  |                         j = j + 1;  |         |   84  |    193  |  0  |   42  |  [193,32,32,32,36]  |
   486  |              resetPlaceHolder_2();  |         |   84  |    193  |  0  |   42  |  [193,32,32,32,36]  |
   492  |                         R = R + 2;  |      2  |   86  |    193  |  0  |   42  |  [193,32,32,32,36]  |
   496  |                         j = j + 1;  |         |   86  |    193  |  0  |   43  |  [193,32,32,32,36]  |
   497  |              resetPlaceHolder_2();  |         |   86  |    193  |  0  |   43  |  [193,32,32,32,36]  |
   503  |                         R = R + 2;  |      2  |   88  |    193  |  0  |   43  |  [193,32,32,32,36]  |
   507  |                         j = j + 1;  |         |   88  |    193  |  0  |   44  |  [193,32,32,32,36]  |
   508  |              resetPlaceHolder_2();  |         |   88  |    193  |  0  |   44  |  [193,32,32,32,36]  |
   514  |                         R = R + 2;  |      2  |   90  |    193  |  0  |   44  |  [193,32,32,32,36]  |
   518  |                         j = j + 1;  |         |   90  |    193  |  0  |   45  |  [193,32,32,32,36]  |
   519  |              resetPlaceHolder_2();  |         |   90  |    193  |  0  |   45  |  [193,32,32,32,36]  |
   525  |                         R = R + 2;  |      2  |   92  |    193  |  0  |   45  |  [193,32,32,32,36]  |
   529  |                         j = j + 1;  |         |   92  |    193  |  0  |   46  |  [193,32,32,32,36]  |
   530  |              resetPlaceHolder_2();  |         |   92  |    193  |  0  |   46  |  [193,32,32,32,36]  |
   536  |                         R = R + 2;  |      2  |   94  |    193  |  0  |   46  |  [193,32,32,32,36]  |
   540  |                         j = j + 1;  |         |   94  |    193  |  0  |   47  |  [193,32,32,32,36]  |
   541  |              resetPlaceHolder_2();  |         |   94  |    193  |  0  |   47  |  [193,32,32,32,36]  |
   547  |                         R = R + 2;  |      2  |   96  |    193  |  0  |   47  |  [193,32,32,32,36]  |
   551  |                         j = j + 1;  |         |   96  |    193  |  0  |   48  |  [193,32,32,32,36]  |
   552  |              resetPlaceHolder_2();  |         |   96  |    193  |  0  |   48  |  [193,32,32,32,36]  |
   558  |                         R = R + 2;  |      2  |   98  |    193  |  0  |   48  |  [193,32,32,32,36]  |
   562  |                         j = j + 1;  |         |   98  |    193  |  0  |   49  |  [193,32,32,32,36]  |
   563  |              resetPlaceHolder_2();  |         |   98  |    193  |  0  |   49  |  [193,32,32,32,36]  |
   569  |                         R = R + 2;  |      2  |  100  |    193  |  0  |   49  |  [193,32,32,32,36]  |
   573  |                         j = j + 1;  |         |  100  |    193  |  0  |   50  |  [193,32,32,32,36]  |
   574  |              resetPlaceHolder_2();  |         |  100  |    193  |  0  |   50  |  [193,32,32,32,36]  |
   580  |                         R = R + 2;  |      2  |  102  |    193  |  0  |   50  |  [193,32,32,32,36]  |
   584  |                         j = j + 1;  |         |  102  |    193  |  0  |   51  |  [193,32,32,32,36]  |
   585  |              resetPlaceHolder_2();  |         |  102  |    193  |  0  |   51  |  [193,32,32,32,36]  |
   591  |                         R = R + 2;  |      2  |  104  |    193  |  0  |   51  |  [193,32,32,32,36]  |
   595  |                         j = j + 1;  |         |  104  |    193  |  0  |   52  |  [193,32,32,32,36]  |
   596  |              resetPlaceHolder_2();  |         |  104  |    193  |  0  |   52  |  [193,32,32,32,36]  |
   602  |                         R = R + 2;  |      2  |  106  |    193  |  0  |   52  |  [193,32,32,32,36]  |
   606  |                         j = j + 1;  |         |  106  |    193  |  0  |   53  |  [193,32,32,32,36]  |
   607  |              resetPlaceHolder_2();  |         |  106  |    193  |  0  |   53  |  [193,32,32,32,36]  |
   613  |                         R = R + 2;  |      2  |  108  |    193  |  0  |   53  |  [193,32,32,32,36]  |
   617  |                         j = j + 1;  |         |  108  |    193  |  0  |   54  |  [193,32,32,32,36]  |
   618  |              resetPlaceHolder_2();  |         |  108  |    193  |  0  |   54  |  [193,32,32,32,36]  |
   624  |                         R = R + 2;  |      2  |  110  |    193  |  0  |   54  |  [193,32,32,32,36]  |
   628  |                         j = j + 1;  |         |  110  |    193  |  0  |   55  |  [193,32,32,32,36]  |
   629  |              resetPlaceHolder_2();  |         |  110  |    193  |  0  |   55  |  [193,32,32,32,36]  |
   635  |                         R = R + 2;  |      2  |  112  |    193  |  0  |   55  |  [193,32,32,32,36]  |
   639  |                         j = j + 1;  |         |  112  |    193  |  0  |   56  |  [193,32,32,32,36]  |
   640  |              resetPlaceHolder_2();  |         |  112  |    193  |  0  |   56  |  [193,32,32,32,36]  |
   646  |                         R = R + 2;  |      2  |  114  |    193  |  0  |   56  |  [193,32,32,32,36]  |
   650  |                         j = j + 1;  |         |  114  |    193  |  0  |   57  |  [193,32,32,32,36]  |
   651  |              resetPlaceHolder_2();  |         |  114  |    193  |  0  |   57  |  [193,32,32,32,36]  |
   657  |                         R = R + 2;  |      2  |  116  |    193  |  0  |   57  |  [193,32,32,32,36]  |
   661  |                         j = j + 1;  |         |  116  |    193  |  0  |   58  |  [193,32,32,32,36]  |
   662  |              resetPlaceHolder_2();  |         |  116  |    193  |  0  |   58  |  [193,32,32,32,36]  |
   668  |                         R = R + 2;  |      2  |  118  |    193  |  0  |   58  |  [193,32,32,32,36]  |
   672  |                         j = j + 1;  |         |  118  |    193  |  0  |   59  |  [193,32,32,32,36]  |
   673  |              resetPlaceHolder_2();  |         |  118  |    193  |  0  |   59  |  [193,32,32,32,36]  |
   679  |                         R = R + 2;  |      2  |  120  |    193  |  0  |   59  |  [193,32,32,32,36]  |
   683  |                         j = j + 1;  |         |  120  |    193  |  0  |   60  |  [193,32,32,32,36]  |
   684  |              resetPlaceHolder_2();  |         |  120  |    193  |  0  |   60  |  [193,32,32,32,36]  |
   690  |                         R = R + 2;  |      2  |  122  |    193  |  0  |   60  |  [193,32,32,32,36]  |
   694  |                         j = j + 1;  |         |  122  |    193  |  0  |   61  |  [193,32,32,32,36]  |
   695  |              resetPlaceHolder_2();  |         |  122  |    193  |  0  |   61  |  [193,32,32,32,36]  |
   701  |                         R = R + 2;  |      2  |  124  |    193  |  0  |   61  |  [193,32,32,32,36]  |
   705  |                         j = j + 1;  |         |  124  |    193  |  0  |   62  |  [193,32,32,32,36]  |
   706  |              resetPlaceHolder_2();  |         |  124  |    193  |  0  |   62  |  [193,32,32,32,36]  |
   712  |                         R = R + 2;  |      2  |  126  |    193  |  0  |   62  |  [193,32,32,32,36]  |
   716  |                         j = j + 1;  |         |  126  |    193  |  0  |   63  |  [193,32,32,32,36]  |
   717  |              resetPlaceHolder_2();  |         |  126  |    193  |  0  |   63  |  [193,32,32,32,36]  |
   723  |                         R = R + 2;  |      2  |  128  |    193  |  0  |   63  |  [193,32,32,32,36]  |
   727  |                         j = j + 1;  |         |  128  |    193  |  0  |   64  |  [193,32,32,32,36]  |
   728  |              resetPlaceHolder_2();  |         |  128  |    193  |  0  |   64  |  [193,32,32,32,36]  |
   734  |                         R = R + 2;  |      2  |  130  |    193  |  0  |   64  |  [193,32,32,32,36]  |
   738  |                         j = j + 1;  |         |  130  |    193  |  0  |   65  |  [193,32,32,32,36]  |
   739  |              resetPlaceHolder_2();  |         |  130  |    193  |  0  |   65  |  [193,32,32,32,36]  |
   745  |                         R = R + 2;  |      2  |  132  |    193  |  0  |   65  |  [193,32,32,32,36]  |
   749  |                         j = j + 1;  |         |  132  |    193  |  0  |   66  |  [193,32,32,32,36]  |
   750  |              resetPlaceHolder_2();  |         |  132  |    193  |  0  |   66  |  [193,32,32,32,36]  |
   756  |                         R = R + 2;  |      2  |  134  |    193  |  0  |   66  |  [193,32,32,32,36]  |
   760  |                         j = j + 1;  |         |  134  |    193  |  0  |   67  |  [193,32,32,32,36]  |
   761  |              resetPlaceHolder_2();  |         |  134  |    193  |  0  |   67  |  [193,32,32,32,36]  |
   767  |                         R = R + 2;  |      2  |  136  |    193  |  0  |   67  |  [193,32,32,32,36]  |
   771  |                         j = j + 1;  |         |  136  |    193  |  0  |   68  |  [193,32,32,32,36]  |
   772  |              resetPlaceHolder_2();  |         |  136  |    193  |  0  |   68  |  [193,32,32,32,36]  |
   778  |                         R = R + 2;  |      2  |  138  |    193  |  0  |   68  |  [193,32,32,32,36]  |
   782  |                         j = j + 1;  |         |  138  |    193  |  0  |   69  |  [193,32,32,32,36]  |
   783  |              resetPlaceHolder_2();  |         |  138  |    193  |  0  |   69  |  [193,32,32,32,36]  |
   789  |                         R = R + 2;  |      2  |  140  |    193  |  0  |   69  |  [193,32,32,32,36]  |
   793  |                         j = j + 1;  |         |  140  |    193  |  0  |   70  |  [193,32,32,32,36]  |
   794  |              resetPlaceHolder_2();  |         |  140  |    193  |  0  |   70  |  [193,32,32,32,36]  |
   800  |                         R = R + 2;  |      2  |  142  |    193  |  0  |   70  |  [193,32,32,32,36]  |
   804  |                         j = j + 1;  |         |  142  |    193  |  0  |   71  |  [193,32,32,32,36]  |
   805  |              resetPlaceHolder_2();  |         |  142  |    193  |  0  |   71  |  [193,32,32,32,36]  |
   811  |                         R = R + 2;  |      2  |  144  |    193  |  0  |   71  |  [193,32,32,32,36]  |
   815  |                         j = j + 1;  |         |  144  |    193  |  0  |   72  |  [193,32,32,32,36]  |
   816  |              resetPlaceHolder_2();  |         |  144  |    193  |  0  |   72  |  [193,32,32,32,36]  |
   822  |                         R = R + 2;  |      2  |  146  |    193  |  0  |   72  |  [193,32,32,32,36]  |
   826  |                         j = j + 1;  |         |  146  |    193  |  0  |   73  |  [193,32,32,32,36]  |
   827  |              resetPlaceHolder_2();  |         |  146  |    193  |  0  |   73  |  [193,32,32,32,36]  |
   833  |                         R = R + 2;  |      2  |  148  |    193  |  0  |   73  |  [193,32,32,32,36]  |
   837  |                         j = j + 1;  |         |  148  |    193  |  0  |   74  |  [193,32,32,32,36]  |
   838  |              resetPlaceHolder_2();  |         |  148  |    193  |  0  |   74  |  [193,32,32,32,36]  |
   844  |                         R = R + 2;  |      2  |  150  |    193  |  0  |   74  |  [193,32,32,32,36]  |
   848  |                         j = j + 1;  |         |  150  |    193  |  0  |   75  |  [193,32,32,32,36]  |
   849  |              resetPlaceHolder_2();  |         |  150  |    193  |  0  |   75  |  [193,32,32,32,36]  |
   855  |                         R = R + 2;  |      2  |  152  |    193  |  0  |   75  |  [193,32,32,32,36]  |
   859  |                         j = j + 1;  |         |  152  |    193  |  0  |   76  |  [193,32,32,32,36]  |
   860  |              resetPlaceHolder_2();  |         |  152  |    193  |  0  |   76  |  [193,32,32,32,36]  |
   866  |                         R = R + 2;  |      2  |  154  |    193  |  0  |   76  |  [193,32,32,32,36]  |
   870  |                         j = j + 1;  |         |  154  |    193  |  0  |   77  |  [193,32,32,32,36]  |
   871  |              resetPlaceHolder_2();  |         |  154  |    193  |  0  |   77  |  [193,32,32,32,36]  |
   877  |                         R = R + 2;  |      2  |  156  |    193  |  0  |   77  |  [193,32,32,32,36]  |
   881  |                         j = j + 1;  |         |  156  |    193  |  0  |   78  |  [193,32,32,32,36]  |
   882  |              resetPlaceHolder_2();  |         |  156  |    193  |  0  |   78  |  [193,32,32,32,36]  |
   888  |                         R = R + 2;  |      2  |  158  |    193  |  0  |   78  |  [193,32,32,32,36]  |
   892  |                         j = j + 1;  |         |  158  |    193  |  0  |   79  |  [193,32,32,32,36]  |
   893  |              resetPlaceHolder_2();  |         |  158  |    193  |  0  |   79  |  [193,32,32,32,36]  |
   899  |                         R = R + 2;  |      2  |  160  |    193  |  0  |   79  |  [193,32,32,32,36]  |
   903  |                         j = j + 1;  |         |  160  |    193  |  0  |   80  |  [193,32,32,32,36]  |
   904  |              resetPlaceHolder_2();  |         |  160  |    193  |  0  |   80  |  [193,32,32,32,36]  |
   910  |                         R = R + 2;  |      2  |  162  |    193  |  0  |   80  |  [193,32,32,32,36]  |
   914  |                         j = j + 1;  |         |  162  |    193  |  0  |   81  |  [193,32,32,32,36]  |
   915  |              resetPlaceHolder_2();  |         |  162  |    193  |  0  |   81  |  [193,32,32,32,36]  |
   921  |                         R = R + 2;  |      2  |  164  |    193  |  0  |   81  |  [193,32,32,32,36]  |
   925  |                         j = j + 1;  |         |  164  |    193  |  0  |   82  |  [193,32,32,32,36]  |
   926  |              resetPlaceHolder_2();  |         |  164  |    193  |  0  |   82  |  [193,32,32,32,36]  |
   932  |                         R = R + 2;  |      2  |  166  |    193  |  0  |   82  |  [193,32,32,32,36]  |
   936  |                         j = j + 1;  |         |  166  |    193  |  0  |   83  |  [193,32,32,32,36]  |
   937  |              resetPlaceHolder_2();  |         |  166  |    193  |  0  |   83  |  [193,32,32,32,36]  |
   943  |                         R = R + 2;  |      2  |  168  |    193  |  0  |   83  |  [193,32,32,32,36]  |
   947  |                         j = j + 1;  |         |  168  |    193  |  0  |   84  |  [193,32,32,32,36]  |
   948  |              resetPlaceHolder_2();  |         |  168  |    193  |  0  |   84  |  [193,32,32,32,36]  |
   954  |                         R = R + 2;  |      2  |  170  |    193  |  0  |   84  |  [193,32,32,32,36]  |
   958  |                         j = j + 1;  |         |  170  |    193  |  0  |   85  |  [193,32,32,32,36]  |
   959  |              resetPlaceHolder_2();  |         |  170  |    193  |  0  |   85  |  [193,32,32,32,36]  |
   965  |                         R = R + 2;  |      2  |  172  |    193  |  0  |   85  |  [193,32,32,32,36]  |
   969  |                         j = j + 1;  |         |  172  |    193  |  0  |   86  |  [193,32,32,32,36]  |
   970  |              resetPlaceHolder_2();  |         |  172  |    193  |  0  |   86  |  [193,32,32,32,36]  |
   976  |                         R = R + 2;  |      2  |  174  |    193  |  0  |   86  |  [193,32,32,32,36]  |
   980  |                         j = j + 1;  |         |  174  |    193  |  0  |   87  |  [193,32,32,32,36]  |
   981  |              resetPlaceHolder_2();  |         |  174  |    193  |  0  |   87  |  [193,32,32,32,36]  |
   987  |                         R = R + 2;  |      2  |  176  |    193  |  0  |   87  |  [193,32,32,32,36]  |
   991  |                         j = j + 1;  |         |  176  |    193  |  0  |   88  |  [193,32,32,32,36]  |
   992  |              resetPlaceHolder_2();  |         |  176  |    193  |  0  |   88  |  [193,32,32,32,36]  |
   998  |                         R = R + 2;  |      2  |  178  |    193  |  0  |   88  |  [193,32,32,32,36]  |
  1002  |                         j = j + 1;  |         |  178  |    193  |  0  |   89  |  [193,32,32,32,36]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |    193  |  0  |   89  |  [193,32,32,32,36]  |
  1009  |                         R = R + 2;  |      2  |  180  |    193  |  0  |   89  |  [193,32,32,32,36]  |
  1013  |                         j = j + 1;  |         |  180  |    193  |  0  |   90  |  [193,32,32,32,36]  |
  1014  |              resetPlaceHolder_2();  |         |  180  |    193  |  0  |   90  |  [193,32,32,32,36]  |
  1020  |                         R = R + 2;  |      2  |  182  |    193  |  0  |   90  |  [193,32,32,32,36]  |
  1024  |                         j = j + 1;  |         |  182  |    193  |  0  |   91  |  [193,32,32,32,36]  |
  1025  |              resetPlaceHolder_2();  |         |  182  |    193  |  0  |   91  |  [193,32,32,32,36]  |
  1031  |                         R = R + 2;  |      2  |  184  |    193  |  0  |   91  |  [193,32,32,32,36]  |
  1035  |                         j = j + 1;  |         |  184  |    193  |  0  |   92  |  [193,32,32,32,36]  |
  1036  |              resetPlaceHolder_2();  |         |  184  |    193  |  0  |   92  |  [193,32,32,32,36]  |
  1042  |                         R = R + 2;  |      2  |  186  |    193  |  0  |   92  |  [193,32,32,32,36]  |
  1046  |                         j = j + 1;  |         |  186  |    193  |  0  |   93  |  [193,32,32,32,36]  |
  1047  |              resetPlaceHolder_2();  |         |  186  |    193  |  0  |   93  |  [193,32,32,32,36]  |
  1053  |                         R = R + 2;  |      2  |  188  |    193  |  0  |   93  |  [193,32,32,32,36]  |
  1057  |                         j = j + 1;  |         |  188  |    193  |  0  |   94  |  [193,32,32,32,36]  |
  1058  |              resetPlaceHolder_2();  |         |  188  |    193  |  0  |   94  |  [193,32,32,32,36]  |
  1064  |                         R = R + 2;  |      2  |  190  |    193  |  0  |   94  |  [193,32,32,32,36]  |
  1068  |                         j = j + 1;  |         |  190  |    193  |  0  |   95  |  [193,32,32,32,36]  |
  1069  |              resetPlaceHolder_2();  |         |  190  |    193  |  0  |   95  |  [193,32,32,32,36]  |
  1075  |                         R = R + 2;  |      2  |  192  |    193  |  0  |   95  |  [193,32,32,32,36]  |
  1079  |                         j = j + 1;  |         |  192  |    193  |  0  |   96  |  [193,32,32,32,36]  |
  1080  |              resetPlaceHolder_2();  |         |  192  |    193  |  0  |   96  |  [193,32,32,32,36]  |
  1086  |                         R = R + 2;  |      2  |  194  |    193  |  0  |   96  |  [193,32,32,32,36]  |
  1090  |                         j = j + 1;  |         |  194  |    193  |  0  |   97  |  [193,32,32,32,36]  |
  1091  |              resetPlaceHolder_2();  |         |  194  |    193  |  0  |   97  |  [193,32,32,32,36]  |
  1097  |                         R = R + 2;  |      2  |  196  |    193  |  0  |   97  |  [193,32,32,32,36]  |
  1101  |                         j = j + 1;  |         |  196  |    193  |  0  |   98  |  [193,32,32,32,36]  |
  1102  |              resetPlaceHolder_2();  |         |  196  |    193  |  0  |   98  |  [193,32,32,32,36]  |
  1108  |                         R = R + 2;  |      2  |  198  |    193  |  0  |   98  |  [193,32,32,32,36]  |
  1112  |                         j = j + 1;  |         |  198  |    193  |  0  |   99  |  [193,32,32,32,36]  |
  1113  |              resetPlaceHolder_2();  |         |  198  |    193  |  0  |   99  |  [193,32,32,32,36]  |
  1119  |                         R = R + 2;  |      2  |  200  |    193  |  0  |   99  |  [193,32,32,32,36]  |
  1123  |                         j = j + 1;  |         |  200  |    193  |  0  |  100  |  [193,32,32,32,36]  |
  1124  |              resetPlaceHolder_2();  |         |  200  |    193  |  0  |  100  |  [193,32,32,32,36]  |
  1130  |                         R = R + 2;  |      2  |  202  |    193  |  0  |  100  |  [193,32,32,32,36]  |
  1134  |                         j = j + 1;  |         |  202  |    193  |  0  |  101  |  [193,32,32,32,36]  |
  1135  |              resetPlaceHolder_2();  |         |  202  |    193  |  0  |  101  |  [193,32,32,32,36]  |
  1141  |                         R = R + 2;  |      2  |  204  |    193  |  0  |  101  |  [193,32,32,32,36]  |
  1145  |                         j = j + 1;  |         |  204  |    193  |  0  |  102  |  [193,32,32,32,36]  |
  1146  |              resetPlaceHolder_2();  |         |  204  |    193  |  0  |  102  |  [193,32,32,32,36]  |
  1152  |                         R = R + 2;  |      2  |  206  |    193  |  0  |  102  |  [193,32,32,32,36]  |
  1156  |                         j = j + 1;  |         |  206  |    193  |  0  |  103  |  [193,32,32,32,36]  |
  1157  |              resetPlaceHolder_2();  |         |  206  |    193  |  0  |  103  |  [193,32,32,32,36]  |
  1163  |                         R = R + 2;  |      2  |  208  |    193  |  0  |  103  |  [193,32,32,32,36]  |
  1167  |                         j = j + 1;  |         |  208  |    193  |  0  |  104  |  [193,32,32,32,36]  |
  1168  |              resetPlaceHolder_2();  |         |  208  |    193  |  0  |  104  |  [193,32,32,32,36]  |
  1174  |                         R = R + 2;  |      2  |  210  |    193  |  0  |  104  |  [193,32,32,32,36]  |
  1178  |                         j = j + 1;  |         |  210  |    193  |  0  |  105  |  [193,32,32,32,36]  |
  1179  |              resetPlaceHolder_2();  |         |  210  |    193  |  0  |  105  |  [193,32,32,32,36]  |
  1185  |                         R = R + 2;  |      2  |  212  |    193  |  0  |  105  |  [193,32,32,32,36]  |
  1189  |                         j = j + 1;  |         |  212  |    193  |  0  |  106  |  [193,32,32,32,36]  |
  1190  |              resetPlaceHolder_2();  |         |  212  |    193  |  0  |  106  |  [193,32,32,32,36]  |
  1196  |                         R = R + 2;  |      2  |  214  |    193  |  0  |  106  |  [193,32,32,32,36]  |
  1200  |                         j = j + 1;  |         |  214  |    193  |  0  |  107  |  [193,32,32,32,36]  |
  1201  |              resetPlaceHolder_2();  |         |  214  |    193  |  0  |  107  |  [193,32,32,32,36]  |
  1207  |                         R = R + 2;  |      2  |  216  |    193  |  0  |  107  |  [193,32,32,32,36]  |
  1211  |                         j = j + 1;  |         |  216  |    193  |  0  |  108  |  [193,32,32,32,36]  |
  1212  |              resetPlaceHolder_2();  |         |  216  |    193  |  0  |  108  |  [193,32,32,32,36]  |
  1218  |                         R = R + 2;  |      2  |  218  |    193  |  0  |  108  |  [193,32,32,32,36]  |
  1222  |                         j = j + 1;  |         |  218  |    193  |  0  |  109  |  [193,32,32,32,36]  |
  1223  |              resetPlaceHolder_2();  |         |  218  |    193  |  0  |  109  |  [193,32,32,32,36]  |
  1229  |                         R = R + 2;  |      2  |  220  |    193  |  0  |  109  |  [193,32,32,32,36]  |
  1233  |                         j = j + 1;  |         |  220  |    193  |  0  |  110  |  [193,32,32,32,36]  |
  1234  |              resetPlaceHolder_2();  |         |  220  |    193  |  0  |  110  |  [193,32,32,32,36]  |
  1240  |                         R = R + 2;  |      2  |  222  |    193  |  0  |  110  |  [193,32,32,32,36]  |
  1244  |                         j = j + 1;  |         |  222  |    193  |  0  |  111  |  [193,32,32,32,36]  |
  1245  |              resetPlaceHolder_2();  |         |  222  |    193  |  0  |  111  |  [193,32,32,32,36]  |
  1251  |                         R = R + 2;  |      2  |  224  |    193  |  0  |  111  |  [193,32,32,32,36]  |
  1255  |                         j = j + 1;  |         |  224  |    193  |  0  |  112  |  [193,32,32,32,36]  |
  1256  |              resetPlaceHolder_2();  |         |  224  |    193  |  0  |  112  |  [193,32,32,32,36]  |
  1262  |                         R = R + 2;  |      2  |  226  |    193  |  0  |  112  |  [193,32,32,32,36]  |
  1266  |                         j = j + 1;  |         |  226  |    193  |  0  |  113  |  [193,32,32,32,36]  |
  1267  |              resetPlaceHolder_2();  |         |  226  |    193  |  0  |  113  |  [193,32,32,32,36]  |
  1273  |                         R = R + 2;  |      2  |  228  |    193  |  0  |  113  |  [193,32,32,32,36]  |
  1277  |                         j = j + 1;  |         |  228  |    193  |  0  |  114  |  [193,32,32,32,36]  |
  1278  |              resetPlaceHolder_2();  |         |  228  |    193  |  0  |  114  |  [193,32,32,32,36]  |
  1284  |                         R = R + 2;  |      2  |  230  |    193  |  0  |  114  |  [193,32,32,32,36]  |
  1288  |                         j = j + 1;  |         |  230  |    193  |  0  |  115  |  [193,32,32,32,36]  |
  1289  |              resetPlaceHolder_2();  |         |  230  |    193  |  0  |  115  |  [193,32,32,32,36]  |
  1295  |                         R = R + 2;  |      2  |  232  |    193  |  0  |  115  |  [193,32,32,32,36]  |
  1299  |                         j = j + 1;  |         |  232  |    193  |  0  |  116  |  [193,32,32,32,36]  |
  1300  |              resetPlaceHolder_2();  |         |  232  |    193  |  0  |  116  |  [193,32,32,32,36]  |
  1306  |                         R = R + 2;  |      2  |  234  |    193  |  0  |  116  |  [193,32,32,32,36]  |
  1310  |                         j = j + 1;  |         |  234  |    193  |  0  |  117  |  [193,32,32,32,36]  |
  1311  |              resetPlaceHolder_2();  |         |  234  |    193  |  0  |  117  |  [193,32,32,32,36]  |
  1317  |                         R = R + 2;  |      2  |  236  |    193  |  0  |  117  |  [193,32,32,32,36]  |
  1321  |                         j = j + 1;  |         |  236  |    193  |  0  |  118  |  [193,32,32,32,36]  |
  1322  |              resetPlaceHolder_2();  |         |  236  |    193  |  0  |  118  |  [193,32,32,32,36]  |
  1328  |                         R = R + 2;  |      2  |  238  |    193  |  0  |  118  |  [193,32,32,32,36]  |
  1332  |                         j = j + 1;  |         |  238  |    193  |  0  |  119  |  [193,32,32,32,36]  |
  1333  |              resetPlaceHolder_2();  |         |  238  |    193  |  0  |  119  |  [193,32,32,32,36]  |
  1339  |                         R = R + 2;  |      2  |  240  |    193  |  0  |  119  |  [193,32,32,32,36]  |
  1343  |                         j = j + 1;  |         |  240  |    193  |  0  |  120  |  [193,32,32,32,36]  |
  1344  |              resetPlaceHolder_2();  |         |  240  |    193  |  0  |  120  |  [193,32,32,32,36]  |
  1350  |                         R = R + 2;  |      2  |  242  |    193  |  0  |  120  |  [193,32,32,32,36]  |
  1354  |                         j = j + 1;  |         |  242  |    193  |  0  |  121  |  [193,32,32,32,36]  |
  1355  |              resetPlaceHolder_2();  |         |  242  |    193  |  0  |  121  |  [193,32,32,32,36]  |
  1361  |                         R = R + 2;  |      2  |  244  |    193  |  0  |  121  |  [193,32,32,32,36]  |
  1365  |                         j = j + 1;  |         |  244  |    193  |  0  |  122  |  [193,32,32,32,36]  |
  1366  |              resetPlaceHolder_2();  |         |  244  |    193  |  0  |  122  |  [193,32,32,32,36]  |
  1372  |                         R = R + 2;  |      2  |  246  |    193  |  0  |  122  |  [193,32,32,32,36]  |
  1376  |                         j = j + 1;  |         |  246  |    193  |  0  |  123  |  [193,32,32,32,36]  |
  1377  |              resetPlaceHolder_2();  |         |  246  |    193  |  0  |  123  |  [193,32,32,32,36]  |
  1383  |                         R = R + 2;  |      2  |  248  |    193  |  0  |  123  |  [193,32,32,32,36]  |
  1387  |                         j = j + 1;  |         |  248  |    193  |  0  |  124  |  [193,32,32,32,36]  |
  1388  |              resetPlaceHolder_2();  |         |  248  |    193  |  0  |  124  |  [193,32,32,32,36]  |
  1394  |                         R = R + 2;  |      2  |  250  |    193  |  0  |  124  |  [193,32,32,32,36]  |
  1398  |                         j = j + 1;  |         |  250  |    193  |  0  |  125  |  [193,32,32,32,36]  |
  1399  |              resetPlaceHolder_2();  |         |  250  |    193  |  0  |  125  |  [193,32,32,32,36]  |
  1405  |                         R = R + 2;  |      2  |  252  |    193  |  0  |  125  |  [193,32,32,32,36]  |
  1409  |                         j = j + 1;  |         |  252  |    193  |  0  |  126  |  [193,32,32,32,36]  |
  1410  |              resetPlaceHolder_2();  |         |  252  |    193  |  0  |  126  |  [193,32,32,32,36]  |
  1416  |                         R = R + 2;  |      2  |  254  |    193  |  0  |  126  |  [193,32,32,32,36]  |
  1420  |                         j = j + 1;  |         |  254  |    193  |  0  |  127  |  [193,32,32,32,36]  |
  1421  |              resetPlaceHolder_2();  |         |  254  |    193  |  0  |  127  |  [193,32,32,32,36]  |
  1427  |                         R = R + 2;  |      2  |  256  |    193  |  0  |  127  |  [193,32,32,32,36]  |
  1431  |                         j = j + 1;  |         |  256  |    193  |  0  |  128  |  [193,32,32,32,36]  |
  1432  |              resetPlaceHolder_2();  |         |  256  |    193  |  0  |  128  |  [193,32,32,32,36]  |
  1438  |                         R = R + 2;  |      2  |  258  |    193  |  0  |  128  |  [193,32,32,32,36]  |
  1442  |                         j = j + 1;  |         |  258  |    193  |  0  |  129  |  [193,32,32,32,36]  |
  1443  |              resetPlaceHolder_2();  |         |  258  |    193  |  0  |  129  |  [193,32,32,32,36]  |
  1449  |                         R = R + 2;  |      2  |  260  |    193  |  0  |  129  |  [193,32,32,32,36]  |
  1453  |                         j = j + 1;  |         |  260  |    193  |  0  |  130  |  [193,32,32,32,36]  |
  1454  |              resetPlaceHolder_2();  |         |  260  |    193  |  0  |  130  |  [193,32,32,32,36]  |
  1460  |                         R = R + 2;  |      2  |  262  |    193  |  0  |  130  |  [193,32,32,32,36]  |
  1464  |                         j = j + 1;  |         |  262  |    193  |  0  |  131  |  [193,32,32,32,36]  |
  1465  |              resetPlaceHolder_2();  |         |  262  |    193  |  0  |  131  |  [193,32,32,32,36]  |
  1471  |                         R = R + 2;  |      2  |  264  |    193  |  0  |  131  |  [193,32,32,32,36]  |
  1475  |                         j = j + 1;  |         |  264  |    193  |  0  |  132  |  [193,32,32,32,36]  |
  1476  |              resetPlaceHolder_2();  |         |  264  |    193  |  0  |  132  |  [193,32,32,32,36]  |
  1482  |                         R = R + 2;  |      2  |  266  |    193  |  0  |  132  |  [193,32,32,32,36]  |
  1486  |                         j = j + 1;  |         |  266  |    193  |  0  |  133  |  [193,32,32,32,36]  |
  1487  |              resetPlaceHolder_2();  |         |  266  |    193  |  0  |  133  |  [193,32,32,32,36]  |
  1493  |                         R = R + 2;  |      2  |  268  |    193  |  0  |  133  |  [193,32,32,32,36]  |
  1497  |                         j = j + 1;  |         |  268  |    193  |  0  |  134  |  [193,32,32,32,36]  |
  1498  |              resetPlaceHolder_2();  |         |  268  |    193  |  0  |  134  |  [193,32,32,32,36]  |
  1504  |                         R = R + 2;  |      2  |  270  |    193  |  0  |  134  |  [193,32,32,32,36]  |
  1508  |                         j = j + 1;  |         |  270  |    193  |  0  |  135  |  [193,32,32,32,36]  |
  1509  |              resetPlaceHolder_2();  |         |  270  |    193  |  0  |  135  |  [193,32,32,32,36]  |
  1515  |                         R = R + 2;  |      2  |  272  |    193  |  0  |  135  |  [193,32,32,32,36]  |
  1519  |                         j = j + 1;  |         |  272  |    193  |  0  |  136  |  [193,32,32,32,36]  |
  1520  |              resetPlaceHolder_2();  |         |  272  |    193  |  0  |  136  |  [193,32,32,32,36]  |
  1526  |                         R = R + 2;  |      2  |  274  |    193  |  0  |  136  |  [193,32,32,32,36]  |
  1530  |                         j = j + 1;  |         |  274  |    193  |  0  |  137  |  [193,32,32,32,36]  |
  1531  |              resetPlaceHolder_2();  |         |  274  |    193  |  0  |  137  |  [193,32,32,32,36]  |
  1537  |                         R = R + 2;  |      2  |  276  |    193  |  0  |  137  |  [193,32,32,32,36]  |
  1541  |                         j = j + 1;  |         |  276  |    193  |  0  |  138  |  [193,32,32,32,36]  |
  1542  |              resetPlaceHolder_2();  |         |  276  |    193  |  0  |  138  |  [193,32,32,32,36]  |
  1548  |                         R = R + 2;  |      2  |  278  |    193  |  0  |  138  |  [193,32,32,32,36]  |
  1552  |                         j = j + 1;  |         |  278  |    193  |  0  |  139  |  [193,32,32,32,36]  |
  1553  |              resetPlaceHolder_2();  |         |  278  |    193  |  0  |  139  |  [193,32,32,32,36]  |
  1559  |                         R = R + 2;  |      2  |  280  |    193  |  0  |  139  |  [193,32,32,32,36]  |
  1563  |                         j = j + 1;  |         |  280  |    193  |  0  |  140  |  [193,32,32,32,36]  |
  1564  |              resetPlaceHolder_2();  |         |  280  |    193  |  0  |  140  |  [193,32,32,32,36]  |
  1570  |                         R = R + 2;  |      2  |  282  |    193  |  0  |  140  |  [193,32,32,32,36]  |
  1574  |                         j = j + 1;  |         |  282  |    193  |  0  |  141  |  [193,32,32,32,36]  |
  1575  |              resetPlaceHolder_2();  |         |  282  |    193  |  0  |  141  |  [193,32,32,32,36]  |
  1581  |                         R = R + 2;  |      2  |  284  |    193  |  0  |  141  |  [193,32,32,32,36]  |
  1585  |                         j = j + 1;  |         |  284  |    193  |  0  |  142  |  [193,32,32,32,36]  |
  1586  |              resetPlaceHolder_2();  |         |  284  |    193  |  0  |  142  |  [193,32,32,32,36]  |
  1592  |                         R = R + 2;  |      2  |  286  |    193  |  0  |  142  |  [193,32,32,32,36]  |
  1596  |                         j = j + 1;  |         |  286  |    193  |  0  |  143  |  [193,32,32,32,36]  |
  1597  |              resetPlaceHolder_2();  |         |  286  |    193  |  0  |  143  |  [193,32,32,32,36]  |
  1603  |                         R = R + 2;  |      2  |  288  |    193  |  0  |  143  |  [193,32,32,32,36]  |
  1607  |                         j = j + 1;  |         |  288  |    193  |  0  |  144  |  [193,32,32,32,36]  |
  1608  |              resetPlaceHolder_2();  |         |  288  |    193  |  0  |  144  |  [193,32,32,32,36]  |
  1614  |                         R = R + 2;  |      2  |  290  |    193  |  0  |  144  |  [193,32,32,32,36]  |
  1618  |                         j = j + 1;  |         |  290  |    193  |  0  |  145  |  [193,32,32,32,36]  |
  1619  |              resetPlaceHolder_2();  |         |  290  |    193  |  0  |  145  |  [193,32,32,32,36]  |
  1625  |                         R = R + 2;  |      2  |  292  |    193  |  0  |  145  |  [193,32,32,32,36]  |
  1629  |                         j = j + 1;  |         |  292  |    193  |  0  |  146  |  [193,32,32,32,36]  |
  1630  |              resetPlaceHolder_2();  |         |  292  |    193  |  0  |  146  |  [193,32,32,32,36]  |
  1636  |                         R = R + 2;  |      2  |  294  |    193  |  0  |  146  |  [193,32,32,32,36]  |
  1640  |                         j = j + 1;  |         |  294  |    193  |  0  |  147  |  [193,32,32,32,36]  |
  1641  |              resetPlaceHolder_2();  |         |  294  |    193  |  0  |  147  |  [193,32,32,32,36]  |
  1647  |                         R = R + 2;  |      2  |  296  |    193  |  0  |  147  |  [193,32,32,32,36]  |
  1651  |                         j = j + 1;  |         |  296  |    193  |  0  |  148  |  [193,32,32,32,36]  |
  1652  |              resetPlaceHolder_2();  |         |  296  |    193  |  0  |  148  |  [193,32,32,32,36]  |
  1658  |                         R = R + 2;  |      2  |  298  |    193  |  0  |  148  |  [193,32,32,32,36]  |
  1662  |                         j = j + 1;  |         |  298  |    193  |  0  |  149  |  [193,32,32,32,36]  |
  1663  |              resetPlaceHolder_2();  |         |  298  |    193  |  0  |  149  |  [193,32,32,32,36]  |
  1669  |                         R = R + 2;  |      2  |  300  |    193  |  0  |  149  |  [193,32,32,32,36]  |
  1673  |                         j = j + 1;  |         |  300  |    193  |  0  |  150  |  [193,32,32,32,36]  |
  1674  |              resetPlaceHolder_2();  |         |  300  |    193  |  0  |  150  |  [193,32,32,32,36]  |
  1680  |                         R = R + 2;  |      2  |  302  |    193  |  0  |  150  |  [193,32,32,32,36]  |
  1684  |                         j = j + 1;  |         |  302  |    193  |  0  |  151  |  [193,32,32,32,36]  |
  1685  |              resetPlaceHolder_2();  |         |  302  |    193  |  0  |  151  |  [193,32,32,32,36]  |
  1691  |                         R = R + 2;  |      2  |  304  |    193  |  0  |  151  |  [193,32,32,32,36]  |
  1695  |                         j = j + 1;  |         |  304  |    193  |  0  |  152  |  [193,32,32,32,36]  |
  1696  |              resetPlaceHolder_2();  |         |  304  |    193  |  0  |  152  |  [193,32,32,32,36]  |
  1702  |                         R = R + 2;  |      2  |  306  |    193  |  0  |  152  |  [193,32,32,32,36]  |
  1706  |                         j = j + 1;  |         |  306  |    193  |  0  |  153  |  [193,32,32,32,36]  |
  1707  |              resetPlaceHolder_2();  |         |  306  |    193  |  0  |  153  |  [193,32,32,32,36]  |
  1713  |                         R = R + 2;  |      2  |  308  |    193  |  0  |  153  |  [193,32,32,32,36]  |
  1717  |                         j = j + 1;  |         |  308  |    193  |  0  |  154  |  [193,32,32,32,36]  |
  1718  |              resetPlaceHolder_2();  |         |  308  |    193  |  0  |  154  |  [193,32,32,32,36]  |
  1724  |                         R = R + 2;  |      2  |  310  |    193  |  0  |  154  |  [193,32,32,32,36]  |
  1728  |                         j = j + 1;  |         |  310  |    193  |  0  |  155  |  [193,32,32,32,36]  |
  1729  |              resetPlaceHolder_2();  |         |  310  |    193  |  0  |  155  |  [193,32,32,32,36]  |
  1735  |                         R = R + 2;  |      2  |  312  |    193  |  0  |  155  |  [193,32,32,32,36]  |
  1739  |                         j = j + 1;  |         |  312  |    193  |  0  |  156  |  [193,32,32,32,36]  |
  1740  |              resetPlaceHolder_2();  |         |  312  |    193  |  0  |  156  |  [193,32,32,32,36]  |
  1746  |                         R = R + 2;  |      2  |  314  |    193  |  0  |  156  |  [193,32,32,32,36]  |
  1750  |                         j = j + 1;  |         |  314  |    193  |  0  |  157  |  [193,32,32,32,36]  |
  1751  |              resetPlaceHolder_2();  |         |  314  |    193  |  0  |  157  |  [193,32,32,32,36]  |
  1757  |                         R = R + 2;  |      2  |  316  |    193  |  0  |  157  |  [193,32,32,32,36]  |
  1761  |                         j = j + 1;  |         |  316  |    193  |  0  |  158  |  [193,32,32,32,36]  |
  1762  |              resetPlaceHolder_2();  |         |  316  |    193  |  0  |  158  |  [193,32,32,32,36]  |
  1768  |                         R = R + 2;  |      2  |  318  |    193  |  0  |  158  |  [193,32,32,32,36]  |
  1772  |                         j = j + 1;  |         |  318  |    193  |  0  |  159  |  [193,32,32,32,36]  |
  1773  |              resetPlaceHolder_2();  |         |  318  |    193  |  0  |  159  |  [193,32,32,32,36]  |
  1779  |                         R = R + 2;  |      2  |  320  |    193  |  0  |  159  |  [193,32,32,32,36]  |
  1783  |                         j = j + 1;  |         |  320  |    193  |  0  |  160  |  [193,32,32,32,36]  |
  1784  |              resetPlaceHolder_2();  |         |  320  |    193  |  0  |  160  |  [193,32,32,32,36]  |
  1790  |                         R = R + 2;  |      2  |  322  |    193  |  0  |  160  |  [193,32,32,32,36]  |
  1794  |                         j = j + 1;  |         |  322  |    193  |  0  |  161  |  [193,32,32,32,36]  |
  1795  |              resetPlaceHolder_2();  |         |  322  |    193  |  0  |  161  |  [193,32,32,32,36]  |
  1801  |                         R = R + 2;  |      2  |  324  |    193  |  0  |  161  |  [193,32,32,32,36]  |
  1805  |                         j = j + 1;  |         |  324  |    193  |  0  |  162  |  [193,32,32,32,36]  |
  1806  |              resetPlaceHolder_2();  |         |  324  |    193  |  0  |  162  |  [193,32,32,32,36]  |
  1812  |                         R = R + 2;  |      2  |  326  |    193  |  0  |  162  |  [193,32,32,32,36]  |
  1816  |                         j = j + 1;  |         |  326  |    193  |  0  |  163  |  [193,32,32,32,36]  |
  1817  |              resetPlaceHolder_2();  |         |  326  |    193  |  0  |  163  |  [193,32,32,32,36]  |
  1823  |                         R = R + 2;  |      2  |  328  |    193  |  0  |  163  |  [193,32,32,32,36]  |
  1827  |                         j = j + 1;  |         |  328  |    193  |  0  |  164  |  [193,32,32,32,36]  |
  1828  |              resetPlaceHolder_2();  |         |  328  |    193  |  0  |  164  |  [193,32,32,32,36]  |
  1834  |                         R = R + 2;  |      2  |  330  |    193  |  0  |  164  |  [193,32,32,32,36]  |
  1838  |                         j = j + 1;  |         |  330  |    193  |  0  |  165  |  [193,32,32,32,36]  |
  1839  |              resetPlaceHolder_2();  |         |  330  |    193  |  0  |  165  |  [193,32,32,32,36]  |
  1845  |                         R = R + 2;  |      2  |  332  |    193  |  0  |  165  |  [193,32,32,32,36]  |
  1849  |                         j = j + 1;  |         |  332  |    193  |  0  |  166  |  [193,32,32,32,36]  |
  1850  |              resetPlaceHolder_2();  |         |  332  |    193  |  0  |  166  |  [193,32,32,32,36]  |
  1856  |                         R = R + 2;  |      2  |  334  |    193  |  0  |  166  |  [193,32,32,32,36]  |
  1860  |                         j = j + 1;  |         |  334  |    193  |  0  |  167  |  [193,32,32,32,36]  |
  1861  |              resetPlaceHolder_2();  |         |  334  |    193  |  0  |  167  |  [193,32,32,32,36]  |
  1867  |                         R = R + 2;  |      2  |  336  |    193  |  0  |  167  |  [193,32,32,32,36]  |
  1871  |                         j = j + 1;  |         |  336  |    193  |  0  |  168  |  [193,32,32,32,36]  |
  1872  |              resetPlaceHolder_2();  |         |  336  |    193  |  0  |  168  |  [193,32,32,32,36]  |
  1878  |                         R = R + 2;  |      2  |  338  |    193  |  0  |  168  |  [193,32,32,32,36]  |
  1882  |                         j = j + 1;  |         |  338  |    193  |  0  |  169  |  [193,32,32,32,36]  |
  1883  |              resetPlaceHolder_2();  |         |  338  |    193  |  0  |  169  |  [193,32,32,32,36]  |
  1889  |                         R = R + 2;  |      2  |  340  |    193  |  0  |  169  |  [193,32,32,32,36]  |
  1893  |                         j = j + 1;  |         |  340  |    193  |  0  |  170  |  [193,32,32,32,36]  |
  1894  |              resetPlaceHolder_2();  |         |  340  |    193  |  0  |  170  |  [193,32,32,32,36]  |
  1900  |                         R = R + 2;  |      2  |  342  |    193  |  0  |  170  |  [193,32,32,32,36]  |
  1904  |                         j = j + 1;  |         |  342  |    193  |  0  |  171  |  [193,32,32,32,36]  |
  1905  |              resetPlaceHolder_2();  |         |  342  |    193  |  0  |  171  |  [193,32,32,32,36]  |
  1911  |                         R = R + 2;  |      2  |  344  |    193  |  0  |  171  |  [193,32,32,32,36]  |
  1915  |                         j = j + 1;  |         |  344  |    193  |  0  |  172  |  [193,32,32,32,36]  |
  1916  |              resetPlaceHolder_2();  |         |  344  |    193  |  0  |  172  |  [193,32,32,32,36]  |
  1922  |                         R = R + 2;  |      2  |  346  |    193  |  0  |  172  |  [193,32,32,32,36]  |
  1926  |                         j = j + 1;  |         |  346  |    193  |  0  |  173  |  [193,32,32,32,36]  |
  1927  |              resetPlaceHolder_2();  |         |  346  |    193  |  0  |  173  |  [193,32,32,32,36]  |
  1933  |                         R = R + 2;  |      2  |  348  |    193  |  0  |  173  |  [193,32,32,32,36]  |
  1937  |                         j = j + 1;  |         |  348  |    193  |  0  |  174  |  [193,32,32,32,36]  |
  1938  |              resetPlaceHolder_2();  |         |  348  |    193  |  0  |  174  |  [193,32,32,32,36]  |
  1944  |                         R = R + 2;  |      2  |  350  |    193  |  0  |  174  |  [193,32,32,32,36]  |
  1948  |                         j = j + 1;  |         |  350  |    193  |  0  |  175  |  [193,32,32,32,36]  |
  1949  |              resetPlaceHolder_2();  |         |  350  |    193  |  0  |  175  |  [193,32,32,32,36]  |
  1955  |                         R = R + 2;  |      2  |  352  |    193  |  0  |  175  |  [193,32,32,32,36]  |
  1959  |                         j = j + 1;  |         |  352  |    193  |  0  |  176  |  [193,32,32,32,36]  |
  1960  |              resetPlaceHolder_2();  |         |  352  |    193  |  0  |  176  |  [193,32,32,32,36]  |
  1966  |                         R = R + 2;  |      2  |  354  |    193  |  0  |  176  |  [193,32,32,32,36]  |
  1970  |                         j = j + 1;  |         |  354  |    193  |  0  |  177  |  [193,32,32,32,36]  |
  1971  |              resetPlaceHolder_2();  |         |  354  |    193  |  0  |  177  |  [193,32,32,32,36]  |
  1977  |                         R = R + 2;  |      2  |  356  |    193  |  0  |  177  |  [193,32,32,32,36]  |
  1981  |                         j = j + 1;  |         |  356  |    193  |  0  |  178  |  [193,32,32,32,36]  |
  1982  |              resetPlaceHolder_2();  |         |  356  |    193  |  0  |  178  |  [193,32,32,32,36]  |
  1988  |                         R = R + 2;  |      2  |  358  |    193  |  0  |  178  |  [193,32,32,32,36]  |
  1992  |                         j = j + 1;  |         |  358  |    193  |  0  |  179  |  [193,32,32,32,36]  |
  1993  |              resetPlaceHolder_2();  |         |  358  |    193  |  0  |  179  |  [193,32,32,32,36]  |
  1999  |                         R = R + 2;  |      2  |  360  |    193  |  0  |  179  |  [193,32,32,32,36]  |
  2003  |                         j = j + 1;  |         |  360  |    193  |  0  |  180  |  [193,32,32,32,36]  |
  2004  |              resetPlaceHolder_2();  |         |  360  |    193  |  0  |  180  |  [193,32,32,32,36]  |
  2010  |                         R = R + 2;  |      2  |  362  |    193  |  0  |  180  |  [193,32,32,32,36]  |
  2014  |                         j = j + 1;  |         |  362  |    193  |  0  |  181  |  [193,32,32,32,36]  |
  2015  |              resetPlaceHolder_2();  |         |  362  |    193  |  0  |  181  |  [193,32,32,32,36]  |
  2021  |                         R = R + 2;  |      2  |  364  |    193  |  0  |  181  |  [193,32,32,32,36]  |
  2025  |                         j = j + 1;  |         |  364  |    193  |  0  |  182  |  [193,32,32,32,36]  |
  2026  |              resetPlaceHolder_2();  |         |  364  |    193  |  0  |  182  |  [193,32,32,32,36]  |
  2032  |                         R = R + 2;  |      2  |  366  |    193  |  0  |  182  |  [193,32,32,32,36]  |
  2036  |                         j = j + 1;  |         |  366  |    193  |  0  |  183  |  [193,32,32,32,36]  |
  2037  |              resetPlaceHolder_2();  |         |  366  |    193  |  0  |  183  |  [193,32,32,32,36]  |
  2043  |                         R = R + 2;  |      2  |  368  |    193  |  0  |  183  |  [193,32,32,32,36]  |
  2047  |                         j = j + 1;  |         |  368  |    193  |  0  |  184  |  [193,32,32,32,36]  |
  2048  |              resetPlaceHolder_2();  |         |  368  |    193  |  0  |  184  |  [193,32,32,32,36]  |
  2054  |                         R = R + 2;  |      2  |  370  |    193  |  0  |  184  |  [193,32,32,32,36]  |
  2058  |                         j = j + 1;  |         |  370  |    193  |  0  |  185  |  [193,32,32,32,36]  |
  2059  |              resetPlaceHolder_2();  |         |  370  |    193  |  0  |  185  |  [193,32,32,32,36]  |
  2065  |                         R = R + 2;  |      2  |  372  |    193  |  0  |  185  |  [193,32,32,32,36]  |
  2069  |                         j = j + 1;  |         |  372  |    193  |  0  |  186  |  [193,32,32,32,36]  |
  2070  |              resetPlaceHolder_2();  |         |  372  |    193  |  0  |  186  |  [193,32,32,32,36]  |
  2076  |                         R = R + 2;  |      2  |  374  |    193  |  0  |  186  |  [193,32,32,32,36]  |
  2080  |                         j = j + 1;  |         |  374  |    193  |  0  |  187  |  [193,32,32,32,36]  |
  2081  |              resetPlaceHolder_2();  |         |  374  |    193  |  0  |  187  |  [193,32,32,32,36]  |
  2087  |                         R = R + 2;  |      2  |  376  |    193  |  0  |  187  |  [193,32,32,32,36]  |
  2091  |                         j = j + 1;  |         |  376  |    193  |  0  |  188  |  [193,32,32,32,36]  |
  2092  |              resetPlaceHolder_2();  |         |  376  |    193  |  0  |  188  |  [193,32,32,32,36]  |
  2098  |                         R = R + 2;  |      2  |  378  |    193  |  0  |  188  |  [193,32,32,32,36]  |
  2102  |                         j = j + 1;  |         |  378  |    193  |  0  |  189  |  [193,32,32,32,36]  |
  2103  |              resetPlaceHolder_2();  |         |  378  |    193  |  0  |  189  |  [193,32,32,32,36]  |
  2109  |                         R = R + 2;  |      2  |  380  |    193  |  0  |  189  |  [193,32,32,32,36]  |
  2113  |                         j = j + 1;  |         |  380  |    193  |  0  |  190  |  [193,32,32,32,36]  |
  2114  |              resetPlaceHolder_2();  |         |  380  |    193  |  0  |  190  |  [193,32,32,32,36]  |
  2120  |                         R = R + 2;  |      2  |  382  |    193  |  0  |  190  |  [193,32,32,32,36]  |
  2124  |                         j = j + 1;  |         |  382  |    193  |  0  |  191  |  [193,32,32,32,36]  |
  2125  |              resetPlaceHolder_2();  |         |  382  |    193  |  0  |  191  |  [193,32,32,32,36]  |
  2131  |                         R = R + 2;  |      2  |  384  |    193  |  0  |  191  |  [193,32,32,32,36]  |
  2135  |                         j = j + 1;  |         |  384  |    193  |  0  |  192  |  [193,32,32,32,36]  |
  2136  |              resetPlaceHolder_2();  |         |  384  |    193  |  0  |  192  |  [193,32,32,32,36]  |
  2142  |                         R = R + 2;  |      2  |  386  |    193  |  0  |  192  |  [193,32,32,32,36]  |
  2146  |                         j = j + 1;  |         |  386  |    193  |  0  |  193  |  [193,32,32,32,36]  |
  2147  |              resetPlaceHolder_2();  |         |  386  |    193  |  0  |  193  |  [193,32,32,32,36]  |
  2153  |                         R = R + 1;  |      1  |  387  |    193  |  0  |  193  |  [193,32,32,32,36]  |
  2157  |                         i = i + 1;  |         |  387  |    193  |  1  |  193  |  [193,32,32,32,36]  |
  2158  |              resetPlaceHolder_1();  |         |  387  |    193  |  1  |  193  |  [193,32,32,32,36]  |
  2164  |      entry = arrayRead(sorted, i);  |         |  387  |     32  |  1  |  193  |  [193,32,32,32,36]  |
  2166  |                         int j = 0;  |         |  387  |     32  |  1  |    0  |  [193,32,32,32,36]  |
  2172  |                         R = R + 2;  |      2  |  389  |     32  |  1  |    0  |  [193,32,32,32,36]  |
  2176  |                         j = j + 1;  |         |  389  |     32  |  1  |    1  |  [193,32,32,32,36]  |
  2177  |              resetPlaceHolder_2();  |         |  389  |     32  |  1  |    1  |  [193,32,32,32,36]  |
  2183  |                         R = R + 2;  |      2  |  391  |     32  |  1  |    1  |  [193,32,32,32,36]  |
  2187  |                         j = j + 1;  |         |  391  |     32  |  1  |    2  |  [193,32,32,32,36]  |
  2188  |              resetPlaceHolder_2();  |         |  391  |     32  |  1  |    2  |  [193,32,32,32,36]  |
  2194  |                         R = R + 2;  |      2  |  393  |     32  |  1  |    2  |  [193,32,32,32,36]  |
  2198  |                         j = j + 1;  |         |  393  |     32  |  1  |    3  |  [193,32,32,32,36]  |
  2199  |              resetPlaceHolder_2();  |         |  393  |     32  |  1  |    3  |  [193,32,32,32,36]  |
  2205  |                         R = R + 2;  |      2  |  395  |     32  |  1  |    3  |  [193,32,32,32,36]  |
  2209  |                         j = j + 1;  |         |  395  |     32  |  1  |    4  |  [193,32,32,32,36]  |
  2210  |              resetPlaceHolder_2();  |         |  395  |     32  |  1  |    4  |  [193,32,32,32,36]  |
  2216  |                         R = R + 2;  |      2  |  397  |     32  |  1  |    4  |  [193,32,32,32,36]  |
  2220  |                         j = j + 1;  |         |  397  |     32  |  1  |    5  |  [193,32,32,32,36]  |
  2221  |              resetPlaceHolder_2();  |         |  397  |     32  |  1  |    5  |  [193,32,32,32,36]  |
  2227  |                         R = R + 2;  |      2  |  399  |     32  |  1  |    5  |  [193,32,32,32,36]  |
  2231  |                         j = j + 1;  |         |  399  |     32  |  1  |    6  |  [193,32,32,32,36]  |
  2232  |              resetPlaceHolder_2();  |         |  399  |     32  |  1  |    6  |  [193,32,32,32,36]  |
  2238  |                         R = R + 2;  |      2  |  401  |     32  |  1  |    6  |  [193,32,32,32,36]  |
  2242  |                         j = j + 1;  |         |  401  |     32  |  1  |    7  |  [193,32,32,32,36]  |
  2243  |              resetPlaceHolder_2();  |         |  401  |     32  |  1  |    7  |  [193,32,32,32,36]  |
  2249  |                         R = R + 2;  |      2  |  403  |     32  |  1  |    7  |  [193,32,32,32,36]  |
  2253  |                         j = j + 1;  |         |  403  |     32  |  1  |    8  |  [193,32,32,32,36]  |
  2254  |              resetPlaceHolder_2();  |         |  403  |     32  |  1  |    8  |  [193,32,32,32,36]  |
  2260  |                         R = R + 2;  |      2  |  405  |     32  |  1  |    8  |  [193,32,32,32,36]  |
  2264  |                         j = j + 1;  |         |  405  |     32  |  1  |    9  |  [193,32,32,32,36]  |
  2265  |              resetPlaceHolder_2();  |         |  405  |     32  |  1  |    9  |  [193,32,32,32,36]  |
  2271  |                         R = R + 2;  |      2  |  407  |     32  |  1  |    9  |  [193,32,32,32,36]  |
  2275  |                         j = j + 1;  |         |  407  |     32  |  1  |   10  |  [193,32,32,32,36]  |
  2276  |              resetPlaceHolder_2();  |         |  407  |     32  |  1  |   10  |  [193,32,32,32,36]  |
  2282  |                         R = R + 2;  |      2  |  409  |     32  |  1  |   10  |  [193,32,32,32,36]  |
  2286  |                         j = j + 1;  |         |  409  |     32  |  1  |   11  |  [193,32,32,32,36]  |
  2287  |              resetPlaceHolder_2();  |         |  409  |     32  |  1  |   11  |  [193,32,32,32,36]  |
  2293  |                         R = R + 2;  |      2  |  411  |     32  |  1  |   11  |  [193,32,32,32,36]  |
  2297  |                         j = j + 1;  |         |  411  |     32  |  1  |   12  |  [193,32,32,32,36]  |
  2298  |              resetPlaceHolder_2();  |         |  411  |     32  |  1  |   12  |  [193,32,32,32,36]  |
  2304  |                         R = R + 2;  |      2  |  413  |     32  |  1  |   12  |  [193,32,32,32,36]  |
  2308  |                         j = j + 1;  |         |  413  |     32  |  1  |   13  |  [193,32,32,32,36]  |
  2309  |              resetPlaceHolder_2();  |         |  413  |     32  |  1  |   13  |  [193,32,32,32,36]  |
  2315  |                         R = R + 2;  |      2  |  415  |     32  |  1  |   13  |  [193,32,32,32,36]  |
  2319  |                         j = j + 1;  |         |  415  |     32  |  1  |   14  |  [193,32,32,32,36]  |
  2320  |              resetPlaceHolder_2();  |         |  415  |     32  |  1  |   14  |  [193,32,32,32,36]  |
  2326  |                         R = R + 2;  |      2  |  417  |     32  |  1  |   14  |  [193,32,32,32,36]  |
  2330  |                         j = j + 1;  |         |  417  |     32  |  1  |   15  |  [193,32,32,32,36]  |
  2331  |              resetPlaceHolder_2();  |         |  417  |     32  |  1  |   15  |  [193,32,32,32,36]  |
  2337  |                         R = R + 2;  |      2  |  419  |     32  |  1  |   15  |  [193,32,32,32,36]  |
  2341  |                         j = j + 1;  |         |  419  |     32  |  1  |   16  |  [193,32,32,32,36]  |
  2342  |              resetPlaceHolder_2();  |         |  419  |     32  |  1  |   16  |  [193,32,32,32,36]  |
  2348  |                         R = R + 2;  |      2  |  421  |     32  |  1  |   16  |  [193,32,32,32,36]  |
  2352  |                         j = j + 1;  |         |  421  |     32  |  1  |   17  |  [193,32,32,32,36]  |
  2353  |              resetPlaceHolder_2();  |         |  421  |     32  |  1  |   17  |  [193,32,32,32,36]  |
  2359  |                         R = R + 2;  |      2  |  423  |     32  |  1  |   17  |  [193,32,32,32,36]  |
  2363  |                         j = j + 1;  |         |  423  |     32  |  1  |   18  |  [193,32,32,32,36]  |
  2364  |              resetPlaceHolder_2();  |         |  423  |     32  |  1  |   18  |  [193,32,32,32,36]  |
  2370  |                         R = R + 2;  |      2  |  425  |     32  |  1  |   18  |  [193,32,32,32,36]  |
  2374  |                         j = j + 1;  |         |  425  |     32  |  1  |   19  |  [193,32,32,32,36]  |
  2375  |              resetPlaceHolder_2();  |         |  425  |     32  |  1  |   19  |  [193,32,32,32,36]  |
  2381  |                         R = R + 2;  |      2  |  427  |     32  |  1  |   19  |  [193,32,32,32,36]  |
  2385  |                         j = j + 1;  |         |  427  |     32  |  1  |   20  |  [193,32,32,32,36]  |
  2386  |              resetPlaceHolder_2();  |         |  427  |     32  |  1  |   20  |  [193,32,32,32,36]  |
  2392  |                         R = R + 2;  |      2  |  429  |     32  |  1  |   20  |  [193,32,32,32,36]  |
  2396  |                         j = j + 1;  |         |  429  |     32  |  1  |   21  |  [193,32,32,32,36]  |
  2397  |              resetPlaceHolder_2();  |         |  429  |     32  |  1  |   21  |  [193,32,32,32,36]  |
  2403  |                         R = R + 2;  |      2  |  431  |     32  |  1  |   21  |  [193,32,32,32,36]  |
  2407  |                         j = j + 1;  |         |  431  |     32  |  1  |   22  |  [193,32,32,32,36]  |
  2408  |              resetPlaceHolder_2();  |         |  431  |     32  |  1  |   22  |  [193,32,32,32,36]  |
  2414  |                         R = R + 2;  |      2  |  433  |     32  |  1  |   22  |  [193,32,32,32,36]  |
  2418  |                         j = j + 1;  |         |  433  |     32  |  1  |   23  |  [193,32,32,32,36]  |
  2419  |              resetPlaceHolder_2();  |         |  433  |     32  |  1  |   23  |  [193,32,32,32,36]  |
  2425  |                         R = R + 2;  |      2  |  435  |     32  |  1  |   23  |  [193,32,32,32,36]  |
  2429  |                         j = j + 1;  |         |  435  |     32  |  1  |   24  |  [193,32,32,32,36]  |
  2430  |              resetPlaceHolder_2();  |         |  435  |     32  |  1  |   24  |  [193,32,32,32,36]  |
  2436  |                         R = R + 2;  |      2  |  437  |     32  |  1  |   24  |  [193,32,32,32,36]  |
  2440  |                         j = j + 1;  |         |  437  |     32  |  1  |   25  |  [193,32,32,32,36]  |
  2441  |              resetPlaceHolder_2();  |         |  437  |     32  |  1  |   25  |  [193,32,32,32,36]  |
  2447  |                         R = R + 2;  |      2  |  439  |     32  |  1  |   25  |  [193,32,32,32,36]  |
  2451  |                         j = j + 1;  |         |  439  |     32  |  1  |   26  |  [193,32,32,32,36]  |
  2452  |              resetPlaceHolder_2();  |         |  439  |     32  |  1  |   26  |  [193,32,32,32,36]  |
  2458  |                         R = R + 2;  |      2  |  441  |     32  |  1  |   26  |  [193,32,32,32,36]  |
  2462  |                         j = j + 1;  |         |  441  |     32  |  1  |   27  |  [193,32,32,32,36]  |
  2463  |              resetPlaceHolder_2();  |         |  441  |     32  |  1  |   27  |  [193,32,32,32,36]  |
  2469  |                         R = R + 2;  |      2  |  443  |     32  |  1  |   27  |  [193,32,32,32,36]  |
  2473  |                         j = j + 1;  |         |  443  |     32  |  1  |   28  |  [193,32,32,32,36]  |
  2474  |              resetPlaceHolder_2();  |         |  443  |     32  |  1  |   28  |  [193,32,32,32,36]  |
  2480  |                         R = R + 2;  |      2  |  445  |     32  |  1  |   28  |  [193,32,32,32,36]  |
  2484  |                         j = j + 1;  |         |  445  |     32  |  1  |   29  |  [193,32,32,32,36]  |
  2485  |              resetPlaceHolder_2();  |         |  445  |     32  |  1  |   29  |  [193,32,32,32,36]  |
  2491  |                         R = R + 2;  |      2  |  447  |     32  |  1  |   29  |  [193,32,32,32,36]  |
  2495  |                         j = j + 1;  |         |  447  |     32  |  1  |   30  |  [193,32,32,32,36]  |
  2496  |              resetPlaceHolder_2();  |         |  447  |     32  |  1  |   30  |  [193,32,32,32,36]  |
  2502  |                         R = R + 2;  |      2  |  449  |     32  |  1  |   30  |  [193,32,32,32,36]  |
  2506  |                         j = j + 1;  |         |  449  |     32  |  1  |   31  |  [193,32,32,32,36]  |
  2507  |              resetPlaceHolder_2();  |         |  449  |     32  |  1  |   31  |  [193,32,32,32,36]  |
  2513  |                         R = R + 2;  |      2  |  451  |     32  |  1  |   31  |  [193,32,32,32,36]  |
  2517  |                         j = j + 1;  |         |  451  |     32  |  1  |   32  |  [193,32,32,32,36]  |
  2518  |              resetPlaceHolder_2();  |         |  451  |     32  |  1  |   32  |  [193,32,32,32,36]  |
  2524  |                         R = R + 1;  |      1  |  452  |     32  |  1  |   32  |  [193,32,32,32,36]  |
  2528  |                         i = i + 1;  |         |  452  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2529  |              resetPlaceHolder_1();  |         |  452  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2535  |      entry = arrayRead(sorted, i);  |         |  452  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2537  |                         int j = 0;  |         |  452  |     32  |  2  |    0  |  [193,32,32,32,36]  |
  2543  |                         R = R + 2;  |      2  |  454  |     32  |  2  |    0  |  [193,32,32,32,36]  |
  2547  |                         j = j + 1;  |         |  454  |     32  |  2  |    1  |  [193,32,32,32,36]  |
  2548  |              resetPlaceHolder_2();  |         |  454  |     32  |  2  |    1  |  [193,32,32,32,36]  |
  2554  |                         R = R + 2;  |      2  |  456  |     32  |  2  |    1  |  [193,32,32,32,36]  |
  2558  |                         j = j + 1;  |         |  456  |     32  |  2  |    2  |  [193,32,32,32,36]  |
  2559  |              resetPlaceHolder_2();  |         |  456  |     32  |  2  |    2  |  [193,32,32,32,36]  |
  2565  |                         R = R + 2;  |      2  |  458  |     32  |  2  |    2  |  [193,32,32,32,36]  |
  2569  |                         j = j + 1;  |         |  458  |     32  |  2  |    3  |  [193,32,32,32,36]  |
  2570  |              resetPlaceHolder_2();  |         |  458  |     32  |  2  |    3  |  [193,32,32,32,36]  |
  2576  |                         R = R + 2;  |      2  |  460  |     32  |  2  |    3  |  [193,32,32,32,36]  |
  2580  |                         j = j + 1;  |         |  460  |     32  |  2  |    4  |  [193,32,32,32,36]  |
  2581  |              resetPlaceHolder_2();  |         |  460  |     32  |  2  |    4  |  [193,32,32,32,36]  |
  2587  |                         R = R + 2;  |      2  |  462  |     32  |  2  |    4  |  [193,32,32,32,36]  |
  2591  |                         j = j + 1;  |         |  462  |     32  |  2  |    5  |  [193,32,32,32,36]  |
  2592  |              resetPlaceHolder_2();  |         |  462  |     32  |  2  |    5  |  [193,32,32,32,36]  |
  2598  |                         R = R + 2;  |      2  |  464  |     32  |  2  |    5  |  [193,32,32,32,36]  |
  2602  |                         j = j + 1;  |         |  464  |     32  |  2  |    6  |  [193,32,32,32,36]  |
  2603  |              resetPlaceHolder_2();  |         |  464  |     32  |  2  |    6  |  [193,32,32,32,36]  |
  2609  |                         R = R + 2;  |      2  |  466  |     32  |  2  |    6  |  [193,32,32,32,36]  |
  2613  |                         j = j + 1;  |         |  466  |     32  |  2  |    7  |  [193,32,32,32,36]  |
  2614  |              resetPlaceHolder_2();  |         |  466  |     32  |  2  |    7  |  [193,32,32,32,36]  |
  2620  |                         R = R + 2;  |      2  |  468  |     32  |  2  |    7  |  [193,32,32,32,36]  |
  2624  |                         j = j + 1;  |         |  468  |     32  |  2  |    8  |  [193,32,32,32,36]  |
  2625  |              resetPlaceHolder_2();  |         |  468  |     32  |  2  |    8  |  [193,32,32,32,36]  |
  2631  |                         R = R + 2;  |      2  |  470  |     32  |  2  |    8  |  [193,32,32,32,36]  |
  2635  |                         j = j + 1;  |         |  470  |     32  |  2  |    9  |  [193,32,32,32,36]  |
  2636  |              resetPlaceHolder_2();  |         |  470  |     32  |  2  |    9  |  [193,32,32,32,36]  |
  2642  |                         R = R + 2;  |      2  |  472  |     32  |  2  |    9  |  [193,32,32,32,36]  |
  2646  |                         j = j + 1;  |         |  472  |     32  |  2  |   10  |  [193,32,32,32,36]  |
  2647  |              resetPlaceHolder_2();  |         |  472  |     32  |  2  |   10  |  [193,32,32,32,36]  |
  2653  |                         R = R + 2;  |      2  |  474  |     32  |  2  |   10  |  [193,32,32,32,36]  |
  2657  |                         j = j + 1;  |         |  474  |     32  |  2  |   11  |  [193,32,32,32,36]  |
  2658  |              resetPlaceHolder_2();  |         |  474  |     32  |  2  |   11  |  [193,32,32,32,36]  |
  2664  |                         R = R + 2;  |      2  |  476  |     32  |  2  |   11  |  [193,32,32,32,36]  |
  2668  |                         j = j + 1;  |         |  476  |     32  |  2  |   12  |  [193,32,32,32,36]  |
  2669  |              resetPlaceHolder_2();  |         |  476  |     32  |  2  |   12  |  [193,32,32,32,36]  |
  2675  |                         R = R + 2;  |      2  |  478  |     32  |  2  |   12  |  [193,32,32,32,36]  |
  2679  |                         j = j + 1;  |         |  478  |     32  |  2  |   13  |  [193,32,32,32,36]  |
  2680  |              resetPlaceHolder_2();  |         |  478  |     32  |  2  |   13  |  [193,32,32,32,36]  |
  2686  |                         R = R + 2;  |      2  |  480  |     32  |  2  |   13  |  [193,32,32,32,36]  |
  2690  |                         j = j + 1;  |         |  480  |     32  |  2  |   14  |  [193,32,32,32,36]  |
  2691  |              resetPlaceHolder_2();  |         |  480  |     32  |  2  |   14  |  [193,32,32,32,36]  |
  2697  |                         R = R + 2;  |      2  |  482  |     32  |  2  |   14  |  [193,32,32,32,36]  |
  2701  |                         j = j + 1;  |         |  482  |     32  |  2  |   15  |  [193,32,32,32,36]  |
  2702  |              resetPlaceHolder_2();  |         |  482  |     32  |  2  |   15  |  [193,32,32,32,36]  |
  2708  |                         R = R + 2;  |      2  |  484  |     32  |  2  |   15  |  [193,32,32,32,36]  |
  2712  |                         j = j + 1;  |         |  484  |     32  |  2  |   16  |  [193,32,32,32,36]  |
  2713  |              resetPlaceHolder_2();  |         |  484  |     32  |  2  |   16  |  [193,32,32,32,36]  |
  2719  |                         R = R + 2;  |      2  |  486  |     32  |  2  |   16  |  [193,32,32,32,36]  |
  2723  |                         j = j + 1;  |         |  486  |     32  |  2  |   17  |  [193,32,32,32,36]  |
  2724  |              resetPlaceHolder_2();  |         |  486  |     32  |  2  |   17  |  [193,32,32,32,36]  |
  2730  |                         R = R + 2;  |      2  |  488  |     32  |  2  |   17  |  [193,32,32,32,36]  |
  2734  |                         j = j + 1;  |         |  488  |     32  |  2  |   18  |  [193,32,32,32,36]  |
  2735  |              resetPlaceHolder_2();  |         |  488  |     32  |  2  |   18  |  [193,32,32,32,36]  |
  2741  |                         R = R + 2;  |      2  |  490  |     32  |  2  |   18  |  [193,32,32,32,36]  |
  2745  |                         j = j + 1;  |         |  490  |     32  |  2  |   19  |  [193,32,32,32,36]  |
  2746  |              resetPlaceHolder_2();  |         |  490  |     32  |  2  |   19  |  [193,32,32,32,36]  |
  2752  |                         R = R + 2;  |      2  |  492  |     32  |  2  |   19  |  [193,32,32,32,36]  |
  2756  |                         j = j + 1;  |         |  492  |     32  |  2  |   20  |  [193,32,32,32,36]  |
  2757  |              resetPlaceHolder_2();  |         |  492  |     32  |  2  |   20  |  [193,32,32,32,36]  |
  2763  |                         R = R + 2;  |      2  |  494  |     32  |  2  |   20  |  [193,32,32,32,36]  |
  2767  |                         j = j + 1;  |         |  494  |     32  |  2  |   21  |  [193,32,32,32,36]  |
  2768  |              resetPlaceHolder_2();  |         |  494  |     32  |  2  |   21  |  [193,32,32,32,36]  |
  2774  |                         R = R + 2;  |      2  |  496  |     32  |  2  |   21  |  [193,32,32,32,36]  |
  2778  |                         j = j + 1;  |         |  496  |     32  |  2  |   22  |  [193,32,32,32,36]  |
  2779  |              resetPlaceHolder_2();  |         |  496  |     32  |  2  |   22  |  [193,32,32,32,36]  |
  2785  |                         R = R + 2;  |      2  |  498  |     32  |  2  |   22  |  [193,32,32,32,36]  |
  2789  |                         j = j + 1;  |         |  498  |     32  |  2  |   23  |  [193,32,32,32,36]  |
  2790  |              resetPlaceHolder_2();  |         |  498  |     32  |  2  |   23  |  [193,32,32,32,36]  |
  2796  |                         R = R + 2;  |      2  |  500  |     32  |  2  |   23  |  [193,32,32,32,36]  |
  2800  |                         j = j + 1;  |         |  500  |     32  |  2  |   24  |  [193,32,32,32,36]  |
  2801  |              resetPlaceHolder_2();  |         |  500  |     32  |  2  |   24  |  [193,32,32,32,36]  |
  2807  |                         R = R + 2;  |      2  |  502  |     32  |  2  |   24  |  [193,32,32,32,36]  |
  2811  |                         j = j + 1;  |         |  502  |     32  |  2  |   25  |  [193,32,32,32,36]  |
  2812  |              resetPlaceHolder_2();  |         |  502  |     32  |  2  |   25  |  [193,32,32,32,36]  |
  2818  |                         R = R + 2;  |      2  |  504  |     32  |  2  |   25  |  [193,32,32,32,36]  |
  2822  |                         j = j + 1;  |         |  504  |     32  |  2  |   26  |  [193,32,32,32,36]  |
  2823  |              resetPlaceHolder_2();  |         |  504  |     32  |  2  |   26  |  [193,32,32,32,36]  |
  2829  |                         R = R + 2;  |      2  |  506  |     32  |  2  |   26  |  [193,32,32,32,36]  |
  2833  |                         j = j + 1;  |         |  506  |     32  |  2  |   27  |  [193,32,32,32,36]  |
  2834  |              resetPlaceHolder_2();  |         |  506  |     32  |  2  |   27  |  [193,32,32,32,36]  |
  2840  |                         R = R + 2;  |      2  |  508  |     32  |  2  |   27  |  [193,32,32,32,36]  |
  2844  |                         j = j + 1;  |         |  508  |     32  |  2  |   28  |  [193,32,32,32,36]  |
  2845  |              resetPlaceHolder_2();  |         |  508  |     32  |  2  |   28  |  [193,32,32,32,36]  |
  2851  |                         R = R + 2;  |      2  |  510  |     32  |  2  |   28  |  [193,32,32,32,36]  |
  2855  |                         j = j + 1;  |         |  510  |     32  |  2  |   29  |  [193,32,32,32,36]  |
  2856  |              resetPlaceHolder_2();  |         |  510  |     32  |  2  |   29  |  [193,32,32,32,36]  |
  2862  |                         R = R + 2;  |      2  |  512  |     32  |  2  |   29  |  [193,32,32,32,36]  |
  2866  |                         j = j + 1;  |         |  512  |     32  |  2  |   30  |  [193,32,32,32,36]  |
  2867  |              resetPlaceHolder_2();  |         |  512  |     32  |  2  |   30  |  [193,32,32,32,36]  |
  2873  |                         R = R + 2;  |      2  |  514  |     32  |  2  |   30  |  [193,32,32,32,36]  |
  2877  |                         j = j + 1;  |         |  514  |     32  |  2  |   31  |  [193,32,32,32,36]  |
  2878  |              resetPlaceHolder_2();  |         |  514  |     32  |  2  |   31  |  [193,32,32,32,36]  |
  2884  |                         R = R + 2;  |      2  |  516  |     32  |  2  |   31  |  [193,32,32,32,36]  |
  2888  |                         j = j + 1;  |         |  516  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2889  |              resetPlaceHolder_2();  |         |  516  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2895  |                         R = R + 1;  |      1  |  517  |     32  |  2  |   32  |  [193,32,32,32,36]  |
  2899  |                         i = i + 1;  |         |  517  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  2900  |              resetPlaceHolder_1();  |         |  517  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  2906  |      entry = arrayRead(sorted, i);  |         |  517  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  2908  |                         int j = 0;  |         |  517  |     32  |  3  |    0  |  [193,32,32,32,36]  |
  2914  |                         R = R + 2;  |      2  |  519  |     32  |  3  |    0  |  [193,32,32,32,36]  |
  2918  |                         j = j + 1;  |         |  519  |     32  |  3  |    1  |  [193,32,32,32,36]  |
  2919  |              resetPlaceHolder_2();  |         |  519  |     32  |  3  |    1  |  [193,32,32,32,36]  |
  2925  |                         R = R + 2;  |      2  |  521  |     32  |  3  |    1  |  [193,32,32,32,36]  |
  2929  |                         j = j + 1;  |         |  521  |     32  |  3  |    2  |  [193,32,32,32,36]  |
  2930  |              resetPlaceHolder_2();  |         |  521  |     32  |  3  |    2  |  [193,32,32,32,36]  |
  2936  |                         R = R + 2;  |      2  |  523  |     32  |  3  |    2  |  [193,32,32,32,36]  |
  2940  |                         j = j + 1;  |         |  523  |     32  |  3  |    3  |  [193,32,32,32,36]  |
  2941  |              resetPlaceHolder_2();  |         |  523  |     32  |  3  |    3  |  [193,32,32,32,36]  |
  2947  |                         R = R + 2;  |      2  |  525  |     32  |  3  |    3  |  [193,32,32,32,36]  |
  2951  |                         j = j + 1;  |         |  525  |     32  |  3  |    4  |  [193,32,32,32,36]  |
  2952  |              resetPlaceHolder_2();  |         |  525  |     32  |  3  |    4  |  [193,32,32,32,36]  |
  2958  |                         R = R + 2;  |      2  |  527  |     32  |  3  |    4  |  [193,32,32,32,36]  |
  2962  |                         j = j + 1;  |         |  527  |     32  |  3  |    5  |  [193,32,32,32,36]  |
  2963  |              resetPlaceHolder_2();  |         |  527  |     32  |  3  |    5  |  [193,32,32,32,36]  |
  2969  |                         R = R + 2;  |      2  |  529  |     32  |  3  |    5  |  [193,32,32,32,36]  |
  2973  |                         j = j + 1;  |         |  529  |     32  |  3  |    6  |  [193,32,32,32,36]  |
  2974  |              resetPlaceHolder_2();  |         |  529  |     32  |  3  |    6  |  [193,32,32,32,36]  |
  2980  |                         R = R + 2;  |      2  |  531  |     32  |  3  |    6  |  [193,32,32,32,36]  |
  2984  |                         j = j + 1;  |         |  531  |     32  |  3  |    7  |  [193,32,32,32,36]  |
  2985  |              resetPlaceHolder_2();  |         |  531  |     32  |  3  |    7  |  [193,32,32,32,36]  |
  2991  |                         R = R + 2;  |      2  |  533  |     32  |  3  |    7  |  [193,32,32,32,36]  |
  2995  |                         j = j + 1;  |         |  533  |     32  |  3  |    8  |  [193,32,32,32,36]  |
  2996  |              resetPlaceHolder_2();  |         |  533  |     32  |  3  |    8  |  [193,32,32,32,36]  |
  3002  |                         R = R + 2;  |      2  |  535  |     32  |  3  |    8  |  [193,32,32,32,36]  |
  3006  |                         j = j + 1;  |         |  535  |     32  |  3  |    9  |  [193,32,32,32,36]  |
  3007  |              resetPlaceHolder_2();  |         |  535  |     32  |  3  |    9  |  [193,32,32,32,36]  |
  3013  |                         R = R + 2;  |      2  |  537  |     32  |  3  |    9  |  [193,32,32,32,36]  |
  3017  |                         j = j + 1;  |         |  537  |     32  |  3  |   10  |  [193,32,32,32,36]  |
  3018  |              resetPlaceHolder_2();  |         |  537  |     32  |  3  |   10  |  [193,32,32,32,36]  |
  3024  |                         R = R + 2;  |      2  |  539  |     32  |  3  |   10  |  [193,32,32,32,36]  |
  3028  |                         j = j + 1;  |         |  539  |     32  |  3  |   11  |  [193,32,32,32,36]  |
  3029  |              resetPlaceHolder_2();  |         |  539  |     32  |  3  |   11  |  [193,32,32,32,36]  |
  3035  |                         R = R + 2;  |      2  |  541  |     32  |  3  |   11  |  [193,32,32,32,36]  |
  3039  |                         j = j + 1;  |         |  541  |     32  |  3  |   12  |  [193,32,32,32,36]  |
  3040  |              resetPlaceHolder_2();  |         |  541  |     32  |  3  |   12  |  [193,32,32,32,36]  |
  3046  |                         R = R + 2;  |      2  |  543  |     32  |  3  |   12  |  [193,32,32,32,36]  |
  3050  |                         j = j + 1;  |         |  543  |     32  |  3  |   13  |  [193,32,32,32,36]  |
  3051  |              resetPlaceHolder_2();  |         |  543  |     32  |  3  |   13  |  [193,32,32,32,36]  |
  3057  |                         R = R + 2;  |      2  |  545  |     32  |  3  |   13  |  [193,32,32,32,36]  |
  3061  |                         j = j + 1;  |         |  545  |     32  |  3  |   14  |  [193,32,32,32,36]  |
  3062  |              resetPlaceHolder_2();  |         |  545  |     32  |  3  |   14  |  [193,32,32,32,36]  |
  3068  |                         R = R + 2;  |      2  |  547  |     32  |  3  |   14  |  [193,32,32,32,36]  |
  3072  |                         j = j + 1;  |         |  547  |     32  |  3  |   15  |  [193,32,32,32,36]  |
  3073  |              resetPlaceHolder_2();  |         |  547  |     32  |  3  |   15  |  [193,32,32,32,36]  |
  3079  |                         R = R + 2;  |      2  |  549  |     32  |  3  |   15  |  [193,32,32,32,36]  |
  3083  |                         j = j + 1;  |         |  549  |     32  |  3  |   16  |  [193,32,32,32,36]  |
  3084  |              resetPlaceHolder_2();  |         |  549  |     32  |  3  |   16  |  [193,32,32,32,36]  |
  3090  |                         R = R + 2;  |      2  |  551  |     32  |  3  |   16  |  [193,32,32,32,36]  |
  3094  |                         j = j + 1;  |         |  551  |     32  |  3  |   17  |  [193,32,32,32,36]  |
  3095  |              resetPlaceHolder_2();  |         |  551  |     32  |  3  |   17  |  [193,32,32,32,36]  |
  3101  |                         R = R + 2;  |      2  |  553  |     32  |  3  |   17  |  [193,32,32,32,36]  |
  3105  |                         j = j + 1;  |         |  553  |     32  |  3  |   18  |  [193,32,32,32,36]  |
  3106  |              resetPlaceHolder_2();  |         |  553  |     32  |  3  |   18  |  [193,32,32,32,36]  |
  3112  |                         R = R + 2;  |      2  |  555  |     32  |  3  |   18  |  [193,32,32,32,36]  |
  3116  |                         j = j + 1;  |         |  555  |     32  |  3  |   19  |  [193,32,32,32,36]  |
  3117  |              resetPlaceHolder_2();  |         |  555  |     32  |  3  |   19  |  [193,32,32,32,36]  |
  3123  |                         R = R + 2;  |      2  |  557  |     32  |  3  |   19  |  [193,32,32,32,36]  |
  3127  |                         j = j + 1;  |         |  557  |     32  |  3  |   20  |  [193,32,32,32,36]  |
  3128  |              resetPlaceHolder_2();  |         |  557  |     32  |  3  |   20  |  [193,32,32,32,36]  |
  3134  |                         R = R + 2;  |      2  |  559  |     32  |  3  |   20  |  [193,32,32,32,36]  |
  3138  |                         j = j + 1;  |         |  559  |     32  |  3  |   21  |  [193,32,32,32,36]  |
  3139  |              resetPlaceHolder_2();  |         |  559  |     32  |  3  |   21  |  [193,32,32,32,36]  |
  3145  |                         R = R + 2;  |      2  |  561  |     32  |  3  |   21  |  [193,32,32,32,36]  |
  3149  |                         j = j + 1;  |         |  561  |     32  |  3  |   22  |  [193,32,32,32,36]  |
  3150  |              resetPlaceHolder_2();  |         |  561  |     32  |  3  |   22  |  [193,32,32,32,36]  |
  3156  |                         R = R + 2;  |      2  |  563  |     32  |  3  |   22  |  [193,32,32,32,36]  |
  3160  |                         j = j + 1;  |         |  563  |     32  |  3  |   23  |  [193,32,32,32,36]  |
  3161  |              resetPlaceHolder_2();  |         |  563  |     32  |  3  |   23  |  [193,32,32,32,36]  |
  3167  |                         R = R + 2;  |      2  |  565  |     32  |  3  |   23  |  [193,32,32,32,36]  |
  3171  |                         j = j + 1;  |         |  565  |     32  |  3  |   24  |  [193,32,32,32,36]  |
  3172  |              resetPlaceHolder_2();  |         |  565  |     32  |  3  |   24  |  [193,32,32,32,36]  |
  3178  |                         R = R + 2;  |      2  |  567  |     32  |  3  |   24  |  [193,32,32,32,36]  |
  3182  |                         j = j + 1;  |         |  567  |     32  |  3  |   25  |  [193,32,32,32,36]  |
  3183  |              resetPlaceHolder_2();  |         |  567  |     32  |  3  |   25  |  [193,32,32,32,36]  |
  3189  |                         R = R + 2;  |      2  |  569  |     32  |  3  |   25  |  [193,32,32,32,36]  |
  3193  |                         j = j + 1;  |         |  569  |     32  |  3  |   26  |  [193,32,32,32,36]  |
  3194  |              resetPlaceHolder_2();  |         |  569  |     32  |  3  |   26  |  [193,32,32,32,36]  |
  3200  |                         R = R + 2;  |      2  |  571  |     32  |  3  |   26  |  [193,32,32,32,36]  |
  3204  |                         j = j + 1;  |         |  571  |     32  |  3  |   27  |  [193,32,32,32,36]  |
  3205  |              resetPlaceHolder_2();  |         |  571  |     32  |  3  |   27  |  [193,32,32,32,36]  |
  3211  |                         R = R + 2;  |      2  |  573  |     32  |  3  |   27  |  [193,32,32,32,36]  |
  3215  |                         j = j + 1;  |         |  573  |     32  |  3  |   28  |  [193,32,32,32,36]  |
  3216  |              resetPlaceHolder_2();  |         |  573  |     32  |  3  |   28  |  [193,32,32,32,36]  |
  3222  |                         R = R + 2;  |      2  |  575  |     32  |  3  |   28  |  [193,32,32,32,36]  |
  3226  |                         j = j + 1;  |         |  575  |     32  |  3  |   29  |  [193,32,32,32,36]  |
  3227  |              resetPlaceHolder_2();  |         |  575  |     32  |  3  |   29  |  [193,32,32,32,36]  |
  3233  |                         R = R + 2;  |      2  |  577  |     32  |  3  |   29  |  [193,32,32,32,36]  |
  3237  |                         j = j + 1;  |         |  577  |     32  |  3  |   30  |  [193,32,32,32,36]  |
  3238  |              resetPlaceHolder_2();  |         |  577  |     32  |  3  |   30  |  [193,32,32,32,36]  |
  3244  |                         R = R + 2;  |      2  |  579  |     32  |  3  |   30  |  [193,32,32,32,36]  |
  3248  |                         j = j + 1;  |         |  579  |     32  |  3  |   31  |  [193,32,32,32,36]  |
  3249  |              resetPlaceHolder_2();  |         |  579  |     32  |  3  |   31  |  [193,32,32,32,36]  |
  3255  |                         R = R + 2;  |      2  |  581  |     32  |  3  |   31  |  [193,32,32,32,36]  |
  3259  |                         j = j + 1;  |         |  581  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  3260  |              resetPlaceHolder_2();  |         |  581  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  3266  |                         R = R + 1;  |      1  |  582  |     32  |  3  |   32  |  [193,32,32,32,36]  |
  3270  |                         i = i + 1;  |         |  582  |     32  |  4  |   32  |  [193,32,32,32,36]  |
  3271  |              resetPlaceHolder_1();  |         |  582  |     32  |  4  |   32  |  [193,32,32,32,36]  |
  3277  |      entry = arrayRead(sorted, i);  |         |  582  |     36  |  4  |   32  |  [193,32,32,32,36]  |
  3279  |                         int j = 0;  |         |  582  |     36  |  4  |    0  |  [193,32,32,32,36]  |
  3285  |                         R = R + 2;  |      2  |  584  |     36  |  4  |    0  |  [193,32,32,32,36]  |
  3289  |                         j = j + 1;  |         |  584  |     36  |  4  |    1  |  [193,32,32,32,36]  |
  3290  |              resetPlaceHolder_2();  |         |  584  |     36  |  4  |    1  |  [193,32,32,32,36]  |
  3296  |                         R = R + 2;  |      2  |  586  |     36  |  4  |    1  |  [193,32,32,32,36]  |
  3300  |                         j = j + 1;  |         |  586  |     36  |  4  |    2  |  [193,32,32,32,36]  |
  3301  |              resetPlaceHolder_2();  |         |  586  |     36  |  4  |    2  |  [193,32,32,32,36]  |
  3307  |                         R = R + 2;  |      2  |  588  |     36  |  4  |    2  |  [193,32,32,32,36]  |
  3311  |                         j = j + 1;  |         |  588  |     36  |  4  |    3  |  [193,32,32,32,36]  |
  3312  |              resetPlaceHolder_2();  |         |  588  |     36  |  4  |    3  |  [193,32,32,32,36]  |
  3318  |                         R = R + 2;  |      2  |  590  |     36  |  4  |    3  |  [193,32,32,32,36]  |
  3322  |                         j = j + 1;  |         |  590  |     36  |  4  |    4  |  [193,32,32,32,36]  |
  3323  |              resetPlaceHolder_2();  |         |  590  |     36  |  4  |    4  |  [193,32,32,32,36]  |
  3329  |                         R = R + 2;  |      2  |  592  |     36  |  4  |    4  |  [193,32,32,32,36]  |
  3333  |                         j = j + 1;  |         |  592  |     36  |  4  |    5  |  [193,32,32,32,36]  |
  3334  |              resetPlaceHolder_2();  |         |  592  |     36  |  4  |    5  |  [193,32,32,32,36]  |
  3340  |                         R = R + 2;  |      2  |  594  |     36  |  4  |    5  |  [193,32,32,32,36]  |
  3344  |                         j = j + 1;  |         |  594  |     36  |  4  |    6  |  [193,32,32,32,36]  |
  3345  |              resetPlaceHolder_2();  |         |  594  |     36  |  4  |    6  |  [193,32,32,32,36]  |
  3351  |                         R = R + 2;  |      2  |  596  |     36  |  4  |    6  |  [193,32,32,32,36]  |
  3355  |                         j = j + 1;  |         |  596  |     36  |  4  |    7  |  [193,32,32,32,36]  |
  3356  |              resetPlaceHolder_2();  |         |  596  |     36  |  4  |    7  |  [193,32,32,32,36]  |
  3362  |                         R = R + 2;  |      2  |  598  |     36  |  4  |    7  |  [193,32,32,32,36]  |
  3366  |                         j = j + 1;  |         |  598  |     36  |  4  |    8  |  [193,32,32,32,36]  |
  3367  |              resetPlaceHolder_2();  |         |  598  |     36  |  4  |    8  |  [193,32,32,32,36]  |
  3373  |                         R = R + 2;  |      2  |  600  |     36  |  4  |    8  |  [193,32,32,32,36]  |
  3377  |                         j = j + 1;  |         |  600  |     36  |  4  |    9  |  [193,32,32,32,36]  |
  3378  |              resetPlaceHolder_2();  |         |  600  |     36  |  4  |    9  |  [193,32,32,32,36]  |
  3384  |                         R = R + 2;  |      2  |  602  |     36  |  4  |    9  |  [193,32,32,32,36]  |
  3388  |                         j = j + 1;  |         |  602  |     36  |  4  |   10  |  [193,32,32,32,36]  |
  3389  |              resetPlaceHolder_2();  |         |  602  |     36  |  4  |   10  |  [193,32,32,32,36]  |
  3395  |                         R = R + 2;  |      2  |  604  |     36  |  4  |   10  |  [193,32,32,32,36]  |
  3399  |                         j = j + 1;  |         |  604  |     36  |  4  |   11  |  [193,32,32,32,36]  |
  3400  |              resetPlaceHolder_2();  |         |  604  |     36  |  4  |   11  |  [193,32,32,32,36]  |
  3406  |                         R = R + 2;  |      2  |  606  |     36  |  4  |   11  |  [193,32,32,32,36]  |
  3410  |                         j = j + 1;  |         |  606  |     36  |  4  |   12  |  [193,32,32,32,36]  |
  3411  |              resetPlaceHolder_2();  |         |  606  |     36  |  4  |   12  |  [193,32,32,32,36]  |
  3417  |                         R = R + 2;  |      2  |  608  |     36  |  4  |   12  |  [193,32,32,32,36]  |
  3421  |                         j = j + 1;  |         |  608  |     36  |  4  |   13  |  [193,32,32,32,36]  |
  3422  |              resetPlaceHolder_2();  |         |  608  |     36  |  4  |   13  |  [193,32,32,32,36]  |
  3428  |                         R = R + 2;  |      2  |  610  |     36  |  4  |   13  |  [193,32,32,32,36]  |
  3432  |                         j = j + 1;  |         |  610  |     36  |  4  |   14  |  [193,32,32,32,36]  |
  3433  |              resetPlaceHolder_2();  |         |  610  |     36  |  4  |   14  |  [193,32,32,32,36]  |
  3439  |                         R = R + 2;  |      2  |  612  |     36  |  4  |   14  |  [193,32,32,32,36]  |
  3443  |                         j = j + 1;  |         |  612  |     36  |  4  |   15  |  [193,32,32,32,36]  |
  3444  |              resetPlaceHolder_2();  |         |  612  |     36  |  4  |   15  |  [193,32,32,32,36]  |
  3450  |                         R = R + 2;  |      2  |  614  |     36  |  4  |   15  |  [193,32,32,32,36]  |
  3454  |                         j = j + 1;  |         |  614  |     36  |  4  |   16  |  [193,32,32,32,36]  |
  3455  |              resetPlaceHolder_2();  |         |  614  |     36  |  4  |   16  |  [193,32,32,32,36]  |
  3461  |                         R = R + 2;  |      2  |  616  |     36  |  4  |   16  |  [193,32,32,32,36]  |
  3465  |                         j = j + 1;  |         |  616  |     36  |  4  |   17  |  [193,32,32,32,36]  |
  3466  |              resetPlaceHolder_2();  |         |  616  |     36  |  4  |   17  |  [193,32,32,32,36]  |
  3472  |                         R = R + 2;  |      2  |  618  |     36  |  4  |   17  |  [193,32,32,32,36]  |
  3476  |                         j = j + 1;  |         |  618  |     36  |  4  |   18  |  [193,32,32,32,36]  |
  3477  |              resetPlaceHolder_2();  |         |  618  |     36  |  4  |   18  |  [193,32,32,32,36]  |
  3483  |                         R = R + 2;  |      2  |  620  |     36  |  4  |   18  |  [193,32,32,32,36]  |
  3487  |                         j = j + 1;  |         |  620  |     36  |  4  |   19  |  [193,32,32,32,36]  |
  3488  |              resetPlaceHolder_2();  |         |  620  |     36  |  4  |   19  |  [193,32,32,32,36]  |
  3494  |                         R = R + 2;  |      2  |  622  |     36  |  4  |   19  |  [193,32,32,32,36]  |
  3498  |                         j = j + 1;  |         |  622  |     36  |  4  |   20  |  [193,32,32,32,36]  |
  3499  |              resetPlaceHolder_2();  |         |  622  |     36  |  4  |   20  |  [193,32,32,32,36]  |
  3505  |                         R = R + 2;  |      2  |  624  |     36  |  4  |   20  |  [193,32,32,32,36]  |
  3509  |                         j = j + 1;  |         |  624  |     36  |  4  |   21  |  [193,32,32,32,36]  |
  3510  |              resetPlaceHolder_2();  |         |  624  |     36  |  4  |   21  |  [193,32,32,32,36]  |
  3516  |                         R = R + 2;  |      2  |  626  |     36  |  4  |   21  |  [193,32,32,32,36]  |
  3520  |                         j = j + 1;  |         |  626  |     36  |  4  |   22  |  [193,32,32,32,36]  |
  3521  |              resetPlaceHolder_2();  |         |  626  |     36  |  4  |   22  |  [193,32,32,32,36]  |
  3527  |                         R = R + 2;  |      2  |  628  |     36  |  4  |   22  |  [193,32,32,32,36]  |
  3531  |                         j = j + 1;  |         |  628  |     36  |  4  |   23  |  [193,32,32,32,36]  |
  3532  |              resetPlaceHolder_2();  |         |  628  |     36  |  4  |   23  |  [193,32,32,32,36]  |
  3538  |                         R = R + 2;  |      2  |  630  |     36  |  4  |   23  |  [193,32,32,32,36]  |
  3542  |                         j = j + 1;  |         |  630  |     36  |  4  |   24  |  [193,32,32,32,36]  |
  3543  |              resetPlaceHolder_2();  |         |  630  |     36  |  4  |   24  |  [193,32,32,32,36]  |
  3549  |                         R = R + 2;  |      2  |  632  |     36  |  4  |   24  |  [193,32,32,32,36]  |
  3553  |                         j = j + 1;  |         |  632  |     36  |  4  |   25  |  [193,32,32,32,36]  |
  3554  |              resetPlaceHolder_2();  |         |  632  |     36  |  4  |   25  |  [193,32,32,32,36]  |
  3560  |                         R = R + 2;  |      2  |  634  |     36  |  4  |   25  |  [193,32,32,32,36]  |
  3564  |                         j = j + 1;  |         |  634  |     36  |  4  |   26  |  [193,32,32,32,36]  |
  3565  |              resetPlaceHolder_2();  |         |  634  |     36  |  4  |   26  |  [193,32,32,32,36]  |
  3571  |                         R = R + 2;  |      2  |  636  |     36  |  4  |   26  |  [193,32,32,32,36]  |
  3575  |                         j = j + 1;  |         |  636  |     36  |  4  |   27  |  [193,32,32,32,36]  |
  3576  |              resetPlaceHolder_2();  |         |  636  |     36  |  4  |   27  |  [193,32,32,32,36]  |
  3582  |                         R = R + 2;  |      2  |  638  |     36  |  4  |   27  |  [193,32,32,32,36]  |
  3586  |                         j = j + 1;  |         |  638  |     36  |  4  |   28  |  [193,32,32,32,36]  |
  3587  |              resetPlaceHolder_2();  |         |  638  |     36  |  4  |   28  |  [193,32,32,32,36]  |
  3593  |                         R = R + 2;  |      2  |  640  |     36  |  4  |   28  |  [193,32,32,32,36]  |
  3597  |                         j = j + 1;  |         |  640  |     36  |  4  |   29  |  [193,32,32,32,36]  |
  3598  |              resetPlaceHolder_2();  |         |  640  |     36  |  4  |   29  |  [193,32,32,32,36]  |
  3604  |                         R = R + 2;  |      2  |  642  |     36  |  4  |   29  |  [193,32,32,32,36]  |
  3608  |                         j = j + 1;  |         |  642  |     36  |  4  |   30  |  [193,32,32,32,36]  |
  3609  |              resetPlaceHolder_2();  |         |  642  |     36  |  4  |   30  |  [193,32,32,32,36]  |
  3615  |                         R = R + 2;  |      2  |  644  |     36  |  4  |   30  |  [193,32,32,32,36]  |
  3619  |                         j = j + 1;  |         |  644  |     36  |  4  |   31  |  [193,32,32,32,36]  |
  3620  |              resetPlaceHolder_2();  |         |  644  |     36  |  4  |   31  |  [193,32,32,32,36]  |
  3626  |                         R = R + 2;  |      2  |  646  |     36  |  4  |   31  |  [193,32,32,32,36]  |
  3630  |                         j = j + 1;  |         |  646  |     36  |  4  |   32  |  [193,32,32,32,36]  |
  3631  |              resetPlaceHolder_2();  |         |  646  |     36  |  4  |   32  |  [193,32,32,32,36]  |
  3637  |                         R = R + 2;  |      2  |  648  |     36  |  4  |   32  |  [193,32,32,32,36]  |
  3641  |                         j = j + 1;  |         |  648  |     36  |  4  |   33  |  [193,32,32,32,36]  |
  3642  |              resetPlaceHolder_2();  |         |  648  |     36  |  4  |   33  |  [193,32,32,32,36]  |
  3648  |                         R = R + 2;  |      2  |  650  |     36  |  4  |   33  |  [193,32,32,32,36]  |
  3652  |                         j = j + 1;  |         |  650  |     36  |  4  |   34  |  [193,32,32,32,36]  |
  3653  |              resetPlaceHolder_2();  |         |  650  |     36  |  4  |   34  |  [193,32,32,32,36]  |
  3659  |                         R = R + 2;  |      2  |  652  |     36  |  4  |   34  |  [193,32,32,32,36]  |
  3663  |                         j = j + 1;  |         |  652  |     36  |  4  |   35  |  [193,32,32,32,36]  |
  3664  |              resetPlaceHolder_2();  |         |  652  |     36  |  4  |   35  |  [193,32,32,32,36]  |
  3670  |                         R = R + 2;  |      2  |  654  |     36  |  4  |   35  |  [193,32,32,32,36]  |
  3674  |                         j = j + 1;  |         |  654  |     36  |  4  |   36  |  [193,32,32,32,36]  |
  3675  |              resetPlaceHolder_2();  |         |  654  |     36  |  4  |   36  |  [193,32,32,32,36]  |
  3681  |                         R = R + 1;  |      1  |  655  |     36  |  4  |   36  |  [193,32,32,32,36]  |
  3685  |                         i = i + 1;  |         |  655  |     36  |  5  |   36  |  [193,32,32,32,36]  |
  3686  |              resetPlaceHolder_1();  |         |  655  |     36  |  5  |   36  |  [193,32,32,32,36]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1823, 2109, 2131, 1559, 3167, 1031, 2480, 1295, 481, 3681, 217, 2381, 3549, 3417, 3285, 2947, 2282, 3439, 2686, 3648, 1735, 1867, 1999, 1988, 404, 1196, 1746, 2216, 2348, 2491, 2763, 2227, 2010, 1724, 1482, 52, 184, 3046, 2708, 1922, 2403, 2730, 228, 448, 316, 261, 2829, 492, 756, 789, 591, 1911, 2469, 3670, 3527, 646, 2925, 514, 1383, 1020, 1581, 602, 3068, 3189, 877, 734, 3505, 866, 1119, 1394, 1526, 998, 1405, 3211, 2392, 74, 3406, 2205, 206, 2884, 3582, 3450, 1691, 1438, 85, 1306, 3318, 1768, 1636, 1163, 1900, 910, 2249, 778, 1042, 349, 1570, 1174, 2969, 3233, 3134, 2032, 2414, 2958, 3307, 2873, 3090, 2565, 2609, 2741, 2653, 1350, 1592, 3615, 2840, 2895, 1328, 2359, 1064, 1856, 1878, 2631, 1493, 1361, 1075, 2172, 3428, 1207, 1889, 679, 547, 96, 393, 701, 2304, 2598, 2153, 2851, 173, 3222, 129, 569, 2862, 2697, 41, 371, 503, 2370, 1086, 1779, 360, 2043, 921, 657, 2076, 558, 1515, 1185, 888, 2936, 965, 1251, 1680, 1273, 3079, 1548, 745, 2524, 2260, 3255, 3472, 3266, 2991, 118, 3604, 1669, 382, 2326, 2293, 3002, 3340, 3123, 2425, 3101, 2642, 2774, 1933, 1603, 1801, 3384, 2065, 811, 1471, 1339, 140, 2785, 3483, 1460, 943, 2664, 668, 932, 2620, 2752, 3178, 2054, 2914, 426, 162, 3395, 2271, 3571, 2513, 1845, 525, 712, 580, 855, 690, 63, 3112, 327, 1647, 3659, 954, 1053, 1790, 1262, 2337, 1317, 338, 470, 1658, 3329, 1130, 1218, 2675, 1141, 1702, 613, 2543, 1284, 1955, 1427, 1504, 3024, 1372, 2807, 3156, 1240, 250, 2458, 2818, 1966, 1834, 976, 2194, 844, 1108, 3593, 2098, 2554, 3516, 2447, 2796, 2576, 2183, 272, 3351, 899, 2120, 2315, 536, 1614, 800, 2142, 151, 833, 2719, 1097, 2587, 1229, 30, 1625, 3373, 1757, 3145, 305, 107, 239, 294, 3560, 195, 437, 767, 635, 2021, 283, 415, 624, 3244, 2502, 987, 3362, 1977, 1152, 3057, 1537, 459, 723, 822, 3538, 1713, 3494, 3013, 3461, 1944, 3626, 1009, 2436, 2238, 1416, 3637, 3200, 1449, 1812, 2087, 3296, 2980, 3035]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1823, 2109, 2131, 1559, 3167, 1031, 2480, 1295, 481, 3681, 217, 2381, 3549, 3417, 3285, 2947, 2282, 3439, 2686, 3648, 1735, 1867, 1999, 1988, 404, 1196, 1746, 2216, 2348, 2491, 2763, 2227, 2010, 1724, 1482, 52, 184, 3046, 2708, 1922, 2403, 2730, 228, 448, 316, 261, 2829, 492, 756, 789, 591, 1911, 2469, 3670, 3527, 646, 2925, 514, 1383, 1020, 1581, 602, 3068, 3189, 877, 734, 3505, 866, 1119, 1394, 1526, 998, 1405, 3211, 2392, 74, 3406, 2205, 206, 2884, 3582, 3450, 1691, 1438, 85, 1306, 3318, 1768, 1636, 1163, 1900, 910, 2249, 778, 1042, 349, 1570, 1174, 2969, 3233, 3134, 2032, 2414, 2958, 3307, 2873, 3090, 2565, 2609, 2741, 2653, 1350, 1592, 3615, 2840, 2895, 1328, 2359, 1064, 1856, 1878, 2631, 1493, 1361, 1075, 2172, 3428, 1207, 1889, 679, 547, 96, 393, 701, 2304, 2598, 2153, 2851, 173, 3222, 129, 569, 2862, 2697, 41, 371, 503, 2370, 1086, 1779, 360, 2043, 921, 657, 2076, 558, 1515, 1185, 888, 2936, 965, 1251, 1680, 1273, 3079, 1548, 745, 2524, 2260, 3255, 3472, 3266, 2991, 118, 3604, 1669, 382, 2326, 2293, 3002, 3340, 3123, 2425, 3101, 2642, 2774, 1933, 1603, 1801, 3384, 2065, 811, 1471, 1339, 140, 2785, 3483, 1460, 943, 2664, 668, 932, 2620, 2752, 3178, 2054, 2914, 426, 162, 3395, 2271, 3571, 2513, 1845, 525, 712, 580, 855, 690, 63, 3112, 327, 1647, 3659, 954, 1053, 1790, 1262, 2337, 1317, 338, 470, 1658, 3329, 1130, 1218, 2675, 1141, 1702, 613, 2543, 1284, 1955, 1427, 1504, 3024, 1372, 2807, 3156, 1240, 250, 2458, 2818, 1966, 1834, 976, 2194, 844, 1108, 3593, 2098, 2554, 3516, 2447, 2796, 2576, 2183, 272, 3351, 899, 2120, 2315, 536, 1614, 800, 2142, 151, 833, 2719, 1097, 2587, 1229, 30, 1625, 3373, 1757, 3145, 305, 107, 239, 294, 3560, 195, 437, 767, 635, 2021, 283, 415, 624, 3244, 2502, 987, 3362, 1977, 1152, 3057, 1537, 459, 723, 822, 3538, 1713, 3494, 3013, 3461, 1944, 3626, 1009, 2436, 2238, 1416, 3637, 3200, 1449, 1812, 2087, 3296, 2980, 3035]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1823, 2109, 2131, 1559, 3167, 1031, 2480, 1295, 481, 3681, 217, 2381, 3549, 3417, 3285, 2947, 2282, 3439, 2686, 3648, 1735, 1867, 1999, 1988, 404, 1196, 1746, 2216, 2348, 2491, 2763, 2227, 2010, 1724, 1482, 52, 184, 3046, 2708, 1922, 2403, 2730, 228, 448, 316, 261, 2829, 492, 756, 789, 591, 1911, 2469, 3670, 3527, 646, 2925, 514, 1383, 1020, 1581, 602, 3068, 3189, 877, 734, 3505, 866, 1119, 1394, 1526, 998, 1405, 3211, 2392, 74, 3406, 2205, 206, 2884, 3582, 3450, 1691, 1438, 85, 1306, 3318, 1768, 1636, 1163, 1900, 910, 2249, 778, 1042, 349, 1570, 1174, 2969, 3233, 3134, 2032, 2414, 2958, 3307, 2873, 3090, 2565, 2609, 2741, 2653, 1350, 1592, 3615, 2840, 2895, 1328, 2359, 1064, 1856, 1878, 2631, 1493, 1361, 1075, 2172, 3428, 1207, 1889, 679, 547, 96, 393, 701, 2304, 2598, 2153, 2851, 173, 3222, 129, 569, 2862, 2697, 41, 371, 503, 2370, 1086, 1779, 360, 2043, 921, 657, 2076, 558, 1515, 1185, 888, 2936, 965, 1251, 1680, 1273, 3079, 1548, 745, 2524, 2260, 3255, 3472, 3266, 2991, 118, 3604, 1669, 382, 2326, 2293, 3002, 3340, 3123, 2425, 3101, 2642, 2774, 1933, 1603, 1801, 3384, 2065, 811, 1471, 1339, 140, 2785, 3483, 1460, 943, 2664, 668, 932, 2620, 2752, 3178, 2054, 2914, 426, 162, 3395, 2271, 3571, 2513, 1845, 525, 712, 580, 855, 690, 63, 3112, 327, 1647, 3659, 954, 1053, 1790, 1262, 2337, 1317, 338, 470, 1658, 3329, 1130, 1218, 2675, 1141, 1702, 613, 2543, 1284, 1955, 1427, 1504, 3024, 1372, 2807, 3156, 1240, 250, 2458, 2818, 1966, 1834, 976, 2194, 844, 1108, 3593, 2098, 2554, 3516, 2447, 2796, 2576, 2183, 272, 3351, 899, 2120, 2315, 536, 1614, 800, 2142, 151, 833, 2719, 1097, 2587, 1229, 30, 1625, 3373, 1757, 3145, 305, 107, 239, 294, 3560, 195, 437, 767, 635, 2021, 283, 415, 624, 3244, 2502, 987, 3362, 1977, 1152, 3057, 1537, 459, 723, 822, 3538, 1713, 3494, 3013, 3461, 1944, 3626, 1009, 2436, 2238, 1416, 3637, 3200, 1449, 1812, 2087, 3296, 2980, 3035]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1922,1933,1944,1955,1966,1977,1988,1999,2010,2021,2032,2043,2054,2065,2076,2087,2098,2109,2120,2131,2142,2153,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2543,2554,2565,2576,2587,2598,2609,2620,2631,2642,2653,2664,2675,2686,2697,2708,2719,2730,2741,2752,2763,2774,2785,2796,2807,2818,2829,2840,2851,2862,2873,2884,2895,2914,2925,2936,2947,2958,2969,2980,2991,3002,3013,3024,3035,3046,3057,3068,3079,3090,3101,3112,3123,3134,3145,3156,3167,3178,3189,3200,3211,3222,3233,3244,3255,3266,3285,3296,3307,3318,3329,3340,3351,3362,3373,3384,3395,3406,3417,3428,3439,3450,3461,3472,3483,3494,3505,3516,3527,3538,3549,3560,3571,3582,3593,3604,3615,3626,3637,3648,3659,3670,3681}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 2;  |      2  |                         0  |
  1916  |  resetPlaceHolder_2();  |         |                            |
  1922  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_2();  |         |                            |
  1933  |             R = R + 2;  |      2  |                         0  |
  1938  |  resetPlaceHolder_2();  |         |                            |
  1944  |             R = R + 2;  |      2  |                         0  |
  1949  |  resetPlaceHolder_2();  |         |                            |
  1955  |             R = R + 2;  |      2  |                         0  |
  1960  |  resetPlaceHolder_2();  |         |                            |
  1966  |             R = R + 2;  |      2  |                         0  |
  1971  |  resetPlaceHolder_2();  |         |                            |
  1977  |             R = R + 2;  |      2  |                         0  |
  1982  |  resetPlaceHolder_2();  |         |                            |
  1988  |             R = R + 2;  |      2  |                         0  |
  1993  |  resetPlaceHolder_2();  |         |                            |
  1999  |             R = R + 2;  |      2  |                         0  |
  2004  |  resetPlaceHolder_2();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2015  |  resetPlaceHolder_2();  |         |                            |
  2021  |             R = R + 2;  |      2  |                         0  |
  2026  |  resetPlaceHolder_2();  |         |                            |
  2032  |             R = R + 2;  |      2  |                         0  |
  2037  |  resetPlaceHolder_2();  |         |                            |
  2043  |             R = R + 2;  |      2  |                         0  |
  2048  |  resetPlaceHolder_2();  |         |                            |
  2054  |             R = R + 2;  |      2  |                         0  |
  2059  |  resetPlaceHolder_2();  |         |                            |
  2065  |             R = R + 2;  |      2  |                         0  |
  2070  |  resetPlaceHolder_2();  |         |                            |
  2076  |             R = R + 2;  |      2  |                         0  |
  2081  |  resetPlaceHolder_2();  |         |                            |
  2087  |             R = R + 2;  |      2  |                         0  |
  2092  |  resetPlaceHolder_2();  |         |                            |
  2098  |             R = R + 2;  |      2  |                         0  |
  2103  |  resetPlaceHolder_2();  |         |                            |
  2109  |             R = R + 2;  |      2  |                         0  |
  2114  |  resetPlaceHolder_2();  |         |                            |
  2120  |             R = R + 2;  |      2  |                         0  |
  2125  |  resetPlaceHolder_2();  |         |                            |
  2131  |             R = R + 2;  |      2  |                         0  |
  2136  |  resetPlaceHolder_2();  |         |                            |
  2142  |             R = R + 2;  |      2  |                         0  |
  2147  |  resetPlaceHolder_2();  |         |                            |
  2153  |             R = R + 1;  |      1  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 1;  |      1  |                         0  |
  2529  |  resetPlaceHolder_1();  |         |                            |
  2543  |             R = R + 2;  |      2  |                         0  |
  2548  |  resetPlaceHolder_2();  |         |                            |
  2554  |             R = R + 2;  |      2  |                         0  |
  2559  |  resetPlaceHolder_2();  |         |                            |
  2565  |             R = R + 2;  |      2  |                         0  |
  2570  |  resetPlaceHolder_2();  |         |                            |
  2576  |             R = R + 2;  |      2  |                         0  |
  2581  |  resetPlaceHolder_2();  |         |                            |
  2587  |             R = R + 2;  |      2  |                         0  |
  2592  |  resetPlaceHolder_2();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2603  |  resetPlaceHolder_2();  |         |                            |
  2609  |             R = R + 2;  |      2  |                         0  |
  2614  |  resetPlaceHolder_2();  |         |                            |
  2620  |             R = R + 2;  |      2  |                         0  |
  2625  |  resetPlaceHolder_2();  |         |                            |
  2631  |             R = R + 2;  |      2  |                         0  |
  2636  |  resetPlaceHolder_2();  |         |                            |
  2642  |             R = R + 2;  |      2  |                         0  |
  2647  |  resetPlaceHolder_2();  |         |                            |
  2653  |             R = R + 2;  |      2  |                         0  |
  2658  |  resetPlaceHolder_2();  |         |                            |
  2664  |             R = R + 2;  |      2  |                         0  |
  2669  |  resetPlaceHolder_2();  |         |                            |
  2675  |             R = R + 2;  |      2  |                         0  |
  2680  |  resetPlaceHolder_2();  |         |                            |
  2686  |             R = R + 2;  |      2  |                         0  |
  2691  |  resetPlaceHolder_2();  |         |                            |
  2697  |             R = R + 2;  |      2  |                         0  |
  2702  |  resetPlaceHolder_2();  |         |                            |
  2708  |             R = R + 2;  |      2  |                         0  |
  2713  |  resetPlaceHolder_2();  |         |                            |
  2719  |             R = R + 2;  |      2  |                         0  |
  2724  |  resetPlaceHolder_2();  |         |                            |
  2730  |             R = R + 2;  |      2  |                         0  |
  2735  |  resetPlaceHolder_2();  |         |                            |
  2741  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_2();  |         |                            |
  2752  |             R = R + 2;  |      2  |                         0  |
  2757  |  resetPlaceHolder_2();  |         |                            |
  2763  |             R = R + 2;  |      2  |                         0  |
  2768  |  resetPlaceHolder_2();  |         |                            |
  2774  |             R = R + 2;  |      2  |                         0  |
  2779  |  resetPlaceHolder_2();  |         |                            |
  2785  |             R = R + 2;  |      2  |                         0  |
  2790  |  resetPlaceHolder_2();  |         |                            |
  2796  |             R = R + 2;  |      2  |                         0  |
  2801  |  resetPlaceHolder_2();  |         |                            |
  2807  |             R = R + 2;  |      2  |                         0  |
  2812  |  resetPlaceHolder_2();  |         |                            |
  2818  |             R = R + 2;  |      2  |                         0  |
  2823  |  resetPlaceHolder_2();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2834  |  resetPlaceHolder_2();  |         |                            |
  2840  |             R = R + 2;  |      2  |                         0  |
  2845  |  resetPlaceHolder_2();  |         |                            |
  2851  |             R = R + 2;  |      2  |                         0  |
  2856  |  resetPlaceHolder_2();  |         |                            |
  2862  |             R = R + 2;  |      2  |                         0  |
  2867  |  resetPlaceHolder_2();  |         |                            |
  2873  |             R = R + 2;  |      2  |                         0  |
  2878  |  resetPlaceHolder_2();  |         |                            |
  2884  |             R = R + 2;  |      2  |                         0  |
  2889  |  resetPlaceHolder_2();  |         |                            |
  2895  |             R = R + 1;  |      1  |                         0  |
  2900  |  resetPlaceHolder_1();  |         |                            |
  2914  |             R = R + 2;  |      2  |                         0  |
  2919  |  resetPlaceHolder_2();  |         |                            |
  2925  |             R = R + 2;  |      2  |                         0  |
  2930  |  resetPlaceHolder_2();  |         |                            |
  2936  |             R = R + 2;  |      2  |                         0  |
  2941  |  resetPlaceHolder_2();  |         |                            |
  2947  |             R = R + 2;  |      2  |                         0  |
  2952  |  resetPlaceHolder_2();  |         |                            |
  2958  |             R = R + 2;  |      2  |                         0  |
  2963  |  resetPlaceHolder_2();  |         |                            |
  2969  |             R = R + 2;  |      2  |                         0  |
  2974  |  resetPlaceHolder_2();  |         |                            |
  2980  |             R = R + 2;  |      2  |                         0  |
  2985  |  resetPlaceHolder_2();  |         |                            |
  2991  |             R = R + 2;  |      2  |                         0  |
  2996  |  resetPlaceHolder_2();  |         |                            |
  3002  |             R = R + 2;  |      2  |                         0  |
  3007  |  resetPlaceHolder_2();  |         |                            |
  3013  |             R = R + 2;  |      2  |                         0  |
  3018  |  resetPlaceHolder_2();  |         |                            |
  3024  |             R = R + 2;  |      2  |                         0  |
  3029  |  resetPlaceHolder_2();  |         |                            |
  3035  |             R = R + 2;  |      2  |                         0  |
  3040  |  resetPlaceHolder_2();  |         |                            |
  3046  |             R = R + 2;  |      2  |                         0  |
  3051  |  resetPlaceHolder_2();  |         |                            |
  3057  |             R = R + 2;  |      2  |                         0  |
  3062  |  resetPlaceHolder_2();  |         |                            |
  3068  |             R = R + 2;  |      2  |                         0  |
  3073  |  resetPlaceHolder_2();  |         |                            |
  3079  |             R = R + 2;  |      2  |                         0  |
  3084  |  resetPlaceHolder_2();  |         |                            |
  3090  |             R = R + 2;  |      2  |                         0  |
  3095  |  resetPlaceHolder_2();  |         |                            |
  3101  |             R = R + 2;  |      2  |                         0  |
  3106  |  resetPlaceHolder_2();  |         |                            |
  3112  |             R = R + 2;  |      2  |                         0  |
  3117  |  resetPlaceHolder_2();  |         |                            |
  3123  |             R = R + 2;  |      2  |                         0  |
  3128  |  resetPlaceHolder_2();  |         |                            |
  3134  |             R = R + 2;  |      2  |                         0  |
  3139  |  resetPlaceHolder_2();  |         |                            |
  3145  |             R = R + 2;  |      2  |                         0  |
  3150  |  resetPlaceHolder_2();  |         |                            |
  3156  |             R = R + 2;  |      2  |                         0  |
  3161  |  resetPlaceHolder_2();  |         |                            |
  3167  |             R = R + 2;  |      2  |                         0  |
  3172  |  resetPlaceHolder_2();  |         |                            |
  3178  |             R = R + 2;  |      2  |                         0  |
  3183  |  resetPlaceHolder_2();  |         |                            |
  3189  |             R = R + 2;  |      2  |                         0  |
  3194  |  resetPlaceHolder_2();  |         |                            |
  3200  |             R = R + 2;  |      2  |                         0  |
  3205  |  resetPlaceHolder_2();  |         |                            |
  3211  |             R = R + 2;  |      2  |                         0  |
  3216  |  resetPlaceHolder_2();  |         |                            |
  3222  |             R = R + 2;  |      2  |                         0  |
  3227  |  resetPlaceHolder_2();  |         |                            |
  3233  |             R = R + 2;  |      2  |                         0  |
  3238  |  resetPlaceHolder_2();  |         |                            |
  3244  |             R = R + 2;  |      2  |                         0  |
  3249  |  resetPlaceHolder_2();  |         |                            |
  3255  |             R = R + 2;  |      2  |                         0  |
  3260  |  resetPlaceHolder_2();  |         |                            |
  3266  |             R = R + 1;  |      1  |                         0  |
  3271  |  resetPlaceHolder_1();  |         |                            |
  3285  |             R = R + 2;  |      2  |                         0  |
  3290  |  resetPlaceHolder_2();  |         |                            |
  3296  |             R = R + 2;  |      2  |                         0  |
  3301  |  resetPlaceHolder_2();  |         |                            |
  3307  |             R = R + 2;  |      2  |                         0  |
  3312  |  resetPlaceHolder_2();  |         |                            |
  3318  |             R = R + 2;  |      2  |                         0  |
  3323  |  resetPlaceHolder_2();  |         |                            |
  3329  |             R = R + 2;  |      2  |                         0  |
  3334  |  resetPlaceHolder_2();  |         |                            |
  3340  |             R = R + 2;  |      2  |                         0  |
  3345  |  resetPlaceHolder_2();  |         |                            |
  3351  |             R = R + 2;  |      2  |                         0  |
  3356  |  resetPlaceHolder_2();  |         |                            |
  3362  |             R = R + 2;  |      2  |                         0  |
  3367  |  resetPlaceHolder_2();  |         |                            |
  3373  |             R = R + 2;  |      2  |                         0  |
  3378  |  resetPlaceHolder_2();  |         |                            |
  3384  |             R = R + 2;  |      2  |                         0  |
  3389  |  resetPlaceHolder_2();  |         |                            |
  3395  |             R = R + 2;  |      2  |                         0  |
  3400  |  resetPlaceHolder_2();  |         |                            |
  3406  |             R = R + 2;  |      2  |                         0  |
  3411  |  resetPlaceHolder_2();  |         |                            |
  3417  |             R = R + 2;  |      2  |                         0  |
  3422  |  resetPlaceHolder_2();  |         |                            |
  3428  |             R = R + 2;  |      2  |                         0  |
  3433  |  resetPlaceHolder_2();  |         |                            |
  3439  |             R = R + 2;  |      2  |                         0  |
  3444  |  resetPlaceHolder_2();  |         |                            |
  3450  |             R = R + 2;  |      2  |                         0  |
  3455  |  resetPlaceHolder_2();  |         |                            |
  3461  |             R = R + 2;  |      2  |                         0  |
  3466  |  resetPlaceHolder_2();  |         |                            |
  3472  |             R = R + 2;  |      2  |                         0  |
  3477  |  resetPlaceHolder_2();  |         |                            |
  3483  |             R = R + 2;  |      2  |                         0  |
  3488  |  resetPlaceHolder_2();  |         |                            |
  3494  |             R = R + 2;  |      2  |                         0  |
  3499  |  resetPlaceHolder_2();  |         |                            |
  3505  |             R = R + 2;  |      2  |                         0  |
  3510  |  resetPlaceHolder_2();  |         |                            |
  3516  |             R = R + 2;  |      2  |                         0  |
  3521  |  resetPlaceHolder_2();  |         |                            |
  3527  |             R = R + 2;  |      2  |                         0  |
  3532  |  resetPlaceHolder_2();  |         |                            |
  3538  |             R = R + 2;  |      2  |                         0  |
  3543  |  resetPlaceHolder_2();  |         |                            |
  3549  |             R = R + 2;  |      2  |                         0  |
  3554  |  resetPlaceHolder_2();  |         |                            |
  3560  |             R = R + 2;  |      2  |                         0  |
  3565  |  resetPlaceHolder_2();  |         |                            |
  3571  |             R = R + 2;  |      2  |                         0  |
  3576  |  resetPlaceHolder_2();  |         |                            |
  3582  |             R = R + 2;  |      2  |                         0  |
  3587  |  resetPlaceHolder_2();  |         |                            |
  3593  |             R = R + 2;  |      2  |                         0  |
  3598  |  resetPlaceHolder_2();  |         |                            |
  3604  |             R = R + 2;  |      2  |                         0  |
  3609  |  resetPlaceHolder_2();  |         |                            |
  3615  |             R = R + 2;  |      2  |                         0  |
  3620  |  resetPlaceHolder_2();  |         |                            |
  3626  |             R = R + 2;  |      2  |                         0  |
  3631  |  resetPlaceHolder_2();  |         |                            |
  3637  |             R = R + 2;  |      2  |                         0  |
  3642  |  resetPlaceHolder_2();  |         |                            |
  3648  |             R = R + 2;  |      2  |                         0  |
  3653  |  resetPlaceHolder_2();  |         |                            |
  3659  |             R = R + 2;  |      2  |                         0  |
  3664  |  resetPlaceHolder_2();  |         |                            |
  3670  |             R = R + 2;  |      2  |                         0  |
  3675  |  resetPlaceHolder_2();  |         |                            |
  3681  |             R = R + 1;  |      1  |                         0  |
  3686  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	0m28.671s
user	0m45.274s
sys	0m2.035s

2023-01-25 10:11:01,647 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:11:12,936 INFO     Done. Execution time: 11.288652181625366 seconds
2023-01-25 10:11:12,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1011-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.279s
user	0m24.669s
sys	0m2.958s

2023-01-25 10:11:12,936 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:11:12,936 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:11:14,732 INFO     Done. Execution time: 1.7951483726501465 seconds
2023-01-25 10:11:14,732 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.787s
user	0m3.327s
sys	0m0.184s

2023-01-25 10:11:14,732 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:11:14,733 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:11:14,736 INFO     Done. Execution time: 0.0033979415893554688 seconds
2023-01-25 10:11:14,736 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-25 10:11:14,736 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:11:16,433 INFO     Done. Execution time: 1.696549415588379 seconds
2023-01-25 10:11:16,433 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.688s
user	0m3.177s
sys	0m0.232s

2023-01-25 10:11:16,433 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:11:17,452 INFO     Done. Execution time: 1.0190131664276123 seconds
2023-01-25 10:11:17,453 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.011s
user	0m1.553s
sys	0m0.181s

2023-01-25 10:11:17,453 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:11:17,453 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:12:23,173 INFO     Done. Execution time: 65.72038769721985 seconds
2023-01-25 10:12:23,174 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz5145570957998989719/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5145570957998989719/bin -o /tmp/qfuzz5145570957998989719/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5145570957998989719/bin
Found file /tmp/qfuzz5145570957998989719/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz5145570957998989719/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5145570957998989719/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5145570957998989719/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5145570957998989719/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5145570957998989719/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 125408 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [53.00]
2; /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]
9; /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16
/tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 95, 133, 67, 70, 89, 106, 177, 58, 106, 161, 66, 190)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 120, 178, 178, 178, 178, 178, 178, 171, 16, 187, 110, 33, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5145570957998989719/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [95,133,67,70,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [120,178,178,178,178]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.712s
user	0m21.762s
sys	0m1.598s

2023-01-25 10:12:23,174 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:12:23,174 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:12:23,179 INFO     Done. Execution time: 0.004334449768066406 seconds
2023-01-25 10:12:23,179 INFO     Output: 
2023-01-25 10:12:23,179 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:12:25,891 INFO     Done. Execution time: 2.71151065826416 seconds
2023-01-25 10:12:25,891 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [95,133,67,70,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [120,178,178,178,178])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |      stopIndex      |
--------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [95,133,67,70,89]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [95,133,67,70,89]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [95,133,67,70,89]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [95,133,67,70,89]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [95,133,67,70,89]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [95,133,67,70,89]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [95,133,67,70,89]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [95,133,67,70,89]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [95,133,67,70,89]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [95,133,67,70,89]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     133  |  1  |         1  |        2  |    1  |      1  |  [95,133,67,70,89]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     133  |  1  |         1  |        2  |    2  |      1  |  [95,133,67,70,89]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     133  |  2  |         1  |        2  |    2  |      1  |  [95,133,67,70,89]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     133  |  2  |         1  |        2  |    2  |      1  |  [95,133,67,70,89]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.702s
user	0m5.279s
sys	0m0.327s

2023-01-25 10:12:25,891 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:12:27,902 INFO     Done. Execution time: 2.011059522628784 seconds
2023-01-25 10:12:27,902 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1012-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1012-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.003s
user	0m3.364s
sys	0m0.225s

2023-01-25 10:12:27,903 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:12:27,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:13:34,026 INFO     Done. Execution time: 66.1234757900238 seconds
2023-01-25 10:13:34,027 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz534225778877679874/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz534225778877679874/bin -o /tmp/qfuzz534225778877679874/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz534225778877679874/bin
Found file /tmp/qfuzz534225778877679874/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz534225778877679874/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz534225778877679874/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz534225778877679874/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz534225778877679874/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz534225778877679874/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz534225778877679874/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz534225778877679874/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 117583 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz534225778877679874/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz534225778877679874/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz534225778877679874/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.116s
user	0m22.862s
sys	0m1.525s

2023-01-25 10:13:34,027 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:13:34,027 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:13:34,032 INFO     Done. Execution time: 0.0041005611419677734 seconds
2023-01-25 10:13:34,032 INFO     Output: 
2023-01-25 10:13:34,032 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:13:37,307 INFO     Done. Execution time: 3.2748491764068604 seconds
2023-01-25 10:13:37,307 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            187  |  33  |                     2  |
    32  |     return;  |         |  0  |            187  |  33  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m3.266s
user	0m6.037s
sys	0m0.316s

2023-01-25 10:13:37,307 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:13:39,886 INFO     Done. Execution time: 2.578228235244751 seconds
2023-01-25 10:13:39,886 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1013-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1013-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.567s
user	0m4.591s
sys	0m0.323s

2023-01-25 10:13:39,887 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:13:39,888 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:14:46,913 INFO     Done. Execution time: 67.02483940124512 seconds
2023-01-25 10:14:46,913 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz3589431191512545469/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3589431191512545469/bin -o /tmp/qfuzz3589431191512545469/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3589431191512545469/bin
Found file /tmp/qfuzz3589431191512545469/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz3589431191512545469/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3589431191512545469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3589431191512545469/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3589431191512545469/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3589431191512545469/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 141617 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m141k to 141k us (average: 141k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 120, 4, 67, 50, 70, 93, 16, 187, 94, 33, 153, 67, 50, 170, 93, 16, 16, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3589431191512545469/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.014s
user	0m26.817s
sys	0m1.883s

2023-01-25 10:14:46,913 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:14:46,913 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:14:46,917 INFO     Done. Execution time: 0.003370046615600586 seconds
2023-01-25 10:14:46,917 INFO     Output: 
2023-01-25 10:14:46,917 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:14:52,173 INFO     Done. Execution time: 5.256253957748413 seconds
2023-01-25 10:14:52,173 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.249s
user	0m9.137s
sys	0m1.699s

2023-01-25 10:14:52,174 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:14:59,802 INFO     Done. Execution time: 7.628402471542358 seconds
2023-01-25 10:14:59,802 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1014-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.621s
user	0m16.277s
sys	0m2.632s

2023-01-25 10:14:59,803 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:14:59,803 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:16:06,512 INFO     Done. Execution time: 66.7087893486023 seconds
2023-01-25 10:16:06,512 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz4127107230988938307/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4127107230988938307/bin -o /tmp/qfuzz4127107230988938307/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4127107230988938307/bin
Found file /tmp/qfuzz4127107230988938307/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz4127107230988938307/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4127107230988938307/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4127107230988938307/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4127107230988938307/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4127107230988938307/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 141253 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m141k to 141k us (average: 141k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3766.00]
2; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 4; 11.00; [15.00,95.00,106.00,3175.00]
3; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 5; 9.00; [666.00,675.00,1355.00,2215.00,3075.00]
7; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 5; 680.00; [675.00,1355.00,2135.00,3075.00,3766.00]
10; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 5; 80.00; [675.00,1355.00,2995.00,3075.00,3766.00]
12; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 69.00; [335.00,675.00,1395.00,3766.00,3835.00]
18; /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 5; 691.00; [675.00,1515.00,2215.00,3075.00,3766.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 75, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 93, 17, 187, 110, 33, 6, 67, 26, 167, 67, 16, 187, 110, 170, 93, 16, 191, 110, 62, 153, 67, 67, 50, 50, 170, 88, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 191, 16, 69, 33, 152, 16, 67, 50, 170, 96, 107, 5, 14, 110, 19, 130, 191, 16, 69, 65, 170, 93, 153, 75, 187, 110, 30, 132, 12, 5, 188, 173)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 149, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 131, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 106, 33, 153, 67, 50, 170, 93, 16, 172, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 110, 33, 153, 67, 50, 109, 87, 16, 187, 110, 31, 120, 50, 170, 93, 16, 187, 129, 33, 193, 67, 55, 81, 50, 89, 4, 61, 187, 13, 33, 153, 67, 50, 18, 59, 16, 195, 5, 65, 153, 67, 178, 170, 93, 16, 47, 110, 33, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4127107230988938307/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,75,110,33,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,191,16,69,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,149,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,106,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.698s
user	0m27.097s
sys	0m1.831s

2023-01-25 10:16:06,512 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:16:06,512 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:16:06,516 INFO     Done. Execution time: 0.003459453582763672 seconds
2023-01-25 10:16:06,516 INFO     Output: 
2023-01-25 10:16:06,516 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:16:14,331 INFO     Done. Execution time: 7.814078330993652 seconds
2023-01-25 10:16:14,331 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,75,110,33,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,191,16,69,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,149,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,106,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff          |  i  |  lhsBuilder  |  rhsBuilder  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [187,75,110,33,153]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [187,75,110,33,153]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [187,75,110,33,153]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [187,75,110,33,153]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [187,75,110,33,153]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [187,75,110,33,153]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [187,75,110,33,153]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [187,75,110,33,153]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    187  |  [187,75,110,33,153]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    187  |  187  |    187  |  [187,75,110,33,153]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  187  |    187  |  [187,75,110,33,153]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  187  |    187  |  [187,75,110,33,153]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  187  |     75  |  [187,75,110,33,153]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     75  |  262  |     75  |  [187,75,110,33,153]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  262  |     75  |  [187,75,110,33,153]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  262  |     75  |  [187,75,110,33,153]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  262  |    110  |  [187,75,110,33,153]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |    110  |  372  |    110  |  [187,75,110,33,153]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  372  |    110  |  [187,75,110,33,153]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  372  |    110  |  [187,75,110,33,153]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  372  |     33  |  [187,75,110,33,153]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     33  |  405  |     33  |  [187,75,110,33,153]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  405  |     33  |  [187,75,110,33,153]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  405  |     33  |  [187,75,110,33,153]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  405  |    153  |  [187,75,110,33,153]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    153  |  558  |    153  |  [187,75,110,33,153]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  558  |    153  |  [187,75,110,33,153]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  558  |    153  |  [187,75,110,33,153]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    187  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     75  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |    110  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     33  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    153  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m7.805s
user	0m12.585s
sys	0m2.769s

2023-01-25 10:16:14,331 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:16:22,113 INFO     Done. Execution time: 7.7815515995025635 seconds
2023-01-25 10:16:22,113 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1016-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1016-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.774s
user	0m16.463s
sys	0m2.483s

2023-01-25 10:16:22,113 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:16:22,113 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:17:28,104 INFO     Done. Execution time: 65.99038815498352 seconds
2023-01-25 10:17:28,104 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz8144094475440711889/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8144094475440711889/bin -o /tmp/qfuzz8144094475440711889/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8144094475440711889/bin
Found file /tmp/qfuzz8144094475440711889/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz8144094475440711889/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8144094475440711889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8144094475440711889/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8144094475440711889/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8144094475440711889/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 148115 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m148k to 148k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000000,orig:example.txt; 7; 333.00; [675.00,1008.00,1355.00,2215.00,3075.00,3408.00,3764.00]
2; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 5; 9.00; [95.00,104.00,1008.00,1355.00,3408.00]
4; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 4; 7.00; [308.00,1128.00,1135.00,1144.00]
7; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 7; 340.00; [328.00,1015.00,1355.00,1868.00,2215.00,3415.00,3764.00]
12; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 7; 7.00; [175.00,668.00,675.00,1028.00,1355.00,3075.00,3764.00]
14; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 7; 40.00; [288.00,635.00,675.00,1528.00,2215.00,3615.00,3764.00]
16; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 7; 80.00; [675.00,1008.00,2215.00,2995.00,3075.00,3408.00,3764.00]
20; /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 7; 347.00; [615.00,1508.00,1855.00,2215.00,3068.00,3415.00,3764.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 30, 170, 92, 153, 75, 186, 162, 35, 80, 37, 187, 63, 33, 153, 156, 66, 153, 67, 50, 149, 188, 15, 29, 146, 33, 134, 153, 67, 50, 149, 188, 15, 29, 146, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 149, 50, 170, 93, 16, 13, 11, 66, 170, 38, 4, 54, 110, 33, 151, 153, 67, 50, 36, 102, 110, 116, 67, 106, 170, 93, 175, 139, 57, 150, 32, 32, 32, 32, 194, 29, 110, 33, 153, 143, 50, 170, 93, 16, 13, 11, 30, 170, 93, 181, 32, 32, 32, 32, 152, 187, 113, 16, 139, 57, 36, 32, 57, 32, 32, 32, 32, 32, 32, 32, 32, 45, 189, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 31, 33, 180, 76, 14, 16, 75, 87, 180, 93, 75, 200, 57, 153, 67, 198, 198, 82, 198, 50, 170, 93, 23, 187, 93, 16, 189, 110, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 8, 33, 153, 67, 51, 33, 153, 75, 187, 110, 176, 119, 77, 8, 57, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 52, 52, 52, 155, 67, 56, 170, 93, 16, 187, 130, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 67, 50, 170, 93, 16, 187, 110, 170, 37, 4, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 56, 56, 56, 56, 15, 56, 56, 56, 56, 26, 170, 4, 18, 56, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 51, 16, 187, 110, 33, 94, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 19, 63, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8144094475440711889/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,30,170,92], 153, 75
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,149], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,31,33,180], 76, 14
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,8,33,153,67], 51, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,67,50,170], 93, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,56,56,56,56], 15, 56
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.982s
user	0m26.787s
sys	0m1.679s

2023-01-25 10:17:28,104 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:17:28,104 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:17:28,108 INFO     Done. Execution time: 0.003878355026245117 seconds
2023-01-25 10:17:28,108 INFO     Output: 
2023-01-25 10:17:28,109 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:17:37,711 INFO     Done. Execution time: 9.602372169494629 seconds
2023-01-25 10:17:37,711 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,30,170,92], 153, 75)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,149], 50, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,31,33,180], 76, 14)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,8,33,153,67], 51, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,67,50,170], 93, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,56,56,56,56], 15, 56)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,67], 50, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens         |  years  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |      75  |  [187,110,30,170,92]  |    153  |
    26  |                      // int R = 0;  |         |     0  |         |     |      75  |  [187,110,30,170,92]  |    153  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |      75  |  [187,110,30,170,92]  |    153  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |      75  |  [187,110,30,170,92]  |    153  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |      75  |  [187,110,30,170,92]  |    153  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |      75  |  [187,110,30,170,92]  |    153  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    187  |  0  |      75  |  [187,110,30,170,92]  |    153  |
    41  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |      75  |  [187,110,30,170,92]  |    153  |
    44  |                     R = R + years;  |    153  |   340  |    187  |  0  |      75  |  [187,110,30,170,92]  |    153  |
    47  |                    R = R + months;  |     75  |   415  |    187  |  0  |      75  |  [187,110,30,170,92]  |    153  |
    51  |                         i = i + 1;  |         |   415  |    187  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    52  |              resetPlaceHolder_1();  |         |   415  |    187  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    58  |      chunk = arrayRead(tokens, i);  |         |   415  |    110  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    61  |                     R = R + chunk;  |    110  |   525  |    110  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    64  |                     R = R + years;  |    153  |   678  |    110  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    67  |                    R = R + months;  |     75  |   753  |    110  |  1  |      75  |  [187,110,30,170,92]  |    153  |
    71  |                         i = i + 1;  |         |   753  |    110  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    72  |              resetPlaceHolder_1();  |         |   753  |    110  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    78  |      chunk = arrayRead(tokens, i);  |         |   753  |     30  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    81  |                     R = R + chunk;  |     30  |   783  |     30  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    84  |                     R = R + years;  |    153  |   936  |     30  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    87  |                    R = R + months;  |     75  |  1011  |     30  |  2  |      75  |  [187,110,30,170,92]  |    153  |
    91  |                         i = i + 1;  |         |  1011  |     30  |  3  |      75  |  [187,110,30,170,92]  |    153  |
    92  |              resetPlaceHolder_1();  |         |  1011  |     30  |  3  |      75  |  [187,110,30,170,92]  |    153  |
    98  |      chunk = arrayRead(tokens, i);  |         |  1011  |    170  |  3  |      75  |  [187,110,30,170,92]  |    153  |
   101  |                     R = R + chunk;  |    170  |  1181  |    170  |  3  |      75  |  [187,110,30,170,92]  |    153  |
   104  |                     R = R + years;  |    153  |  1334  |    170  |  3  |      75  |  [187,110,30,170,92]  |    153  |
   107  |                    R = R + months;  |     75  |  1409  |    170  |  3  |      75  |  [187,110,30,170,92]  |    153  |
   111  |                         i = i + 1;  |         |  1409  |    170  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   112  |              resetPlaceHolder_1();  |         |  1409  |    170  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1409  |     92  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   121  |                     R = R + chunk;  |     92  |  1501  |     92  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   124  |                     R = R + years;  |    153  |  1654  |     92  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   127  |                    R = R + months;  |     75  |  1729  |     92  |  4  |      75  |  [187,110,30,170,92]  |    153  |
   131  |                         i = i + 1;  |         |  1729  |     92  |  5  |      75  |  [187,110,30,170,92]  |    153  |
   132  |              resetPlaceHolder_1();  |         |  1729  |     92  |  5  |      75  |  [187,110,30,170,92]  |    153  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |    153  |                         0  |
    47  |        R = R + months;  |     75  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |    153  |                         1  |
    67  |        R = R + months;  |     75  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     30  |                            |
    84  |         R = R + years;  |    153  |                         2  |
    87  |        R = R + months;  |     75  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    170  |                            |
   104  |         R = R + years;  |    153  |                         3  |
   107  |        R = R + months;  |     75  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     92  |                            |
   124  |         R = R + years;  |    153  |                         4  |
   127  |        R = R + months;  |     75  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |    153  |                            |
    47  |        R = R + months;  |     75  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |    153  |                            |
    67  |        R = R + months;  |     75  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     30  |                            |
    84  |         R = R + years;  |    153  |                            |
    87  |        R = R + months;  |     75  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    170  |                            |
   104  |         R = R + years;  |    153  |                            |
   107  |        R = R + months;  |     75  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     92  |                            |
   124  |         R = R + years;  |    153  |                            |
   127  |        R = R + months;  |     75  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    44  |         R = R + years;  |    153  |                         0  |                            |                            |
    47  |        R = R + months;  |     75  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    64  |         R = R + years;  |    153  |                         1  |                            |                            |
    67  |        R = R + months;  |     75  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     30  |                            |                            |                         0  |
    84  |         R = R + years;  |    153  |                         2  |                            |                            |
    87  |        R = R + months;  |     75  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |    170  |                            |                            |                         0  |
   104  |         R = R + years;  |    153  |                         3  |                            |                            |
   107  |        R = R + months;  |     75  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     92  |                            |                            |                         0  |
   124  |         R = R + years;  |    153  |                         4  |                            |                            |
   127  |        R = R + months;  |     75  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m9.592s
user	0m16.246s
sys	0m4.131s

2023-01-25 10:17:37,712 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:18:37,033 INFO     Done. Execution time: 59.32100439071655 seconds
2023-01-25 10:18:37,033 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `57.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1017-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m59.313s
user	2m59.524s
sys	0m20.686s

2023-01-25 10:18:37,033 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:18:37,033 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:19:42,802 INFO     Done. Execution time: 65.76896786689758 seconds
2023-01-25 10:19:42,803 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz3117138503789339671/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3117138503789339671/bin -o /tmp/qfuzz3117138503789339671/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3117138503789339671/bin
Found file /tmp/qfuzz3117138503789339671/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz3117138503789339671/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3117138503789339671/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3117138503789339671/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3117138503789339671/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3117138503789339671/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 126458 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 70, 170, 92, 153, 7, 67, 49, 110, 4, 125, 90, 182, 130, 110, 152, 119, 101, 6, 199, 43, 72, 126, 101, 132, 4, 169, 18, 186, 5, 56, 110, 185, 48, 89, 63, 163, 160, 177, 168, 110, 152, 159, 117, 70, 53, 110, 110, 63, 97, 23, 135, 13, 28, 163, 72, 126, 8, 84, 63, 126, 110, 110, 104, 110, 117, 69, 125, 18, 13, 8, 6, 172, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3117138503789339671/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.760s
user	0m22.010s
sys	0m1.642s

2023-01-25 10:19:42,803 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:19:42,803 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:19:42,806 INFO     Done. Execution time: 0.0032973289489746094 seconds
2023-01-25 10:19:42,807 INFO     Output: 
2023-01-25 10:19:42,807 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:19:48,151 INFO     Done. Execution time: 5.343931436538696 seconds
2023-01-25 10:19:48,151 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.337s
user	0m9.829s
sys	0m1.578s

2023-01-25 10:19:48,151 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:19:55,679 INFO     Done. Execution time: 7.527057647705078 seconds
2023-01-25 10:19:55,679 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1019-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1019-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.519s
user	0m15.491s
sys	0m2.598s

2023-01-25 10:19:55,679 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:19:55,679 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:21:01,720 INFO     Done. Execution time: 66.04038953781128 seconds
2023-01-25 10:21:01,720 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz1240944361369193109/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1240944361369193109/bin -o /tmp/qfuzz1240944361369193109/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1240944361369193109/bin
Found file /tmp/qfuzz1240944361369193109/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz1240944361369193109/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1240944361369193109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1240944361369193109/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1240944361369193109/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1240944361369193109/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 94, exec speed = 154955 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m154k to 154k us (average: 154k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000000,orig:example.txt; 9; 1.00; [28.00,32.00,35.50,37.00,668.00,1348.00,2208.00,3068.00,3748.00]
2; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 9; 1.00; [28.00,32.00,35.50,37.00,668.00,1028.00,2208.00,3748.00,3868.00]
3; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,1168.00]
8; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 9; 1.00; [28.00,32.00,35.50,37.00,1028.00,1348.00,2208.00,3068.00,3748.00]
37; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4; 9; 1.00; [28.00,32.00,35.50,37.00,108.00,668.00,1348.00,2208.00,3708.00]
49; /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:64; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,3668.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:64
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 110, 33, 185, 67, 50, 170, 93, 16, 110, 33, 153, 118, 57, 153, 67, 50, 170, 93, 16, 191, 110, 33, 153, 67, 81, 170, 93, 37, 40, 114, 28, 50, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 51, 153, 67, 50, 47, 93, 36, 106, 16, 187, 110, 33, 153, 118, 57, 153, 67, 50, 170, 93, 16, 191, 110, 33, 153, 67, 81, 170, 93, 37, 40, 114, 28, 48, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 193, 51, 51, 51, 51, 51, 51, 51, 51, 170, 93, 16, 170, 93, 16, 187, 93, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 117, 49, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1240944361369193109/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [183]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,110,33,185,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,51,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,193,51]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.032s
user	0m24.962s
sys	0m2.060s

2023-01-25 10:21:01,720 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:21:01,720 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:21:01,725 INFO     Done. Execution time: 0.004408836364746094 seconds
2023-01-25 10:21:01,725 INFO     Output: 
2023-01-25 10:21:01,725 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:21:04,860 INFO     Done. Execution time: 3.134582757949829 seconds
2023-01-25 10:21:04,860 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([183])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,110,33,185,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,51,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,193,51])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 11):
                                                        
 Index  |   Commands   |  Costs  |  R  |  baseMessage  |
--------------------------------------------------------
     2  |  int R = 0;  |         |  0  |        [183]  |
    10  |     return;  |         |  0  |        [183]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m3.126s
user	0m6.042s
sys	0m0.378s

2023-01-25 10:21:04,860 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:21:07,078 INFO     Done. Execution time: 2.217245101928711 seconds
2023-01-25 10:21:07,078 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((R < (8 + (8 * baseMessage))) || (R == (8 + (8 * baseMessage))));
    mostPreciseBound((R < (3 + (6 * baseMessage))) || (R == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    R = R + 1;
    R = R + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      R = R + 1;
      R = R + 1;
      R = R + 1;
      R = R + chunk;
      R = R + 1;
      R = R + 1;
      R = R + 1;
      i = i + 1;
    }
    R = R + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((R < (8 + (8 * baseMessage))) || (R == (8 + (8 * baseMessage))));
    mostPreciseBound((R < (3 + (6 * baseMessage))) || (R == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    R = R + 1;
    R = R + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      R = R + 1;
      R = R + 1;
      R = R + 1;
      R = R + chunk;
      R = R + 1;
      R = R + 1;
      R = R + 1;
      i = i + 1;
    }
    R = R + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1021-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.208s
user	0m3.728s
sys	0m0.260s

2023-01-25 10:21:07,079 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:21:07,079 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:22:13,188 INFO     Done. Execution time: 66.1093544960022 seconds
2023-01-25 10:22:13,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz8294320265227232114/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8294320265227232114/bin -o /tmp/qfuzz8294320265227232114/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8294320265227232114/bin
Found file /tmp/qfuzz8294320265227232114/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz8294320265227232114/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8294320265227232114/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8294320265227232114/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8294320265227232114/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8294320265227232114/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 136985 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
10; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
20; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
21; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
25; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
34; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
40; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
41; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
55; /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 87, 185, 58, 170, 4, 38, 16, 61, 199, 47, 55, 73, 118, 20, 96, 56, 5, 18, 128, 139, 4, 195)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 5, 44, 91, 139, 5, 121, 133, 138, 160, 128, 130, 141, 108, 158, 141, 80, 71, 138, 138, 134, 138, 138, 130, 138, 4, 131, 162, 63, 168, 138)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(130)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 111, 132, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 37, 149, 128, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 43, 56, 4, 7, 174, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 19, 195, 36, 119, 4, 198, 65, 65, 65, 44, 187, 77, 40, 119, 4, 118, 65, 65, 65, 44, 37, 12, 66, 91, 16, 5, 70, 141, 68, 174, 67, 116, 11, 96, 145, 78, 172, 54, 51, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 187, 8, 33, 153, 67, 57, 39, 60, 16, 135, 55, 136, 52, 65, 186, 187, 10, 181, 167, 136, 114, 63, 110, 57, 184, 86, 199, 110, 194, 184, 75, 32, 74, 93, 16, 187, 13, 11, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(165, 63, 33, 155, 110, 71, 51, 4, 4, 4, 53, 187, 110, 74, 146, 4, 133, 50, 125, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 19, 4, 132, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(115, 4, 4, 55, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 108, 8, 117, 132, 61, 187, 110, 33, 153, 67, 50, 170, 93, 16, 86, 110, 59, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8294320265227232114/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 135
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 130
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 26
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 92
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 165
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 115
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.101s
user	0m24.217s
sys	0m2.087s

2023-01-25 10:22:13,188 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:22:13,189 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:22:13,193 INFO     Done. Execution time: 0.0038614273071289062 seconds
2023-01-25 10:22:13,193 INFO     Output: 
2023-01-25 10:22:13,193 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:22:19,964 INFO     Done. Execution time: 6.770957708358765 seconds
2023-01-25 10:22:19,964 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(135)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 15 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(151)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(130)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(26)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(58)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 15 (53.33%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(92)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(165)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(115)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 15)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 15 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 2861):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |        135  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |        135  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |        135  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |        135  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |        135  |              |
    16  |        int className_ = className;  |         |    0  |            0  |        135  |         135  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |        135  |         134  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |        135  |         134  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |        135  |         134  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |        135  |         134  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |        135  |         133  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |        135  |         133  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |        135  |         133  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |        135  |         133  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |        135  |         132  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |        135  |         132  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |        135  |         132  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |        135  |         132  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |        135  |         131  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |        135  |         131  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |        135  |         131  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |        135  |         131  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |        135  |         130  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |        135  |         130  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |        135  |         130  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |        135  |         130  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |        135  |         129  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |        135  |         129  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |        135  |         129  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |        135  |         129  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |        135  |         128  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |        135  |         128  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |        135  |         128  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |        135  |         128  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |        135  |         127  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |        135  |         127  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |        135  |         127  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |        135  |         127  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |        135  |         126  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |        135  |         126  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |        135  |         126  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |        135  |         126  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |        135  |         125  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |        135  |         125  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |        135  |         125  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |        135  |         125  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |        135  |         124  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |        135  |         124  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |        135  |         124  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |        135  |         124  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |        135  |         123  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |        135  |         123  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |        135  |         123  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |        135  |         123  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |        135  |         122  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |        135  |         122  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |        135  |         122  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |        135  |         122  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |        135  |         121  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |        135  |         121  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |        135  |         121  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |        135  |         121  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |        135  |         120  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |        135  |         120  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |        135  |         120  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |        135  |         120  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |        135  |         119  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |        135  |         119  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |        135  |         119  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |        135  |         119  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |        135  |         118  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |        135  |         118  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |        135  |         118  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |        135  |         118  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |        135  |         117  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |        135  |         117  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |        135  |         117  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |        135  |         117  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |        135  |         116  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |        135  |         116  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |        135  |         116  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |        135  |         116  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |        135  |         115  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |        135  |         115  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |        135  |         115  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |        135  |         115  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |        135  |         114  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |        135  |         114  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |        135  |         114  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |        135  |         114  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |        135  |         113  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |        135  |         113  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |        135  |         113  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |        135  |         113  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |        135  |         112  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |        135  |         112  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |        135  |         112  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |        135  |         112  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |        135  |         111  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |        135  |         111  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |        135  |         111  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |        135  |         111  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |        135  |         110  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |        135  |         110  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |        135  |         110  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |        135  |         110  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |        135  |         109  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |        135  |         109  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |        135  |         109  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |        135  |         109  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |        135  |         108  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |        135  |         108  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |        135  |         108  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |        135  |         108  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |        135  |         107  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |        135  |         107  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |        135  |         107  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |        135  |         107  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |        135  |         106  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |        135  |         106  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |        135  |         106  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |        135  |         106  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |        135  |         105  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |        135  |         105  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |        135  |         105  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |        135  |         105  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |        135  |         104  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |        135  |         104  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |        135  |         104  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |        135  |         104  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |        135  |         103  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |        135  |         103  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |        135  |         103  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |        135  |         103  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |        135  |         102  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |        135  |         102  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |        135  |         102  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |        135  |         102  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |        135  |         101  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |        135  |         101  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |        135  |         101  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |        135  |         101  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |        135  |         100  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |        135  |         100  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |        135  |         100  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |        135  |         100  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |        135  |          99  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |        135  |          99  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |        135  |          99  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |        135  |          99  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |        135  |          98  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |        135  |          98  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |        135  |          98  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |        135  |          98  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |        135  |          97  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |        135  |          97  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |        135  |          97  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |        135  |          97  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |        135  |          96  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |        135  |          96  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |        135  |          96  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |        135  |          96  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |        135  |          95  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |        135  |          95  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |        135  |          95  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |        135  |          95  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |        135  |          94  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |        135  |          94  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |        135  |          94  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |        135  |          94  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |        135  |          93  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |        135  |          93  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |        135  |          93  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |        135  |          93  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |        135  |          92  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |        135  |          92  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |        135  |          92  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |        135  |          92  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |        135  |          91  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |        135  |          91  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |        135  |          91  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |        135  |          91  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |        135  |          90  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |        135  |          90  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |        135  |          90  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |        135  |          90  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |        135  |          89  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |        135  |          89  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |        135  |          89  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |        135  |          89  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |        135  |          88  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |        135  |          88  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |        135  |          88  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |        135  |          88  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |        135  |          87  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |        135  |          87  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |        135  |          87  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |        135  |          87  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |        135  |          86  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |        135  |          86  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |        135  |          86  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |        135  |          86  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |        135  |          85  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |        135  |          85  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |        135  |          85  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |        135  |          85  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |        135  |          84  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |        135  |          84  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |        135  |          84  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |        135  |          84  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |        135  |          83  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |        135  |          83  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |        135  |          83  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |        135  |          83  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |        135  |          82  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |        135  |          82  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |        135  |          82  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |        135  |          82  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |        135  |          81  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |        135  |          81  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |        135  |          81  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |        135  |          81  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |        135  |          80  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |        135  |          80  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |        135  |          80  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |        135  |          80  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |        135  |          79  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |        135  |          79  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |        135  |          79  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |        135  |          79  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |        135  |          78  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |        135  |          78  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |        135  |          78  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |        135  |          78  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |        135  |          77  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |        135  |          77  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |        135  |          77  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |        135  |          77  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |        135  |          76  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |        135  |          76  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |        135  |          76  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |        135  |          76  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |        135  |          75  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |        135  |          75  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |        135  |          75  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |        135  |          75  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |        135  |          74  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |        135  |          74  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |        135  |          74  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |        135  |          74  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |        135  |          73  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |        135  |          73  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |        135  |          73  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |        135  |          73  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |        135  |          72  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |        135  |          72  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |        135  |          72  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |        135  |          72  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |        135  |          71  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |        135  |          71  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |        135  |          71  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |        135  |          71  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |        135  |          70  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |        135  |          70  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |        135  |          70  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |        135  |          70  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |        135  |          69  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |        135  |          69  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |        135  |          69  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |        135  |          69  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |        135  |          68  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |        135  |          68  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |        135  |          68  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |        135  |          68  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |        135  |          67  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |        135  |          67  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |        135  |          67  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |        135  |          67  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |        135  |          66  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |        135  |          66  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |        135  |          66  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |        135  |          66  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |        135  |          65  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |        135  |          65  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |        135  |          65  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |        135  |          65  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |        135  |          64  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |        135  |          64  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |        135  |          64  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |        135  |          64  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |        135  |          63  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |        135  |          63  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |        135  |          63  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |        135  |          63  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |        135  |          62  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |        135  |          62  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |        135  |          62  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |        135  |          62  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |        135  |          61  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |        135  |          61  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |        135  |          61  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |        135  |          61  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |        135  |          60  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |        135  |          60  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |        135  |          60  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |        135  |          60  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |        135  |          59  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |        135  |          59  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |        135  |          59  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |        135  |          59  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |        135  |          58  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |        135  |          58  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |        135  |          58  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |        135  |          58  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |        135  |          57  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |        135  |          57  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |        135  |          57  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |        135  |          57  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |        135  |          56  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |        135  |          56  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |        135  |          56  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |        135  |          56  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |        135  |          55  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |        135  |          55  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |        135  |          55  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |        135  |          55  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |        135  |          54  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |        135  |          54  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |        135  |          54  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |        135  |          54  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |        135  |          53  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |        135  |          53  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |        135  |          53  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |        135  |          53  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |        135  |          52  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |        135  |          52  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |        135  |          52  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |        135  |          52  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |        135  |          51  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |        135  |          51  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |        135  |          51  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |        135  |          51  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |        135  |          50  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |        135  |          50  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |        135  |          50  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |        135  |          50  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |        135  |          49  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |        135  |          49  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |        135  |          49  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |        135  |          49  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |        135  |          48  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |        135  |          48  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |        135  |          48  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |        135  |          48  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |        135  |          47  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |        135  |          47  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |        135  |          47  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |        135  |          47  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |        135  |          46  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |        135  |          46  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |        135  |          46  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |        135  |          46  |
  1898  |       className_ = className_ - 1;  |         |  178  |          178  |        135  |          45  |
  1902  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |        135  |          45  |
  1905  |                         R = R + 2;  |      2  |  180  |          180  |        135  |          45  |
  1906  |              resetPlaceHolder_1();  |         |  180  |          180  |        135  |          45  |
  1919  |       className_ = className_ - 1;  |         |  180  |          180  |        135  |          44  |
  1923  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |        135  |          44  |
  1926  |                         R = R + 2;  |      2  |  182  |          182  |        135  |          44  |
  1927  |              resetPlaceHolder_1();  |         |  182  |          182  |        135  |          44  |
  1940  |       className_ = className_ - 1;  |         |  182  |          182  |        135  |          43  |
  1944  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |        135  |          43  |
  1947  |                         R = R + 2;  |      2  |  184  |          184  |        135  |          43  |
  1948  |              resetPlaceHolder_1();  |         |  184  |          184  |        135  |          43  |
  1961  |       className_ = className_ - 1;  |         |  184  |          184  |        135  |          42  |
  1965  |     arrayPrefix = arrayPrefix + 2;  |         |  184  |          186  |        135  |          42  |
  1968  |                         R = R + 2;  |      2  |  186  |          186  |        135  |          42  |
  1969  |              resetPlaceHolder_1();  |         |  186  |          186  |        135  |          42  |
  1982  |       className_ = className_ - 1;  |         |  186  |          186  |        135  |          41  |
  1986  |     arrayPrefix = arrayPrefix + 2;  |         |  186  |          188  |        135  |          41  |
  1989  |                         R = R + 2;  |      2  |  188  |          188  |        135  |          41  |
  1990  |              resetPlaceHolder_1();  |         |  188  |          188  |        135  |          41  |
  2003  |       className_ = className_ - 1;  |         |  188  |          188  |        135  |          40  |
  2007  |     arrayPrefix = arrayPrefix + 2;  |         |  188  |          190  |        135  |          40  |
  2010  |                         R = R + 2;  |      2  |  190  |          190  |        135  |          40  |
  2011  |              resetPlaceHolder_1();  |         |  190  |          190  |        135  |          40  |
  2024  |       className_ = className_ - 1;  |         |  190  |          190  |        135  |          39  |
  2028  |     arrayPrefix = arrayPrefix + 2;  |         |  190  |          192  |        135  |          39  |
  2031  |                         R = R + 2;  |      2  |  192  |          192  |        135  |          39  |
  2032  |              resetPlaceHolder_1();  |         |  192  |          192  |        135  |          39  |
  2045  |       className_ = className_ - 1;  |         |  192  |          192  |        135  |          38  |
  2049  |     arrayPrefix = arrayPrefix + 2;  |         |  192  |          194  |        135  |          38  |
  2052  |                         R = R + 2;  |      2  |  194  |          194  |        135  |          38  |
  2053  |              resetPlaceHolder_1();  |         |  194  |          194  |        135  |          38  |
  2066  |       className_ = className_ - 1;  |         |  194  |          194  |        135  |          37  |
  2070  |     arrayPrefix = arrayPrefix + 2;  |         |  194  |          196  |        135  |          37  |
  2073  |                         R = R + 2;  |      2  |  196  |          196  |        135  |          37  |
  2074  |              resetPlaceHolder_1();  |         |  196  |          196  |        135  |          37  |
  2087  |       className_ = className_ - 1;  |         |  196  |          196  |        135  |          36  |
  2091  |     arrayPrefix = arrayPrefix + 2;  |         |  196  |          198  |        135  |          36  |
  2094  |                         R = R + 2;  |      2  |  198  |          198  |        135  |          36  |
  2095  |              resetPlaceHolder_1();  |         |  198  |          198  |        135  |          36  |
  2108  |       className_ = className_ - 1;  |         |  198  |          198  |        135  |          35  |
  2112  |     arrayPrefix = arrayPrefix + 2;  |         |  198  |          200  |        135  |          35  |
  2115  |                         R = R + 2;  |      2  |  200  |          200  |        135  |          35  |
  2116  |              resetPlaceHolder_1();  |         |  200  |          200  |        135  |          35  |
  2129  |       className_ = className_ - 1;  |         |  200  |          200  |        135  |          34  |
  2133  |     arrayPrefix = arrayPrefix + 2;  |         |  200  |          202  |        135  |          34  |
  2136  |                         R = R + 2;  |      2  |  202  |          202  |        135  |          34  |
  2137  |              resetPlaceHolder_1();  |         |  202  |          202  |        135  |          34  |
  2150  |       className_ = className_ - 1;  |         |  202  |          202  |        135  |          33  |
  2154  |     arrayPrefix = arrayPrefix + 2;  |         |  202  |          204  |        135  |          33  |
  2157  |                         R = R + 2;  |      2  |  204  |          204  |        135  |          33  |
  2158  |              resetPlaceHolder_1();  |         |  204  |          204  |        135  |          33  |
  2171  |       className_ = className_ - 1;  |         |  204  |          204  |        135  |          32  |
  2175  |     arrayPrefix = arrayPrefix + 2;  |         |  204  |          206  |        135  |          32  |
  2178  |                         R = R + 2;  |      2  |  206  |          206  |        135  |          32  |
  2179  |              resetPlaceHolder_1();  |         |  206  |          206  |        135  |          32  |
  2192  |       className_ = className_ - 1;  |         |  206  |          206  |        135  |          31  |
  2196  |     arrayPrefix = arrayPrefix + 2;  |         |  206  |          208  |        135  |          31  |
  2199  |                         R = R + 2;  |      2  |  208  |          208  |        135  |          31  |
  2200  |              resetPlaceHolder_1();  |         |  208  |          208  |        135  |          31  |
  2213  |       className_ = className_ - 1;  |         |  208  |          208  |        135  |          30  |
  2217  |     arrayPrefix = arrayPrefix + 2;  |         |  208  |          210  |        135  |          30  |
  2220  |                         R = R + 2;  |      2  |  210  |          210  |        135  |          30  |
  2221  |              resetPlaceHolder_1();  |         |  210  |          210  |        135  |          30  |
  2234  |       className_ = className_ - 1;  |         |  210  |          210  |        135  |          29  |
  2238  |     arrayPrefix = arrayPrefix + 2;  |         |  210  |          212  |        135  |          29  |
  2241  |                         R = R + 2;  |      2  |  212  |          212  |        135  |          29  |
  2242  |              resetPlaceHolder_1();  |         |  212  |          212  |        135  |          29  |
  2255  |       className_ = className_ - 1;  |         |  212  |          212  |        135  |          28  |
  2259  |     arrayPrefix = arrayPrefix + 2;  |         |  212  |          214  |        135  |          28  |
  2262  |                         R = R + 2;  |      2  |  214  |          214  |        135  |          28  |
  2263  |              resetPlaceHolder_1();  |         |  214  |          214  |        135  |          28  |
  2276  |       className_ = className_ - 1;  |         |  214  |          214  |        135  |          27  |
  2280  |     arrayPrefix = arrayPrefix + 2;  |         |  214  |          216  |        135  |          27  |
  2283  |                         R = R + 2;  |      2  |  216  |          216  |        135  |          27  |
  2284  |              resetPlaceHolder_1();  |         |  216  |          216  |        135  |          27  |
  2297  |       className_ = className_ - 1;  |         |  216  |          216  |        135  |          26  |
  2301  |     arrayPrefix = arrayPrefix + 2;  |         |  216  |          218  |        135  |          26  |
  2304  |                         R = R + 2;  |      2  |  218  |          218  |        135  |          26  |
  2305  |              resetPlaceHolder_1();  |         |  218  |          218  |        135  |          26  |
  2318  |       className_ = className_ - 1;  |         |  218  |          218  |        135  |          25  |
  2322  |     arrayPrefix = arrayPrefix + 2;  |         |  218  |          220  |        135  |          25  |
  2325  |                         R = R + 2;  |      2  |  220  |          220  |        135  |          25  |
  2326  |              resetPlaceHolder_1();  |         |  220  |          220  |        135  |          25  |
  2339  |       className_ = className_ - 1;  |         |  220  |          220  |        135  |          24  |
  2343  |     arrayPrefix = arrayPrefix + 2;  |         |  220  |          222  |        135  |          24  |
  2346  |                         R = R + 2;  |      2  |  222  |          222  |        135  |          24  |
  2347  |              resetPlaceHolder_1();  |         |  222  |          222  |        135  |          24  |
  2360  |       className_ = className_ - 1;  |         |  222  |          222  |        135  |          23  |
  2364  |     arrayPrefix = arrayPrefix + 2;  |         |  222  |          224  |        135  |          23  |
  2367  |                         R = R + 2;  |      2  |  224  |          224  |        135  |          23  |
  2368  |              resetPlaceHolder_1();  |         |  224  |          224  |        135  |          23  |
  2381  |       className_ = className_ - 1;  |         |  224  |          224  |        135  |          22  |
  2385  |     arrayPrefix = arrayPrefix + 2;  |         |  224  |          226  |        135  |          22  |
  2388  |                         R = R + 2;  |      2  |  226  |          226  |        135  |          22  |
  2389  |              resetPlaceHolder_1();  |         |  226  |          226  |        135  |          22  |
  2402  |       className_ = className_ - 1;  |         |  226  |          226  |        135  |          21  |
  2406  |     arrayPrefix = arrayPrefix + 2;  |         |  226  |          228  |        135  |          21  |
  2409  |                         R = R + 2;  |      2  |  228  |          228  |        135  |          21  |
  2410  |              resetPlaceHolder_1();  |         |  228  |          228  |        135  |          21  |
  2423  |       className_ = className_ - 1;  |         |  228  |          228  |        135  |          20  |
  2427  |     arrayPrefix = arrayPrefix + 2;  |         |  228  |          230  |        135  |          20  |
  2430  |                         R = R + 2;  |      2  |  230  |          230  |        135  |          20  |
  2431  |              resetPlaceHolder_1();  |         |  230  |          230  |        135  |          20  |
  2444  |       className_ = className_ - 1;  |         |  230  |          230  |        135  |          19  |
  2448  |     arrayPrefix = arrayPrefix + 2;  |         |  230  |          232  |        135  |          19  |
  2451  |                         R = R + 2;  |      2  |  232  |          232  |        135  |          19  |
  2452  |              resetPlaceHolder_1();  |         |  232  |          232  |        135  |          19  |
  2465  |       className_ = className_ - 1;  |         |  232  |          232  |        135  |          18  |
  2469  |     arrayPrefix = arrayPrefix + 2;  |         |  232  |          234  |        135  |          18  |
  2472  |                         R = R + 2;  |      2  |  234  |          234  |        135  |          18  |
  2473  |              resetPlaceHolder_1();  |         |  234  |          234  |        135  |          18  |
  2486  |       className_ = className_ - 1;  |         |  234  |          234  |        135  |          17  |
  2490  |     arrayPrefix = arrayPrefix + 2;  |         |  234  |          236  |        135  |          17  |
  2493  |                         R = R + 2;  |      2  |  236  |          236  |        135  |          17  |
  2494  |              resetPlaceHolder_1();  |         |  236  |          236  |        135  |          17  |
  2507  |       className_ = className_ - 1;  |         |  236  |          236  |        135  |          16  |
  2511  |     arrayPrefix = arrayPrefix + 2;  |         |  236  |          238  |        135  |          16  |
  2514  |                         R = R + 2;  |      2  |  238  |          238  |        135  |          16  |
  2515  |              resetPlaceHolder_1();  |         |  238  |          238  |        135  |          16  |
  2528  |       className_ = className_ - 1;  |         |  238  |          238  |        135  |          15  |
  2532  |     arrayPrefix = arrayPrefix + 2;  |         |  238  |          240  |        135  |          15  |
  2535  |                         R = R + 2;  |      2  |  240  |          240  |        135  |          15  |
  2536  |              resetPlaceHolder_1();  |         |  240  |          240  |        135  |          15  |
  2549  |       className_ = className_ - 1;  |         |  240  |          240  |        135  |          14  |
  2553  |     arrayPrefix = arrayPrefix + 2;  |         |  240  |          242  |        135  |          14  |
  2556  |                         R = R + 2;  |      2  |  242  |          242  |        135  |          14  |
  2557  |              resetPlaceHolder_1();  |         |  242  |          242  |        135  |          14  |
  2570  |       className_ = className_ - 1;  |         |  242  |          242  |        135  |          13  |
  2574  |     arrayPrefix = arrayPrefix + 2;  |         |  242  |          244  |        135  |          13  |
  2577  |                         R = R + 2;  |      2  |  244  |          244  |        135  |          13  |
  2578  |              resetPlaceHolder_1();  |         |  244  |          244  |        135  |          13  |
  2591  |       className_ = className_ - 1;  |         |  244  |          244  |        135  |          12  |
  2595  |     arrayPrefix = arrayPrefix + 2;  |         |  244  |          246  |        135  |          12  |
  2598  |                         R = R + 2;  |      2  |  246  |          246  |        135  |          12  |
  2599  |              resetPlaceHolder_1();  |         |  246  |          246  |        135  |          12  |
  2612  |       className_ = className_ - 1;  |         |  246  |          246  |        135  |          11  |
  2616  |     arrayPrefix = arrayPrefix + 2;  |         |  246  |          248  |        135  |          11  |
  2619  |                         R = R + 2;  |      2  |  248  |          248  |        135  |          11  |
  2620  |              resetPlaceHolder_1();  |         |  248  |          248  |        135  |          11  |
  2633  |       className_ = className_ - 1;  |         |  248  |          248  |        135  |          10  |
  2637  |     arrayPrefix = arrayPrefix + 2;  |         |  248  |          250  |        135  |          10  |
  2640  |                         R = R + 2;  |      2  |  250  |          250  |        135  |          10  |
  2641  |              resetPlaceHolder_1();  |         |  250  |          250  |        135  |          10  |
  2654  |       className_ = className_ - 1;  |         |  250  |          250  |        135  |           9  |
  2658  |     arrayPrefix = arrayPrefix + 2;  |         |  250  |          252  |        135  |           9  |
  2661  |                         R = R + 2;  |      2  |  252  |          252  |        135  |           9  |
  2662  |              resetPlaceHolder_1();  |         |  252  |          252  |        135  |           9  |
  2675  |       className_ = className_ - 1;  |         |  252  |          252  |        135  |           8  |
  2679  |     arrayPrefix = arrayPrefix + 2;  |         |  252  |          254  |        135  |           8  |
  2682  |                         R = R + 2;  |      2  |  254  |          254  |        135  |           8  |
  2683  |              resetPlaceHolder_1();  |         |  254  |          254  |        135  |           8  |
  2696  |       className_ = className_ - 1;  |         |  254  |          254  |        135  |           7  |
  2700  |     arrayPrefix = arrayPrefix + 2;  |         |  254  |          256  |        135  |           7  |
  2703  |                         R = R + 2;  |      2  |  256  |          256  |        135  |           7  |
  2704  |              resetPlaceHolder_1();  |         |  256  |          256  |        135  |           7  |
  2717  |       className_ = className_ - 1;  |         |  256  |          256  |        135  |           6  |
  2721  |     arrayPrefix = arrayPrefix + 2;  |         |  256  |          258  |        135  |           6  |
  2724  |                         R = R + 2;  |      2  |  258  |          258  |        135  |           6  |
  2725  |              resetPlaceHolder_1();  |         |  258  |          258  |        135  |           6  |
  2738  |       className_ = className_ - 1;  |         |  258  |          258  |        135  |           5  |
  2742  |     arrayPrefix = arrayPrefix + 2;  |         |  258  |          260  |        135  |           5  |
  2745  |                         R = R + 2;  |      2  |  260  |          260  |        135  |           5  |
  2746  |              resetPlaceHolder_1();  |         |  260  |          260  |        135  |           5  |
  2759  |       className_ = className_ - 1;  |         |  260  |          260  |        135  |           4  |
  2763  |     arrayPrefix = arrayPrefix + 2;  |         |  260  |          262  |        135  |           4  |
  2766  |                         R = R + 2;  |      2  |  262  |          262  |        135  |           4  |
  2767  |              resetPlaceHolder_1();  |         |  262  |          262  |        135  |           4  |
  2780  |       className_ = className_ - 1;  |         |  262  |          262  |        135  |           3  |
  2784  |     arrayPrefix = arrayPrefix + 2;  |         |  262  |          264  |        135  |           3  |
  2787  |                         R = R + 2;  |      2  |  264  |          264  |        135  |           3  |
  2788  |              resetPlaceHolder_1();  |         |  264  |          264  |        135  |           3  |
  2801  |       className_ = className_ - 1;  |         |  264  |          264  |        135  |           2  |
  2805  |     arrayPrefix = arrayPrefix + 2;  |         |  264  |          266  |        135  |           2  |
  2808  |                         R = R + 2;  |      2  |  266  |          266  |        135  |           2  |
  2809  |              resetPlaceHolder_1();  |         |  266  |          266  |        135  |           2  |
  2822  |       className_ = className_ - 1;  |         |  266  |          266  |        135  |           1  |
  2826  |     arrayPrefix = arrayPrefix + 2;  |         |  266  |          268  |        135  |           1  |
  2829  |                         R = R + 2;  |      2  |  268  |          268  |        135  |           1  |
  2830  |              resetPlaceHolder_1();  |         |  268  |          268  |        135  |           1  |
  2843  |       className_ = className_ - 1;  |         |  268  |          268  |        135  |           0  |
  2847  |     arrayPrefix = arrayPrefix + 2;  |         |  268  |          270  |        135  |           0  |
  2850  |                         R = R + 2;  |      2  |  270  |          270  |        135  |           0  |
  2851  |              resetPlaceHolder_1();  |         |  270  |          270  |        135  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {36,57,78,99,120,141,162,183,204,225,246,267,288,309,330,351,372,393,414,435,456,477,498,519,540,561,582,603,624,645,666,687,708,729,750,771,792,813,834,855,876,897,918,939,960,981,1002,1023,1044,1065,1086,1107,1128,1149,1170,1191,1212,1233,1254,1275,1296,1317,1338,1359,1380,1401,1422,1443,1464,1485,1506,1527,1548,1569,1590,1611,1632,1653,1674,1695,1716,1737,1758,1779,1800,1821,1842,1863,1884,1905,1926,1947,1968,1989,2010,2031,2052,2073,2094,2115,2136,2157,2178,2199,2220,2241,2262,2283,2304,2325,2346,2367,2388,2409,2430,2451,2472,2493,2514,2535,2556,2577,2598,2619,2640,2661,2682,2703,2724,2745,2766,2787,2808,2829,2850}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         0  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         0  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         0  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         0  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                         0  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                         0  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                         0  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                         0  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                         0  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                         0  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                         0  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                         0  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                         0  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                         0  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                         0  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                         0  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                         0  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                         0  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                         0  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                         0  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                         0  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                         0  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                         0  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                         0  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                         0  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                         0  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                         0  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                         0  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                         0  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                         0  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                         0  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                         0  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                         0  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                         0  |
  1948  |  resetPlaceHolder_1();  |         |                            |
  1968  |             R = R + 2;  |      2  |                         0  |
  1969  |  resetPlaceHolder_1();  |         |                            |
  1989  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_1();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_1();  |         |                            |
  2031  |             R = R + 2;  |      2  |                         0  |
  2032  |  resetPlaceHolder_1();  |         |                            |
  2052  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_1();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2074  |  resetPlaceHolder_1();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2095  |  resetPlaceHolder_1();  |         |                            |
  2115  |             R = R + 2;  |      2  |                         0  |
  2116  |  resetPlaceHolder_1();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2137  |  resetPlaceHolder_1();  |         |                            |
  2157  |             R = R + 2;  |      2  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2178  |             R = R + 2;  |      2  |                         0  |
  2179  |  resetPlaceHolder_1();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2200  |  resetPlaceHolder_1();  |         |                            |
  2220  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_1();  |         |                            |
  2241  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_1();  |         |                            |
  2262  |             R = R + 2;  |      2  |                         0  |
  2263  |  resetPlaceHolder_1();  |         |                            |
  2283  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_1();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2305  |  resetPlaceHolder_1();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2326  |  resetPlaceHolder_1();  |         |                            |
  2346  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_1();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2368  |  resetPlaceHolder_1();  |         |                            |
  2388  |             R = R + 2;  |      2  |                         0  |
  2389  |  resetPlaceHolder_1();  |         |                            |
  2409  |             R = R + 2;  |      2  |                         0  |
  2410  |  resetPlaceHolder_1();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2431  |  resetPlaceHolder_1();  |         |                            |
  2451  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_1();  |         |                            |
  2472  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_1();  |         |                            |
  2493  |             R = R + 2;  |      2  |                         0  |
  2494  |  resetPlaceHolder_1();  |         |                            |
  2514  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_1();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2536  |  resetPlaceHolder_1();  |         |                            |
  2556  |             R = R + 2;  |      2  |                         0  |
  2557  |  resetPlaceHolder_1();  |         |                            |
  2577  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_1();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2599  |  resetPlaceHolder_1();  |         |                            |
  2619  |             R = R + 2;  |      2  |                         0  |
  2620  |  resetPlaceHolder_1();  |         |                            |
  2640  |             R = R + 2;  |      2  |                         0  |
  2641  |  resetPlaceHolder_1();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2662  |  resetPlaceHolder_1();  |         |                            |
  2682  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_1();  |         |                            |
  2703  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_1();  |         |                            |
  2724  |             R = R + 2;  |      2  |                         0  |
  2725  |  resetPlaceHolder_1();  |         |                            |
  2745  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_1();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2767  |  resetPlaceHolder_1();  |         |                            |
  2787  |             R = R + 2;  |      2  |                         0  |
  2788  |  resetPlaceHolder_1();  |         |                            |
  2808  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_1();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2830  |  resetPlaceHolder_1();  |         |                            |
  2850  |             R = R + 2;  |      2  |                         0  |
  2851  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m6.763s
user	0m12.988s
sys	0m1.322s

2023-01-25 10:22:19,965 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:22:26,887 INFO     Done. Execution time: 6.9223313331604 seconds
2023-01-25 10:22:26,888 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 className)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun className () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> className 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 className))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 className))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    13)  (define-fun className () Int    6)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1022-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.914s
user	0m15.190s
sys	0m2.446s

2023-01-25 10:22:26,888 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 10:22:26,888 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`

2023-01-31 11:10:06,121 INFO     Arguments:
2023-01-31 11:10:06,121 INFO     timeout	180
2023-01-31 11:10:06,121 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-31 11:10:06,121 INFO     samples	0
2023-01-31 11:10:06,121 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-31 11:10:06,121 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-31 11:10:06,121 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-31 11:10:06,122 INFO     dry	False
2023-01-31 11:10:06,122 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/qfuzz_00.txt
2023-01-31 11:10:06,122 INFO     mode	qfuzz
2023-01-31 11:10:06,122 INFO     version	master
2023-01-31 11:10:06,122 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
2023-01-31 11:10:06,122 INFO     min_int	1
2023-01-31 11:10:06,122 INFO     max_int	100
2023-01-31 11:10:06,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-31 11:10:06,128 INFO     Done. Execution time: 0.0056362152099609375 seconds
2023-01-31 11:10:06,128 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "a46acaaae36a654d9e52218d239766824b4c902a"`
2023-01-31 11:10:06,135 INFO     Done. Execution time: 0.006605625152587891 seconds
2023-01-31 11:10:06,135 INFO     Build a new version: "a46acaaae36a654d9e52218d239766824b4c902a"
2023-01-31 11:10:06,135 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-31 11:10:21,424 INFO     Done. Execution time: 15.288365602493286 seconds
2023-01-31 11:10:21,424 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 6 s, completed Jan 31, 2023 11:10:20 AM

2023-01-31 11:10:21,432 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 11:10:21,432 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:13:28,225 INFO     Done. Execution time: 186.79306268692017 seconds
2023-01-31 11:13:28,226 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3997311703868748289/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3997311703868748289/bin -o /tmp/qfuzz3997311703868748289/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3997311703868748289/bin
Found file /tmp/qfuzz3997311703868748289/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3997311703868748289/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3997311703868748289/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3997311703868748289/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3997311703868748289/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3997311703868748289/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 134523 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 69.00; [175.00,975.00,1155.00,1435.00,1735.00,1804.00,1975.00]
2; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 7; 100.00; [15.00,1015.00,1195.00,1435.00,1535.00,1855.00,2004.00]
3; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 7; 20.00; [55.00,155.00,304.00,935.00,955.00,1095.00,1215.00]
5; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 7; 180.00; [175.00,764.00,975.00,1155.00,1435.00,1735.00,1975.00]
6; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 669.00; [15.00,684.00]
10; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 7; 11.00; [175.00,1155.00,1435.00,1735.00,1815.00,1964.00,1975.00]
14; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 2; 9.00; [275.00,284.00]
50; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 7; 40.00; [35.00,695.00,875.00,915.00,1275.00,1435.00,1804.00]
73; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 200.00; [35.00,335.00,615.00,815.00,1235.00,1435.00,1804.00]
147; /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000009,src:000001+000007,op:splice,rep:64,+delta; 7; 260.00; [55.00,415.00,684.00,1135.00,1395.00,1695.00,1955.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000009,src:000001+000007,op:splice,rep:64,+delta
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000009,src:000001+000007,op:splice,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 56, 69, 20, 97, 84, 2, 29, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 30, 1, 16, 40, 61, 30, 71, 9, 34, 43, 25, 33, 30, 2, 44, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 45, 1, 63, 43, 34, 58, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 13, 13, 13, 13, 13, 13, 5, 55, 4, 4, 29, 18, 64, 82, 16, 69, 55, 61, 41, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(97, 71, 90, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 3, 69, 55, 90, 74, 40, 30, 71, 1, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 8, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 46, 47, 2, 54, 60, 7, 32, 26, 1, 97, 12, 14, 11, 35, 58, 14, 1, 14, 14, 14, 14, 14, 14, 20, 85, 49, 14, 5, 63, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 59, 92, 71, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3997311703868748289/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_111327_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,56,69,20,97,84,2]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,30,1,16,40,61]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,45,1,63,43,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,13,13,13,13,13,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [97,71,90,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,46,47,2,54,60,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,59,92,71,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:13:28,226 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 11:13:28,226 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 11:13:39,853 INFO     Done. Execution time: 11.62692928314209 seconds
2023-01-31 11:13:39,854 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_111327_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_111327_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,56,69,20,97,84,2])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,30,1,16,40,61])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,45,1,63,43,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,13,13,13,13,13,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([97,71,90,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,46,47,2,54,60,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,59,92,71,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [33,56,69,20,97,84,2]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,30,1,16,40,61]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,45,1,63,43,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [13,13,13,13,13,13,13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [97,71,90,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [37,71,48,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [14,46,47,2,54,60,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [99,59,92,71,50]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: []
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [33,56,69,20,97,84,2]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [33,56,69,20,97,84,2]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [33,56,69,20,97,84,2]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [33,56,69,20,97,84,2]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [33,56,69,20,97,84,2]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [33,56,69,20,97,84,2]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     33  |  0  |  [33,56,69,20,97,84,2]  |
    25  |                     R = R + chunk;  |     33  |   33  |     33  |  0  |  [33,56,69,20,97,84,2]  |
    29  |                         i = i + 1;  |         |   33  |     33  |  1  |  [33,56,69,20,97,84,2]  |
    30  |              resetPlaceHolder_1();  |         |   33  |     33  |  1  |  [33,56,69,20,97,84,2]  |
    36  |        chunk = arrayRead(text, i);  |         |   33  |     56  |  1  |  [33,56,69,20,97,84,2]  |
    39  |                     R = R + chunk;  |     56  |   89  |     56  |  1  |  [33,56,69,20,97,84,2]  |
    43  |                         i = i + 1;  |         |   89  |     56  |  2  |  [33,56,69,20,97,84,2]  |
    44  |              resetPlaceHolder_1();  |         |   89  |     56  |  2  |  [33,56,69,20,97,84,2]  |
    50  |        chunk = arrayRead(text, i);  |         |   89  |     69  |  2  |  [33,56,69,20,97,84,2]  |
    53  |                     R = R + chunk;  |     69  |  158  |     69  |  2  |  [33,56,69,20,97,84,2]  |
    57  |                         i = i + 1;  |         |  158  |     69  |  3  |  [33,56,69,20,97,84,2]  |
    58  |              resetPlaceHolder_1();  |         |  158  |     69  |  3  |  [33,56,69,20,97,84,2]  |
    64  |        chunk = arrayRead(text, i);  |         |  158  |     20  |  3  |  [33,56,69,20,97,84,2]  |
    67  |                     R = R + chunk;  |     20  |  178  |     20  |  3  |  [33,56,69,20,97,84,2]  |
    71  |                         i = i + 1;  |         |  178  |     20  |  4  |  [33,56,69,20,97,84,2]  |
    72  |              resetPlaceHolder_1();  |         |  178  |     20  |  4  |  [33,56,69,20,97,84,2]  |
    78  |        chunk = arrayRead(text, i);  |         |  178  |     97  |  4  |  [33,56,69,20,97,84,2]  |
    81  |                     R = R + chunk;  |     97  |  275  |     97  |  4  |  [33,56,69,20,97,84,2]  |
    85  |                         i = i + 1;  |         |  275  |     97  |  5  |  [33,56,69,20,97,84,2]  |
    86  |              resetPlaceHolder_1();  |         |  275  |     97  |  5  |  [33,56,69,20,97,84,2]  |
    92  |        chunk = arrayRead(text, i);  |         |  275  |     84  |  5  |  [33,56,69,20,97,84,2]  |
    95  |                     R = R + chunk;  |     84  |  359  |     84  |  5  |  [33,56,69,20,97,84,2]  |
    99  |                         i = i + 1;  |         |  359  |     84  |  6  |  [33,56,69,20,97,84,2]  |
   100  |              resetPlaceHolder_1();  |         |  359  |     84  |  6  |  [33,56,69,20,97,84,2]  |
   106  |        chunk = arrayRead(text, i);  |         |  359  |      2  |  6  |  [33,56,69,20,97,84,2]  |
   109  |                     R = R + chunk;  |      2  |  361  |      2  |  6  |  [33,56,69,20,97,84,2]  |
   113  |                         i = i + 1;  |         |  361  |      2  |  7  |  [33,56,69,20,97,84,2]  |
   114  |              resetPlaceHolder_1();  |         |  361  |      2  |  7  |  [33,56,69,20,97,84,2]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25,39}; {53,67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25,39}; {53,67} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     33  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     56  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     69  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     20  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     97  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     84  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |      2  |                            |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [109, 81, 95]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39}; {53,67}
GroupID(1): {81,95,109}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     33  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    39  |         R = R + chunk;  |     56  |                         0  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |                            |
    53  |         R = R + chunk;  |     69  |                         1  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |         R = R + chunk;  |     20  |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |     97  |                            |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |                            |
    95  |         R = R + chunk;  |     84  |                            |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |                            |
   109  |         R = R + chunk;  |      2  |                            |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(44)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |    []  |
    10  |     return;  |         |  0  |    []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 3) || (i == 3))
{
  R0 = R0 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    // reset R0
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 11:13:39,854 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:14:36,016 INFO     Done. Execution time: 56.16189432144165 seconds
2023-01-31 11:14:36,016 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       a!3
       (<= D0p (+ 0 (* 1 1 text)))
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    2)  (define-fun D1 () Int    6)  (define-fun text () Int    7)  (define-fun D0p () Int    1)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `53.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1113-transparentAmortize-60s-mostPrecise/stac-raw-0131-1113-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m56.152s
user	3m3.148s
sys	0m6.196s

2023-01-31 11:14:36,017 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 11:14:36,017 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:17:43,010 INFO     Done. Execution time: 186.99235677719116 seconds
2023-01-31 11:17:43,010 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz6638363071476057309/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6638363071476057309/bin -o /tmp/qfuzz6638363071476057309/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6638363071476057309/bin
Found file /tmp/qfuzz6638363071476057309/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz6638363071476057309/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6638363071476057309/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6638363071476057309/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6638363071476057309/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6638363071476057309/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 165149 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m165k to 165k us (average: 165k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 8.00; [175.00,975.00,1112.00,1155.00,1435.00,1735.00,1798.00,1806.00,1975.00]
2; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 8; 8.00; [35.00,535.00,695.00,712.00,835.00,1058.00,1066.00,1515.00]
4; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 3.00; [615.00,1192.00,1315.00,1318.00,1326.00,1635.00]
9; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 9; 8.00; [112.00,175.00,695.00,975.00,1295.00,1435.00,1798.00,1806.00,1975.00]
17; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 9; 8.00; [175.00,975.00,1435.00,1495.00,1572.00,1735.00,1798.00,1806.00,1975.00]
20; /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 9; 3.00; [35.00,375.00,658.00,666.00,1155.00,1172.00,1175.00,1795.00,1895.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 57, 94, 1, 18, 89, 58, 58, 58, 58, 58, 57, 57, 57, 1, 22, 5, 69, 90, 99, 24, 58, 58, 58, 58, 58, 58, 58, 58, 58, 85, 58, 78, 1, 56, 29, 2, 39, 10, 34, 99, 50, 92, 69, 97, 1, 56, 29, 97, 28, 61, 90, 58, 58, 58, 59, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 74, 97, 78, 58, 44, 47, 29, 18, 64, 16, 98, 74, 97, 78, 58, 44, 69, 16, 49, 25, 33, 17, 41, 98, 98, 98, 98, 98, 98, 98, 42, 17, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 34, 64, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 37, 55, 90, 74, 40, 91, 89, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 30, 65, 65, 65, 81, 65, 45, 59, 28, 96, 57, 65, 65, 61, 25, 65, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52, 41, 1, 75, 34, 26, 34, 44, 35, 96, 30, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6638363071476057309/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_111742_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,57,94,1,18,89,58], 2, 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,74], 2, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,34,64,8,98], 2, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,30,65,65,65,81,65], 2, 59
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52,41,1,75,34,26,34], 2, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 2, 55
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:17:43,010 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 11:17:43,010 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 11:18:04,391 INFO     Done. Execution time: 21.38009476661682 seconds
2023-01-31 11:18:04,391 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_111742_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_111742_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,57,94,1,18,89,58], 2, 58)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,74], 2, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,34,64,8,98], 2, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,30,65,65,65,81,65], 2, 59)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52,41,1,75,34,26,34], 2, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 2, 55)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,57,94,1,18,89,58]
templateds: 2
separator: 58
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,74]
templateds: 2
separator: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,34,64,8,98]
templateds: 2
separator: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [65,30,65,65,65,81,65]
templateds: 2
separator: 59
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [52,41,1,75,34,26,34]
templateds: 2
separator: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
templateds: 2
separator: 55
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |          text           |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         58  |           2  |  [32,57,94,1,18,89,58]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     32  |  0  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    46  |                     R = R + chunk;  |     32  |   32  |     32  |  0  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    50  |                         j = j + 1;  |         |   32  |     32  |  0  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    51  |              resetPlaceHolder_2();  |         |   32  |     32  |  0  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    57  |        chunk = arrayRead(text, j);  |         |   32  |     57  |  0  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    60  |                     R = R + chunk;  |     57  |   89  |     57  |  0  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    64  |                         j = j + 1;  |         |   89  |     57  |  0  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    65  |              resetPlaceHolder_2();  |         |   89  |     57  |  0  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    71  |        chunk = arrayRead(text, j);  |         |   89  |     94  |  0  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    74  |                     R = R + chunk;  |     94  |  183  |     94  |  0  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    78  |                         j = j + 1;  |         |  183  |     94  |  0  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    79  |              resetPlaceHolder_2();  |         |  183  |     94  |  0  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    85  |        chunk = arrayRead(text, j);  |         |  183  |      1  |  0  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    88  |                     R = R + chunk;  |      1  |  184  |      1  |  0  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    92  |                         j = j + 1;  |         |  184  |      1  |  0  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    93  |              resetPlaceHolder_2();  |         |  184  |      1  |  0  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
    99  |        chunk = arrayRead(text, j);  |         |  184  |     18  |  0  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   102  |                     R = R + chunk;  |     18  |  202  |     18  |  0  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   106  |                         j = j + 1;  |         |  202  |     18  |  0  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   107  |              resetPlaceHolder_2();  |         |  202  |     18  |  0  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   113  |        chunk = arrayRead(text, j);  |         |  202  |     89  |  0  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   116  |                     R = R + chunk;  |     89  |  291  |     89  |  0  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   120  |                         j = j + 1;  |         |  291  |     89  |  0  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   121  |              resetPlaceHolder_2();  |         |  291  |     89  |  0  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   127  |        chunk = arrayRead(text, j);  |         |  291  |     58  |  0  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   130  |                     R = R + chunk;  |     58  |  349  |     58  |  0  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   134  |                         j = j + 1;  |         |  349  |     58  |  0  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   135  |              resetPlaceHolder_2();  |         |  349  |     58  |  0  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   141  |                 R = R + separator;  |     58  |  407  |     58  |  0  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   145  |                         i = i + 1;  |         |  407  |     58  |  1  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   146  |              resetPlaceHolder_1();  |         |  407  |     58  |  1  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   151  |                         int j = 0;  |         |  407  |     58  |  1  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   157  |        chunk = arrayRead(text, j);  |         |  407  |     32  |  1  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   160  |                     R = R + chunk;  |     32  |  439  |     32  |  1  |  0  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   164  |                         j = j + 1;  |         |  439  |     32  |  1  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   165  |              resetPlaceHolder_2();  |         |  439  |     32  |  1  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   171  |        chunk = arrayRead(text, j);  |         |  439  |     57  |  1  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   174  |                     R = R + chunk;  |     57  |  496  |     57  |  1  |  1  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   178  |                         j = j + 1;  |         |  496  |     57  |  1  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   179  |              resetPlaceHolder_2();  |         |  496  |     57  |  1  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   185  |        chunk = arrayRead(text, j);  |         |  496  |     94  |  1  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   188  |                     R = R + chunk;  |     94  |  590  |     94  |  1  |  2  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   192  |                         j = j + 1;  |         |  590  |     94  |  1  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   193  |              resetPlaceHolder_2();  |         |  590  |     94  |  1  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   199  |        chunk = arrayRead(text, j);  |         |  590  |      1  |  1  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   202  |                     R = R + chunk;  |      1  |  591  |      1  |  1  |  3  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   206  |                         j = j + 1;  |         |  591  |      1  |  1  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   207  |              resetPlaceHolder_2();  |         |  591  |      1  |  1  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   213  |        chunk = arrayRead(text, j);  |         |  591  |     18  |  1  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   216  |                     R = R + chunk;  |     18  |  609  |     18  |  1  |  4  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   220  |                         j = j + 1;  |         |  609  |     18  |  1  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   221  |              resetPlaceHolder_2();  |         |  609  |     18  |  1  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   227  |        chunk = arrayRead(text, j);  |         |  609  |     89  |  1  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   230  |                     R = R + chunk;  |     89  |  698  |     89  |  1  |  5  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   234  |                         j = j + 1;  |         |  698  |     89  |  1  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   235  |              resetPlaceHolder_2();  |         |  698  |     89  |  1  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   241  |        chunk = arrayRead(text, j);  |         |  698  |     58  |  1  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   244  |                     R = R + chunk;  |     58  |  756  |     58  |  1  |  6  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   248  |                         j = j + 1;  |         |  756  |     58  |  1  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   249  |              resetPlaceHolder_2();  |         |  756  |     58  |  1  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   255  |                 R = R + separator;  |     58  |  814  |     58  |  1  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   259  |                         i = i + 1;  |         |  814  |     58  |  2  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
   260  |              resetPlaceHolder_1();  |         |  814  |     58  |  2  |  7  |         58  |           2  |  [32,57,94,1,18,89,58]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {141}; {244}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {130}; {141}; {244}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     32  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     57  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     94  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      1  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     18  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     89  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     58  |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     58  |                         1  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     32  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     57  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     94  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |      1  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     18  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     89  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     58  |                         2  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     58  |                         3  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 15 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5), Set(0, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(0, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188}; {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188}; {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,202}; {74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,202}; {74,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 50 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216,230}; {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4, 5), Set(0, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216,230}; {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216,230}; {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4, 5), Set(1, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216,230}; {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216,230}; {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4, 5), Set(2, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216,230}; {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,216,230}; {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4, 5), Set(3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,216,230}; {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,216}; {46,60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 4), Set(0, 1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,216}; {46,60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,216}; {46,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,216}; {46,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202,216}; {46,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3, 4), Set(0, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202,216}; {46,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,216}; {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 4), Set(1, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,216}; {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,216}; {60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 4), Set(1, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,216}; {60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,202,216}; {74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3, 4), Set(2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,202,216}; {74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,230}; {46,60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 5), Set(0, 1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,230}; {46,60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,230}; {46,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 5), Set(0, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,230}; {46,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202,230}; {46,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3, 5), Set(0, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202,230}; {46,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,230}; {60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 5), Set(1, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,230}; {60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,230}; {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 5), Set(1, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,230}; {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,202,230}; {74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3, 5), Set(2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,202,230}; {74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188}; {46,60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2), Set(0, 1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188}; {46,60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,202}; {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3), Set(0, 1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,202}; {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,202}; {46,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 3), Set(0, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,202}; {46,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,202}; {60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 3), Set(1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,202}; {60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 74 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,216,230}; {46,60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 4, 5), Set(0, 1, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,216,230}; {46,60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,216,230}; {46,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4, 5), Set(0, 2, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,216,230}; {46,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202,216,230}; {46,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3, 4, 5), Set(0, 3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202,216,230}; {46,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,216,230}; {60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 4, 5), Set(1, 2, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,216,230}; {60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,216,230}; {60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 4, 5), Set(1, 3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,216,230}; {60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,202,216,230}; {74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3, 4, 5), Set(2, 3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,202,216,230}; {74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,216}; {46,60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 4), Set(0, 1, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,216}; {46,60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,202,216}; {46,60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3, 4), Set(0, 1, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,202,216}; {46,60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,202,216}; {46,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 3, 4), Set(0, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,202,216}; {46,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,202,216}; {60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 3, 4), Set(1, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,202,216}; {60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,230}; {46,60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 5), Set(0, 1, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,230}; {46,60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,202,230}; {46,60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3, 5), Set(0, 1, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,202,230}; {46,60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,202,230}; {46,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 3, 5), Set(0, 2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,202,230}; {46,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,202,230}; {60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 3, 5), Set(1, 2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,202,230}; {60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,202}; {46,60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 3), Set(0, 1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,202}; {46,60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 51-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 51-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 52-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 52-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 53-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 53-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 54-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 54-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 55-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 55-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 56-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 56-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 57-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 57-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 58-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 58-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 59-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 59-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 60-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 60-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 61-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 61-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 62-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 62-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 63-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 63-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 64-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 64-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 65-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 65-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 66-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 66-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 67-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 67-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 68-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 68-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 69-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 69-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 70-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 70-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 71-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 71-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 72-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 72-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 73-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 73-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 122 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,60,74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,60,74,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,60,74,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {46,74,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {46,74,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,74,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,74,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {60,74,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {60,74,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {74,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {74,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,216,230}; {46,60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 1, 2, 4), Set(0, 5, 1, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,216,230}; {46,60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,60,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,60,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,60,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {46,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {46,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {60,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {60,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,202,216,230}; {46,60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 1, 3, 4), Set(0, 5, 1, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,202,216,230}; {46,60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {46,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {46,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {74,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {74,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {74,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {74,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {74,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {74,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188,202,216,230}; {46,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 2, 3, 4), Set(0, 5, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188,202,216,230}; {46,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,74,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,74,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {60,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {60,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {74,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {74,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,202,216,230}; {60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 1, 2, 3, 4), Set(5, 1, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,202,216,230}; {60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,88,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,202,216}; {46,60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 3, 4), Set(0, 1, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,202,216}; {46,60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,202,230}; {46,60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 1, 2, 3), Set(0, 5, 1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,202,230}; {46,60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 51-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 51-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 52-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 52-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 53-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 53-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 54-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 54-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 55-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 55-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 56-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 56-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 57-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 57-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 58-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 58-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 59-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 59-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 60-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 60-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 61-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 61-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 62-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 62-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 63-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 63-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 64-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 64-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 65-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 65-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 66-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 66-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 67-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 67-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 68-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 68-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 69-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 69-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 70-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 70-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 71-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 71-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 72-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 72-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 73-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 73-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 74-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 74-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 75-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 75-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 76-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 76-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 77-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 77-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 78-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 78-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 79-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 79-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 80-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 80-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 81-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 81-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 82-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 82-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 83-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 83-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 84-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 84-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 85-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 85-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 86-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 86-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 87-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 87-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 88-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 88-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 89-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 89-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 90-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 90-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 91-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 91-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 92-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 92-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 93-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 93-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 94-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 94-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 95-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 95-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 96-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 96-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 97-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 97-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 98-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 98-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 99-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 99-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 100-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 100-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 101-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 101-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 102-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 102-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 103-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 103-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 104-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 104-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 105-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 105-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 106-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 106-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 107-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 107-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 108-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 108-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 109-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 109-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 110-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 110-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 111-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 111-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 112-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 112-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 113-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 113-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 114-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 114-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 115-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 115-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 116-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 116-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 117-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 117-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 118-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 118-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 119-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 119-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 120-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 120-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 121-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 121-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 117 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,60,74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,60,74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,60,74,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,60,74,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,60,74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {46,60,74,88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {46,60,74,88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {46,60,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {46,60,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {46,60,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {46,60,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {46,74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {46,74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {46,74,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {46,74,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {46,74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {46,74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {46,74,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {46,74,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {46,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {46,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {46,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {46,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {60,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {60,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {60,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {60,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {60,74,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {60,74,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {60,74,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {60,74,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {60,74,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {60,74,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {60,74,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {60,74,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {60,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {60,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {60,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {60,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {74,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {74,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {74,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {74,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {74,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {74,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {74,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {74,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {88,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {88,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 62: {88,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 63: {88,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 63 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,188,202,216,230}; {46,60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 1, 2, 3, 4), Set(0, 5, 1, 2, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,188,202,216,230}; {46,60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,74,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,74,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,88,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,88,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,74,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,74,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {60,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 17 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,88,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,74,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,74,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 51-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 51-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 52-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 52-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 53-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 53-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 54-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 54-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 55-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 55-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 56-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 56-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 57-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 57-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 58-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 58-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 59-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 59-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 60-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 60-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 61-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 61-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 62-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 62-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 63-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 63-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 64-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 64-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 65-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 65-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 66-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 66-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 67-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 67-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 68-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 68-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 69-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 69-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 70-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 70-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 71-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 71-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 72-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 72-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 73-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 73-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 74-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {74,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 74-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 17 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 75-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 75-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 76-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 76-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 77-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 77-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 78-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 78-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 79-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 79-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 80-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 80-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 81-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 81-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 82-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 82-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 83-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 83-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 84-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 84-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 85-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 85-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 86-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 86-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 87-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 87-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 88-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 88-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 89-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,74,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,74,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {60,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {60,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {60,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {60,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 89-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 90-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 90-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 91-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 91-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 92-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 92-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 93-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 93-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 94-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 94-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 95-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 95-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 96-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 96-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 97-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 97-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 98-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 98-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 99-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 99-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 100-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 100-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 101-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 101-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 102-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 102-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 103-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 103-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 104-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 104-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 105-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 105-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 106-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 106-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 107-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 107-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 108-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 108-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 109-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 109-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 110-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 110-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 111-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 111-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 112-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 112-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 113-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 113-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 114-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 114-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 115-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 115-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 116-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 116-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 122 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,102,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,88,102,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,88,102,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,102,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,102,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,88,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,88,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,102,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,102,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,88,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,88,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,102,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,102,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,88,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,88,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,88,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,102,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,88,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,88,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,102,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,88,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,88,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,102,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,116,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,74,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,74,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,60,74,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,60,74,88,102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,60,74,88,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,60,74,88,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {46,60,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {46,60,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {46,60,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {46,60,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {46,74,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {46,74,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {46,74,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {46,74,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {46,74,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {46,74,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {46,74,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {46,74,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {46,88,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {46,88,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {46,88,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {46,88,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,102,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,116,160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,102,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,116,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,60,74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,60,74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,60,74,88,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,60,74,88,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,60,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,60,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,60,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,60,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {60,102,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {60,102,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {60,74,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {60,74,88,102,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {60,74,88,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {60,74,88,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {60,88,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {60,88,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {60,88,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {60,88,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,102,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,102,116,160,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,88,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,160,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,88,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,116,160,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,88,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,74,88,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,74,88,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,74,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,74,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,74,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,74,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {60,74,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {60,74,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,74,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,74,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,74,88,102,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,74,88,102,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,74,88,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,74,88,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {74,102,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {74,102,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {74,88,102,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {74,88,102,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {74,88,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {74,88,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,116,160,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,160,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,116,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,116,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 51-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 51-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 52-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,116,160,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 52-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 53-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,160,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 53-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 54-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,88,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,88,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,60,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,60,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {46,74,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {46,74,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {46,74,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {46,74,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {46,88,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {46,88,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {46,88,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {46,88,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {60,74,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {60,74,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {60,74,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {60,74,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {60,88,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {60,88,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {60,88,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {60,88,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {74,88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {74,88,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {74,88,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {74,88,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {88,102,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {88,102,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,116,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,160,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 54-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 32 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 55-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 55-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 56-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 56-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 57-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 57-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 58-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,102,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 58-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 59-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 59-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 60-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 60-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 61-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,88,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 61-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 62-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 62-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 63-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 63-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 64-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 64-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 65-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,88,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,160,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 65-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 66-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 66-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 67-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 67-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 68-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 68-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 69-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 69-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 70-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 70-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 71-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 71-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 72-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,160,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 72-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 73-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 73-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 74-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 74-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 75-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,160,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 75-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 76-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 76-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 77-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 77-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 78-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 78-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 79-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 79-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 80-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,160,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 80-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 81-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,160,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 81-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 82-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,116,160,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 82-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 83-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,88,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,88,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,88,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 83-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 84-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,160,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,88,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,88,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 84-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 85-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 85-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 86-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 86-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 87-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 87-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 88-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,160,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 88-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 89-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 89-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 90-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,160,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 90-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 91-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,160,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 91-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 92-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,160,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 92-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 93-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,160,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 93-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 94-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 94-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 95-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 95-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 96-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 96-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 97-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 97-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 98-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 98-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 99-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 99-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 100-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 100-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 101-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 101-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 102-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,174,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 102-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 103-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 103-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 104-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,174,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 104-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 105-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 105-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 106-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 106-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 107-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 107-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 108-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,174,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 108-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 109-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 109-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 110-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 110-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 111-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,174,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 111-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 112-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,174,188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 112-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 113-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 113-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 114-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,174,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 114-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 115-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,174,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 115-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 116-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 116-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 117-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,174,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 117-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 118-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 118-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 119-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,188,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 119-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 120-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,188,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 120-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 121-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,188,202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 121-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {130}; {141}; {244}; {255}
GroupID(1): {46,60,74,88,102,116,160,174,188,202,216,230}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     32  |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |
    60  |         R = R + chunk;  |     57  |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |
    74  |         R = R + chunk;  |     94  |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |
    88  |         R = R + chunk;  |      1  |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |
   102  |         R = R + chunk;  |     18  |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |
   116  |         R = R + chunk;  |     89  |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |
   130  |         R = R + chunk;  |     58  |                         0  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |
   141  |     R = R + separator;  |     58  |                         1  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |         R = R + chunk;  |     32  |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     57  |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |
   188  |         R = R + chunk;  |     94  |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |
   202  |         R = R + chunk;  |      1  |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |
   216  |         R = R + chunk;  |     18  |                            |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |                            |
   230  |         R = R + chunk;  |     89  |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |
   244  |         R = R + chunk;  |     58  |                         2  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |
   255  |     R = R + separator;  |     58  |                         3  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [131, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     32  |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |
    60  |         R = R + chunk;  |     57  |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |
    74  |         R = R + chunk;  |     94  |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |
    88  |         R = R + chunk;  |      1  |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |
   102  |         R = R + chunk;  |     18  |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |
   116  |         R = R + chunk;  |     89  |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |
   130  |         R = R + chunk;  |     58  |                         0  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |
   141  |     R = R + separator;  |     58  |                         1  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |         R = R + chunk;  |     32  |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     57  |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |
   188  |         R = R + chunk;  |     94  |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |
   202  |         R = R + chunk;  |      1  |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |
   216  |         R = R + chunk;  |     18  |                            |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |                            |
   230  |         R = R + chunk;  |     89  |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |
   244  |         R = R + chunk;  |     58  |                         2  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |
   255  |     R = R + separator;  |     58  |                         3  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [245, 254])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     32  |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |
    60  |         R = R + chunk;  |     57  |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |
    74  |         R = R + chunk;  |     94  |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |
    88  |         R = R + chunk;  |      1  |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |
   102  |         R = R + chunk;  |     18  |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |
   116  |         R = R + chunk;  |     89  |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |
   130  |         R = R + chunk;  |     58  |                         0  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |
   141  |     R = R + separator;  |     58  |                         1  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |         R = R + chunk;  |     32  |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     57  |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |
   188  |         R = R + chunk;  |     94  |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |
   202  |         R = R + chunk;  |      1  |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |
   216  |         R = R + chunk;  |     18  |                            |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |                            |
   230  |         R = R + chunk;  |     89  |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |
   244  |         R = R + chunk;  |     58  |                         2  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |
   255  |     R = R + separator;  |     58  |                         3  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 5) || (j == 5))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R separator -> R0 = R0 + separator;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 11:18:04,394 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:19:46,346 INFO     Done. Execution time: 101.95169520378113 seconds
2023-01-31 11:19:46,346 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator) (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (<= D0p (+ 0 (* 1 1 separator) (* 1 1 text))))
      (a!4 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) a!3 (or a!3 (= D0p 0)) (<= D1p 0) a!4)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 separator) (* 1 1 text))) (= D0 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 templateds)))
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    7)  (define-fun templateds () Int    1)  (define-fun text () Int    8)  (define-fun separator () Int    4)  (define-fun D0p () Int    12)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `99.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1118-transparentAmortize-60s-mostPrecise/stac-raw-0131-1118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m41.942s
user	4m59.463s
sys	0m17.051s

2023-01-31 11:19:46,347 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 11:19:46,347 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:22:53,103 INFO     Done. Execution time: 186.755597114563 seconds
2023-01-31 11:22:53,103 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz3600679580601399953/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3600679580601399953/bin -o /tmp/qfuzz3600679580601399953/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3600679580601399953/bin
Found file /tmp/qfuzz3600679580601399953/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz3600679580601399953/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3600679580601399953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3600679580601399953/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3600679580601399953/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3600679580601399953/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 159877 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m159k to 159k us (average: 159k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 8.00; [88.00,175.00,975.00,1112.00,1155.00,1435.00,1735.00,1798.00,1806.00,1975.00]
2; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 10; 8.00; [35.00,88.00,855.00,975.00,1112.00,1155.00,1435.00,1798.00,1806.00,1975.00]
5; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 10; 3.00; [108.00,155.00,432.00,1095.00,1255.00,1295.00,1475.00,1478.00,1486.00,1635.00]
7; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 10; 8.00; [88.00,295.00,495.00,915.00,1112.00,1435.00,1638.00,1646.00,1935.00,1975.00]
10; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 10; 8.00; [352.00,795.00,915.00,1128.00,1275.00,1755.00,1798.00,1806.00,1815.00,1975.00]
14; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 9; 8.00; [35.00,55.00,112.00,175.00,518.00,526.00,628.00,855.00,1735.00]
21; /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 10; 8.00; [175.00,215.00,575.00,975.00,1112.00,1435.00,1568.00,1735.00,1798.00,1806.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 10, 28, 5, 55, 78, 2, 1, 55, 90, 74, 40, 91, 95, 90, 81, 40, 91, 95, 65, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 1, 8, 86, 2, 42, 42, 57, 5, 31, 48, 40, 45, 61, 30, 1, 1, 73, 43, 25, 33, 60, 52, 8, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 87, 45, 63, 90, 98, 39, 5, 17, 56, 25, 52, 18, 64, 82, 16, 89, 61, 24, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 71, 96, 24, 14, 98, 45, 5, 55, 4, 40, 29, 18, 64, 74, 95)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(73, 7, 64, 81, 54, 62, 73, 92, 21, 5, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 42, 1, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 1, 1, 55, 13, 89, 89, 89, 89, 89, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3600679580601399953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_112252_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,10,28], 2, 55, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,1,8,86,2,42,42], 2, 5, 31
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,87,45,63,90,98,39], 2, 17, 56
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,71,96,24,14,98,45], 2, 55, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [73,7,64,81,54,62,73], 2, 21, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,42,1,98,57], 2, 55, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 2, 55, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:22:53,103 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 11:22:53,104 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 11:23:16,110 INFO     Done. Execution time: 23.006131410598755 seconds
2023-01-31 11:23:16,110 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_112252_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_112252_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,10,28], 2, 55, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,1,8,86,2,42,42], 2, 5, 31)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,87,45,63,90,98,39], 2, 17, 56)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,71,96,24,14,98,45], 2, 55, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([73,7,64,81,54,62,73], 2, 21, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,42,1,98,57], 2, 55, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 2, 55, 4)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,10,28]
ts: 2
sep: 55
rep: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [25,1,8,86,2,42,42]
ts: 2
sep: 5
rep: 31
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,87,45,63,90,98,39]
ts: 2
sep: 17
rep: 56
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [81,71,96,24,14,98,45]
ts: 2
sep: 55
rep: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [73,7,64,81,54,62,73]
ts: 2
sep: 21
rep: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,42,1,98,57]
ts: 2
sep: 55
rep: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
ts: 2
sep: 55
rep: 4
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                         
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |          text           |  ts  |
-----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    38  |                     int chunk = 0;  |         |     0  |      0  |     |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    40  |                         int i = 0;  |         |     0  |      0  |  0  |     |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    45  |                         int j = 0;  |         |     0  |      0  |  0  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |     0  |     89  |  0  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    54  |                     R = R + chunk;  |     89  |    89  |     89  |  0  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    57  |                       R = R + rep;  |     78  |   167  |     89  |  0  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    61  |                         j = j + 1;  |         |   167  |     89  |  0  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   167  |     89  |  0  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   167  |     71  |  0  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    71  |                     R = R + chunk;  |     71  |   238  |     71  |  0  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    74  |                       R = R + rep;  |     78  |   316  |     71  |  0  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    78  |                         j = j + 1;  |         |   316  |     71  |  0  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   316  |     71  |  0  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   316  |     48  |  0  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    88  |                     R = R + chunk;  |     48  |   364  |     48  |  0  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    91  |                       R = R + rep;  |     78  |   442  |     48  |  0  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    95  |                         j = j + 1;  |         |   442  |     48  |  0  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   442  |     48  |  0  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   442  |     86  |  0  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   105  |                     R = R + chunk;  |     86  |   528  |     86  |  0  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   108  |                       R = R + rep;  |     78  |   606  |     86  |  0  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   112  |                         j = j + 1;  |         |   606  |     86  |  0  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   113  |              resetPlaceHolder_2();  |         |   606  |     86  |  0  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |   606  |      8  |  0  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   122  |                     R = R + chunk;  |      8  |   614  |      8  |  0  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   125  |                       R = R + rep;  |     78  |   692  |      8  |  0  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   129  |                         j = j + 1;  |         |   692  |      8  |  0  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   130  |              resetPlaceHolder_2();  |         |   692  |      8  |  0  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |   692  |     10  |  0  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   139  |                     R = R + chunk;  |     10  |   702  |     10  |  0  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   142  |                       R = R + rep;  |     78  |   780  |     10  |  0  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   146  |                         j = j + 1;  |         |   780  |     10  |  0  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   147  |              resetPlaceHolder_2();  |         |   780  |     10  |  0  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |   780  |     28  |  0  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   156  |                     R = R + chunk;  |     28  |   808  |     28  |  0  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   159  |                       R = R + rep;  |     78  |   886  |     28  |  0  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   163  |                         j = j + 1;  |         |   886  |     28  |  0  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   164  |              resetPlaceHolder_2();  |         |   886  |     28  |  0  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   170  |                       R = R + sep;  |     55  |   941  |     28  |  0  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   174  |                         i = i + 1;  |         |   941  |     28  |  1  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   175  |              resetPlaceHolder_1();  |         |   941  |     28  |  1  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   180  |                         int j = 0;  |         |   941  |     28  |  1  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |   941  |     89  |  1  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   189  |                     R = R + chunk;  |     89  |  1030  |     89  |  1  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   192  |                       R = R + rep;  |     78  |  1108  |     89  |  1  |  0  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   196  |                         j = j + 1;  |         |  1108  |     89  |  1  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  1108  |     89  |  1  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  1108  |     71  |  1  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   206  |                     R = R + chunk;  |     71  |  1179  |     71  |  1  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   209  |                       R = R + rep;  |     78  |  1257  |     71  |  1  |  1  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   213  |                         j = j + 1;  |         |  1257  |     71  |  1  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  1257  |     71  |  1  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  1257  |     48  |  1  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   223  |                     R = R + chunk;  |     48  |  1305  |     48  |  1  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   226  |                       R = R + rep;  |     78  |  1383  |     48  |  1  |  2  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   230  |                         j = j + 1;  |         |  1383  |     48  |  1  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  1383  |     48  |  1  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  1383  |     86  |  1  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   240  |                     R = R + chunk;  |     86  |  1469  |     86  |  1  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   243  |                       R = R + rep;  |     78  |  1547  |     86  |  1  |  3  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   247  |                         j = j + 1;  |         |  1547  |     86  |  1  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  1547  |     86  |  1  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  1547  |      8  |  1  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   257  |                     R = R + chunk;  |      8  |  1555  |      8  |  1  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   260  |                       R = R + rep;  |     78  |  1633  |      8  |  1  |  4  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   264  |                         j = j + 1;  |         |  1633  |      8  |  1  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  1633  |      8  |  1  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  1633  |     10  |  1  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   274  |                     R = R + chunk;  |     10  |  1643  |     10  |  1  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   277  |                       R = R + rep;  |     78  |  1721  |     10  |  1  |  5  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   281  |                         j = j + 1;  |         |  1721  |     10  |  1  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  1721  |     10  |  1  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  1721  |     28  |  1  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   291  |                     R = R + chunk;  |     28  |  1749  |     28  |  1  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   294  |                       R = R + rep;  |     78  |  1827  |     28  |  1  |  6  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   298  |                         j = j + 1;  |         |  1827  |     28  |  1  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  1827  |     28  |  1  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   305  |                       R = R + sep;  |     55  |  1882  |     28  |  1  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   309  |                         i = i + 1;  |         |  1882  |     28  |  2  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  1882  |     28  |  2  |  7  |   78  |   55  |  [89,71,48,86,8,10,28]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                            |
    57  |           R = R + rep;  |     78  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     71  |                            |
    74  |           R = R + rep;  |     78  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     48  |                            |
    91  |           R = R + rep;  |     78  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     86  |                            |
   108  |           R = R + rep;  |     78  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      8  |                            |
   125  |           R = R + rep;  |     78  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     10  |                            |
   142  |           R = R + rep;  |     78  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     28  |                            |
   159  |           R = R + rep;  |     78  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     55  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     89  |                            |
   192  |           R = R + rep;  |     78  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     71  |                            |
   209  |           R = R + rep;  |     78  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     48  |                            |
   226  |           R = R + rep;  |     78  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     86  |                            |
   243  |           R = R + rep;  |     78  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      8  |                            |
   260  |           R = R + rep;  |     78  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     10  |                            |
   277  |           R = R + rep;  |     78  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     28  |                            |
   294  |           R = R + rep;  |     78  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     55  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {305} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                            |
    57  |           R = R + rep;  |     78  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     71  |                            |
    74  |           R = R + rep;  |     78  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     48  |                            |
    91  |           R = R + rep;  |     78  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     86  |                            |
   108  |           R = R + rep;  |     78  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      8  |                            |
   125  |           R = R + rep;  |     78  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     10  |                            |
   142  |           R = R + rep;  |     78  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     28  |                            |
   159  |           R = R + rep;  |     78  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     55  |                         0  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     89  |                            |
   192  |           R = R + rep;  |     78  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     71  |                            |
   209  |           R = R + rep;  |     78  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     48  |                            |
   226  |           R = R + rep;  |     78  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     86  |                            |
   243  |           R = R + rep;  |     78  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      8  |                            |
   260  |           R = R + rep;  |     78  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     10  |                            |
   277  |           R = R + rep;  |     78  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     28  |                            |
   294  |           R = R + rep;  |     78  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     55  |                         1  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 14 trace node indices: [88, 257, 189, 206, 156, 105, 291, 71, 54, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {240,274}; {88,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {240,274}; {88,223} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                            |
    57  |           R = R + rep;  |     78  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     71  |                            |
    74  |           R = R + rep;  |     78  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     48  |                         0  |
    91  |           R = R + rep;  |     78  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     86  |                            |
   108  |           R = R + rep;  |     78  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      8  |                            |
   125  |           R = R + rep;  |     78  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     10  |                            |
   142  |           R = R + rep;  |     78  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     28  |                            |
   159  |           R = R + rep;  |     78  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     55  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     89  |                            |
   192  |           R = R + rep;  |     78  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     71  |                            |
   209  |           R = R + rep;  |     78  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     48  |                         0  |
   226  |           R = R + rep;  |     78  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     86  |                         1  |
   243  |           R = R + rep;  |     78  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      8  |                            |
   260  |           R = R + rep;  |     78  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     10  |                         1  |
   277  |           R = R + rep;  |     78  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     28  |                            |
   294  |           R = R + rep;  |     78  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     55  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,257}; {54,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,257}; {54,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,257}; {71,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,257}; {71,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {206,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139,189}; {206,291}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {206,291}; {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {156,206}; {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 0), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 6), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,291}; {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5), Set(6, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {139,189}; {206,291} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                            |
    57  |           R = R + rep;  |     78  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     71  |                            |
    74  |           R = R + rep;  |     78  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     48  |                            |
    91  |           R = R + rep;  |     78  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     86  |                            |
   108  |           R = R + rep;  |     78  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      8  |                            |
   125  |           R = R + rep;  |     78  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     10  |                         0  |
   142  |           R = R + rep;  |     78  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     28  |                            |
   159  |           R = R + rep;  |     78  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     55  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     89  |                         0  |
   192  |           R = R + rep;  |     78  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     71  |                         1  |
   209  |           R = R + rep;  |     78  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     48  |                            |
   226  |           R = R + rep;  |     78  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     86  |                            |
   243  |           R = R + rep;  |     78  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      8  |                            |
   260  |           R = R + rep;  |     78  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     10  |                            |
   277  |           R = R + rep;  |     78  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     28  |                         1  |
   294  |           R = R + rep;  |     78  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     55  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [257, 156, 105, 71, 54, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 6 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [257, 156, 105, 71, 54, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [257, 156, 105, 71, 54, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [257, 156, 105, 71, 54, 122]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(4): {54,71,105,122,156,257}
GroupID(1): {170}; {305}
GroupID(3): {139,189}; {206,291}
GroupID(2): {240,274}; {88,223}
                                                                                                                                                                                              
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |  SegmentIDs in GroupID(4)  |
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                            |                            |                            |                            |                         0  |
    57  |           R = R + rep;  |     78  |                         0  |                            |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     71  |                            |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     78  |                         1  |                            |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     48  |                            |                            |                         0  |                            |                            |
    91  |           R = R + rep;  |     78  |                         2  |                            |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     86  |                            |                            |                            |                            |                         0  |
   108  |           R = R + rep;  |     78  |                         3  |                            |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      8  |                            |                            |                            |                            |                         0  |
   125  |           R = R + rep;  |     78  |                         4  |                            |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     10  |                            |                            |                            |                         0  |                            |
   142  |           R = R + rep;  |     78  |                         5  |                            |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     28  |                            |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     78  |                         6  |                            |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   170  |           R = R + sep;  |     55  |                            |                         0  |                            |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     89  |                            |                            |                            |                         0  |                            |
   192  |           R = R + rep;  |     78  |                         7  |                            |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     71  |                            |                            |                            |                         1  |                            |
   209  |           R = R + rep;  |     78  |                         8  |                            |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     48  |                            |                            |                         0  |                            |                            |
   226  |           R = R + rep;  |     78  |                         9  |                            |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     86  |                            |                            |                         1  |                            |                            |
   243  |           R = R + rep;  |     78  |                        10  |                            |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      8  |                            |                            |                            |                            |                         0  |
   260  |           R = R + rep;  |     78  |                        11  |                            |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     10  |                            |                            |                         1  |                            |                            |
   277  |           R = R + rep;  |     78  |                        12  |                            |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     28  |                            |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     78  |                        13  |                            |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   305  |           R = R + sep;  |     55  |                            |                         1  |                            |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(4): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(4): Set()
GroupID(1): Set(175)
GroupID(3): Set(197)
GroupID(2): Set(231)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R4
  if ((j < 1) || (j == 1))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R3
    }
    else
    {
      if (S3 < R3)
      {
        S3 = R3;
      }
      else
      {
        ;
      }
      R3 = 0;
      C3 = C3 + 1;
    }
  }
  else
  {
    // reset R3
  }
  if ((i < 0) || (i == 0))
  {
    // reset R2
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      // reset R2
    }
    else
    {
      if ((j < 3) || (j == 3))
      {
        if (S2 < R2)
        {
          S2 = R2;
        }
        else
        {
          ;
        }
        R2 = 0;
        C2 = C2 + 1;
      }
      else
      {
        // reset R2
      }
    }
  }
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R sep -> R1 = R1 + sep;
use R rep -> R0 = R0 + rep;
use R chunk -> if ((i < 0) || (i == 0))
{
  if ((j < 4) || (j == 4))
  {
    if ((j < 1) || (j == 1))
    {
      R4 = R4 + chunk;
    }
    else
    {
      if ((j < 2) || (j == 2))
      {
        R2 = R2 + chunk;
      }
      else
      {
        R4 = R4 + chunk;
      }
    }
  }
  else
  {
    if ((j < 5) || (j == 5))
    {
      R3 = R3 + chunk;
    }
    else
    {
      R4 = R4 + chunk;
    }
  }
}
else
{
  if ((j < 1) || (j == 1))
  {
    R3 = R3 + chunk;
  }
  else
  {
    if ((j < 5) || (j == 5))
    {
      if ((j < 3) || (j == 3))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 4) || (j == 4))
        {
          R4 = R4 + chunk;
        }
        else
        {
          R2 = R2 + chunk;
        }
      }
    }
    else
    {
      R3 = R3 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R4
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 11:23:16,111 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:24:20,225 INFO     Done. Execution time: 64.11403393745422 seconds
2023-01-31 11:24:20,226 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D4 = 0),List()) -> DeltaCounterPair(D4,C4), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int C4 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int D4 = 0;
    int D4p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          if ((j < 4) || (j == 4))
          {
            if ((j < 1) || (j == 1))
            {
              D4 = D4 + chunk;
            }
            else
            {
              if ((j < 2) || (j == 2))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D4 = D4 + chunk;
              }
            }
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              D3 = D3 + chunk;
            }
            else
            {
              D4 = D4 + chunk;
            }
          }
        }
        else
        {
          if ((j < 1) || (j == 1))
          {
            D3 = D3 + chunk;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              if ((j < 3) || (j == 3))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 4) || (j == 4))
                {
                  D4 = D4 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
            else
            {
              D3 = D3 + chunk;
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D3p = D3;
            D3 = 0;
            C3 = C3 + 1;
          }
        }
        else
        {

        }
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
            else
            {

            }
          }
        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int C4 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int D4 = 0;
    int D4p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          if ((j < 4) || (j == 4))
          {
            if ((j < 1) || (j == 1))
            {
              D4 = D4 + chunk;
            }
            else
            {
              if ((j < 2) || (j == 2))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D4 = D4 + chunk;
              }
            }
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              D3 = D3 + chunk;
            }
            else
            {
              D4 = D4 + chunk;
            }
          }
        }
        else
        {
          if ((j < 1) || (j == 1))
          {
            D3 = D3 + chunk;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              if ((j < 3) || (j == 3))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 4) || (j == 4))
                {
                  D4 = D4 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
            else
            {
              D3 = D3 + chunk;
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D3p = D3;
            D3 = 0;
            C3 = C3 + 1;
          }
        }
        else
        {

        }
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
            else
            {

            }
          }
        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D4`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D4` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C4` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4594424170453665338.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6740322305894919554.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5714120112332764925.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3388565050766332492.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D4`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6844385275059204861.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1584949015206102874.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7002109397612344255.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D4p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-815661851629870655.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2481743138137461817.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8889098794995619444.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-33939571815184821.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7713581977795013256.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7635439730691789026.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C4`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3523897222194430939.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3007558217449666784.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C4 1) 0) (- C4 1) 0) D4p))
      (a!4 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!5 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D2 a!1 D0 a!2 D4 a!3 D3 a!4 D1 a!5)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D4p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C4 () Int)
(declare-fun D4 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C72 () Int)
(declare-fun C100 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C95 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C91 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C89 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C97 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C96 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C92 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C93 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C88 () Int)
(declare-fun C99 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C102 () Int)
(declare-fun C85 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C86 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C103 () Int)
(declare-fun C98 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C87 () Int)
(declare-fun C84 () Int)
(declare-fun C104 () Int)
(declare-fun C101 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C90 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C94 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D4p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C4 1) 0) (- C4 1) 0) D4p))
      (a!4 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!5 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D2 a!1 D0 a!2 D4 a!3 D3 a!4 D1 a!5))
       true
       (or true (= D3p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D4p 0))
       true
       (or true (= D1p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D4 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C94 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C90 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C101 0)
     (>= C104 0)
     (>= C84 0)
     (>= C87 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C98 0)
     (>= C103 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C86 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C85 0)
     (>= C102 0)
     (>= C30 0)
     (>= C70 0)
     (>= C99 0)
     (>= C88 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C93 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C92 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C96 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C97 0)
     (>= C19 0)
     (>= C48 0)
     (>= C89 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C91 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C95 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C100 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    6)  (define-fun D3 () Int    7)  (define-fun D4 () Int    (- 6))  (define-fun D0 () Int    (- 1))  (define-fun D2 () Int    (- 5))  (define-fun C2 () Int    12)  (define-fun C4 () Int    3)  (define-fun C1 () Int    5)  (define-fun C3 () Int    7)  (define-fun rep () Int    8)  (define-fun sep () Int    7)  (define-fun text () Int    1)  (define-fun ts () Int    15)  (define-fun D3p () Int    9)  (define-fun D2p () Int    12)  (define-fun D4p () Int    11)  (define-fun D0p () Int    15)  (define-fun D1p () Int    11)  (define-fun C0 () Int    1)  (define-fun C72 () Int    0)  (define-fun C100 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C95 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C91 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C89 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C97 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C96 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C92 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C93 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C88 () Int    0)  (define-fun C99 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C102 () Int    0)  (define-fun C85 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C86 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C103 () Int    0)  (define-fun C98 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C87 () Int    0)  (define-fun C84 () Int    0)  (define-fun C104 () Int    0)  (define-fun C101 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C90 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C94 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `61.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1123-transparentAmortize-60s-mostPrecise/stac-raw-0131-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m4.105s
user	4m3.337s
sys	0m6.019s

2023-01-31 11:24:20,227 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:24:20,227 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:27:27,528 INFO     Done. Execution time: 187.3005895614624 seconds
2023-01-31 11:27:27,528 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz2269763244875496066/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2269763244875496066/bin -o /tmp/qfuzz2269763244875496066/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2269763244875496066/bin
Found file /tmp/qfuzz2269763244875496066/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz2269763244875496066/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2269763244875496066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2269763244875496066/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2269763244875496066/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2269763244875496066/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 31, exec speed = 150853 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m150k to 150k us (average: 150k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 70.00; [175.00,975.00,1155.00,1435.00,1735.00,1805.00,1975.00]
2; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 7; 10.00; [195.00,975.00,1155.00,1435.00,1735.00,1805.00,1815.00]
4; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 7; 60.00; [295.00,355.00,975.00,1155.00,1435.00,1735.00,1805.00]
6; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 7; 100.00; [35.00,355.00,575.00,675.00,1035.00,1175.00,1965.00]
14; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 5; 50.00; [475.00,1595.00,1755.00,1805.00,1995.00]
16; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 180.00; [195.00,615.00,815.00,1235.00,1435.00,1615.00,1805.00]
20; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 10.00; [915.00,925.00,1235.00]
29; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 7; 30.00; [175.00,975.00,1435.00,1655.00,1735.00,1775.00,1805.00]
76; /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 7; 230.00; [175.00,695.00,925.00,1155.00,1435.00,1735.00,1975.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 71, 34, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 82, 88, 43, 40, 93, 61, 52, 34, 69, 55, 1, 68, 40, 91, 92, 57, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 45, 45, 45, 45, 45, 61, 45, 45, 45, 45, 45, 45, 45, 45, 89, 5, 45, 45, 45, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 80, 40, 61, 30, 71, 9, 34, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 99, 79, 23, 87, 99, 99, 99, 99, 16, 39, 1, 4, 64, 67, 43, 99, 99, 99, 31, 40, 29, 18, 64, 82, 25, 69, 55, 90, 74, 80, 71, 95, 65, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(97, 17, 1, 33, 51, 58, 28, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 17, 14, 57, 5, 55, 4, 40, 29, 18, 64, 67, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 57, 48, 86, 90, 71, 9, 34, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2269763244875496066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_112727_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,71,34,86,8,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,82,88], 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,45,45,45,45,45,61], 45
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,80,40,61,30,71,9], 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,99,79,23,87,99,99], 99
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [97,17,1,33,51,58,28], 84
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,17,14,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,57,48,86,90,71,9], 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:27:27,528 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:27:27,529 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:27:50,463 INFO     Done. Execution time: 22.93432879447937 seconds
2023-01-31 11:27:50,463 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_112727_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_112727_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,71,34,86,8,98,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,82,88], 43)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,80,40,61,30,71,9], 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,45,45,45,45,45,61], 45)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,99,79,23,87,99,99], 99)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([97,17,1,33,51,58,28], 84)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,17,14,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,57,48,86,90,71,9], 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [45,71,34,86,8,98,57]
choice: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,17,14,57]
choice: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
choice: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,82,88]
choice: 43
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [45,45,45,45,45,45,61]
choice: 45
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,80,40,61,30,71,9]
choice: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,99,79,23,87,99,99]
choice: 99
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [97,17,1,33,51,58,28]
choice: 84
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,57,48,86,90,71,9]
choice: 34
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       5  |         |     |  [45,71,34,86,8,98,57]  |
    10  |                      // int R = 0;  |         |    0  |       5  |         |     |  [45,71,34,86,8,98,57]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       5  |         |     |  [45,71,34,86,8,98,57]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       5  |         |     |  [45,71,34,86,8,98,57]  |
    14  |                     int chunk = 0;  |         |    0  |       5  |      0  |     |  [45,71,34,86,8,98,57]  |
    25  |                         int j = 0;  |         |    0  |       5  |      0  |  0  |  [45,71,34,86,8,98,57]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       5  |     45  |  0  |  [45,71,34,86,8,98,57]  |
    34  |                     R = R + chunk;  |     45  |   45  |       5  |     45  |  0  |  [45,71,34,86,8,98,57]  |
    38  |                         j = j + 1;  |         |   45  |       5  |     45  |  1  |  [45,71,34,86,8,98,57]  |
    39  |              resetPlaceHolder_2();  |         |   45  |       5  |     45  |  1  |  [45,71,34,86,8,98,57]  |
    45  |        chunk = arrayRead(text, j);  |         |   45  |       5  |     71  |  1  |  [45,71,34,86,8,98,57]  |
    48  |                     R = R + chunk;  |     71  |  116  |       5  |     71  |  1  |  [45,71,34,86,8,98,57]  |
    52  |                         j = j + 1;  |         |  116  |       5  |     71  |  2  |  [45,71,34,86,8,98,57]  |
    53  |              resetPlaceHolder_2();  |         |  116  |       5  |     71  |  2  |  [45,71,34,86,8,98,57]  |
    59  |        chunk = arrayRead(text, j);  |         |  116  |       5  |     34  |  2  |  [45,71,34,86,8,98,57]  |
    62  |                     R = R + chunk;  |     34  |  150  |       5  |     34  |  2  |  [45,71,34,86,8,98,57]  |
    66  |                         j = j + 1;  |         |  150  |       5  |     34  |  3  |  [45,71,34,86,8,98,57]  |
    67  |              resetPlaceHolder_2();  |         |  150  |       5  |     34  |  3  |  [45,71,34,86,8,98,57]  |
    73  |        chunk = arrayRead(text, j);  |         |  150  |       5  |     86  |  3  |  [45,71,34,86,8,98,57]  |
    76  |                     R = R + chunk;  |     86  |  236  |       5  |     86  |  3  |  [45,71,34,86,8,98,57]  |
    80  |                         j = j + 1;  |         |  236  |       5  |     86  |  4  |  [45,71,34,86,8,98,57]  |
    81  |              resetPlaceHolder_2();  |         |  236  |       5  |     86  |  4  |  [45,71,34,86,8,98,57]  |
    87  |        chunk = arrayRead(text, j);  |         |  236  |       5  |      8  |  4  |  [45,71,34,86,8,98,57]  |
    90  |                     R = R + chunk;  |      8  |  244  |       5  |      8  |  4  |  [45,71,34,86,8,98,57]  |
    94  |                         j = j + 1;  |         |  244  |       5  |      8  |  5  |  [45,71,34,86,8,98,57]  |
    95  |              resetPlaceHolder_2();  |         |  244  |       5  |      8  |  5  |  [45,71,34,86,8,98,57]  |
   101  |        chunk = arrayRead(text, j);  |         |  244  |       5  |     98  |  5  |  [45,71,34,86,8,98,57]  |
   104  |                     R = R + chunk;  |     98  |  342  |       5  |     98  |  5  |  [45,71,34,86,8,98,57]  |
   108  |                         j = j + 1;  |         |  342  |       5  |     98  |  6  |  [45,71,34,86,8,98,57]  |
   109  |              resetPlaceHolder_2();  |         |  342  |       5  |     98  |  6  |  [45,71,34,86,8,98,57]  |
   115  |        chunk = arrayRead(text, j);  |         |  342  |       5  |     57  |  6  |  [45,71,34,86,8,98,57]  |
   118  |                     R = R + chunk;  |     57  |  399  |       5  |     57  |  6  |  [45,71,34,86,8,98,57]  |
   122  |                         j = j + 1;  |         |  399  |       5  |     57  |  7  |  [45,71,34,86,8,98,57]  |
   123  |              resetPlaceHolder_2();  |         |  399  |       5  |     57  |  7  |  [45,71,34,86,8,98,57]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {34,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {48,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     45  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |     71  |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     34  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     86  |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |      8  |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     98  |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     57  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      43  |         |     |  [89,71,48,86,8,82,88]  |
    10  |                      // int R = 0;  |         |    0  |      43  |         |     |  [89,71,48,86,8,82,88]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      43  |         |     |  [89,71,48,86,8,82,88]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      43  |         |     |  [89,71,48,86,8,82,88]  |
    14  |                     int chunk = 0;  |         |    0  |      43  |      0  |     |  [89,71,48,86,8,82,88]  |
    25  |                         int i = 0;  |         |    0  |      43  |      0  |  0  |  [89,71,48,86,8,82,88]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      43  |     89  |  0  |  [89,71,48,86,8,82,88]  |
    34  |                     R = R + chunk;  |     89  |   89  |      43  |     89  |  0  |  [89,71,48,86,8,82,88]  |
    38  |                         i = i + 1;  |         |   89  |      43  |     89  |  1  |  [89,71,48,86,8,82,88]  |
    39  |              resetPlaceHolder_1();  |         |   89  |      43  |     89  |  1  |  [89,71,48,86,8,82,88]  |
    45  |        chunk = arrayRead(text, i);  |         |   89  |      43  |     71  |  1  |  [89,71,48,86,8,82,88]  |
    48  |                     R = R + chunk;  |     71  |  160  |      43  |     71  |  1  |  [89,71,48,86,8,82,88]  |
    52  |                         i = i + 1;  |         |  160  |      43  |     71  |  2  |  [89,71,48,86,8,82,88]  |
    53  |              resetPlaceHolder_1();  |         |  160  |      43  |     71  |  2  |  [89,71,48,86,8,82,88]  |
    59  |        chunk = arrayRead(text, i);  |         |  160  |      43  |     48  |  2  |  [89,71,48,86,8,82,88]  |
    62  |                     R = R + chunk;  |     48  |  208  |      43  |     48  |  2  |  [89,71,48,86,8,82,88]  |
    66  |                         i = i + 1;  |         |  208  |      43  |     48  |  3  |  [89,71,48,86,8,82,88]  |
    67  |              resetPlaceHolder_1();  |         |  208  |      43  |     48  |  3  |  [89,71,48,86,8,82,88]  |
    73  |        chunk = arrayRead(text, i);  |         |  208  |      43  |     86  |  3  |  [89,71,48,86,8,82,88]  |
    76  |                     R = R + chunk;  |     86  |  294  |      43  |     86  |  3  |  [89,71,48,86,8,82,88]  |
    80  |                         i = i + 1;  |         |  294  |      43  |     86  |  4  |  [89,71,48,86,8,82,88]  |
    81  |              resetPlaceHolder_1();  |         |  294  |      43  |     86  |  4  |  [89,71,48,86,8,82,88]  |
    87  |        chunk = arrayRead(text, i);  |         |  294  |      43  |      8  |  4  |  [89,71,48,86,8,82,88]  |
    90  |                     R = R + chunk;  |      8  |  302  |      43  |      8  |  4  |  [89,71,48,86,8,82,88]  |
    94  |                         i = i + 1;  |         |  302  |      43  |      8  |  5  |  [89,71,48,86,8,82,88]  |
    95  |              resetPlaceHolder_1();  |         |  302  |      43  |      8  |  5  |  [89,71,48,86,8,82,88]  |
   101  |        chunk = arrayRead(text, i);  |         |  302  |      43  |     82  |  5  |  [89,71,48,86,8,82,88]  |
   104  |                     R = R + chunk;  |     82  |  384  |      43  |     82  |  5  |  [89,71,48,86,8,82,88]  |
   108  |                         i = i + 1;  |         |  384  |      43  |     82  |  6  |  [89,71,48,86,8,82,88]  |
   109  |              resetPlaceHolder_1();  |         |  384  |      43  |     82  |  6  |  [89,71,48,86,8,82,88]  |
   115  |        chunk = arrayRead(text, i);  |         |  384  |      43  |     88  |  6  |  [89,71,48,86,8,82,88]  |
   118  |                     R = R + chunk;  |     88  |  472  |      43  |     88  |  6  |  [89,71,48,86,8,82,88]  |
   122  |                         i = i + 1;  |         |  472  |      43  |     88  |  7  |  [89,71,48,86,8,82,88]  |
   123  |              resetPlaceHolder_1();  |         |  472  |      43  |     88  |  7  |  [89,71,48,86,8,82,88]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     89  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |     71  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     48  |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     86  |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |      8  |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     82  |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     88  |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_2(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 11:27:50,464 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:27:59,228 INFO     Done. Execution time: 8.764014959335327 seconds
2023-01-31 11:27:59,228 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun text () Int    4)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1127-transparentAmortize-60s-mostPrecise/stac-raw-0131-1127-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.755s
user	0m14.633s
sys	0m1.474s

2023-01-31 11:27:59,228 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 11:27:59,229 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:31:06,312 INFO     Done. Execution time: 187.0828137397766 seconds
2023-01-31 11:31:06,312 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz1412129355737063873/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1412129355737063873/bin -o /tmp/qfuzz1412129355737063873/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1412129355737063873/bin
Found file /tmp/qfuzz1412129355737063873/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz1412129355737063873/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1412129355737063873/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1412129355737063873/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1412129355737063873/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz1412129355737063873/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 148748 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m148k to 148k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 67.00; [175.00,975.00,1155.00,1435.00,1735.00,1802.00,1975.00]
2; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 7; 67.00; [535.00,975.00,1155.00,1435.00,1735.00,1802.00,1975.00]
3; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 7; 80.00; [795.00,975.00,1235.00,1315.00,1595.00,1802.00,1915.00]
5; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 667.00; [15.00,682.00]
7; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 7; 100.00; [175.00,915.00,1055.00,1155.00,1435.00,1802.00,1975.00]
10; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 7; 20.00; [575.00,662.00,975.00,1155.00,1175.00,1495.00,1875.00]
11; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 7; 120.00; [175.00,755.00,1035.00,1155.00,1415.00,1562.00,1975.00]
16; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 7; 67.00; [175.00,495.00,975.00,1155.00,1435.00,1735.00,1802.00]
23; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 7; 67.00; [175.00,375.00,755.00,975.00,1435.00,1735.00,1802.00]
28; /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 7; 220.00; [95.00,375.00,595.00,815.00,1115.00,1435.00,1802.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 55, 4, 40, 29, 18, 64, 82, 16, 25, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 37, 18, 64, 82, 51, 69, 55, 98, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 24, 57, 5, 55, 4, 20, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 3, 95, 40, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 37, 51, 70, 8, 98, 57, 97, 55, 4, 68, 38, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 93, 48, 58, 28, 74, 57, 5, 55, 1, 13, 29, 14, 52, 14, 61, 44, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 45, 52, 8, 98, 57, 5, 55, 29, 2, 61, 18, 64, 82, 16, 69, 55, 50, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 48, 95, 65, 79, 39, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 26, 98, 57, 34, 51, 95, 44, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1412129355737063873/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_113106_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,55,4,40,29,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,24,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [77,37,51,70,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,93,48,58,28,74,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,45,52,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,48,95,65,79,39,61]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,26,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:31:06,312 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 11:31:06,313 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 11:31:21,448 INFO     Done. Execution time: 15.135403633117676 seconds
2023-01-31 11:31:21,449 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_113106_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_113106_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,55,4,40,29,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,24,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([77,37,51,70,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,93,48,58,28,74,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,45,52,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,48,95,65,79,39,61])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,26,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,55,4,40,29,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,24,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [77,37,51,70,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,93,48,58,28,74,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,45,52,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,48,95,65,79,39,61]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,26,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [33]  |
    10  |     return;  |         |  0  |  [33]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text           |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [89,71,55,4,40,29,18]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [89,71,55,4,40,29,18]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [89,71,55,4,40,29,18]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [89,71,55,4,40,29,18]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [89,71,55,4,40,29,18]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [89,71,55,4,40,29,18]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [89,71,55,4,40,29,18]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     89  |  0  |    0  |  [89,71,55,4,40,29,18]  |
    24  |                     R = R + chunk;  |     89  |   89  |     89  |  0  |    0  |  [89,71,55,4,40,29,18]  |
    28  |                         i = i + 1;  |         |   89  |     89  |  1  |    0  |  [89,71,55,4,40,29,18]  |
    34  |        chunk = arrayRead(text, i);  |         |   89  |     71  |  1  |    0  |  [89,71,55,4,40,29,18]  |
    37  |                     R = R + chunk;  |     71  |  160  |     71  |  1  |    0  |  [89,71,55,4,40,29,18]  |
    41  |                         i = i + 1;  |         |  160  |     71  |  2  |    0  |  [89,71,55,4,40,29,18]  |
    42  |              resetPlaceHolder_1();  |         |  160  |     71  |  2  |    0  |  [89,71,55,4,40,29,18]  |
    48  |        chunk = arrayRead(text, i);  |         |  160  |     55  |  2  |    0  |  [89,71,55,4,40,29,18]  |
    51  |                     R = R + chunk;  |     55  |  215  |     55  |  2  |    0  |  [89,71,55,4,40,29,18]  |
    55  |                         i = i + 1;  |         |  215  |     55  |  3  |    0  |  [89,71,55,4,40,29,18]  |
    56  |              resetPlaceHolder_1();  |         |  215  |     55  |  3  |    0  |  [89,71,55,4,40,29,18]  |
    62  |        chunk = arrayRead(text, i);  |         |  215  |      4  |  3  |    0  |  [89,71,55,4,40,29,18]  |
    65  |                     R = R + chunk;  |      4  |  219  |      4  |  3  |    0  |  [89,71,55,4,40,29,18]  |
    69  |                         i = i + 1;  |         |  219  |      4  |  4  |    0  |  [89,71,55,4,40,29,18]  |
    70  |              resetPlaceHolder_1();  |         |  219  |      4  |  4  |    0  |  [89,71,55,4,40,29,18]  |
    76  |        chunk = arrayRead(text, i);  |         |  219  |     40  |  4  |    0  |  [89,71,55,4,40,29,18]  |
    79  |                     R = R + chunk;  |     40  |  259  |     40  |  4  |    0  |  [89,71,55,4,40,29,18]  |
    83  |                         i = i + 1;  |         |  259  |     40  |  5  |    0  |  [89,71,55,4,40,29,18]  |
    84  |              resetPlaceHolder_1();  |         |  259  |     40  |  5  |    0  |  [89,71,55,4,40,29,18]  |
    90  |        chunk = arrayRead(text, i);  |         |  259  |     29  |  5  |    0  |  [89,71,55,4,40,29,18]  |
    93  |                     R = R + chunk;  |     29  |  288  |     29  |  5  |    0  |  [89,71,55,4,40,29,18]  |
    97  |                         i = i + 1;  |         |  288  |     29  |  6  |    0  |  [89,71,55,4,40,29,18]  |
    98  |              resetPlaceHolder_1();  |         |  288  |     29  |  6  |    0  |  [89,71,55,4,40,29,18]  |
   104  |        chunk = arrayRead(text, i);  |         |  288  |     18  |  6  |    0  |  [89,71,55,4,40,29,18]  |
   107  |                     R = R + chunk;  |     18  |  306  |     18  |  6  |    0  |  [89,71,55,4,40,29,18]  |
   111  |                         i = i + 1;  |         |  306  |     18  |  7  |    0  |  [89,71,55,4,40,29,18]  |
   112  |              resetPlaceHolder_1();  |         |  306  |     18  |  7  |    0  |  [89,71,55,4,40,29,18]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79,93,107}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     89  |                         0  |
    37  |         R = R + chunk;  |     71  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     55  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |      4  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     40  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     29  |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |     18  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 11:31:21,449 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:31:31,788 INFO     Done. Execution time: 10.338807821273804 seconds
2023-01-31 11:31:31,788 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `7.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1131-transparentAmortize-60s-mostPrecise/stac-raw-0131-1131-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.329s
user	0m22.373s
sys	0m2.632s

2023-01-31 11:31:31,789 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:31:31,789 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:34:38,571 INFO     Done. Execution time: 186.7823474407196 seconds
2023-01-31 11:34:38,572 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz4701954182664914625/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4701954182664914625/bin -o /tmp/qfuzz4701954182664914625/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4701954182664914625/bin
Found file /tmp/qfuzz4701954182664914625/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz4701954182664914625/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4701954182664914625/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4701954182664914625/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4701954182664914625/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz4701954182664914625/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 127814 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 69.00; [28.00,175.00,975.00,1155.00,1435.00,1735.00,1804.00,1975.00]
2; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 6; 7.00; [28.00,35.00,44.00,675.00,1115.00,1375.00]
3; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 8; 7.00; [28.00,35.00,175.00,915.00,1055.00,1155.00,1804.00,1975.00]
6; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 8; 100.00; [28.00,175.00,795.00,1055.00,1155.00,1735.00,1844.00,1975.00]
8; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 576.00; [28.00,604.00,1695.00]
9; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 4; 9.00; [28.00,675.00,995.00,1004.00]
21; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 8; 147.00; [28.00,175.00,604.00,975.00,1155.00,1435.00,1735.00,1975.00]
29; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 7; 9.00; [28.00,235.00,244.00,395.00,1515.00,1955.00,1975.00]
36; /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 8; 160.00; [28.00,215.00,515.00,675.00,875.00,1115.00,1295.00,1804.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 64, 10, 43, 25, 33, 55, 90, 74, 40, 91, 27, 65, 79, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 75, 19, 97, 98, 11, 11, 46, 87, 89, 57, 89, 89, 89, 98, 29, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 71, 48, 86, 8, 98, 57, 5, 55, 4, 78, 29, 18, 64, 38, 16, 69, 55, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 49, 49, 49, 49, 49, 33, 5, 14, 2, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 39, 52, 86, 8, 98, 57, 5, 55, 21, 25, 69, 18, 64, 82, 16, 69, 47, 90, 74, 8, 2, 10, 86, 8, 98, 57, 5, 55, 4, 40, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 45, 1, 52, 8, 98, 57, 41, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 68, 33, 46, 72, 87, 79, 70, 97, 75, 16, 30, 55, 71, 32, 69, 30, 21, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4701954182664914625/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_113438_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,64,10,43,25,33,55]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,75,19,97,98,11,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,49,49,49,49,49,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,84,84,84,84,84,84]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [91,39,52,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,45,1,52,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,55,68,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:34:38,572 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:34:38,572 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:34:55,266 INFO     Done. Execution time: 16.693285703659058 seconds
2023-01-31 11:34:55,266 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_113438_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_113438_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,64,10,43,25,33,55])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,75,19,97,98,11,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,49,49,49,49,49,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,84,84,84,84,84,84])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([91,39,52,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,45,1,52,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,55,68,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,64,10,43,25,33,55]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [11,75,19,97,98,11,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,71,48,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [49,49,49,49,49,49,33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,84,84,84,84,84,84]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [91,39,52,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,45,1,52,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,1,1,1,55,68,33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |           text           |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [89,64,10,43,25,33,55]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [89,64,10,43,25,33,55]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [89,64,10,43,25,33,55]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [89,64,10,43,25,33,55]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [89,64,10,43,25,33,55]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [89,64,10,43,25,33,55]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     89  |  0  |  [89,64,10,43,25,33,55]  |
    25  |                     R = R + chunk;  |     89  |   89  |     89  |  0  |  [89,64,10,43,25,33,55]  |
    28  |                         R = R + 1;  |      1  |   90  |     89  |  0  |  [89,64,10,43,25,33,55]  |
    32  |                         i = i + 1;  |         |   90  |     89  |  1  |  [89,64,10,43,25,33,55]  |
    33  |              resetPlaceHolder_1();  |         |   90  |     89  |  1  |  [89,64,10,43,25,33,55]  |
    39  |        chunk = arrayRead(text, i);  |         |   90  |     64  |  1  |  [89,64,10,43,25,33,55]  |
    42  |                     R = R + chunk;  |     64  |  154  |     64  |  1  |  [89,64,10,43,25,33,55]  |
    45  |                         R = R + 1;  |      1  |  155  |     64  |  1  |  [89,64,10,43,25,33,55]  |
    49  |                         i = i + 1;  |         |  155  |     64  |  2  |  [89,64,10,43,25,33,55]  |
    50  |              resetPlaceHolder_1();  |         |  155  |     64  |  2  |  [89,64,10,43,25,33,55]  |
    56  |        chunk = arrayRead(text, i);  |         |  155  |     10  |  2  |  [89,64,10,43,25,33,55]  |
    59  |                     R = R + chunk;  |     10  |  165  |     10  |  2  |  [89,64,10,43,25,33,55]  |
    62  |                         R = R + 1;  |      1  |  166  |     10  |  2  |  [89,64,10,43,25,33,55]  |
    66  |                         i = i + 1;  |         |  166  |     10  |  3  |  [89,64,10,43,25,33,55]  |
    67  |              resetPlaceHolder_1();  |         |  166  |     10  |  3  |  [89,64,10,43,25,33,55]  |
    73  |        chunk = arrayRead(text, i);  |         |  166  |     43  |  3  |  [89,64,10,43,25,33,55]  |
    76  |                     R = R + chunk;  |     43  |  209  |     43  |  3  |  [89,64,10,43,25,33,55]  |
    79  |                         R = R + 1;  |      1  |  210  |     43  |  3  |  [89,64,10,43,25,33,55]  |
    83  |                         i = i + 1;  |         |  210  |     43  |  4  |  [89,64,10,43,25,33,55]  |
    84  |              resetPlaceHolder_1();  |         |  210  |     43  |  4  |  [89,64,10,43,25,33,55]  |
    90  |        chunk = arrayRead(text, i);  |         |  210  |     25  |  4  |  [89,64,10,43,25,33,55]  |
    93  |                     R = R + chunk;  |     25  |  235  |     25  |  4  |  [89,64,10,43,25,33,55]  |
    96  |                         R = R + 1;  |      1  |  236  |     25  |  4  |  [89,64,10,43,25,33,55]  |
   100  |                         i = i + 1;  |         |  236  |     25  |  5  |  [89,64,10,43,25,33,55]  |
   101  |              resetPlaceHolder_1();  |         |  236  |     25  |  5  |  [89,64,10,43,25,33,55]  |
   107  |        chunk = arrayRead(text, i);  |         |  236  |     33  |  5  |  [89,64,10,43,25,33,55]  |
   110  |                     R = R + chunk;  |     33  |  269  |     33  |  5  |  [89,64,10,43,25,33,55]  |
   113  |                         R = R + 1;  |      1  |  270  |     33  |  5  |  [89,64,10,43,25,33,55]  |
   117  |                         i = i + 1;  |         |  270  |     33  |  6  |  [89,64,10,43,25,33,55]  |
   118  |              resetPlaceHolder_1();  |         |  270  |     33  |  6  |  [89,64,10,43,25,33,55]  |
   124  |        chunk = arrayRead(text, i);  |         |  270  |     55  |  6  |  [89,64,10,43,25,33,55]  |
   127  |                     R = R + chunk;  |     55  |  325  |     55  |  6  |  [89,64,10,43,25,33,55]  |
   130  |                         R = R + 1;  |      1  |  326  |     55  |  6  |  [89,64,10,43,25,33,55]  |
   134  |                         i = i + 1;  |         |  326  |     55  |  7  |  [89,64,10,43,25,33,55]  |
   135  |              resetPlaceHolder_1();  |         |  326  |     55  |  7  |  [89,64,10,43,25,33,55]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     89  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     64  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     10  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     43  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     25  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     33  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     55  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,110,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25,42,59,76,93,110,127}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     89  |                            |                         0  |
    28  |             R = R + 1;  |      1  |                         0  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |
    42  |         R = R + chunk;  |     64  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |
    59  |         R = R + chunk;  |     10  |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     43  |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     25  |                            |                         0  |
    96  |             R = R + 1;  |      1  |                         4  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |
   110  |         R = R + chunk;  |     33  |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
   127  |         R = R + chunk;  |     55  |                            |                         0  |
   130  |             R = R + 1;  |      1  |                         6  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 11:34:55,266 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:35:13,392 INFO     Done. Execution time: 18.125981092453003 seconds
2023-01-31 11:35:13,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `15.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1134-transparentAmortize-60s-mostPrecise/stac-raw-0131-1134-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.117s
user	0m51.275s
sys	0m6.088s

2023-01-31 11:35:13,393 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:35:13,393 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:38:20,575 INFO     Done. Execution time: 187.18211317062378 seconds
2023-01-31 11:38:20,576 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz3491751040205864402/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3491751040205864402/bin -o /tmp/qfuzz3491751040205864402/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3491751040205864402/bin
Found file /tmp/qfuzz3491751040205864402/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz3491751040205864402/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3491751040205864402/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3491751040205864402/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3491751040205864402/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3491751040205864402/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 145257 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m145k to 145k us (average: 145k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 69.00; [175.00,975.00,1155.00,1435.00,1735.00,1804.00,1975.00]
2; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 7; 60.00; [515.00,704.00,835.00,1315.00,1815.00,1915.00,1975.00]
4; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 7; 100.00; [75.00,344.00,475.00,575.00,1055.00,1235.00,1395.00]
8; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 140.00; [615.00,815.00,975.00,1235.00,1435.00,1575.00,1804.00]
9; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 7; 40.00; [1084.00,1155.00,1195.00,1435.00,1735.00,1855.00,1975.00]
11; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 6; 60.00; [295.00,655.00,775.00,1375.00,1435.00,1804.00]
14; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta; 7; 180.00; [175.00,524.00,975.00,1155.00,1435.00,1735.00,1975.00]
16; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 7; 69.00; [175.00,355.00,975.00,1255.00,1435.00,1735.00,1804.00]
59; /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 5; 9.00; [35.00,455.00,1155.00,1735.00,1744.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 22, 86, 86, 1, 57, 1, 56)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 17, 62, 58, 44, 47, 90, 7, 98, 1, 16, 47, 90, 59, 98, 1, 16, 40, 61, 30, 71, 9, 34, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 14, 38, 68, 68, 32, 68, 68, 68, 68, 78, 58, 44, 47, 89, 7, 22, 1, 16, 40, 61, 30, 71, 9, 25, 43, 57, 1, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 71, 59, 57, 92, 86, 98, 44, 98, 2, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 78, 40, 61, 30, 71, 9, 34, 43, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 3, 61, 52, 28, 23, 69, 61, 18, 49, 5, 31, 26, 64, 75, 16, 33, 1, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 90, 41, 95, 65, 98, 25, 23, 4, 33, 97, 52, 37, 93, 25, 25, 25, 52, 29, 25, 10, 40, 16, 27, 17, 25, 65, 42, 91, 64, 42, 91, 95, 65, 23, 4, 33, 97, 52, 37, 93, 25, 25, 100, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 75, 63, 65, 23, 96, 25, 25, 29, 52, 42, 69, 58, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3491751040205864402/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_113820_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,22,86,86,1,57,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,17,62]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,14,38,68,68,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [53,71,59,57,92,86,98]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,78,40,61,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,3,61,52,28,23,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,90,41,95,65,98,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:38:20,576 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:38:20,576 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:38:31,516 INFO     Done. Execution time: 10.939434289932251 seconds
2023-01-31 11:38:31,516 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_113820_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_113820_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,22,86,86,1,57,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,17,62])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,14,38,68,68,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([53,71,59,57,92,86,98])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,78,40,61,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,3,61,52,28,23,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,90,41,95,65,98,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [86,22,86,86,1,57,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,17,62]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [25,71,48,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,14,38,68,68,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [53,71,59,57,92,86,98]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,78,40,61,30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [16,3,61,52,28,23,69]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [34,90,41,95,65,98,25]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [86,22,86,86,1,57,1]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [86,22,86,86,1,57,1]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [86,22,86,86,1,57,1]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [86,22,86,86,1,57,1]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [86,22,86,86,1,57,1]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [86,22,86,86,1,57,1]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     86  |  0  |  [86,22,86,86,1,57,1]  |
    25  |                     R = R + chunk;  |     86  |   86  |     86  |  0  |  [86,22,86,86,1,57,1]  |
    29  |                         i = i + 1;  |         |   86  |     86  |  1  |  [86,22,86,86,1,57,1]  |
    30  |              resetPlaceHolder_1();  |         |   86  |     86  |  1  |  [86,22,86,86,1,57,1]  |
    36  |        chunk = arrayRead(text, i);  |         |   86  |     22  |  1  |  [86,22,86,86,1,57,1]  |
    39  |                     R = R + chunk;  |     22  |  108  |     22  |  1  |  [86,22,86,86,1,57,1]  |
    43  |                         i = i + 1;  |         |  108  |     22  |  2  |  [86,22,86,86,1,57,1]  |
    44  |              resetPlaceHolder_1();  |         |  108  |     22  |  2  |  [86,22,86,86,1,57,1]  |
    50  |        chunk = arrayRead(text, i);  |         |  108  |     86  |  2  |  [86,22,86,86,1,57,1]  |
    53  |                     R = R + chunk;  |     86  |  194  |     86  |  2  |  [86,22,86,86,1,57,1]  |
    57  |                         i = i + 1;  |         |  194  |     86  |  3  |  [86,22,86,86,1,57,1]  |
    58  |              resetPlaceHolder_1();  |         |  194  |     86  |  3  |  [86,22,86,86,1,57,1]  |
    64  |        chunk = arrayRead(text, i);  |         |  194  |     86  |  3  |  [86,22,86,86,1,57,1]  |
    67  |                     R = R + chunk;  |     86  |  280  |     86  |  3  |  [86,22,86,86,1,57,1]  |
    71  |                         i = i + 1;  |         |  280  |     86  |  4  |  [86,22,86,86,1,57,1]  |
    72  |              resetPlaceHolder_1();  |         |  280  |     86  |  4  |  [86,22,86,86,1,57,1]  |
    78  |        chunk = arrayRead(text, i);  |         |  280  |      1  |  4  |  [86,22,86,86,1,57,1]  |
    81  |                     R = R + chunk;  |      1  |  281  |      1  |  4  |  [86,22,86,86,1,57,1]  |
    85  |                         i = i + 1;  |         |  281  |      1  |  5  |  [86,22,86,86,1,57,1]  |
    86  |              resetPlaceHolder_1();  |         |  281  |      1  |  5  |  [86,22,86,86,1,57,1]  |
    92  |        chunk = arrayRead(text, i);  |         |  281  |     57  |  5  |  [86,22,86,86,1,57,1]  |
    95  |                     R = R + chunk;  |     57  |  338  |     57  |  5  |  [86,22,86,86,1,57,1]  |
    99  |                         i = i + 1;  |         |  338  |     57  |  6  |  [86,22,86,86,1,57,1]  |
   100  |              resetPlaceHolder_1();  |         |  338  |     57  |  6  |  [86,22,86,86,1,57,1]  |
   106  |        chunk = arrayRead(text, i);  |         |  338  |      1  |  6  |  [86,22,86,86,1,57,1]  |
   109  |                     R = R + chunk;  |      1  |  339  |      1  |  6  |  [86,22,86,86,1,57,1]  |
   113  |                         i = i + 1;  |         |  339  |      1  |  7  |  [86,22,86,86,1,57,1]  |
   114  |              resetPlaceHolder_1();  |         |  339  |      1  |  7  |  [86,22,86,86,1,57,1]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {109}; {81} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     86  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     22  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     86  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     86  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      1  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     57  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |      1  |                         1  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25}; {53}; {67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(2), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25}; {53}; {67} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     86  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     22  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     86  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     86  |                         2  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      1  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     57  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |      1  |                            |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [39, 95]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {109}; {81}
GroupID(1): {25}; {53}; {67}
GroupID(2): {39,95}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     86  |                            |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    39  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    53  |         R = R + chunk;  |     86  |                            |                         1  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    67  |         R = R + chunk;  |     86  |                            |                         2  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |      1  |                         0  |                            |                            |
    86  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    95  |         R = R + chunk;  |     57  |                            |                            |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   109  |         R = R + chunk;  |      1  |                         1  |                            |                            |
   114  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(86)
GroupID(1): Set(30, 58)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 1) || (i == 1))
  {
    if ((i < 0) || (i == 0))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  if ((i < 4) || (i == 4))
  {
    R0 = R0 + chunk;
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R0 = R0 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 1) || (i == 1))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  if ((i < 4) || (i == 4))
  {
    // reset R0
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 11:38:31,516 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:39:34,685 INFO     Done. Execution time: 63.16850996017456 seconds
2023-01-31 11:39:34,685 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < text) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D0 = D0 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < text) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D0 = D0 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5039661566416146078.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8151725767879159632.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5820380220883568592.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3829885174981100196.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5010227767755976914.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-287444532987034465.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1895641877641836366.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3393640818017732119.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2613312907092823103.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       (or true (= D2p 0))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 8))  (define-fun D1 () Int    (- 7))  (define-fun D2 () Int    (- 8))  (define-fun C2 () Int    7)  (define-fun C1 () Int    0)  (define-fun text () Int    7)  (define-fun D0p () Int    15)  (define-fun D1p () Int    15)  (define-fun D2p () Int    10)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `60.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1138-transparentAmortize-60s-mostPrecise/stac-raw-0131-1138-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.160s
user	4m3.023s
sys	0m3.069s

2023-01-31 11:39:34,686 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 11:39:34,686 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:42:41,395 INFO     Done. Execution time: 186.70857000350952 seconds
2023-01-31 11:42:41,395 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz3201973858430351960/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3201973858430351960/bin -o /tmp/qfuzz3201973858430351960/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3201973858430351960/bin
Found file /tmp/qfuzz3201973858430351960/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz3201973858430351960/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3201973858430351960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3201973858430351960/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3201973858430351960/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3201973858430351960/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 143311 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,1791.00]
2; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,1791.00]
4; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,311.00]
6; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,591.00]
8; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,1231.00]
11; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,911.00]
18; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,611.00]
21; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 3; 5.00; [29.00,34.00,1191.00]
60; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,71.00]
84; /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,831.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 34, 64, 82, 16, 69, 87, 90, 74, 40, 4, 34, 34, 5, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 45, 40, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 44, 62, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 71, 48, 98, 2, 44, 49, 5, 55, 4, 40, 29, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 1, 1, 99, 33, 27, 59, 1, 29, 66, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 69, 28, 67, 1, 35, 89, 47, 19, 67, 87, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 61, 61, 61, 61, 61, 61, 85, 61, 61, 61, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 8, 41, 96, 12, 13, 49, 21, 49, 78, 65, 2, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 29, 14, 52, 69, 3, 95, 65, 72)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 66, 48, 86, 16, 98, 57, 5, 35, 4, 40, 47, 1, 32, 30, 96, 47, 16, 7, 98, 1, 16, 72, 72, 72, 72, 72, 72, 55, 90, 74, 40, 91, 95, 65, 69, 78, 58, 96, 47, 16, 7, 18, 1, 16, 37, 51, 30, 16, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3201973858430351960/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_114241_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 3, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 59, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 30, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 45, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 61, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 15, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:42:41,395 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 11:42:41,396 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 11:42:51,498 INFO     Done. Execution time: 10.102368116378784 seconds
2023-01-31 11:42:51,498 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_114241_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_114241_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(3, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(59, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(30, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(45, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(61, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(15, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 41
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 3
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 59
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 30
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 45
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 61
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 29
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 15
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 89
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 89
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   41  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   41  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   41  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   41  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   41  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   41  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   41  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   41  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       42  |  1  |   41  |      2  |
    41  |                       R = R + sep;  |     41  |  42  |       42  |  1  |   41  |      2  |
    45  |             builder = builder + 1;  |         |  42  |       43  |  1  |   41  |      2  |
    48  |                         R = R + 1;  |      1  |  43  |       43  |  1  |   41  |      2  |
    52  |                         i = i + 1;  |         |  43  |       43  |  2  |   41  |      2  |
    53  |              resetPlaceHolder_1();  |         |  43  |       43  |  2  |   41  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     41  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 11:42:51,499 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:43:13,399 INFO     Done. Execution time: 21.89996886253357 seconds
2023-01-31 11:43:13,399 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `19.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1142-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1142-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m21.891s
user	0m55.599s
sys	0m8.135s

2023-01-31 11:43:13,399 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 11:43:13,400 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:46:20,530 INFO     Done. Execution time: 187.1303858757019 seconds
2023-01-31 11:46:20,531 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7646512430023243133/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7646512430023243133/bin -o /tmp/qfuzz7646512430023243133/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7646512430023243133/bin
Found file /tmp/qfuzz7646512430023243133/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7646512430023243133/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7646512430023243133/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7646512430023243133/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7646512430023243133/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz7646512430023243133/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 142468 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m142k to 142k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
3; /tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7646512430023243133/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_114620_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:46:20,531 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 11:46:20,531 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 11:46:29,231 INFO     Done. Execution time: 8.699541807174683 seconds
2023-01-31 11:46:29,231 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_114620_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_114620_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 11:46:29,232 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:46:39,983 INFO     Done. Execution time: 10.751680135726929 seconds
2023-01-31 11:46:39,984 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `8.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1146-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1146-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.742s
user	0m23.710s
sys	0m2.973s

2023-01-31 11:46:39,984 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 11:46:39,984 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:49:47,352 INFO     Done. Execution time: 187.36767506599426 seconds
2023-01-31 11:49:47,352 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz6074159807255787831/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6074159807255787831/bin -o /tmp/qfuzz6074159807255787831/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6074159807255787831/bin
Found file /tmp/qfuzz6074159807255787831/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz6074159807255787831/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6074159807255787831/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6074159807255787831/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6074159807255787831/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6074159807255787831/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 153093 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m153k to 153k us (average: 153k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
3; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
7; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
11; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
13; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
19; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
22; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
26; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
29; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
31; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
32; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
34; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
39; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
43; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
45; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
46; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
48; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
50; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
54; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128; 3; 8.00; [30.00,38.00,66.00]
56; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
61; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
64; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
68; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
70; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
73; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,38.00,50.00,66.00]
85; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
86; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
88; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
90; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
95; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
107; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
120; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
121; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
124; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
134; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
158; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
167; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
171; /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:2
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:2
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:2
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:4
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 17, 8, 98, 57, 5, 55, 4, 68, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 43, 55, 55, 55, 55, 47, 55, 55, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 71, 8, 98, 57, 77, 99, 93, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 99, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 73, 34, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 69, 86, 8, 98, 57, 5, 72, 72, 72, 72, 100, 72, 72, 72, 71, 6, 15, 69, 67, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 86, 86, 65)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(98, 86, 86, 86, 7, 30, 86, 86, 1, 94, 13, 90, 2, 56, 68, 14, 86, 86, 86, 1, 97, 13, 90, 51, 60, 98)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 71, 94, 44, 18, 64, 82, 16, 69, 55, 90, 93, 40, 5, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 72, 57, 5, 41, 69, 41, 9, 55, 4, 65, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 40, 29, 18, 64, 1, 28, 69, 91, 90, 74, 40, 91, 85, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 4, 60, 78, 89, 8, 20, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 72, 72, 72, 72, 72, 72, 72, 72, 72, 78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 24, 16, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 23, 82, 26, 5, 15, 4, 35, 47, 1, 30, 82, 55, 27, 78, 58, 29, 19, 16, 11, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 46, 76, 4, 57, 5, 69, 88, 67, 53, 11, 74, 46, 43, 25, 10, 23, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 65, 48, 69, 86, 29, 85, 53, 93, 65, 89, 45, 29, 65, 10, 92, 8, 56, 56, 56, 53, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 21, 37, 22, 37, 37, 37, 64, 37, 37, 37, 74, 57, 45, 1, 37, 37, 37, 71, 1, 37, 93, 29, 37, 13, 93, 69, 97, 60, 28, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 69, 56, 57, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(66, 91, 90, 2, 10, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 17, 38, 71, 9, 34, 43, 25, 33, 94, 52, 100, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 55, 48, 86, 8, 98, 57, 98, 71, 20, 30, 71, 41, 17, 43, 25, 33, 61, 13, 1, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 41, 28, 42, 28, 78, 80, 70, 41, 28, 28, 28, 28, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 12, 64, 11, 16, 69, 55, 90, 74, 88, 91, 95, 17, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 45, 94, 86, 8, 98, 57, 74, 41, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 43, 56, 74, 74, 74, 74, 34, 74, 33, 16, 24, 25, 5, 29, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 3, 48, 86, 88, 98, 57, 5, 55, 8, 52, 30, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 64, 64, 64, 64, 64, 64, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 40, 61, 30, 59, 9, 34, 43, 25, 33, 61, 14, 58, 44, 47, 40, 7, 98, 1, 16, 40, 61, 30, 59, 9, 34, 43, 25, 33, 61, 41, 14, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 96, 98, 53, 56, 90, 75, 71, 16, 70, 29, 5, 11, 19, 52, 31, 70, 9, 90, 28, 45, 71, 90, 74, 68, 91, 7, 65, 12, 99, 99, 11, 99, 70, 56, 90, 75, 71, 16, 70, 29, 5, 11, 9, 34, 43, 25, 45, 77, 52, 72, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 4, 40, 29, 18, 69, 28, 16, 69, 80, 22, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 16, 98, 57, 5, 55, 4, 40, 29, 18, 64, 84, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 1, 56, 45, 5, 57, 29, 18, 62, 82, 69, 93, 99, 44, 47, 16, 7, 44, 40, 88, 25, 33, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 2, 34, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 97, 81, 89, 54, 89, 89, 56, 40, 8, 98, 53, 61, 55, 12, 15, 36, 41, 16, 40, 63, 30, 71, 9, 66, 52, 25, 33, 61, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 62, 54, 10, 21, 45, 99, 37, 36, 85, 89, 53, 17, 98, 29, 32, 89, 99, 37, 36, 85, 82, 54, 10, 21, 45, 69, 15, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 63, 48, 87, 4, 29, 29, 46, 64, 82, 16, 69, 55, 92, 69, 55, 90, 74, 40, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 17, 28, 96, 19, 1, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(82, 87, 39, 83, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 14, 29, 68, 80, 49, 68, 14, 17, 68, 54, 89, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 40, 89, 20, 11, 76, 76, 1, 2, 29, 11, 76, 76, 1, 2, 29, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 33, 95, 53, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 28, 28, 28, 28, 28, 28, 28, 56, 28, 28, 15, 24, 58, 28, 28, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(87, 88, 61, 43, 41, 33, 61, 19, 28, 100, 21, 40, 48, 70, 7, 7, 95, 7, 7, 7, 7, 7, 7, 51, 47, 76, 12, 40, 61, 97, 14, 12, 29, 18, 37, 76, 92, 71, 8, 83, 8, 36, 43, 25, 33, 61, 74, 28, 100, 8, 36, 14, 95, 65, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 33, 36, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6074159807255787831/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_114947_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,17,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55,43,55,55,55,55,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,71,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,73,34,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,69,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [2]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,86,86,65]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [98,86,86,86,7,30,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,71,94,44,18,64,82]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,72,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,40,29,18,64,1,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,4,60,78,89,8,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [44,72,72,72,72,72,72]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,24,16,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,23,82,26,5,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,46,76,4,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,65,48,69,86,29,85]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [92,21,37,22,37,37,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,69,56,57,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [66,91,90,2,10,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,17,38,71,9,34,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,55,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,41,28,42,28,78,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,12,64,11,16,69,55]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,45,94,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,43,56,74,74,74,74]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,3,48,86,88,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,64,64,64,64,64,64]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,40,61,30,59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [94,96,98,53,56,90,75]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,4,40,29,18,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,16,98,57,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,1,56,45,5,57,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,2,34,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,97,81,89,54,89,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,62,54,10,21,45,99]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,63,48,87,4,29,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,17,28,96,19,1,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [82,87,39,83,51]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,14,29,68,80,49,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,40,89,20,11,76,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,33,95,53,79]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,28,28,28,28,28,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [87,88,61,43,41,33,61]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,33,36,75,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:49:47,353 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 11:49:47,353 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 11:50:47,521 INFO     Done. Execution time: 60.16830539703369 seconds
2023-01-31 11:50:47,522 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_114947_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_114947_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,17,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 54 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55,43,55,55,55,55,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,73,34,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,71,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([2])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,69,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,86,86,65])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([98,86,86,86,7,30,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,71,94,44,18,64,82])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 54 (14.81%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,72,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,40,29,18,64,1,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,4,60,78,89,8,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([44,72,72,72,72,72,72])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,24,16,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,23,82,26,5,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,46,76,4,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 54 (29.63%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,65,48,69,86,29,85])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([80])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([92,21,37,22,37,37,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,69,56,57,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([66,91,90,2,10,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,17,38,71,9,34,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,55,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,41,28,42,28,78,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,12,64,11,16,69,55])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,45,94,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,43,56,74,74,74,74])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,3,48,86,88,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,64,64,64,64,64,64])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,40,61,30,59])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([94,96,98,53,56,90,75])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,4,40,29,18,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,16,98,57,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,1,56,45,5,57,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,2,34,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,97,81,89,54,89,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,62,54,10,21,45,99])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,63,48,87,4,29,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,17,28,96,19,1,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 45 / 54 (83.33%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([82,87,39,83,51])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,14,29,68,80,49,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,40,89,20,11,76,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,33,95,53,79])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,28,28,28,28,28,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([87,88,61,43,41,33,61])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,33,36,75,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 54)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 54 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [2]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [3]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [80]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [22]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,17,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [55,43,55,55,55,55,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,71,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,73,34,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,69,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [86,86,86,65]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [98,86,86,86,7,30,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [21,71,94,44,18,64,82]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,8,72,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [40,40,29,18,64,1,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [58,4,60,78,89,8,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [44,72,72,72,72,72,72]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,24,16,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,23,82,26,5,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,46,76,4,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [1,65,48,69,86,29,85]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [92,21,37,22,37,37,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [1,69,56,57,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [66,91,90,2,10,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [40,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,17,38,71,9,34,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,55,48,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [28,41,28,42,28,78,80]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,12,64,11,16,69,55]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,45,94,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [81,43,56,74,74,74,74]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [65,3,48,86,88,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [64,64,64,64,64,64,64]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,40,61,30,59]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [94,96,98,53,56,90,75]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,4,40,29,18,69]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,16,98,57,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [25,1,56,45,5,57,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,2,34,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,97,81,89,54,89,89]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [31,62,54,10,21,45,99]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,63,48,87,4,29,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [28,17,28,96,19,1,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [82,87,39,83,51]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [10,14,29,68,80,49,68]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,40,89,20,11,76,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [23,33,95,53,79]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [12,28,28,28,28,28,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [87,88,61,43,41,33,61]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [1,33,36,75,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [2]  |
    10  |     return;  |         |  0  |     [2]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 46 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 4421):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [89,71,48,17,8,98,57]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [89,71,48,17,8,98,57]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [89,71,48,17,8,98,57]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [89,71,48,17,8,98,57]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [89,71,48,17,8,98,57]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [89,71,48,17,8,98,57]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     89  |  0  |      |  [89,71,48,17,8,98,57]  |
    24  |                         int j = 0;  |         |    0  |     89  |  0  |   0  |  [89,71,48,17,8,98,57]  |
    30  |                         R = R + 2;  |      2  |    2  |     89  |  0  |   0  |  [89,71,48,17,8,98,57]  |
    34  |                         j = j + 1;  |         |    2  |     89  |  0  |   1  |  [89,71,48,17,8,98,57]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     89  |  0  |   1  |  [89,71,48,17,8,98,57]  |
    41  |                         R = R + 2;  |      2  |    4  |     89  |  0  |   1  |  [89,71,48,17,8,98,57]  |
    45  |                         j = j + 1;  |         |    4  |     89  |  0  |   2  |  [89,71,48,17,8,98,57]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     89  |  0  |   2  |  [89,71,48,17,8,98,57]  |
    52  |                         R = R + 2;  |      2  |    6  |     89  |  0  |   2  |  [89,71,48,17,8,98,57]  |
    56  |                         j = j + 1;  |         |    6  |     89  |  0  |   3  |  [89,71,48,17,8,98,57]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     89  |  0  |   3  |  [89,71,48,17,8,98,57]  |
    63  |                         R = R + 2;  |      2  |    8  |     89  |  0  |   3  |  [89,71,48,17,8,98,57]  |
    67  |                         j = j + 1;  |         |    8  |     89  |  0  |   4  |  [89,71,48,17,8,98,57]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     89  |  0  |   4  |  [89,71,48,17,8,98,57]  |
    74  |                         R = R + 2;  |      2  |   10  |     89  |  0  |   4  |  [89,71,48,17,8,98,57]  |
    78  |                         j = j + 1;  |         |   10  |     89  |  0  |   5  |  [89,71,48,17,8,98,57]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     89  |  0  |   5  |  [89,71,48,17,8,98,57]  |
    85  |                         R = R + 2;  |      2  |   12  |     89  |  0  |   5  |  [89,71,48,17,8,98,57]  |
    89  |                         j = j + 1;  |         |   12  |     89  |  0  |   6  |  [89,71,48,17,8,98,57]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     89  |  0  |   6  |  [89,71,48,17,8,98,57]  |
    96  |                         R = R + 2;  |      2  |   14  |     89  |  0  |   6  |  [89,71,48,17,8,98,57]  |
   100  |                         j = j + 1;  |         |   14  |     89  |  0  |   7  |  [89,71,48,17,8,98,57]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     89  |  0  |   7  |  [89,71,48,17,8,98,57]  |
   107  |                         R = R + 2;  |      2  |   16  |     89  |  0  |   7  |  [89,71,48,17,8,98,57]  |
   111  |                         j = j + 1;  |         |   16  |     89  |  0  |   8  |  [89,71,48,17,8,98,57]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     89  |  0  |   8  |  [89,71,48,17,8,98,57]  |
   118  |                         R = R + 2;  |      2  |   18  |     89  |  0  |   8  |  [89,71,48,17,8,98,57]  |
   122  |                         j = j + 1;  |         |   18  |     89  |  0  |   9  |  [89,71,48,17,8,98,57]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     89  |  0  |   9  |  [89,71,48,17,8,98,57]  |
   129  |                         R = R + 2;  |      2  |   20  |     89  |  0  |   9  |  [89,71,48,17,8,98,57]  |
   133  |                         j = j + 1;  |         |   20  |     89  |  0  |  10  |  [89,71,48,17,8,98,57]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     89  |  0  |  10  |  [89,71,48,17,8,98,57]  |
   140  |                         R = R + 2;  |      2  |   22  |     89  |  0  |  10  |  [89,71,48,17,8,98,57]  |
   144  |                         j = j + 1;  |         |   22  |     89  |  0  |  11  |  [89,71,48,17,8,98,57]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     89  |  0  |  11  |  [89,71,48,17,8,98,57]  |
   151  |                         R = R + 2;  |      2  |   24  |     89  |  0  |  11  |  [89,71,48,17,8,98,57]  |
   155  |                         j = j + 1;  |         |   24  |     89  |  0  |  12  |  [89,71,48,17,8,98,57]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     89  |  0  |  12  |  [89,71,48,17,8,98,57]  |
   162  |                         R = R + 2;  |      2  |   26  |     89  |  0  |  12  |  [89,71,48,17,8,98,57]  |
   166  |                         j = j + 1;  |         |   26  |     89  |  0  |  13  |  [89,71,48,17,8,98,57]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     89  |  0  |  13  |  [89,71,48,17,8,98,57]  |
   173  |                         R = R + 2;  |      2  |   28  |     89  |  0  |  13  |  [89,71,48,17,8,98,57]  |
   177  |                         j = j + 1;  |         |   28  |     89  |  0  |  14  |  [89,71,48,17,8,98,57]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     89  |  0  |  14  |  [89,71,48,17,8,98,57]  |
   184  |                         R = R + 2;  |      2  |   30  |     89  |  0  |  14  |  [89,71,48,17,8,98,57]  |
   188  |                         j = j + 1;  |         |   30  |     89  |  0  |  15  |  [89,71,48,17,8,98,57]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     89  |  0  |  15  |  [89,71,48,17,8,98,57]  |
   195  |                         R = R + 2;  |      2  |   32  |     89  |  0  |  15  |  [89,71,48,17,8,98,57]  |
   199  |                         j = j + 1;  |         |   32  |     89  |  0  |  16  |  [89,71,48,17,8,98,57]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     89  |  0  |  16  |  [89,71,48,17,8,98,57]  |
   206  |                         R = R + 2;  |      2  |   34  |     89  |  0  |  16  |  [89,71,48,17,8,98,57]  |
   210  |                         j = j + 1;  |         |   34  |     89  |  0  |  17  |  [89,71,48,17,8,98,57]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     89  |  0  |  17  |  [89,71,48,17,8,98,57]  |
   217  |                         R = R + 2;  |      2  |   36  |     89  |  0  |  17  |  [89,71,48,17,8,98,57]  |
   221  |                         j = j + 1;  |         |   36  |     89  |  0  |  18  |  [89,71,48,17,8,98,57]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     89  |  0  |  18  |  [89,71,48,17,8,98,57]  |
   228  |                         R = R + 2;  |      2  |   38  |     89  |  0  |  18  |  [89,71,48,17,8,98,57]  |
   232  |                         j = j + 1;  |         |   38  |     89  |  0  |  19  |  [89,71,48,17,8,98,57]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     89  |  0  |  19  |  [89,71,48,17,8,98,57]  |
   239  |                         R = R + 2;  |      2  |   40  |     89  |  0  |  19  |  [89,71,48,17,8,98,57]  |
   243  |                         j = j + 1;  |         |   40  |     89  |  0  |  20  |  [89,71,48,17,8,98,57]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     89  |  0  |  20  |  [89,71,48,17,8,98,57]  |
   250  |                         R = R + 2;  |      2  |   42  |     89  |  0  |  20  |  [89,71,48,17,8,98,57]  |
   254  |                         j = j + 1;  |         |   42  |     89  |  0  |  21  |  [89,71,48,17,8,98,57]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     89  |  0  |  21  |  [89,71,48,17,8,98,57]  |
   261  |                         R = R + 2;  |      2  |   44  |     89  |  0  |  21  |  [89,71,48,17,8,98,57]  |
   265  |                         j = j + 1;  |         |   44  |     89  |  0  |  22  |  [89,71,48,17,8,98,57]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     89  |  0  |  22  |  [89,71,48,17,8,98,57]  |
   272  |                         R = R + 2;  |      2  |   46  |     89  |  0  |  22  |  [89,71,48,17,8,98,57]  |
   276  |                         j = j + 1;  |         |   46  |     89  |  0  |  23  |  [89,71,48,17,8,98,57]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     89  |  0  |  23  |  [89,71,48,17,8,98,57]  |
   283  |                         R = R + 2;  |      2  |   48  |     89  |  0  |  23  |  [89,71,48,17,8,98,57]  |
   287  |                         j = j + 1;  |         |   48  |     89  |  0  |  24  |  [89,71,48,17,8,98,57]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     89  |  0  |  24  |  [89,71,48,17,8,98,57]  |
   294  |                         R = R + 2;  |      2  |   50  |     89  |  0  |  24  |  [89,71,48,17,8,98,57]  |
   298  |                         j = j + 1;  |         |   50  |     89  |  0  |  25  |  [89,71,48,17,8,98,57]  |
   299  |              resetPlaceHolder_2();  |         |   50  |     89  |  0  |  25  |  [89,71,48,17,8,98,57]  |
   305  |                         R = R + 2;  |      2  |   52  |     89  |  0  |  25  |  [89,71,48,17,8,98,57]  |
   309  |                         j = j + 1;  |         |   52  |     89  |  0  |  26  |  [89,71,48,17,8,98,57]  |
   310  |              resetPlaceHolder_2();  |         |   52  |     89  |  0  |  26  |  [89,71,48,17,8,98,57]  |
   316  |                         R = R + 2;  |      2  |   54  |     89  |  0  |  26  |  [89,71,48,17,8,98,57]  |
   320  |                         j = j + 1;  |         |   54  |     89  |  0  |  27  |  [89,71,48,17,8,98,57]  |
   321  |              resetPlaceHolder_2();  |         |   54  |     89  |  0  |  27  |  [89,71,48,17,8,98,57]  |
   327  |                         R = R + 2;  |      2  |   56  |     89  |  0  |  27  |  [89,71,48,17,8,98,57]  |
   331  |                         j = j + 1;  |         |   56  |     89  |  0  |  28  |  [89,71,48,17,8,98,57]  |
   332  |              resetPlaceHolder_2();  |         |   56  |     89  |  0  |  28  |  [89,71,48,17,8,98,57]  |
   338  |                         R = R + 2;  |      2  |   58  |     89  |  0  |  28  |  [89,71,48,17,8,98,57]  |
   342  |                         j = j + 1;  |         |   58  |     89  |  0  |  29  |  [89,71,48,17,8,98,57]  |
   343  |              resetPlaceHolder_2();  |         |   58  |     89  |  0  |  29  |  [89,71,48,17,8,98,57]  |
   349  |                         R = R + 2;  |      2  |   60  |     89  |  0  |  29  |  [89,71,48,17,8,98,57]  |
   353  |                         j = j + 1;  |         |   60  |     89  |  0  |  30  |  [89,71,48,17,8,98,57]  |
   354  |              resetPlaceHolder_2();  |         |   60  |     89  |  0  |  30  |  [89,71,48,17,8,98,57]  |
   360  |                         R = R + 2;  |      2  |   62  |     89  |  0  |  30  |  [89,71,48,17,8,98,57]  |
   364  |                         j = j + 1;  |         |   62  |     89  |  0  |  31  |  [89,71,48,17,8,98,57]  |
   365  |              resetPlaceHolder_2();  |         |   62  |     89  |  0  |  31  |  [89,71,48,17,8,98,57]  |
   371  |                         R = R + 2;  |      2  |   64  |     89  |  0  |  31  |  [89,71,48,17,8,98,57]  |
   375  |                         j = j + 1;  |         |   64  |     89  |  0  |  32  |  [89,71,48,17,8,98,57]  |
   376  |              resetPlaceHolder_2();  |         |   64  |     89  |  0  |  32  |  [89,71,48,17,8,98,57]  |
   382  |                         R = R + 2;  |      2  |   66  |     89  |  0  |  32  |  [89,71,48,17,8,98,57]  |
   386  |                         j = j + 1;  |         |   66  |     89  |  0  |  33  |  [89,71,48,17,8,98,57]  |
   387  |              resetPlaceHolder_2();  |         |   66  |     89  |  0  |  33  |  [89,71,48,17,8,98,57]  |
   393  |                         R = R + 2;  |      2  |   68  |     89  |  0  |  33  |  [89,71,48,17,8,98,57]  |
   397  |                         j = j + 1;  |         |   68  |     89  |  0  |  34  |  [89,71,48,17,8,98,57]  |
   398  |              resetPlaceHolder_2();  |         |   68  |     89  |  0  |  34  |  [89,71,48,17,8,98,57]  |
   404  |                         R = R + 2;  |      2  |   70  |     89  |  0  |  34  |  [89,71,48,17,8,98,57]  |
   408  |                         j = j + 1;  |         |   70  |     89  |  0  |  35  |  [89,71,48,17,8,98,57]  |
   409  |              resetPlaceHolder_2();  |         |   70  |     89  |  0  |  35  |  [89,71,48,17,8,98,57]  |
   415  |                         R = R + 2;  |      2  |   72  |     89  |  0  |  35  |  [89,71,48,17,8,98,57]  |
   419  |                         j = j + 1;  |         |   72  |     89  |  0  |  36  |  [89,71,48,17,8,98,57]  |
   420  |              resetPlaceHolder_2();  |         |   72  |     89  |  0  |  36  |  [89,71,48,17,8,98,57]  |
   426  |                         R = R + 2;  |      2  |   74  |     89  |  0  |  36  |  [89,71,48,17,8,98,57]  |
   430  |                         j = j + 1;  |         |   74  |     89  |  0  |  37  |  [89,71,48,17,8,98,57]  |
   431  |              resetPlaceHolder_2();  |         |   74  |     89  |  0  |  37  |  [89,71,48,17,8,98,57]  |
   437  |                         R = R + 2;  |      2  |   76  |     89  |  0  |  37  |  [89,71,48,17,8,98,57]  |
   441  |                         j = j + 1;  |         |   76  |     89  |  0  |  38  |  [89,71,48,17,8,98,57]  |
   442  |              resetPlaceHolder_2();  |         |   76  |     89  |  0  |  38  |  [89,71,48,17,8,98,57]  |
   448  |                         R = R + 2;  |      2  |   78  |     89  |  0  |  38  |  [89,71,48,17,8,98,57]  |
   452  |                         j = j + 1;  |         |   78  |     89  |  0  |  39  |  [89,71,48,17,8,98,57]  |
   453  |              resetPlaceHolder_2();  |         |   78  |     89  |  0  |  39  |  [89,71,48,17,8,98,57]  |
   459  |                         R = R + 2;  |      2  |   80  |     89  |  0  |  39  |  [89,71,48,17,8,98,57]  |
   463  |                         j = j + 1;  |         |   80  |     89  |  0  |  40  |  [89,71,48,17,8,98,57]  |
   464  |              resetPlaceHolder_2();  |         |   80  |     89  |  0  |  40  |  [89,71,48,17,8,98,57]  |
   470  |                         R = R + 2;  |      2  |   82  |     89  |  0  |  40  |  [89,71,48,17,8,98,57]  |
   474  |                         j = j + 1;  |         |   82  |     89  |  0  |  41  |  [89,71,48,17,8,98,57]  |
   475  |              resetPlaceHolder_2();  |         |   82  |     89  |  0  |  41  |  [89,71,48,17,8,98,57]  |
   481  |                         R = R + 2;  |      2  |   84  |     89  |  0  |  41  |  [89,71,48,17,8,98,57]  |
   485  |                         j = j + 1;  |         |   84  |     89  |  0  |  42  |  [89,71,48,17,8,98,57]  |
   486  |              resetPlaceHolder_2();  |         |   84  |     89  |  0  |  42  |  [89,71,48,17,8,98,57]  |
   492  |                         R = R + 2;  |      2  |   86  |     89  |  0  |  42  |  [89,71,48,17,8,98,57]  |
   496  |                         j = j + 1;  |         |   86  |     89  |  0  |  43  |  [89,71,48,17,8,98,57]  |
   497  |              resetPlaceHolder_2();  |         |   86  |     89  |  0  |  43  |  [89,71,48,17,8,98,57]  |
   503  |                         R = R + 2;  |      2  |   88  |     89  |  0  |  43  |  [89,71,48,17,8,98,57]  |
   507  |                         j = j + 1;  |         |   88  |     89  |  0  |  44  |  [89,71,48,17,8,98,57]  |
   508  |              resetPlaceHolder_2();  |         |   88  |     89  |  0  |  44  |  [89,71,48,17,8,98,57]  |
   514  |                         R = R + 2;  |      2  |   90  |     89  |  0  |  44  |  [89,71,48,17,8,98,57]  |
   518  |                         j = j + 1;  |         |   90  |     89  |  0  |  45  |  [89,71,48,17,8,98,57]  |
   519  |              resetPlaceHolder_2();  |         |   90  |     89  |  0  |  45  |  [89,71,48,17,8,98,57]  |
   525  |                         R = R + 2;  |      2  |   92  |     89  |  0  |  45  |  [89,71,48,17,8,98,57]  |
   529  |                         j = j + 1;  |         |   92  |     89  |  0  |  46  |  [89,71,48,17,8,98,57]  |
   530  |              resetPlaceHolder_2();  |         |   92  |     89  |  0  |  46  |  [89,71,48,17,8,98,57]  |
   536  |                         R = R + 2;  |      2  |   94  |     89  |  0  |  46  |  [89,71,48,17,8,98,57]  |
   540  |                         j = j + 1;  |         |   94  |     89  |  0  |  47  |  [89,71,48,17,8,98,57]  |
   541  |              resetPlaceHolder_2();  |         |   94  |     89  |  0  |  47  |  [89,71,48,17,8,98,57]  |
   547  |                         R = R + 2;  |      2  |   96  |     89  |  0  |  47  |  [89,71,48,17,8,98,57]  |
   551  |                         j = j + 1;  |         |   96  |     89  |  0  |  48  |  [89,71,48,17,8,98,57]  |
   552  |              resetPlaceHolder_2();  |         |   96  |     89  |  0  |  48  |  [89,71,48,17,8,98,57]  |
   558  |                         R = R + 2;  |      2  |   98  |     89  |  0  |  48  |  [89,71,48,17,8,98,57]  |
   562  |                         j = j + 1;  |         |   98  |     89  |  0  |  49  |  [89,71,48,17,8,98,57]  |
   563  |              resetPlaceHolder_2();  |         |   98  |     89  |  0  |  49  |  [89,71,48,17,8,98,57]  |
   569  |                         R = R + 2;  |      2  |  100  |     89  |  0  |  49  |  [89,71,48,17,8,98,57]  |
   573  |                         j = j + 1;  |         |  100  |     89  |  0  |  50  |  [89,71,48,17,8,98,57]  |
   574  |              resetPlaceHolder_2();  |         |  100  |     89  |  0  |  50  |  [89,71,48,17,8,98,57]  |
   580  |                         R = R + 2;  |      2  |  102  |     89  |  0  |  50  |  [89,71,48,17,8,98,57]  |
   584  |                         j = j + 1;  |         |  102  |     89  |  0  |  51  |  [89,71,48,17,8,98,57]  |
   585  |              resetPlaceHolder_2();  |         |  102  |     89  |  0  |  51  |  [89,71,48,17,8,98,57]  |
   591  |                         R = R + 2;  |      2  |  104  |     89  |  0  |  51  |  [89,71,48,17,8,98,57]  |
   595  |                         j = j + 1;  |         |  104  |     89  |  0  |  52  |  [89,71,48,17,8,98,57]  |
   596  |              resetPlaceHolder_2();  |         |  104  |     89  |  0  |  52  |  [89,71,48,17,8,98,57]  |
   602  |                         R = R + 2;  |      2  |  106  |     89  |  0  |  52  |  [89,71,48,17,8,98,57]  |
   606  |                         j = j + 1;  |         |  106  |     89  |  0  |  53  |  [89,71,48,17,8,98,57]  |
   607  |              resetPlaceHolder_2();  |         |  106  |     89  |  0  |  53  |  [89,71,48,17,8,98,57]  |
   613  |                         R = R + 2;  |      2  |  108  |     89  |  0  |  53  |  [89,71,48,17,8,98,57]  |
   617  |                         j = j + 1;  |         |  108  |     89  |  0  |  54  |  [89,71,48,17,8,98,57]  |
   618  |              resetPlaceHolder_2();  |         |  108  |     89  |  0  |  54  |  [89,71,48,17,8,98,57]  |
   624  |                         R = R + 2;  |      2  |  110  |     89  |  0  |  54  |  [89,71,48,17,8,98,57]  |
   628  |                         j = j + 1;  |         |  110  |     89  |  0  |  55  |  [89,71,48,17,8,98,57]  |
   629  |              resetPlaceHolder_2();  |         |  110  |     89  |  0  |  55  |  [89,71,48,17,8,98,57]  |
   635  |                         R = R + 2;  |      2  |  112  |     89  |  0  |  55  |  [89,71,48,17,8,98,57]  |
   639  |                         j = j + 1;  |         |  112  |     89  |  0  |  56  |  [89,71,48,17,8,98,57]  |
   640  |              resetPlaceHolder_2();  |         |  112  |     89  |  0  |  56  |  [89,71,48,17,8,98,57]  |
   646  |                         R = R + 2;  |      2  |  114  |     89  |  0  |  56  |  [89,71,48,17,8,98,57]  |
   650  |                         j = j + 1;  |         |  114  |     89  |  0  |  57  |  [89,71,48,17,8,98,57]  |
   651  |              resetPlaceHolder_2();  |         |  114  |     89  |  0  |  57  |  [89,71,48,17,8,98,57]  |
   657  |                         R = R + 2;  |      2  |  116  |     89  |  0  |  57  |  [89,71,48,17,8,98,57]  |
   661  |                         j = j + 1;  |         |  116  |     89  |  0  |  58  |  [89,71,48,17,8,98,57]  |
   662  |              resetPlaceHolder_2();  |         |  116  |     89  |  0  |  58  |  [89,71,48,17,8,98,57]  |
   668  |                         R = R + 2;  |      2  |  118  |     89  |  0  |  58  |  [89,71,48,17,8,98,57]  |
   672  |                         j = j + 1;  |         |  118  |     89  |  0  |  59  |  [89,71,48,17,8,98,57]  |
   673  |              resetPlaceHolder_2();  |         |  118  |     89  |  0  |  59  |  [89,71,48,17,8,98,57]  |
   679  |                         R = R + 2;  |      2  |  120  |     89  |  0  |  59  |  [89,71,48,17,8,98,57]  |
   683  |                         j = j + 1;  |         |  120  |     89  |  0  |  60  |  [89,71,48,17,8,98,57]  |
   684  |              resetPlaceHolder_2();  |         |  120  |     89  |  0  |  60  |  [89,71,48,17,8,98,57]  |
   690  |                         R = R + 2;  |      2  |  122  |     89  |  0  |  60  |  [89,71,48,17,8,98,57]  |
   694  |                         j = j + 1;  |         |  122  |     89  |  0  |  61  |  [89,71,48,17,8,98,57]  |
   695  |              resetPlaceHolder_2();  |         |  122  |     89  |  0  |  61  |  [89,71,48,17,8,98,57]  |
   701  |                         R = R + 2;  |      2  |  124  |     89  |  0  |  61  |  [89,71,48,17,8,98,57]  |
   705  |                         j = j + 1;  |         |  124  |     89  |  0  |  62  |  [89,71,48,17,8,98,57]  |
   706  |              resetPlaceHolder_2();  |         |  124  |     89  |  0  |  62  |  [89,71,48,17,8,98,57]  |
   712  |                         R = R + 2;  |      2  |  126  |     89  |  0  |  62  |  [89,71,48,17,8,98,57]  |
   716  |                         j = j + 1;  |         |  126  |     89  |  0  |  63  |  [89,71,48,17,8,98,57]  |
   717  |              resetPlaceHolder_2();  |         |  126  |     89  |  0  |  63  |  [89,71,48,17,8,98,57]  |
   723  |                         R = R + 2;  |      2  |  128  |     89  |  0  |  63  |  [89,71,48,17,8,98,57]  |
   727  |                         j = j + 1;  |         |  128  |     89  |  0  |  64  |  [89,71,48,17,8,98,57]  |
   728  |              resetPlaceHolder_2();  |         |  128  |     89  |  0  |  64  |  [89,71,48,17,8,98,57]  |
   734  |                         R = R + 2;  |      2  |  130  |     89  |  0  |  64  |  [89,71,48,17,8,98,57]  |
   738  |                         j = j + 1;  |         |  130  |     89  |  0  |  65  |  [89,71,48,17,8,98,57]  |
   739  |              resetPlaceHolder_2();  |         |  130  |     89  |  0  |  65  |  [89,71,48,17,8,98,57]  |
   745  |                         R = R + 2;  |      2  |  132  |     89  |  0  |  65  |  [89,71,48,17,8,98,57]  |
   749  |                         j = j + 1;  |         |  132  |     89  |  0  |  66  |  [89,71,48,17,8,98,57]  |
   750  |              resetPlaceHolder_2();  |         |  132  |     89  |  0  |  66  |  [89,71,48,17,8,98,57]  |
   756  |                         R = R + 2;  |      2  |  134  |     89  |  0  |  66  |  [89,71,48,17,8,98,57]  |
   760  |                         j = j + 1;  |         |  134  |     89  |  0  |  67  |  [89,71,48,17,8,98,57]  |
   761  |              resetPlaceHolder_2();  |         |  134  |     89  |  0  |  67  |  [89,71,48,17,8,98,57]  |
   767  |                         R = R + 2;  |      2  |  136  |     89  |  0  |  67  |  [89,71,48,17,8,98,57]  |
   771  |                         j = j + 1;  |         |  136  |     89  |  0  |  68  |  [89,71,48,17,8,98,57]  |
   772  |              resetPlaceHolder_2();  |         |  136  |     89  |  0  |  68  |  [89,71,48,17,8,98,57]  |
   778  |                         R = R + 2;  |      2  |  138  |     89  |  0  |  68  |  [89,71,48,17,8,98,57]  |
   782  |                         j = j + 1;  |         |  138  |     89  |  0  |  69  |  [89,71,48,17,8,98,57]  |
   783  |              resetPlaceHolder_2();  |         |  138  |     89  |  0  |  69  |  [89,71,48,17,8,98,57]  |
   789  |                         R = R + 2;  |      2  |  140  |     89  |  0  |  69  |  [89,71,48,17,8,98,57]  |
   793  |                         j = j + 1;  |         |  140  |     89  |  0  |  70  |  [89,71,48,17,8,98,57]  |
   794  |              resetPlaceHolder_2();  |         |  140  |     89  |  0  |  70  |  [89,71,48,17,8,98,57]  |
   800  |                         R = R + 2;  |      2  |  142  |     89  |  0  |  70  |  [89,71,48,17,8,98,57]  |
   804  |                         j = j + 1;  |         |  142  |     89  |  0  |  71  |  [89,71,48,17,8,98,57]  |
   805  |              resetPlaceHolder_2();  |         |  142  |     89  |  0  |  71  |  [89,71,48,17,8,98,57]  |
   811  |                         R = R + 2;  |      2  |  144  |     89  |  0  |  71  |  [89,71,48,17,8,98,57]  |
   815  |                         j = j + 1;  |         |  144  |     89  |  0  |  72  |  [89,71,48,17,8,98,57]  |
   816  |              resetPlaceHolder_2();  |         |  144  |     89  |  0  |  72  |  [89,71,48,17,8,98,57]  |
   822  |                         R = R + 2;  |      2  |  146  |     89  |  0  |  72  |  [89,71,48,17,8,98,57]  |
   826  |                         j = j + 1;  |         |  146  |     89  |  0  |  73  |  [89,71,48,17,8,98,57]  |
   827  |              resetPlaceHolder_2();  |         |  146  |     89  |  0  |  73  |  [89,71,48,17,8,98,57]  |
   833  |                         R = R + 2;  |      2  |  148  |     89  |  0  |  73  |  [89,71,48,17,8,98,57]  |
   837  |                         j = j + 1;  |         |  148  |     89  |  0  |  74  |  [89,71,48,17,8,98,57]  |
   838  |              resetPlaceHolder_2();  |         |  148  |     89  |  0  |  74  |  [89,71,48,17,8,98,57]  |
   844  |                         R = R + 2;  |      2  |  150  |     89  |  0  |  74  |  [89,71,48,17,8,98,57]  |
   848  |                         j = j + 1;  |         |  150  |     89  |  0  |  75  |  [89,71,48,17,8,98,57]  |
   849  |              resetPlaceHolder_2();  |         |  150  |     89  |  0  |  75  |  [89,71,48,17,8,98,57]  |
   855  |                         R = R + 2;  |      2  |  152  |     89  |  0  |  75  |  [89,71,48,17,8,98,57]  |
   859  |                         j = j + 1;  |         |  152  |     89  |  0  |  76  |  [89,71,48,17,8,98,57]  |
   860  |              resetPlaceHolder_2();  |         |  152  |     89  |  0  |  76  |  [89,71,48,17,8,98,57]  |
   866  |                         R = R + 2;  |      2  |  154  |     89  |  0  |  76  |  [89,71,48,17,8,98,57]  |
   870  |                         j = j + 1;  |         |  154  |     89  |  0  |  77  |  [89,71,48,17,8,98,57]  |
   871  |              resetPlaceHolder_2();  |         |  154  |     89  |  0  |  77  |  [89,71,48,17,8,98,57]  |
   877  |                         R = R + 2;  |      2  |  156  |     89  |  0  |  77  |  [89,71,48,17,8,98,57]  |
   881  |                         j = j + 1;  |         |  156  |     89  |  0  |  78  |  [89,71,48,17,8,98,57]  |
   882  |              resetPlaceHolder_2();  |         |  156  |     89  |  0  |  78  |  [89,71,48,17,8,98,57]  |
   888  |                         R = R + 2;  |      2  |  158  |     89  |  0  |  78  |  [89,71,48,17,8,98,57]  |
   892  |                         j = j + 1;  |         |  158  |     89  |  0  |  79  |  [89,71,48,17,8,98,57]  |
   893  |              resetPlaceHolder_2();  |         |  158  |     89  |  0  |  79  |  [89,71,48,17,8,98,57]  |
   899  |                         R = R + 2;  |      2  |  160  |     89  |  0  |  79  |  [89,71,48,17,8,98,57]  |
   903  |                         j = j + 1;  |         |  160  |     89  |  0  |  80  |  [89,71,48,17,8,98,57]  |
   904  |              resetPlaceHolder_2();  |         |  160  |     89  |  0  |  80  |  [89,71,48,17,8,98,57]  |
   910  |                         R = R + 2;  |      2  |  162  |     89  |  0  |  80  |  [89,71,48,17,8,98,57]  |
   914  |                         j = j + 1;  |         |  162  |     89  |  0  |  81  |  [89,71,48,17,8,98,57]  |
   915  |              resetPlaceHolder_2();  |         |  162  |     89  |  0  |  81  |  [89,71,48,17,8,98,57]  |
   921  |                         R = R + 2;  |      2  |  164  |     89  |  0  |  81  |  [89,71,48,17,8,98,57]  |
   925  |                         j = j + 1;  |         |  164  |     89  |  0  |  82  |  [89,71,48,17,8,98,57]  |
   926  |              resetPlaceHolder_2();  |         |  164  |     89  |  0  |  82  |  [89,71,48,17,8,98,57]  |
   932  |                         R = R + 2;  |      2  |  166  |     89  |  0  |  82  |  [89,71,48,17,8,98,57]  |
   936  |                         j = j + 1;  |         |  166  |     89  |  0  |  83  |  [89,71,48,17,8,98,57]  |
   937  |              resetPlaceHolder_2();  |         |  166  |     89  |  0  |  83  |  [89,71,48,17,8,98,57]  |
   943  |                         R = R + 2;  |      2  |  168  |     89  |  0  |  83  |  [89,71,48,17,8,98,57]  |
   947  |                         j = j + 1;  |         |  168  |     89  |  0  |  84  |  [89,71,48,17,8,98,57]  |
   948  |              resetPlaceHolder_2();  |         |  168  |     89  |  0  |  84  |  [89,71,48,17,8,98,57]  |
   954  |                         R = R + 2;  |      2  |  170  |     89  |  0  |  84  |  [89,71,48,17,8,98,57]  |
   958  |                         j = j + 1;  |         |  170  |     89  |  0  |  85  |  [89,71,48,17,8,98,57]  |
   959  |              resetPlaceHolder_2();  |         |  170  |     89  |  0  |  85  |  [89,71,48,17,8,98,57]  |
   965  |                         R = R + 2;  |      2  |  172  |     89  |  0  |  85  |  [89,71,48,17,8,98,57]  |
   969  |                         j = j + 1;  |         |  172  |     89  |  0  |  86  |  [89,71,48,17,8,98,57]  |
   970  |              resetPlaceHolder_2();  |         |  172  |     89  |  0  |  86  |  [89,71,48,17,8,98,57]  |
   976  |                         R = R + 2;  |      2  |  174  |     89  |  0  |  86  |  [89,71,48,17,8,98,57]  |
   980  |                         j = j + 1;  |         |  174  |     89  |  0  |  87  |  [89,71,48,17,8,98,57]  |
   981  |              resetPlaceHolder_2();  |         |  174  |     89  |  0  |  87  |  [89,71,48,17,8,98,57]  |
   987  |                         R = R + 2;  |      2  |  176  |     89  |  0  |  87  |  [89,71,48,17,8,98,57]  |
   991  |                         j = j + 1;  |         |  176  |     89  |  0  |  88  |  [89,71,48,17,8,98,57]  |
   992  |              resetPlaceHolder_2();  |         |  176  |     89  |  0  |  88  |  [89,71,48,17,8,98,57]  |
   998  |                         R = R + 2;  |      2  |  178  |     89  |  0  |  88  |  [89,71,48,17,8,98,57]  |
  1002  |                         j = j + 1;  |         |  178  |     89  |  0  |  89  |  [89,71,48,17,8,98,57]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |     89  |  0  |  89  |  [89,71,48,17,8,98,57]  |
  1009  |                         R = R + 1;  |      1  |  179  |     89  |  0  |  89  |  [89,71,48,17,8,98,57]  |
  1013  |                         i = i + 1;  |         |  179  |     89  |  1  |  89  |  [89,71,48,17,8,98,57]  |
  1014  |              resetPlaceHolder_1();  |         |  179  |     89  |  1  |  89  |  [89,71,48,17,8,98,57]  |
  1020  |      entry = arrayRead(sorted, i);  |         |  179  |     71  |  1  |  89  |  [89,71,48,17,8,98,57]  |
  1022  |                         int j = 0;  |         |  179  |     71  |  1  |   0  |  [89,71,48,17,8,98,57]  |
  1028  |                         R = R + 2;  |      2  |  181  |     71  |  1  |   0  |  [89,71,48,17,8,98,57]  |
  1032  |                         j = j + 1;  |         |  181  |     71  |  1  |   1  |  [89,71,48,17,8,98,57]  |
  1033  |              resetPlaceHolder_2();  |         |  181  |     71  |  1  |   1  |  [89,71,48,17,8,98,57]  |
  1039  |                         R = R + 2;  |      2  |  183  |     71  |  1  |   1  |  [89,71,48,17,8,98,57]  |
  1043  |                         j = j + 1;  |         |  183  |     71  |  1  |   2  |  [89,71,48,17,8,98,57]  |
  1044  |              resetPlaceHolder_2();  |         |  183  |     71  |  1  |   2  |  [89,71,48,17,8,98,57]  |
  1050  |                         R = R + 2;  |      2  |  185  |     71  |  1  |   2  |  [89,71,48,17,8,98,57]  |
  1054  |                         j = j + 1;  |         |  185  |     71  |  1  |   3  |  [89,71,48,17,8,98,57]  |
  1055  |              resetPlaceHolder_2();  |         |  185  |     71  |  1  |   3  |  [89,71,48,17,8,98,57]  |
  1061  |                         R = R + 2;  |      2  |  187  |     71  |  1  |   3  |  [89,71,48,17,8,98,57]  |
  1065  |                         j = j + 1;  |         |  187  |     71  |  1  |   4  |  [89,71,48,17,8,98,57]  |
  1066  |              resetPlaceHolder_2();  |         |  187  |     71  |  1  |   4  |  [89,71,48,17,8,98,57]  |
  1072  |                         R = R + 2;  |      2  |  189  |     71  |  1  |   4  |  [89,71,48,17,8,98,57]  |
  1076  |                         j = j + 1;  |         |  189  |     71  |  1  |   5  |  [89,71,48,17,8,98,57]  |
  1077  |              resetPlaceHolder_2();  |         |  189  |     71  |  1  |   5  |  [89,71,48,17,8,98,57]  |
  1083  |                         R = R + 2;  |      2  |  191  |     71  |  1  |   5  |  [89,71,48,17,8,98,57]  |
  1087  |                         j = j + 1;  |         |  191  |     71  |  1  |   6  |  [89,71,48,17,8,98,57]  |
  1088  |              resetPlaceHolder_2();  |         |  191  |     71  |  1  |   6  |  [89,71,48,17,8,98,57]  |
  1094  |                         R = R + 2;  |      2  |  193  |     71  |  1  |   6  |  [89,71,48,17,8,98,57]  |
  1098  |                         j = j + 1;  |         |  193  |     71  |  1  |   7  |  [89,71,48,17,8,98,57]  |
  1099  |              resetPlaceHolder_2();  |         |  193  |     71  |  1  |   7  |  [89,71,48,17,8,98,57]  |
  1105  |                         R = R + 2;  |      2  |  195  |     71  |  1  |   7  |  [89,71,48,17,8,98,57]  |
  1109  |                         j = j + 1;  |         |  195  |     71  |  1  |   8  |  [89,71,48,17,8,98,57]  |
  1110  |              resetPlaceHolder_2();  |         |  195  |     71  |  1  |   8  |  [89,71,48,17,8,98,57]  |
  1116  |                         R = R + 2;  |      2  |  197  |     71  |  1  |   8  |  [89,71,48,17,8,98,57]  |
  1120  |                         j = j + 1;  |         |  197  |     71  |  1  |   9  |  [89,71,48,17,8,98,57]  |
  1121  |              resetPlaceHolder_2();  |         |  197  |     71  |  1  |   9  |  [89,71,48,17,8,98,57]  |
  1127  |                         R = R + 2;  |      2  |  199  |     71  |  1  |   9  |  [89,71,48,17,8,98,57]  |
  1131  |                         j = j + 1;  |         |  199  |     71  |  1  |  10  |  [89,71,48,17,8,98,57]  |
  1132  |              resetPlaceHolder_2();  |         |  199  |     71  |  1  |  10  |  [89,71,48,17,8,98,57]  |
  1138  |                         R = R + 2;  |      2  |  201  |     71  |  1  |  10  |  [89,71,48,17,8,98,57]  |
  1142  |                         j = j + 1;  |         |  201  |     71  |  1  |  11  |  [89,71,48,17,8,98,57]  |
  1143  |              resetPlaceHolder_2();  |         |  201  |     71  |  1  |  11  |  [89,71,48,17,8,98,57]  |
  1149  |                         R = R + 2;  |      2  |  203  |     71  |  1  |  11  |  [89,71,48,17,8,98,57]  |
  1153  |                         j = j + 1;  |         |  203  |     71  |  1  |  12  |  [89,71,48,17,8,98,57]  |
  1154  |              resetPlaceHolder_2();  |         |  203  |     71  |  1  |  12  |  [89,71,48,17,8,98,57]  |
  1160  |                         R = R + 2;  |      2  |  205  |     71  |  1  |  12  |  [89,71,48,17,8,98,57]  |
  1164  |                         j = j + 1;  |         |  205  |     71  |  1  |  13  |  [89,71,48,17,8,98,57]  |
  1165  |              resetPlaceHolder_2();  |         |  205  |     71  |  1  |  13  |  [89,71,48,17,8,98,57]  |
  1171  |                         R = R + 2;  |      2  |  207  |     71  |  1  |  13  |  [89,71,48,17,8,98,57]  |
  1175  |                         j = j + 1;  |         |  207  |     71  |  1  |  14  |  [89,71,48,17,8,98,57]  |
  1176  |              resetPlaceHolder_2();  |         |  207  |     71  |  1  |  14  |  [89,71,48,17,8,98,57]  |
  1182  |                         R = R + 2;  |      2  |  209  |     71  |  1  |  14  |  [89,71,48,17,8,98,57]  |
  1186  |                         j = j + 1;  |         |  209  |     71  |  1  |  15  |  [89,71,48,17,8,98,57]  |
  1187  |              resetPlaceHolder_2();  |         |  209  |     71  |  1  |  15  |  [89,71,48,17,8,98,57]  |
  1193  |                         R = R + 2;  |      2  |  211  |     71  |  1  |  15  |  [89,71,48,17,8,98,57]  |
  1197  |                         j = j + 1;  |         |  211  |     71  |  1  |  16  |  [89,71,48,17,8,98,57]  |
  1198  |              resetPlaceHolder_2();  |         |  211  |     71  |  1  |  16  |  [89,71,48,17,8,98,57]  |
  1204  |                         R = R + 2;  |      2  |  213  |     71  |  1  |  16  |  [89,71,48,17,8,98,57]  |
  1208  |                         j = j + 1;  |         |  213  |     71  |  1  |  17  |  [89,71,48,17,8,98,57]  |
  1209  |              resetPlaceHolder_2();  |         |  213  |     71  |  1  |  17  |  [89,71,48,17,8,98,57]  |
  1215  |                         R = R + 2;  |      2  |  215  |     71  |  1  |  17  |  [89,71,48,17,8,98,57]  |
  1219  |                         j = j + 1;  |         |  215  |     71  |  1  |  18  |  [89,71,48,17,8,98,57]  |
  1220  |              resetPlaceHolder_2();  |         |  215  |     71  |  1  |  18  |  [89,71,48,17,8,98,57]  |
  1226  |                         R = R + 2;  |      2  |  217  |     71  |  1  |  18  |  [89,71,48,17,8,98,57]  |
  1230  |                         j = j + 1;  |         |  217  |     71  |  1  |  19  |  [89,71,48,17,8,98,57]  |
  1231  |              resetPlaceHolder_2();  |         |  217  |     71  |  1  |  19  |  [89,71,48,17,8,98,57]  |
  1237  |                         R = R + 2;  |      2  |  219  |     71  |  1  |  19  |  [89,71,48,17,8,98,57]  |
  1241  |                         j = j + 1;  |         |  219  |     71  |  1  |  20  |  [89,71,48,17,8,98,57]  |
  1242  |              resetPlaceHolder_2();  |         |  219  |     71  |  1  |  20  |  [89,71,48,17,8,98,57]  |
  1248  |                         R = R + 2;  |      2  |  221  |     71  |  1  |  20  |  [89,71,48,17,8,98,57]  |
  1252  |                         j = j + 1;  |         |  221  |     71  |  1  |  21  |  [89,71,48,17,8,98,57]  |
  1253  |              resetPlaceHolder_2();  |         |  221  |     71  |  1  |  21  |  [89,71,48,17,8,98,57]  |
  1259  |                         R = R + 2;  |      2  |  223  |     71  |  1  |  21  |  [89,71,48,17,8,98,57]  |
  1263  |                         j = j + 1;  |         |  223  |     71  |  1  |  22  |  [89,71,48,17,8,98,57]  |
  1264  |              resetPlaceHolder_2();  |         |  223  |     71  |  1  |  22  |  [89,71,48,17,8,98,57]  |
  1270  |                         R = R + 2;  |      2  |  225  |     71  |  1  |  22  |  [89,71,48,17,8,98,57]  |
  1274  |                         j = j + 1;  |         |  225  |     71  |  1  |  23  |  [89,71,48,17,8,98,57]  |
  1275  |              resetPlaceHolder_2();  |         |  225  |     71  |  1  |  23  |  [89,71,48,17,8,98,57]  |
  1281  |                         R = R + 2;  |      2  |  227  |     71  |  1  |  23  |  [89,71,48,17,8,98,57]  |
  1285  |                         j = j + 1;  |         |  227  |     71  |  1  |  24  |  [89,71,48,17,8,98,57]  |
  1286  |              resetPlaceHolder_2();  |         |  227  |     71  |  1  |  24  |  [89,71,48,17,8,98,57]  |
  1292  |                         R = R + 2;  |      2  |  229  |     71  |  1  |  24  |  [89,71,48,17,8,98,57]  |
  1296  |                         j = j + 1;  |         |  229  |     71  |  1  |  25  |  [89,71,48,17,8,98,57]  |
  1297  |              resetPlaceHolder_2();  |         |  229  |     71  |  1  |  25  |  [89,71,48,17,8,98,57]  |
  1303  |                         R = R + 2;  |      2  |  231  |     71  |  1  |  25  |  [89,71,48,17,8,98,57]  |
  1307  |                         j = j + 1;  |         |  231  |     71  |  1  |  26  |  [89,71,48,17,8,98,57]  |
  1308  |              resetPlaceHolder_2();  |         |  231  |     71  |  1  |  26  |  [89,71,48,17,8,98,57]  |
  1314  |                         R = R + 2;  |      2  |  233  |     71  |  1  |  26  |  [89,71,48,17,8,98,57]  |
  1318  |                         j = j + 1;  |         |  233  |     71  |  1  |  27  |  [89,71,48,17,8,98,57]  |
  1319  |              resetPlaceHolder_2();  |         |  233  |     71  |  1  |  27  |  [89,71,48,17,8,98,57]  |
  1325  |                         R = R + 2;  |      2  |  235  |     71  |  1  |  27  |  [89,71,48,17,8,98,57]  |
  1329  |                         j = j + 1;  |         |  235  |     71  |  1  |  28  |  [89,71,48,17,8,98,57]  |
  1330  |              resetPlaceHolder_2();  |         |  235  |     71  |  1  |  28  |  [89,71,48,17,8,98,57]  |
  1336  |                         R = R + 2;  |      2  |  237  |     71  |  1  |  28  |  [89,71,48,17,8,98,57]  |
  1340  |                         j = j + 1;  |         |  237  |     71  |  1  |  29  |  [89,71,48,17,8,98,57]  |
  1341  |              resetPlaceHolder_2();  |         |  237  |     71  |  1  |  29  |  [89,71,48,17,8,98,57]  |
  1347  |                         R = R + 2;  |      2  |  239  |     71  |  1  |  29  |  [89,71,48,17,8,98,57]  |
  1351  |                         j = j + 1;  |         |  239  |     71  |  1  |  30  |  [89,71,48,17,8,98,57]  |
  1352  |              resetPlaceHolder_2();  |         |  239  |     71  |  1  |  30  |  [89,71,48,17,8,98,57]  |
  1358  |                         R = R + 2;  |      2  |  241  |     71  |  1  |  30  |  [89,71,48,17,8,98,57]  |
  1362  |                         j = j + 1;  |         |  241  |     71  |  1  |  31  |  [89,71,48,17,8,98,57]  |
  1363  |              resetPlaceHolder_2();  |         |  241  |     71  |  1  |  31  |  [89,71,48,17,8,98,57]  |
  1369  |                         R = R + 2;  |      2  |  243  |     71  |  1  |  31  |  [89,71,48,17,8,98,57]  |
  1373  |                         j = j + 1;  |         |  243  |     71  |  1  |  32  |  [89,71,48,17,8,98,57]  |
  1374  |              resetPlaceHolder_2();  |         |  243  |     71  |  1  |  32  |  [89,71,48,17,8,98,57]  |
  1380  |                         R = R + 2;  |      2  |  245  |     71  |  1  |  32  |  [89,71,48,17,8,98,57]  |
  1384  |                         j = j + 1;  |         |  245  |     71  |  1  |  33  |  [89,71,48,17,8,98,57]  |
  1385  |              resetPlaceHolder_2();  |         |  245  |     71  |  1  |  33  |  [89,71,48,17,8,98,57]  |
  1391  |                         R = R + 2;  |      2  |  247  |     71  |  1  |  33  |  [89,71,48,17,8,98,57]  |
  1395  |                         j = j + 1;  |         |  247  |     71  |  1  |  34  |  [89,71,48,17,8,98,57]  |
  1396  |              resetPlaceHolder_2();  |         |  247  |     71  |  1  |  34  |  [89,71,48,17,8,98,57]  |
  1402  |                         R = R + 2;  |      2  |  249  |     71  |  1  |  34  |  [89,71,48,17,8,98,57]  |
  1406  |                         j = j + 1;  |         |  249  |     71  |  1  |  35  |  [89,71,48,17,8,98,57]  |
  1407  |              resetPlaceHolder_2();  |         |  249  |     71  |  1  |  35  |  [89,71,48,17,8,98,57]  |
  1413  |                         R = R + 2;  |      2  |  251  |     71  |  1  |  35  |  [89,71,48,17,8,98,57]  |
  1417  |                         j = j + 1;  |         |  251  |     71  |  1  |  36  |  [89,71,48,17,8,98,57]  |
  1418  |              resetPlaceHolder_2();  |         |  251  |     71  |  1  |  36  |  [89,71,48,17,8,98,57]  |
  1424  |                         R = R + 2;  |      2  |  253  |     71  |  1  |  36  |  [89,71,48,17,8,98,57]  |
  1428  |                         j = j + 1;  |         |  253  |     71  |  1  |  37  |  [89,71,48,17,8,98,57]  |
  1429  |              resetPlaceHolder_2();  |         |  253  |     71  |  1  |  37  |  [89,71,48,17,8,98,57]  |
  1435  |                         R = R + 2;  |      2  |  255  |     71  |  1  |  37  |  [89,71,48,17,8,98,57]  |
  1439  |                         j = j + 1;  |         |  255  |     71  |  1  |  38  |  [89,71,48,17,8,98,57]  |
  1440  |              resetPlaceHolder_2();  |         |  255  |     71  |  1  |  38  |  [89,71,48,17,8,98,57]  |
  1446  |                         R = R + 2;  |      2  |  257  |     71  |  1  |  38  |  [89,71,48,17,8,98,57]  |
  1450  |                         j = j + 1;  |         |  257  |     71  |  1  |  39  |  [89,71,48,17,8,98,57]  |
  1451  |              resetPlaceHolder_2();  |         |  257  |     71  |  1  |  39  |  [89,71,48,17,8,98,57]  |
  1457  |                         R = R + 2;  |      2  |  259  |     71  |  1  |  39  |  [89,71,48,17,8,98,57]  |
  1461  |                         j = j + 1;  |         |  259  |     71  |  1  |  40  |  [89,71,48,17,8,98,57]  |
  1462  |              resetPlaceHolder_2();  |         |  259  |     71  |  1  |  40  |  [89,71,48,17,8,98,57]  |
  1468  |                         R = R + 2;  |      2  |  261  |     71  |  1  |  40  |  [89,71,48,17,8,98,57]  |
  1472  |                         j = j + 1;  |         |  261  |     71  |  1  |  41  |  [89,71,48,17,8,98,57]  |
  1473  |              resetPlaceHolder_2();  |         |  261  |     71  |  1  |  41  |  [89,71,48,17,8,98,57]  |
  1479  |                         R = R + 2;  |      2  |  263  |     71  |  1  |  41  |  [89,71,48,17,8,98,57]  |
  1483  |                         j = j + 1;  |         |  263  |     71  |  1  |  42  |  [89,71,48,17,8,98,57]  |
  1484  |              resetPlaceHolder_2();  |         |  263  |     71  |  1  |  42  |  [89,71,48,17,8,98,57]  |
  1490  |                         R = R + 2;  |      2  |  265  |     71  |  1  |  42  |  [89,71,48,17,8,98,57]  |
  1494  |                         j = j + 1;  |         |  265  |     71  |  1  |  43  |  [89,71,48,17,8,98,57]  |
  1495  |              resetPlaceHolder_2();  |         |  265  |     71  |  1  |  43  |  [89,71,48,17,8,98,57]  |
  1501  |                         R = R + 2;  |      2  |  267  |     71  |  1  |  43  |  [89,71,48,17,8,98,57]  |
  1505  |                         j = j + 1;  |         |  267  |     71  |  1  |  44  |  [89,71,48,17,8,98,57]  |
  1506  |              resetPlaceHolder_2();  |         |  267  |     71  |  1  |  44  |  [89,71,48,17,8,98,57]  |
  1512  |                         R = R + 2;  |      2  |  269  |     71  |  1  |  44  |  [89,71,48,17,8,98,57]  |
  1516  |                         j = j + 1;  |         |  269  |     71  |  1  |  45  |  [89,71,48,17,8,98,57]  |
  1517  |              resetPlaceHolder_2();  |         |  269  |     71  |  1  |  45  |  [89,71,48,17,8,98,57]  |
  1523  |                         R = R + 2;  |      2  |  271  |     71  |  1  |  45  |  [89,71,48,17,8,98,57]  |
  1527  |                         j = j + 1;  |         |  271  |     71  |  1  |  46  |  [89,71,48,17,8,98,57]  |
  1528  |              resetPlaceHolder_2();  |         |  271  |     71  |  1  |  46  |  [89,71,48,17,8,98,57]  |
  1534  |                         R = R + 2;  |      2  |  273  |     71  |  1  |  46  |  [89,71,48,17,8,98,57]  |
  1538  |                         j = j + 1;  |         |  273  |     71  |  1  |  47  |  [89,71,48,17,8,98,57]  |
  1539  |              resetPlaceHolder_2();  |         |  273  |     71  |  1  |  47  |  [89,71,48,17,8,98,57]  |
  1545  |                         R = R + 2;  |      2  |  275  |     71  |  1  |  47  |  [89,71,48,17,8,98,57]  |
  1549  |                         j = j + 1;  |         |  275  |     71  |  1  |  48  |  [89,71,48,17,8,98,57]  |
  1550  |              resetPlaceHolder_2();  |         |  275  |     71  |  1  |  48  |  [89,71,48,17,8,98,57]  |
  1556  |                         R = R + 2;  |      2  |  277  |     71  |  1  |  48  |  [89,71,48,17,8,98,57]  |
  1560  |                         j = j + 1;  |         |  277  |     71  |  1  |  49  |  [89,71,48,17,8,98,57]  |
  1561  |              resetPlaceHolder_2();  |         |  277  |     71  |  1  |  49  |  [89,71,48,17,8,98,57]  |
  1567  |                         R = R + 2;  |      2  |  279  |     71  |  1  |  49  |  [89,71,48,17,8,98,57]  |
  1571  |                         j = j + 1;  |         |  279  |     71  |  1  |  50  |  [89,71,48,17,8,98,57]  |
  1572  |              resetPlaceHolder_2();  |         |  279  |     71  |  1  |  50  |  [89,71,48,17,8,98,57]  |
  1578  |                         R = R + 2;  |      2  |  281  |     71  |  1  |  50  |  [89,71,48,17,8,98,57]  |
  1582  |                         j = j + 1;  |         |  281  |     71  |  1  |  51  |  [89,71,48,17,8,98,57]  |
  1583  |              resetPlaceHolder_2();  |         |  281  |     71  |  1  |  51  |  [89,71,48,17,8,98,57]  |
  1589  |                         R = R + 2;  |      2  |  283  |     71  |  1  |  51  |  [89,71,48,17,8,98,57]  |
  1593  |                         j = j + 1;  |         |  283  |     71  |  1  |  52  |  [89,71,48,17,8,98,57]  |
  1594  |              resetPlaceHolder_2();  |         |  283  |     71  |  1  |  52  |  [89,71,48,17,8,98,57]  |
  1600  |                         R = R + 2;  |      2  |  285  |     71  |  1  |  52  |  [89,71,48,17,8,98,57]  |
  1604  |                         j = j + 1;  |         |  285  |     71  |  1  |  53  |  [89,71,48,17,8,98,57]  |
  1605  |              resetPlaceHolder_2();  |         |  285  |     71  |  1  |  53  |  [89,71,48,17,8,98,57]  |
  1611  |                         R = R + 2;  |      2  |  287  |     71  |  1  |  53  |  [89,71,48,17,8,98,57]  |
  1615  |                         j = j + 1;  |         |  287  |     71  |  1  |  54  |  [89,71,48,17,8,98,57]  |
  1616  |              resetPlaceHolder_2();  |         |  287  |     71  |  1  |  54  |  [89,71,48,17,8,98,57]  |
  1622  |                         R = R + 2;  |      2  |  289  |     71  |  1  |  54  |  [89,71,48,17,8,98,57]  |
  1626  |                         j = j + 1;  |         |  289  |     71  |  1  |  55  |  [89,71,48,17,8,98,57]  |
  1627  |              resetPlaceHolder_2();  |         |  289  |     71  |  1  |  55  |  [89,71,48,17,8,98,57]  |
  1633  |                         R = R + 2;  |      2  |  291  |     71  |  1  |  55  |  [89,71,48,17,8,98,57]  |
  1637  |                         j = j + 1;  |         |  291  |     71  |  1  |  56  |  [89,71,48,17,8,98,57]  |
  1638  |              resetPlaceHolder_2();  |         |  291  |     71  |  1  |  56  |  [89,71,48,17,8,98,57]  |
  1644  |                         R = R + 2;  |      2  |  293  |     71  |  1  |  56  |  [89,71,48,17,8,98,57]  |
  1648  |                         j = j + 1;  |         |  293  |     71  |  1  |  57  |  [89,71,48,17,8,98,57]  |
  1649  |              resetPlaceHolder_2();  |         |  293  |     71  |  1  |  57  |  [89,71,48,17,8,98,57]  |
  1655  |                         R = R + 2;  |      2  |  295  |     71  |  1  |  57  |  [89,71,48,17,8,98,57]  |
  1659  |                         j = j + 1;  |         |  295  |     71  |  1  |  58  |  [89,71,48,17,8,98,57]  |
  1660  |              resetPlaceHolder_2();  |         |  295  |     71  |  1  |  58  |  [89,71,48,17,8,98,57]  |
  1666  |                         R = R + 2;  |      2  |  297  |     71  |  1  |  58  |  [89,71,48,17,8,98,57]  |
  1670  |                         j = j + 1;  |         |  297  |     71  |  1  |  59  |  [89,71,48,17,8,98,57]  |
  1671  |              resetPlaceHolder_2();  |         |  297  |     71  |  1  |  59  |  [89,71,48,17,8,98,57]  |
  1677  |                         R = R + 2;  |      2  |  299  |     71  |  1  |  59  |  [89,71,48,17,8,98,57]  |
  1681  |                         j = j + 1;  |         |  299  |     71  |  1  |  60  |  [89,71,48,17,8,98,57]  |
  1682  |              resetPlaceHolder_2();  |         |  299  |     71  |  1  |  60  |  [89,71,48,17,8,98,57]  |
  1688  |                         R = R + 2;  |      2  |  301  |     71  |  1  |  60  |  [89,71,48,17,8,98,57]  |
  1692  |                         j = j + 1;  |         |  301  |     71  |  1  |  61  |  [89,71,48,17,8,98,57]  |
  1693  |              resetPlaceHolder_2();  |         |  301  |     71  |  1  |  61  |  [89,71,48,17,8,98,57]  |
  1699  |                         R = R + 2;  |      2  |  303  |     71  |  1  |  61  |  [89,71,48,17,8,98,57]  |
  1703  |                         j = j + 1;  |         |  303  |     71  |  1  |  62  |  [89,71,48,17,8,98,57]  |
  1704  |              resetPlaceHolder_2();  |         |  303  |     71  |  1  |  62  |  [89,71,48,17,8,98,57]  |
  1710  |                         R = R + 2;  |      2  |  305  |     71  |  1  |  62  |  [89,71,48,17,8,98,57]  |
  1714  |                         j = j + 1;  |         |  305  |     71  |  1  |  63  |  [89,71,48,17,8,98,57]  |
  1715  |              resetPlaceHolder_2();  |         |  305  |     71  |  1  |  63  |  [89,71,48,17,8,98,57]  |
  1721  |                         R = R + 2;  |      2  |  307  |     71  |  1  |  63  |  [89,71,48,17,8,98,57]  |
  1725  |                         j = j + 1;  |         |  307  |     71  |  1  |  64  |  [89,71,48,17,8,98,57]  |
  1726  |              resetPlaceHolder_2();  |         |  307  |     71  |  1  |  64  |  [89,71,48,17,8,98,57]  |
  1732  |                         R = R + 2;  |      2  |  309  |     71  |  1  |  64  |  [89,71,48,17,8,98,57]  |
  1736  |                         j = j + 1;  |         |  309  |     71  |  1  |  65  |  [89,71,48,17,8,98,57]  |
  1737  |              resetPlaceHolder_2();  |         |  309  |     71  |  1  |  65  |  [89,71,48,17,8,98,57]  |
  1743  |                         R = R + 2;  |      2  |  311  |     71  |  1  |  65  |  [89,71,48,17,8,98,57]  |
  1747  |                         j = j + 1;  |         |  311  |     71  |  1  |  66  |  [89,71,48,17,8,98,57]  |
  1748  |              resetPlaceHolder_2();  |         |  311  |     71  |  1  |  66  |  [89,71,48,17,8,98,57]  |
  1754  |                         R = R + 2;  |      2  |  313  |     71  |  1  |  66  |  [89,71,48,17,8,98,57]  |
  1758  |                         j = j + 1;  |         |  313  |     71  |  1  |  67  |  [89,71,48,17,8,98,57]  |
  1759  |              resetPlaceHolder_2();  |         |  313  |     71  |  1  |  67  |  [89,71,48,17,8,98,57]  |
  1765  |                         R = R + 2;  |      2  |  315  |     71  |  1  |  67  |  [89,71,48,17,8,98,57]  |
  1769  |                         j = j + 1;  |         |  315  |     71  |  1  |  68  |  [89,71,48,17,8,98,57]  |
  1770  |              resetPlaceHolder_2();  |         |  315  |     71  |  1  |  68  |  [89,71,48,17,8,98,57]  |
  1776  |                         R = R + 2;  |      2  |  317  |     71  |  1  |  68  |  [89,71,48,17,8,98,57]  |
  1780  |                         j = j + 1;  |         |  317  |     71  |  1  |  69  |  [89,71,48,17,8,98,57]  |
  1781  |              resetPlaceHolder_2();  |         |  317  |     71  |  1  |  69  |  [89,71,48,17,8,98,57]  |
  1787  |                         R = R + 2;  |      2  |  319  |     71  |  1  |  69  |  [89,71,48,17,8,98,57]  |
  1791  |                         j = j + 1;  |         |  319  |     71  |  1  |  70  |  [89,71,48,17,8,98,57]  |
  1792  |              resetPlaceHolder_2();  |         |  319  |     71  |  1  |  70  |  [89,71,48,17,8,98,57]  |
  1798  |                         R = R + 2;  |      2  |  321  |     71  |  1  |  70  |  [89,71,48,17,8,98,57]  |
  1802  |                         j = j + 1;  |         |  321  |     71  |  1  |  71  |  [89,71,48,17,8,98,57]  |
  1803  |              resetPlaceHolder_2();  |         |  321  |     71  |  1  |  71  |  [89,71,48,17,8,98,57]  |
  1809  |                         R = R + 1;  |      1  |  322  |     71  |  1  |  71  |  [89,71,48,17,8,98,57]  |
  1813  |                         i = i + 1;  |         |  322  |     71  |  2  |  71  |  [89,71,48,17,8,98,57]  |
  1814  |              resetPlaceHolder_1();  |         |  322  |     71  |  2  |  71  |  [89,71,48,17,8,98,57]  |
  1820  |      entry = arrayRead(sorted, i);  |         |  322  |     48  |  2  |  71  |  [89,71,48,17,8,98,57]  |
  1822  |                         int j = 0;  |         |  322  |     48  |  2  |   0  |  [89,71,48,17,8,98,57]  |
  1828  |                         R = R + 2;  |      2  |  324  |     48  |  2  |   0  |  [89,71,48,17,8,98,57]  |
  1832  |                         j = j + 1;  |         |  324  |     48  |  2  |   1  |  [89,71,48,17,8,98,57]  |
  1833  |              resetPlaceHolder_2();  |         |  324  |     48  |  2  |   1  |  [89,71,48,17,8,98,57]  |
  1839  |                         R = R + 2;  |      2  |  326  |     48  |  2  |   1  |  [89,71,48,17,8,98,57]  |
  1843  |                         j = j + 1;  |         |  326  |     48  |  2  |   2  |  [89,71,48,17,8,98,57]  |
  1844  |              resetPlaceHolder_2();  |         |  326  |     48  |  2  |   2  |  [89,71,48,17,8,98,57]  |
  1850  |                         R = R + 2;  |      2  |  328  |     48  |  2  |   2  |  [89,71,48,17,8,98,57]  |
  1854  |                         j = j + 1;  |         |  328  |     48  |  2  |   3  |  [89,71,48,17,8,98,57]  |
  1855  |              resetPlaceHolder_2();  |         |  328  |     48  |  2  |   3  |  [89,71,48,17,8,98,57]  |
  1861  |                         R = R + 2;  |      2  |  330  |     48  |  2  |   3  |  [89,71,48,17,8,98,57]  |
  1865  |                         j = j + 1;  |         |  330  |     48  |  2  |   4  |  [89,71,48,17,8,98,57]  |
  1866  |              resetPlaceHolder_2();  |         |  330  |     48  |  2  |   4  |  [89,71,48,17,8,98,57]  |
  1872  |                         R = R + 2;  |      2  |  332  |     48  |  2  |   4  |  [89,71,48,17,8,98,57]  |
  1876  |                         j = j + 1;  |         |  332  |     48  |  2  |   5  |  [89,71,48,17,8,98,57]  |
  1877  |              resetPlaceHolder_2();  |         |  332  |     48  |  2  |   5  |  [89,71,48,17,8,98,57]  |
  1883  |                         R = R + 2;  |      2  |  334  |     48  |  2  |   5  |  [89,71,48,17,8,98,57]  |
  1887  |                         j = j + 1;  |         |  334  |     48  |  2  |   6  |  [89,71,48,17,8,98,57]  |
  1888  |              resetPlaceHolder_2();  |         |  334  |     48  |  2  |   6  |  [89,71,48,17,8,98,57]  |
  1894  |                         R = R + 2;  |      2  |  336  |     48  |  2  |   6  |  [89,71,48,17,8,98,57]  |
  1898  |                         j = j + 1;  |         |  336  |     48  |  2  |   7  |  [89,71,48,17,8,98,57]  |
  1899  |              resetPlaceHolder_2();  |         |  336  |     48  |  2  |   7  |  [89,71,48,17,8,98,57]  |
  1905  |                         R = R + 2;  |      2  |  338  |     48  |  2  |   7  |  [89,71,48,17,8,98,57]  |
  1909  |                         j = j + 1;  |         |  338  |     48  |  2  |   8  |  [89,71,48,17,8,98,57]  |
  1910  |              resetPlaceHolder_2();  |         |  338  |     48  |  2  |   8  |  [89,71,48,17,8,98,57]  |
  1916  |                         R = R + 2;  |      2  |  340  |     48  |  2  |   8  |  [89,71,48,17,8,98,57]  |
  1920  |                         j = j + 1;  |         |  340  |     48  |  2  |   9  |  [89,71,48,17,8,98,57]  |
  1921  |              resetPlaceHolder_2();  |         |  340  |     48  |  2  |   9  |  [89,71,48,17,8,98,57]  |
  1927  |                         R = R + 2;  |      2  |  342  |     48  |  2  |   9  |  [89,71,48,17,8,98,57]  |
  1931  |                         j = j + 1;  |         |  342  |     48  |  2  |  10  |  [89,71,48,17,8,98,57]  |
  1932  |              resetPlaceHolder_2();  |         |  342  |     48  |  2  |  10  |  [89,71,48,17,8,98,57]  |
  1938  |                         R = R + 2;  |      2  |  344  |     48  |  2  |  10  |  [89,71,48,17,8,98,57]  |
  1942  |                         j = j + 1;  |         |  344  |     48  |  2  |  11  |  [89,71,48,17,8,98,57]  |
  1943  |              resetPlaceHolder_2();  |         |  344  |     48  |  2  |  11  |  [89,71,48,17,8,98,57]  |
  1949  |                         R = R + 2;  |      2  |  346  |     48  |  2  |  11  |  [89,71,48,17,8,98,57]  |
  1953  |                         j = j + 1;  |         |  346  |     48  |  2  |  12  |  [89,71,48,17,8,98,57]  |
  1954  |              resetPlaceHolder_2();  |         |  346  |     48  |  2  |  12  |  [89,71,48,17,8,98,57]  |
  1960  |                         R = R + 2;  |      2  |  348  |     48  |  2  |  12  |  [89,71,48,17,8,98,57]  |
  1964  |                         j = j + 1;  |         |  348  |     48  |  2  |  13  |  [89,71,48,17,8,98,57]  |
  1965  |              resetPlaceHolder_2();  |         |  348  |     48  |  2  |  13  |  [89,71,48,17,8,98,57]  |
  1971  |                         R = R + 2;  |      2  |  350  |     48  |  2  |  13  |  [89,71,48,17,8,98,57]  |
  1975  |                         j = j + 1;  |         |  350  |     48  |  2  |  14  |  [89,71,48,17,8,98,57]  |
  1976  |              resetPlaceHolder_2();  |         |  350  |     48  |  2  |  14  |  [89,71,48,17,8,98,57]  |
  1982  |                         R = R + 2;  |      2  |  352  |     48  |  2  |  14  |  [89,71,48,17,8,98,57]  |
  1986  |                         j = j + 1;  |         |  352  |     48  |  2  |  15  |  [89,71,48,17,8,98,57]  |
  1987  |              resetPlaceHolder_2();  |         |  352  |     48  |  2  |  15  |  [89,71,48,17,8,98,57]  |
  1993  |                         R = R + 2;  |      2  |  354  |     48  |  2  |  15  |  [89,71,48,17,8,98,57]  |
  1997  |                         j = j + 1;  |         |  354  |     48  |  2  |  16  |  [89,71,48,17,8,98,57]  |
  1998  |              resetPlaceHolder_2();  |         |  354  |     48  |  2  |  16  |  [89,71,48,17,8,98,57]  |
  2004  |                         R = R + 2;  |      2  |  356  |     48  |  2  |  16  |  [89,71,48,17,8,98,57]  |
  2008  |                         j = j + 1;  |         |  356  |     48  |  2  |  17  |  [89,71,48,17,8,98,57]  |
  2009  |              resetPlaceHolder_2();  |         |  356  |     48  |  2  |  17  |  [89,71,48,17,8,98,57]  |
  2015  |                         R = R + 2;  |      2  |  358  |     48  |  2  |  17  |  [89,71,48,17,8,98,57]  |
  2019  |                         j = j + 1;  |         |  358  |     48  |  2  |  18  |  [89,71,48,17,8,98,57]  |
  2020  |              resetPlaceHolder_2();  |         |  358  |     48  |  2  |  18  |  [89,71,48,17,8,98,57]  |
  2026  |                         R = R + 2;  |      2  |  360  |     48  |  2  |  18  |  [89,71,48,17,8,98,57]  |
  2030  |                         j = j + 1;  |         |  360  |     48  |  2  |  19  |  [89,71,48,17,8,98,57]  |
  2031  |              resetPlaceHolder_2();  |         |  360  |     48  |  2  |  19  |  [89,71,48,17,8,98,57]  |
  2037  |                         R = R + 2;  |      2  |  362  |     48  |  2  |  19  |  [89,71,48,17,8,98,57]  |
  2041  |                         j = j + 1;  |         |  362  |     48  |  2  |  20  |  [89,71,48,17,8,98,57]  |
  2042  |              resetPlaceHolder_2();  |         |  362  |     48  |  2  |  20  |  [89,71,48,17,8,98,57]  |
  2048  |                         R = R + 2;  |      2  |  364  |     48  |  2  |  20  |  [89,71,48,17,8,98,57]  |
  2052  |                         j = j + 1;  |         |  364  |     48  |  2  |  21  |  [89,71,48,17,8,98,57]  |
  2053  |              resetPlaceHolder_2();  |         |  364  |     48  |  2  |  21  |  [89,71,48,17,8,98,57]  |
  2059  |                         R = R + 2;  |      2  |  366  |     48  |  2  |  21  |  [89,71,48,17,8,98,57]  |
  2063  |                         j = j + 1;  |         |  366  |     48  |  2  |  22  |  [89,71,48,17,8,98,57]  |
  2064  |              resetPlaceHolder_2();  |         |  366  |     48  |  2  |  22  |  [89,71,48,17,8,98,57]  |
  2070  |                         R = R + 2;  |      2  |  368  |     48  |  2  |  22  |  [89,71,48,17,8,98,57]  |
  2074  |                         j = j + 1;  |         |  368  |     48  |  2  |  23  |  [89,71,48,17,8,98,57]  |
  2075  |              resetPlaceHolder_2();  |         |  368  |     48  |  2  |  23  |  [89,71,48,17,8,98,57]  |
  2081  |                         R = R + 2;  |      2  |  370  |     48  |  2  |  23  |  [89,71,48,17,8,98,57]  |
  2085  |                         j = j + 1;  |         |  370  |     48  |  2  |  24  |  [89,71,48,17,8,98,57]  |
  2086  |              resetPlaceHolder_2();  |         |  370  |     48  |  2  |  24  |  [89,71,48,17,8,98,57]  |
  2092  |                         R = R + 2;  |      2  |  372  |     48  |  2  |  24  |  [89,71,48,17,8,98,57]  |
  2096  |                         j = j + 1;  |         |  372  |     48  |  2  |  25  |  [89,71,48,17,8,98,57]  |
  2097  |              resetPlaceHolder_2();  |         |  372  |     48  |  2  |  25  |  [89,71,48,17,8,98,57]  |
  2103  |                         R = R + 2;  |      2  |  374  |     48  |  2  |  25  |  [89,71,48,17,8,98,57]  |
  2107  |                         j = j + 1;  |         |  374  |     48  |  2  |  26  |  [89,71,48,17,8,98,57]  |
  2108  |              resetPlaceHolder_2();  |         |  374  |     48  |  2  |  26  |  [89,71,48,17,8,98,57]  |
  2114  |                         R = R + 2;  |      2  |  376  |     48  |  2  |  26  |  [89,71,48,17,8,98,57]  |
  2118  |                         j = j + 1;  |         |  376  |     48  |  2  |  27  |  [89,71,48,17,8,98,57]  |
  2119  |              resetPlaceHolder_2();  |         |  376  |     48  |  2  |  27  |  [89,71,48,17,8,98,57]  |
  2125  |                         R = R + 2;  |      2  |  378  |     48  |  2  |  27  |  [89,71,48,17,8,98,57]  |
  2129  |                         j = j + 1;  |         |  378  |     48  |  2  |  28  |  [89,71,48,17,8,98,57]  |
  2130  |              resetPlaceHolder_2();  |         |  378  |     48  |  2  |  28  |  [89,71,48,17,8,98,57]  |
  2136  |                         R = R + 2;  |      2  |  380  |     48  |  2  |  28  |  [89,71,48,17,8,98,57]  |
  2140  |                         j = j + 1;  |         |  380  |     48  |  2  |  29  |  [89,71,48,17,8,98,57]  |
  2141  |              resetPlaceHolder_2();  |         |  380  |     48  |  2  |  29  |  [89,71,48,17,8,98,57]  |
  2147  |                         R = R + 2;  |      2  |  382  |     48  |  2  |  29  |  [89,71,48,17,8,98,57]  |
  2151  |                         j = j + 1;  |         |  382  |     48  |  2  |  30  |  [89,71,48,17,8,98,57]  |
  2152  |              resetPlaceHolder_2();  |         |  382  |     48  |  2  |  30  |  [89,71,48,17,8,98,57]  |
  2158  |                         R = R + 2;  |      2  |  384  |     48  |  2  |  30  |  [89,71,48,17,8,98,57]  |
  2162  |                         j = j + 1;  |         |  384  |     48  |  2  |  31  |  [89,71,48,17,8,98,57]  |
  2163  |              resetPlaceHolder_2();  |         |  384  |     48  |  2  |  31  |  [89,71,48,17,8,98,57]  |
  2169  |                         R = R + 2;  |      2  |  386  |     48  |  2  |  31  |  [89,71,48,17,8,98,57]  |
  2173  |                         j = j + 1;  |         |  386  |     48  |  2  |  32  |  [89,71,48,17,8,98,57]  |
  2174  |              resetPlaceHolder_2();  |         |  386  |     48  |  2  |  32  |  [89,71,48,17,8,98,57]  |
  2180  |                         R = R + 2;  |      2  |  388  |     48  |  2  |  32  |  [89,71,48,17,8,98,57]  |
  2184  |                         j = j + 1;  |         |  388  |     48  |  2  |  33  |  [89,71,48,17,8,98,57]  |
  2185  |              resetPlaceHolder_2();  |         |  388  |     48  |  2  |  33  |  [89,71,48,17,8,98,57]  |
  2191  |                         R = R + 2;  |      2  |  390  |     48  |  2  |  33  |  [89,71,48,17,8,98,57]  |
  2195  |                         j = j + 1;  |         |  390  |     48  |  2  |  34  |  [89,71,48,17,8,98,57]  |
  2196  |              resetPlaceHolder_2();  |         |  390  |     48  |  2  |  34  |  [89,71,48,17,8,98,57]  |
  2202  |                         R = R + 2;  |      2  |  392  |     48  |  2  |  34  |  [89,71,48,17,8,98,57]  |
  2206  |                         j = j + 1;  |         |  392  |     48  |  2  |  35  |  [89,71,48,17,8,98,57]  |
  2207  |              resetPlaceHolder_2();  |         |  392  |     48  |  2  |  35  |  [89,71,48,17,8,98,57]  |
  2213  |                         R = R + 2;  |      2  |  394  |     48  |  2  |  35  |  [89,71,48,17,8,98,57]  |
  2217  |                         j = j + 1;  |         |  394  |     48  |  2  |  36  |  [89,71,48,17,8,98,57]  |
  2218  |              resetPlaceHolder_2();  |         |  394  |     48  |  2  |  36  |  [89,71,48,17,8,98,57]  |
  2224  |                         R = R + 2;  |      2  |  396  |     48  |  2  |  36  |  [89,71,48,17,8,98,57]  |
  2228  |                         j = j + 1;  |         |  396  |     48  |  2  |  37  |  [89,71,48,17,8,98,57]  |
  2229  |              resetPlaceHolder_2();  |         |  396  |     48  |  2  |  37  |  [89,71,48,17,8,98,57]  |
  2235  |                         R = R + 2;  |      2  |  398  |     48  |  2  |  37  |  [89,71,48,17,8,98,57]  |
  2239  |                         j = j + 1;  |         |  398  |     48  |  2  |  38  |  [89,71,48,17,8,98,57]  |
  2240  |              resetPlaceHolder_2();  |         |  398  |     48  |  2  |  38  |  [89,71,48,17,8,98,57]  |
  2246  |                         R = R + 2;  |      2  |  400  |     48  |  2  |  38  |  [89,71,48,17,8,98,57]  |
  2250  |                         j = j + 1;  |         |  400  |     48  |  2  |  39  |  [89,71,48,17,8,98,57]  |
  2251  |              resetPlaceHolder_2();  |         |  400  |     48  |  2  |  39  |  [89,71,48,17,8,98,57]  |
  2257  |                         R = R + 2;  |      2  |  402  |     48  |  2  |  39  |  [89,71,48,17,8,98,57]  |
  2261  |                         j = j + 1;  |         |  402  |     48  |  2  |  40  |  [89,71,48,17,8,98,57]  |
  2262  |              resetPlaceHolder_2();  |         |  402  |     48  |  2  |  40  |  [89,71,48,17,8,98,57]  |
  2268  |                         R = R + 2;  |      2  |  404  |     48  |  2  |  40  |  [89,71,48,17,8,98,57]  |
  2272  |                         j = j + 1;  |         |  404  |     48  |  2  |  41  |  [89,71,48,17,8,98,57]  |
  2273  |              resetPlaceHolder_2();  |         |  404  |     48  |  2  |  41  |  [89,71,48,17,8,98,57]  |
  2279  |                         R = R + 2;  |      2  |  406  |     48  |  2  |  41  |  [89,71,48,17,8,98,57]  |
  2283  |                         j = j + 1;  |         |  406  |     48  |  2  |  42  |  [89,71,48,17,8,98,57]  |
  2284  |              resetPlaceHolder_2();  |         |  406  |     48  |  2  |  42  |  [89,71,48,17,8,98,57]  |
  2290  |                         R = R + 2;  |      2  |  408  |     48  |  2  |  42  |  [89,71,48,17,8,98,57]  |
  2294  |                         j = j + 1;  |         |  408  |     48  |  2  |  43  |  [89,71,48,17,8,98,57]  |
  2295  |              resetPlaceHolder_2();  |         |  408  |     48  |  2  |  43  |  [89,71,48,17,8,98,57]  |
  2301  |                         R = R + 2;  |      2  |  410  |     48  |  2  |  43  |  [89,71,48,17,8,98,57]  |
  2305  |                         j = j + 1;  |         |  410  |     48  |  2  |  44  |  [89,71,48,17,8,98,57]  |
  2306  |              resetPlaceHolder_2();  |         |  410  |     48  |  2  |  44  |  [89,71,48,17,8,98,57]  |
  2312  |                         R = R + 2;  |      2  |  412  |     48  |  2  |  44  |  [89,71,48,17,8,98,57]  |
  2316  |                         j = j + 1;  |         |  412  |     48  |  2  |  45  |  [89,71,48,17,8,98,57]  |
  2317  |              resetPlaceHolder_2();  |         |  412  |     48  |  2  |  45  |  [89,71,48,17,8,98,57]  |
  2323  |                         R = R + 2;  |      2  |  414  |     48  |  2  |  45  |  [89,71,48,17,8,98,57]  |
  2327  |                         j = j + 1;  |         |  414  |     48  |  2  |  46  |  [89,71,48,17,8,98,57]  |
  2328  |              resetPlaceHolder_2();  |         |  414  |     48  |  2  |  46  |  [89,71,48,17,8,98,57]  |
  2334  |                         R = R + 2;  |      2  |  416  |     48  |  2  |  46  |  [89,71,48,17,8,98,57]  |
  2338  |                         j = j + 1;  |         |  416  |     48  |  2  |  47  |  [89,71,48,17,8,98,57]  |
  2339  |              resetPlaceHolder_2();  |         |  416  |     48  |  2  |  47  |  [89,71,48,17,8,98,57]  |
  2345  |                         R = R + 2;  |      2  |  418  |     48  |  2  |  47  |  [89,71,48,17,8,98,57]  |
  2349  |                         j = j + 1;  |         |  418  |     48  |  2  |  48  |  [89,71,48,17,8,98,57]  |
  2350  |              resetPlaceHolder_2();  |         |  418  |     48  |  2  |  48  |  [89,71,48,17,8,98,57]  |
  2356  |                         R = R + 1;  |      1  |  419  |     48  |  2  |  48  |  [89,71,48,17,8,98,57]  |
  2360  |                         i = i + 1;  |         |  419  |     48  |  3  |  48  |  [89,71,48,17,8,98,57]  |
  2361  |              resetPlaceHolder_1();  |         |  419  |     48  |  3  |  48  |  [89,71,48,17,8,98,57]  |
  2367  |      entry = arrayRead(sorted, i);  |         |  419  |     17  |  3  |  48  |  [89,71,48,17,8,98,57]  |
  2369  |                         int j = 0;  |         |  419  |     17  |  3  |   0  |  [89,71,48,17,8,98,57]  |
  2375  |                         R = R + 2;  |      2  |  421  |     17  |  3  |   0  |  [89,71,48,17,8,98,57]  |
  2379  |                         j = j + 1;  |         |  421  |     17  |  3  |   1  |  [89,71,48,17,8,98,57]  |
  2380  |              resetPlaceHolder_2();  |         |  421  |     17  |  3  |   1  |  [89,71,48,17,8,98,57]  |
  2386  |                         R = R + 2;  |      2  |  423  |     17  |  3  |   1  |  [89,71,48,17,8,98,57]  |
  2390  |                         j = j + 1;  |         |  423  |     17  |  3  |   2  |  [89,71,48,17,8,98,57]  |
  2391  |              resetPlaceHolder_2();  |         |  423  |     17  |  3  |   2  |  [89,71,48,17,8,98,57]  |
  2397  |                         R = R + 2;  |      2  |  425  |     17  |  3  |   2  |  [89,71,48,17,8,98,57]  |
  2401  |                         j = j + 1;  |         |  425  |     17  |  3  |   3  |  [89,71,48,17,8,98,57]  |
  2402  |              resetPlaceHolder_2();  |         |  425  |     17  |  3  |   3  |  [89,71,48,17,8,98,57]  |
  2408  |                         R = R + 2;  |      2  |  427  |     17  |  3  |   3  |  [89,71,48,17,8,98,57]  |
  2412  |                         j = j + 1;  |         |  427  |     17  |  3  |   4  |  [89,71,48,17,8,98,57]  |
  2413  |              resetPlaceHolder_2();  |         |  427  |     17  |  3  |   4  |  [89,71,48,17,8,98,57]  |
  2419  |                         R = R + 2;  |      2  |  429  |     17  |  3  |   4  |  [89,71,48,17,8,98,57]  |
  2423  |                         j = j + 1;  |         |  429  |     17  |  3  |   5  |  [89,71,48,17,8,98,57]  |
  2424  |              resetPlaceHolder_2();  |         |  429  |     17  |  3  |   5  |  [89,71,48,17,8,98,57]  |
  2430  |                         R = R + 2;  |      2  |  431  |     17  |  3  |   5  |  [89,71,48,17,8,98,57]  |
  2434  |                         j = j + 1;  |         |  431  |     17  |  3  |   6  |  [89,71,48,17,8,98,57]  |
  2435  |              resetPlaceHolder_2();  |         |  431  |     17  |  3  |   6  |  [89,71,48,17,8,98,57]  |
  2441  |                         R = R + 2;  |      2  |  433  |     17  |  3  |   6  |  [89,71,48,17,8,98,57]  |
  2445  |                         j = j + 1;  |         |  433  |     17  |  3  |   7  |  [89,71,48,17,8,98,57]  |
  2446  |              resetPlaceHolder_2();  |         |  433  |     17  |  3  |   7  |  [89,71,48,17,8,98,57]  |
  2452  |                         R = R + 2;  |      2  |  435  |     17  |  3  |   7  |  [89,71,48,17,8,98,57]  |
  2456  |                         j = j + 1;  |         |  435  |     17  |  3  |   8  |  [89,71,48,17,8,98,57]  |
  2457  |              resetPlaceHolder_2();  |         |  435  |     17  |  3  |   8  |  [89,71,48,17,8,98,57]  |
  2463  |                         R = R + 2;  |      2  |  437  |     17  |  3  |   8  |  [89,71,48,17,8,98,57]  |
  2467  |                         j = j + 1;  |         |  437  |     17  |  3  |   9  |  [89,71,48,17,8,98,57]  |
  2468  |              resetPlaceHolder_2();  |         |  437  |     17  |  3  |   9  |  [89,71,48,17,8,98,57]  |
  2474  |                         R = R + 2;  |      2  |  439  |     17  |  3  |   9  |  [89,71,48,17,8,98,57]  |
  2478  |                         j = j + 1;  |         |  439  |     17  |  3  |  10  |  [89,71,48,17,8,98,57]  |
  2479  |              resetPlaceHolder_2();  |         |  439  |     17  |  3  |  10  |  [89,71,48,17,8,98,57]  |
  2485  |                         R = R + 2;  |      2  |  441  |     17  |  3  |  10  |  [89,71,48,17,8,98,57]  |
  2489  |                         j = j + 1;  |         |  441  |     17  |  3  |  11  |  [89,71,48,17,8,98,57]  |
  2490  |              resetPlaceHolder_2();  |         |  441  |     17  |  3  |  11  |  [89,71,48,17,8,98,57]  |
  2496  |                         R = R + 2;  |      2  |  443  |     17  |  3  |  11  |  [89,71,48,17,8,98,57]  |
  2500  |                         j = j + 1;  |         |  443  |     17  |  3  |  12  |  [89,71,48,17,8,98,57]  |
  2501  |              resetPlaceHolder_2();  |         |  443  |     17  |  3  |  12  |  [89,71,48,17,8,98,57]  |
  2507  |                         R = R + 2;  |      2  |  445  |     17  |  3  |  12  |  [89,71,48,17,8,98,57]  |
  2511  |                         j = j + 1;  |         |  445  |     17  |  3  |  13  |  [89,71,48,17,8,98,57]  |
  2512  |              resetPlaceHolder_2();  |         |  445  |     17  |  3  |  13  |  [89,71,48,17,8,98,57]  |
  2518  |                         R = R + 2;  |      2  |  447  |     17  |  3  |  13  |  [89,71,48,17,8,98,57]  |
  2522  |                         j = j + 1;  |         |  447  |     17  |  3  |  14  |  [89,71,48,17,8,98,57]  |
  2523  |              resetPlaceHolder_2();  |         |  447  |     17  |  3  |  14  |  [89,71,48,17,8,98,57]  |
  2529  |                         R = R + 2;  |      2  |  449  |     17  |  3  |  14  |  [89,71,48,17,8,98,57]  |
  2533  |                         j = j + 1;  |         |  449  |     17  |  3  |  15  |  [89,71,48,17,8,98,57]  |
  2534  |              resetPlaceHolder_2();  |         |  449  |     17  |  3  |  15  |  [89,71,48,17,8,98,57]  |
  2540  |                         R = R + 2;  |      2  |  451  |     17  |  3  |  15  |  [89,71,48,17,8,98,57]  |
  2544  |                         j = j + 1;  |         |  451  |     17  |  3  |  16  |  [89,71,48,17,8,98,57]  |
  2545  |              resetPlaceHolder_2();  |         |  451  |     17  |  3  |  16  |  [89,71,48,17,8,98,57]  |
  2551  |                         R = R + 2;  |      2  |  453  |     17  |  3  |  16  |  [89,71,48,17,8,98,57]  |
  2555  |                         j = j + 1;  |         |  453  |     17  |  3  |  17  |  [89,71,48,17,8,98,57]  |
  2556  |              resetPlaceHolder_2();  |         |  453  |     17  |  3  |  17  |  [89,71,48,17,8,98,57]  |
  2562  |                         R = R + 1;  |      1  |  454  |     17  |  3  |  17  |  [89,71,48,17,8,98,57]  |
  2566  |                         i = i + 1;  |         |  454  |     17  |  4  |  17  |  [89,71,48,17,8,98,57]  |
  2567  |              resetPlaceHolder_1();  |         |  454  |     17  |  4  |  17  |  [89,71,48,17,8,98,57]  |
  2573  |      entry = arrayRead(sorted, i);  |         |  454  |      8  |  4  |  17  |  [89,71,48,17,8,98,57]  |
  2575  |                         int j = 0;  |         |  454  |      8  |  4  |   0  |  [89,71,48,17,8,98,57]  |
  2581  |                         R = R + 2;  |      2  |  456  |      8  |  4  |   0  |  [89,71,48,17,8,98,57]  |
  2585  |                         j = j + 1;  |         |  456  |      8  |  4  |   1  |  [89,71,48,17,8,98,57]  |
  2586  |              resetPlaceHolder_2();  |         |  456  |      8  |  4  |   1  |  [89,71,48,17,8,98,57]  |
  2592  |                         R = R + 2;  |      2  |  458  |      8  |  4  |   1  |  [89,71,48,17,8,98,57]  |
  2596  |                         j = j + 1;  |         |  458  |      8  |  4  |   2  |  [89,71,48,17,8,98,57]  |
  2597  |              resetPlaceHolder_2();  |         |  458  |      8  |  4  |   2  |  [89,71,48,17,8,98,57]  |
  2603  |                         R = R + 2;  |      2  |  460  |      8  |  4  |   2  |  [89,71,48,17,8,98,57]  |
  2607  |                         j = j + 1;  |         |  460  |      8  |  4  |   3  |  [89,71,48,17,8,98,57]  |
  2608  |              resetPlaceHolder_2();  |         |  460  |      8  |  4  |   3  |  [89,71,48,17,8,98,57]  |
  2614  |                         R = R + 2;  |      2  |  462  |      8  |  4  |   3  |  [89,71,48,17,8,98,57]  |
  2618  |                         j = j + 1;  |         |  462  |      8  |  4  |   4  |  [89,71,48,17,8,98,57]  |
  2619  |              resetPlaceHolder_2();  |         |  462  |      8  |  4  |   4  |  [89,71,48,17,8,98,57]  |
  2625  |                         R = R + 2;  |      2  |  464  |      8  |  4  |   4  |  [89,71,48,17,8,98,57]  |
  2629  |                         j = j + 1;  |         |  464  |      8  |  4  |   5  |  [89,71,48,17,8,98,57]  |
  2630  |              resetPlaceHolder_2();  |         |  464  |      8  |  4  |   5  |  [89,71,48,17,8,98,57]  |
  2636  |                         R = R + 2;  |      2  |  466  |      8  |  4  |   5  |  [89,71,48,17,8,98,57]  |
  2640  |                         j = j + 1;  |         |  466  |      8  |  4  |   6  |  [89,71,48,17,8,98,57]  |
  2641  |              resetPlaceHolder_2();  |         |  466  |      8  |  4  |   6  |  [89,71,48,17,8,98,57]  |
  2647  |                         R = R + 2;  |      2  |  468  |      8  |  4  |   6  |  [89,71,48,17,8,98,57]  |
  2651  |                         j = j + 1;  |         |  468  |      8  |  4  |   7  |  [89,71,48,17,8,98,57]  |
  2652  |              resetPlaceHolder_2();  |         |  468  |      8  |  4  |   7  |  [89,71,48,17,8,98,57]  |
  2658  |                         R = R + 2;  |      2  |  470  |      8  |  4  |   7  |  [89,71,48,17,8,98,57]  |
  2662  |                         j = j + 1;  |         |  470  |      8  |  4  |   8  |  [89,71,48,17,8,98,57]  |
  2663  |              resetPlaceHolder_2();  |         |  470  |      8  |  4  |   8  |  [89,71,48,17,8,98,57]  |
  2669  |                         R = R + 1;  |      1  |  471  |      8  |  4  |   8  |  [89,71,48,17,8,98,57]  |
  2673  |                         i = i + 1;  |         |  471  |      8  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2674  |              resetPlaceHolder_1();  |         |  471  |      8  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2680  |      entry = arrayRead(sorted, i);  |         |  471  |     98  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2682  |                         int j = 0;  |         |  471  |     98  |  5  |   0  |  [89,71,48,17,8,98,57]  |
  2688  |                         R = R + 2;  |      2  |  473  |     98  |  5  |   0  |  [89,71,48,17,8,98,57]  |
  2692  |                         j = j + 1;  |         |  473  |     98  |  5  |   1  |  [89,71,48,17,8,98,57]  |
  2693  |              resetPlaceHolder_2();  |         |  473  |     98  |  5  |   1  |  [89,71,48,17,8,98,57]  |
  2699  |                         R = R + 2;  |      2  |  475  |     98  |  5  |   1  |  [89,71,48,17,8,98,57]  |
  2703  |                         j = j + 1;  |         |  475  |     98  |  5  |   2  |  [89,71,48,17,8,98,57]  |
  2704  |              resetPlaceHolder_2();  |         |  475  |     98  |  5  |   2  |  [89,71,48,17,8,98,57]  |
  2710  |                         R = R + 2;  |      2  |  477  |     98  |  5  |   2  |  [89,71,48,17,8,98,57]  |
  2714  |                         j = j + 1;  |         |  477  |     98  |  5  |   3  |  [89,71,48,17,8,98,57]  |
  2715  |              resetPlaceHolder_2();  |         |  477  |     98  |  5  |   3  |  [89,71,48,17,8,98,57]  |
  2721  |                         R = R + 2;  |      2  |  479  |     98  |  5  |   3  |  [89,71,48,17,8,98,57]  |
  2725  |                         j = j + 1;  |         |  479  |     98  |  5  |   4  |  [89,71,48,17,8,98,57]  |
  2726  |              resetPlaceHolder_2();  |         |  479  |     98  |  5  |   4  |  [89,71,48,17,8,98,57]  |
  2732  |                         R = R + 2;  |      2  |  481  |     98  |  5  |   4  |  [89,71,48,17,8,98,57]  |
  2736  |                         j = j + 1;  |         |  481  |     98  |  5  |   5  |  [89,71,48,17,8,98,57]  |
  2737  |              resetPlaceHolder_2();  |         |  481  |     98  |  5  |   5  |  [89,71,48,17,8,98,57]  |
  2743  |                         R = R + 2;  |      2  |  483  |     98  |  5  |   5  |  [89,71,48,17,8,98,57]  |
  2747  |                         j = j + 1;  |         |  483  |     98  |  5  |   6  |  [89,71,48,17,8,98,57]  |
  2748  |              resetPlaceHolder_2();  |         |  483  |     98  |  5  |   6  |  [89,71,48,17,8,98,57]  |
  2754  |                         R = R + 2;  |      2  |  485  |     98  |  5  |   6  |  [89,71,48,17,8,98,57]  |
  2758  |                         j = j + 1;  |         |  485  |     98  |  5  |   7  |  [89,71,48,17,8,98,57]  |
  2759  |              resetPlaceHolder_2();  |         |  485  |     98  |  5  |   7  |  [89,71,48,17,8,98,57]  |
  2765  |                         R = R + 2;  |      2  |  487  |     98  |  5  |   7  |  [89,71,48,17,8,98,57]  |
  2769  |                         j = j + 1;  |         |  487  |     98  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2770  |              resetPlaceHolder_2();  |         |  487  |     98  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2776  |                         R = R + 2;  |      2  |  489  |     98  |  5  |   8  |  [89,71,48,17,8,98,57]  |
  2780  |                         j = j + 1;  |         |  489  |     98  |  5  |   9  |  [89,71,48,17,8,98,57]  |
  2781  |              resetPlaceHolder_2();  |         |  489  |     98  |  5  |   9  |  [89,71,48,17,8,98,57]  |
  2787  |                         R = R + 2;  |      2  |  491  |     98  |  5  |   9  |  [89,71,48,17,8,98,57]  |
  2791  |                         j = j + 1;  |         |  491  |     98  |  5  |  10  |  [89,71,48,17,8,98,57]  |
  2792  |              resetPlaceHolder_2();  |         |  491  |     98  |  5  |  10  |  [89,71,48,17,8,98,57]  |
  2798  |                         R = R + 2;  |      2  |  493  |     98  |  5  |  10  |  [89,71,48,17,8,98,57]  |
  2802  |                         j = j + 1;  |         |  493  |     98  |  5  |  11  |  [89,71,48,17,8,98,57]  |
  2803  |              resetPlaceHolder_2();  |         |  493  |     98  |  5  |  11  |  [89,71,48,17,8,98,57]  |
  2809  |                         R = R + 2;  |      2  |  495  |     98  |  5  |  11  |  [89,71,48,17,8,98,57]  |
  2813  |                         j = j + 1;  |         |  495  |     98  |  5  |  12  |  [89,71,48,17,8,98,57]  |
  2814  |              resetPlaceHolder_2();  |         |  495  |     98  |  5  |  12  |  [89,71,48,17,8,98,57]  |
  2820  |                         R = R + 2;  |      2  |  497  |     98  |  5  |  12  |  [89,71,48,17,8,98,57]  |
  2824  |                         j = j + 1;  |         |  497  |     98  |  5  |  13  |  [89,71,48,17,8,98,57]  |
  2825  |              resetPlaceHolder_2();  |         |  497  |     98  |  5  |  13  |  [89,71,48,17,8,98,57]  |
  2831  |                         R = R + 2;  |      2  |  499  |     98  |  5  |  13  |  [89,71,48,17,8,98,57]  |
  2835  |                         j = j + 1;  |         |  499  |     98  |  5  |  14  |  [89,71,48,17,8,98,57]  |
  2836  |              resetPlaceHolder_2();  |         |  499  |     98  |  5  |  14  |  [89,71,48,17,8,98,57]  |
  2842  |                         R = R + 2;  |      2  |  501  |     98  |  5  |  14  |  [89,71,48,17,8,98,57]  |
  2846  |                         j = j + 1;  |         |  501  |     98  |  5  |  15  |  [89,71,48,17,8,98,57]  |
  2847  |              resetPlaceHolder_2();  |         |  501  |     98  |  5  |  15  |  [89,71,48,17,8,98,57]  |
  2853  |                         R = R + 2;  |      2  |  503  |     98  |  5  |  15  |  [89,71,48,17,8,98,57]  |
  2857  |                         j = j + 1;  |         |  503  |     98  |  5  |  16  |  [89,71,48,17,8,98,57]  |
  2858  |              resetPlaceHolder_2();  |         |  503  |     98  |  5  |  16  |  [89,71,48,17,8,98,57]  |
  2864  |                         R = R + 2;  |      2  |  505  |     98  |  5  |  16  |  [89,71,48,17,8,98,57]  |
  2868  |                         j = j + 1;  |         |  505  |     98  |  5  |  17  |  [89,71,48,17,8,98,57]  |
  2869  |              resetPlaceHolder_2();  |         |  505  |     98  |  5  |  17  |  [89,71,48,17,8,98,57]  |
  2875  |                         R = R + 2;  |      2  |  507  |     98  |  5  |  17  |  [89,71,48,17,8,98,57]  |
  2879  |                         j = j + 1;  |         |  507  |     98  |  5  |  18  |  [89,71,48,17,8,98,57]  |
  2880  |              resetPlaceHolder_2();  |         |  507  |     98  |  5  |  18  |  [89,71,48,17,8,98,57]  |
  2886  |                         R = R + 2;  |      2  |  509  |     98  |  5  |  18  |  [89,71,48,17,8,98,57]  |
  2890  |                         j = j + 1;  |         |  509  |     98  |  5  |  19  |  [89,71,48,17,8,98,57]  |
  2891  |              resetPlaceHolder_2();  |         |  509  |     98  |  5  |  19  |  [89,71,48,17,8,98,57]  |
  2897  |                         R = R + 2;  |      2  |  511  |     98  |  5  |  19  |  [89,71,48,17,8,98,57]  |
  2901  |                         j = j + 1;  |         |  511  |     98  |  5  |  20  |  [89,71,48,17,8,98,57]  |
  2902  |              resetPlaceHolder_2();  |         |  511  |     98  |  5  |  20  |  [89,71,48,17,8,98,57]  |
  2908  |                         R = R + 2;  |      2  |  513  |     98  |  5  |  20  |  [89,71,48,17,8,98,57]  |
  2912  |                         j = j + 1;  |         |  513  |     98  |  5  |  21  |  [89,71,48,17,8,98,57]  |
  2913  |              resetPlaceHolder_2();  |         |  513  |     98  |  5  |  21  |  [89,71,48,17,8,98,57]  |
  2919  |                         R = R + 2;  |      2  |  515  |     98  |  5  |  21  |  [89,71,48,17,8,98,57]  |
  2923  |                         j = j + 1;  |         |  515  |     98  |  5  |  22  |  [89,71,48,17,8,98,57]  |
  2924  |              resetPlaceHolder_2();  |         |  515  |     98  |  5  |  22  |  [89,71,48,17,8,98,57]  |
  2930  |                         R = R + 2;  |      2  |  517  |     98  |  5  |  22  |  [89,71,48,17,8,98,57]  |
  2934  |                         j = j + 1;  |         |  517  |     98  |  5  |  23  |  [89,71,48,17,8,98,57]  |
  2935  |              resetPlaceHolder_2();  |         |  517  |     98  |  5  |  23  |  [89,71,48,17,8,98,57]  |
  2941  |                         R = R + 2;  |      2  |  519  |     98  |  5  |  23  |  [89,71,48,17,8,98,57]  |
  2945  |                         j = j + 1;  |         |  519  |     98  |  5  |  24  |  [89,71,48,17,8,98,57]  |
  2946  |              resetPlaceHolder_2();  |         |  519  |     98  |  5  |  24  |  [89,71,48,17,8,98,57]  |
  2952  |                         R = R + 2;  |      2  |  521  |     98  |  5  |  24  |  [89,71,48,17,8,98,57]  |
  2956  |                         j = j + 1;  |         |  521  |     98  |  5  |  25  |  [89,71,48,17,8,98,57]  |
  2957  |              resetPlaceHolder_2();  |         |  521  |     98  |  5  |  25  |  [89,71,48,17,8,98,57]  |
  2963  |                         R = R + 2;  |      2  |  523  |     98  |  5  |  25  |  [89,71,48,17,8,98,57]  |
  2967  |                         j = j + 1;  |         |  523  |     98  |  5  |  26  |  [89,71,48,17,8,98,57]  |
  2968  |              resetPlaceHolder_2();  |         |  523  |     98  |  5  |  26  |  [89,71,48,17,8,98,57]  |
  2974  |                         R = R + 2;  |      2  |  525  |     98  |  5  |  26  |  [89,71,48,17,8,98,57]  |
  2978  |                         j = j + 1;  |         |  525  |     98  |  5  |  27  |  [89,71,48,17,8,98,57]  |
  2979  |              resetPlaceHolder_2();  |         |  525  |     98  |  5  |  27  |  [89,71,48,17,8,98,57]  |
  2985  |                         R = R + 2;  |      2  |  527  |     98  |  5  |  27  |  [89,71,48,17,8,98,57]  |
  2989  |                         j = j + 1;  |         |  527  |     98  |  5  |  28  |  [89,71,48,17,8,98,57]  |
  2990  |              resetPlaceHolder_2();  |         |  527  |     98  |  5  |  28  |  [89,71,48,17,8,98,57]  |
  2996  |                         R = R + 2;  |      2  |  529  |     98  |  5  |  28  |  [89,71,48,17,8,98,57]  |
  3000  |                         j = j + 1;  |         |  529  |     98  |  5  |  29  |  [89,71,48,17,8,98,57]  |
  3001  |              resetPlaceHolder_2();  |         |  529  |     98  |  5  |  29  |  [89,71,48,17,8,98,57]  |
  3007  |                         R = R + 2;  |      2  |  531  |     98  |  5  |  29  |  [89,71,48,17,8,98,57]  |
  3011  |                         j = j + 1;  |         |  531  |     98  |  5  |  30  |  [89,71,48,17,8,98,57]  |
  3012  |              resetPlaceHolder_2();  |         |  531  |     98  |  5  |  30  |  [89,71,48,17,8,98,57]  |
  3018  |                         R = R + 2;  |      2  |  533  |     98  |  5  |  30  |  [89,71,48,17,8,98,57]  |
  3022  |                         j = j + 1;  |         |  533  |     98  |  5  |  31  |  [89,71,48,17,8,98,57]  |
  3023  |              resetPlaceHolder_2();  |         |  533  |     98  |  5  |  31  |  [89,71,48,17,8,98,57]  |
  3029  |                         R = R + 2;  |      2  |  535  |     98  |  5  |  31  |  [89,71,48,17,8,98,57]  |
  3033  |                         j = j + 1;  |         |  535  |     98  |  5  |  32  |  [89,71,48,17,8,98,57]  |
  3034  |              resetPlaceHolder_2();  |         |  535  |     98  |  5  |  32  |  [89,71,48,17,8,98,57]  |
  3040  |                         R = R + 2;  |      2  |  537  |     98  |  5  |  32  |  [89,71,48,17,8,98,57]  |
  3044  |                         j = j + 1;  |         |  537  |     98  |  5  |  33  |  [89,71,48,17,8,98,57]  |
  3045  |              resetPlaceHolder_2();  |         |  537  |     98  |  5  |  33  |  [89,71,48,17,8,98,57]  |
  3051  |                         R = R + 2;  |      2  |  539  |     98  |  5  |  33  |  [89,71,48,17,8,98,57]  |
  3055  |                         j = j + 1;  |         |  539  |     98  |  5  |  34  |  [89,71,48,17,8,98,57]  |
  3056  |              resetPlaceHolder_2();  |         |  539  |     98  |  5  |  34  |  [89,71,48,17,8,98,57]  |
  3062  |                         R = R + 2;  |      2  |  541  |     98  |  5  |  34  |  [89,71,48,17,8,98,57]  |
  3066  |                         j = j + 1;  |         |  541  |     98  |  5  |  35  |  [89,71,48,17,8,98,57]  |
  3067  |              resetPlaceHolder_2();  |         |  541  |     98  |  5  |  35  |  [89,71,48,17,8,98,57]  |
  3073  |                         R = R + 2;  |      2  |  543  |     98  |  5  |  35  |  [89,71,48,17,8,98,57]  |
  3077  |                         j = j + 1;  |         |  543  |     98  |  5  |  36  |  [89,71,48,17,8,98,57]  |
  3078  |              resetPlaceHolder_2();  |         |  543  |     98  |  5  |  36  |  [89,71,48,17,8,98,57]  |
  3084  |                         R = R + 2;  |      2  |  545  |     98  |  5  |  36  |  [89,71,48,17,8,98,57]  |
  3088  |                         j = j + 1;  |         |  545  |     98  |  5  |  37  |  [89,71,48,17,8,98,57]  |
  3089  |              resetPlaceHolder_2();  |         |  545  |     98  |  5  |  37  |  [89,71,48,17,8,98,57]  |
  3095  |                         R = R + 2;  |      2  |  547  |     98  |  5  |  37  |  [89,71,48,17,8,98,57]  |
  3099  |                         j = j + 1;  |         |  547  |     98  |  5  |  38  |  [89,71,48,17,8,98,57]  |
  3100  |              resetPlaceHolder_2();  |         |  547  |     98  |  5  |  38  |  [89,71,48,17,8,98,57]  |
  3106  |                         R = R + 2;  |      2  |  549  |     98  |  5  |  38  |  [89,71,48,17,8,98,57]  |
  3110  |                         j = j + 1;  |         |  549  |     98  |  5  |  39  |  [89,71,48,17,8,98,57]  |
  3111  |              resetPlaceHolder_2();  |         |  549  |     98  |  5  |  39  |  [89,71,48,17,8,98,57]  |
  3117  |                         R = R + 2;  |      2  |  551  |     98  |  5  |  39  |  [89,71,48,17,8,98,57]  |
  3121  |                         j = j + 1;  |         |  551  |     98  |  5  |  40  |  [89,71,48,17,8,98,57]  |
  3122  |              resetPlaceHolder_2();  |         |  551  |     98  |  5  |  40  |  [89,71,48,17,8,98,57]  |
  3128  |                         R = R + 2;  |      2  |  553  |     98  |  5  |  40  |  [89,71,48,17,8,98,57]  |
  3132  |                         j = j + 1;  |         |  553  |     98  |  5  |  41  |  [89,71,48,17,8,98,57]  |
  3133  |              resetPlaceHolder_2();  |         |  553  |     98  |  5  |  41  |  [89,71,48,17,8,98,57]  |
  3139  |                         R = R + 2;  |      2  |  555  |     98  |  5  |  41  |  [89,71,48,17,8,98,57]  |
  3143  |                         j = j + 1;  |         |  555  |     98  |  5  |  42  |  [89,71,48,17,8,98,57]  |
  3144  |              resetPlaceHolder_2();  |         |  555  |     98  |  5  |  42  |  [89,71,48,17,8,98,57]  |
  3150  |                         R = R + 2;  |      2  |  557  |     98  |  5  |  42  |  [89,71,48,17,8,98,57]  |
  3154  |                         j = j + 1;  |         |  557  |     98  |  5  |  43  |  [89,71,48,17,8,98,57]  |
  3155  |              resetPlaceHolder_2();  |         |  557  |     98  |  5  |  43  |  [89,71,48,17,8,98,57]  |
  3161  |                         R = R + 2;  |      2  |  559  |     98  |  5  |  43  |  [89,71,48,17,8,98,57]  |
  3165  |                         j = j + 1;  |         |  559  |     98  |  5  |  44  |  [89,71,48,17,8,98,57]  |
  3166  |              resetPlaceHolder_2();  |         |  559  |     98  |  5  |  44  |  [89,71,48,17,8,98,57]  |
  3172  |                         R = R + 2;  |      2  |  561  |     98  |  5  |  44  |  [89,71,48,17,8,98,57]  |
  3176  |                         j = j + 1;  |         |  561  |     98  |  5  |  45  |  [89,71,48,17,8,98,57]  |
  3177  |              resetPlaceHolder_2();  |         |  561  |     98  |  5  |  45  |  [89,71,48,17,8,98,57]  |
  3183  |                         R = R + 2;  |      2  |  563  |     98  |  5  |  45  |  [89,71,48,17,8,98,57]  |
  3187  |                         j = j + 1;  |         |  563  |     98  |  5  |  46  |  [89,71,48,17,8,98,57]  |
  3188  |              resetPlaceHolder_2();  |         |  563  |     98  |  5  |  46  |  [89,71,48,17,8,98,57]  |
  3194  |                         R = R + 2;  |      2  |  565  |     98  |  5  |  46  |  [89,71,48,17,8,98,57]  |
  3198  |                         j = j + 1;  |         |  565  |     98  |  5  |  47  |  [89,71,48,17,8,98,57]  |
  3199  |              resetPlaceHolder_2();  |         |  565  |     98  |  5  |  47  |  [89,71,48,17,8,98,57]  |
  3205  |                         R = R + 2;  |      2  |  567  |     98  |  5  |  47  |  [89,71,48,17,8,98,57]  |
  3209  |                         j = j + 1;  |         |  567  |     98  |  5  |  48  |  [89,71,48,17,8,98,57]  |
  3210  |              resetPlaceHolder_2();  |         |  567  |     98  |  5  |  48  |  [89,71,48,17,8,98,57]  |
  3216  |                         R = R + 2;  |      2  |  569  |     98  |  5  |  48  |  [89,71,48,17,8,98,57]  |
  3220  |                         j = j + 1;  |         |  569  |     98  |  5  |  49  |  [89,71,48,17,8,98,57]  |
  3221  |              resetPlaceHolder_2();  |         |  569  |     98  |  5  |  49  |  [89,71,48,17,8,98,57]  |
  3227  |                         R = R + 2;  |      2  |  571  |     98  |  5  |  49  |  [89,71,48,17,8,98,57]  |
  3231  |                         j = j + 1;  |         |  571  |     98  |  5  |  50  |  [89,71,48,17,8,98,57]  |
  3232  |              resetPlaceHolder_2();  |         |  571  |     98  |  5  |  50  |  [89,71,48,17,8,98,57]  |
  3238  |                         R = R + 2;  |      2  |  573  |     98  |  5  |  50  |  [89,71,48,17,8,98,57]  |
  3242  |                         j = j + 1;  |         |  573  |     98  |  5  |  51  |  [89,71,48,17,8,98,57]  |
  3243  |              resetPlaceHolder_2();  |         |  573  |     98  |  5  |  51  |  [89,71,48,17,8,98,57]  |
  3249  |                         R = R + 2;  |      2  |  575  |     98  |  5  |  51  |  [89,71,48,17,8,98,57]  |
  3253  |                         j = j + 1;  |         |  575  |     98  |  5  |  52  |  [89,71,48,17,8,98,57]  |
  3254  |              resetPlaceHolder_2();  |         |  575  |     98  |  5  |  52  |  [89,71,48,17,8,98,57]  |
  3260  |                         R = R + 2;  |      2  |  577  |     98  |  5  |  52  |  [89,71,48,17,8,98,57]  |
  3264  |                         j = j + 1;  |         |  577  |     98  |  5  |  53  |  [89,71,48,17,8,98,57]  |
  3265  |              resetPlaceHolder_2();  |         |  577  |     98  |  5  |  53  |  [89,71,48,17,8,98,57]  |
  3271  |                         R = R + 2;  |      2  |  579  |     98  |  5  |  53  |  [89,71,48,17,8,98,57]  |
  3275  |                         j = j + 1;  |         |  579  |     98  |  5  |  54  |  [89,71,48,17,8,98,57]  |
  3276  |              resetPlaceHolder_2();  |         |  579  |     98  |  5  |  54  |  [89,71,48,17,8,98,57]  |
  3282  |                         R = R + 2;  |      2  |  581  |     98  |  5  |  54  |  [89,71,48,17,8,98,57]  |
  3286  |                         j = j + 1;  |         |  581  |     98  |  5  |  55  |  [89,71,48,17,8,98,57]  |
  3287  |              resetPlaceHolder_2();  |         |  581  |     98  |  5  |  55  |  [89,71,48,17,8,98,57]  |
  3293  |                         R = R + 2;  |      2  |  583  |     98  |  5  |  55  |  [89,71,48,17,8,98,57]  |
  3297  |                         j = j + 1;  |         |  583  |     98  |  5  |  56  |  [89,71,48,17,8,98,57]  |
  3298  |              resetPlaceHolder_2();  |         |  583  |     98  |  5  |  56  |  [89,71,48,17,8,98,57]  |
  3304  |                         R = R + 2;  |      2  |  585  |     98  |  5  |  56  |  [89,71,48,17,8,98,57]  |
  3308  |                         j = j + 1;  |         |  585  |     98  |  5  |  57  |  [89,71,48,17,8,98,57]  |
  3309  |              resetPlaceHolder_2();  |         |  585  |     98  |  5  |  57  |  [89,71,48,17,8,98,57]  |
  3315  |                         R = R + 2;  |      2  |  587  |     98  |  5  |  57  |  [89,71,48,17,8,98,57]  |
  3319  |                         j = j + 1;  |         |  587  |     98  |  5  |  58  |  [89,71,48,17,8,98,57]  |
  3320  |              resetPlaceHolder_2();  |         |  587  |     98  |  5  |  58  |  [89,71,48,17,8,98,57]  |
  3326  |                         R = R + 2;  |      2  |  589  |     98  |  5  |  58  |  [89,71,48,17,8,98,57]  |
  3330  |                         j = j + 1;  |         |  589  |     98  |  5  |  59  |  [89,71,48,17,8,98,57]  |
  3331  |              resetPlaceHolder_2();  |         |  589  |     98  |  5  |  59  |  [89,71,48,17,8,98,57]  |
  3337  |                         R = R + 2;  |      2  |  591  |     98  |  5  |  59  |  [89,71,48,17,8,98,57]  |
  3341  |                         j = j + 1;  |         |  591  |     98  |  5  |  60  |  [89,71,48,17,8,98,57]  |
  3342  |              resetPlaceHolder_2();  |         |  591  |     98  |  5  |  60  |  [89,71,48,17,8,98,57]  |
  3348  |                         R = R + 2;  |      2  |  593  |     98  |  5  |  60  |  [89,71,48,17,8,98,57]  |
  3352  |                         j = j + 1;  |         |  593  |     98  |  5  |  61  |  [89,71,48,17,8,98,57]  |
  3353  |              resetPlaceHolder_2();  |         |  593  |     98  |  5  |  61  |  [89,71,48,17,8,98,57]  |
  3359  |                         R = R + 2;  |      2  |  595  |     98  |  5  |  61  |  [89,71,48,17,8,98,57]  |
  3363  |                         j = j + 1;  |         |  595  |     98  |  5  |  62  |  [89,71,48,17,8,98,57]  |
  3364  |              resetPlaceHolder_2();  |         |  595  |     98  |  5  |  62  |  [89,71,48,17,8,98,57]  |
  3370  |                         R = R + 2;  |      2  |  597  |     98  |  5  |  62  |  [89,71,48,17,8,98,57]  |
  3374  |                         j = j + 1;  |         |  597  |     98  |  5  |  63  |  [89,71,48,17,8,98,57]  |
  3375  |              resetPlaceHolder_2();  |         |  597  |     98  |  5  |  63  |  [89,71,48,17,8,98,57]  |
  3381  |                         R = R + 2;  |      2  |  599  |     98  |  5  |  63  |  [89,71,48,17,8,98,57]  |
  3385  |                         j = j + 1;  |         |  599  |     98  |  5  |  64  |  [89,71,48,17,8,98,57]  |
  3386  |              resetPlaceHolder_2();  |         |  599  |     98  |  5  |  64  |  [89,71,48,17,8,98,57]  |
  3392  |                         R = R + 2;  |      2  |  601  |     98  |  5  |  64  |  [89,71,48,17,8,98,57]  |
  3396  |                         j = j + 1;  |         |  601  |     98  |  5  |  65  |  [89,71,48,17,8,98,57]  |
  3397  |              resetPlaceHolder_2();  |         |  601  |     98  |  5  |  65  |  [89,71,48,17,8,98,57]  |
  3403  |                         R = R + 2;  |      2  |  603  |     98  |  5  |  65  |  [89,71,48,17,8,98,57]  |
  3407  |                         j = j + 1;  |         |  603  |     98  |  5  |  66  |  [89,71,48,17,8,98,57]  |
  3408  |              resetPlaceHolder_2();  |         |  603  |     98  |  5  |  66  |  [89,71,48,17,8,98,57]  |
  3414  |                         R = R + 2;  |      2  |  605  |     98  |  5  |  66  |  [89,71,48,17,8,98,57]  |
  3418  |                         j = j + 1;  |         |  605  |     98  |  5  |  67  |  [89,71,48,17,8,98,57]  |
  3419  |              resetPlaceHolder_2();  |         |  605  |     98  |  5  |  67  |  [89,71,48,17,8,98,57]  |
  3425  |                         R = R + 2;  |      2  |  607  |     98  |  5  |  67  |  [89,71,48,17,8,98,57]  |
  3429  |                         j = j + 1;  |         |  607  |     98  |  5  |  68  |  [89,71,48,17,8,98,57]  |
  3430  |              resetPlaceHolder_2();  |         |  607  |     98  |  5  |  68  |  [89,71,48,17,8,98,57]  |
  3436  |                         R = R + 2;  |      2  |  609  |     98  |  5  |  68  |  [89,71,48,17,8,98,57]  |
  3440  |                         j = j + 1;  |         |  609  |     98  |  5  |  69  |  [89,71,48,17,8,98,57]  |
  3441  |              resetPlaceHolder_2();  |         |  609  |     98  |  5  |  69  |  [89,71,48,17,8,98,57]  |
  3447  |                         R = R + 2;  |      2  |  611  |     98  |  5  |  69  |  [89,71,48,17,8,98,57]  |
  3451  |                         j = j + 1;  |         |  611  |     98  |  5  |  70  |  [89,71,48,17,8,98,57]  |
  3452  |              resetPlaceHolder_2();  |         |  611  |     98  |  5  |  70  |  [89,71,48,17,8,98,57]  |
  3458  |                         R = R + 2;  |      2  |  613  |     98  |  5  |  70  |  [89,71,48,17,8,98,57]  |
  3462  |                         j = j + 1;  |         |  613  |     98  |  5  |  71  |  [89,71,48,17,8,98,57]  |
  3463  |              resetPlaceHolder_2();  |         |  613  |     98  |  5  |  71  |  [89,71,48,17,8,98,57]  |
  3469  |                         R = R + 2;  |      2  |  615  |     98  |  5  |  71  |  [89,71,48,17,8,98,57]  |
  3473  |                         j = j + 1;  |         |  615  |     98  |  5  |  72  |  [89,71,48,17,8,98,57]  |
  3474  |              resetPlaceHolder_2();  |         |  615  |     98  |  5  |  72  |  [89,71,48,17,8,98,57]  |
  3480  |                         R = R + 2;  |      2  |  617  |     98  |  5  |  72  |  [89,71,48,17,8,98,57]  |
  3484  |                         j = j + 1;  |         |  617  |     98  |  5  |  73  |  [89,71,48,17,8,98,57]  |
  3485  |              resetPlaceHolder_2();  |         |  617  |     98  |  5  |  73  |  [89,71,48,17,8,98,57]  |
  3491  |                         R = R + 2;  |      2  |  619  |     98  |  5  |  73  |  [89,71,48,17,8,98,57]  |
  3495  |                         j = j + 1;  |         |  619  |     98  |  5  |  74  |  [89,71,48,17,8,98,57]  |
  3496  |              resetPlaceHolder_2();  |         |  619  |     98  |  5  |  74  |  [89,71,48,17,8,98,57]  |
  3502  |                         R = R + 2;  |      2  |  621  |     98  |  5  |  74  |  [89,71,48,17,8,98,57]  |
  3506  |                         j = j + 1;  |         |  621  |     98  |  5  |  75  |  [89,71,48,17,8,98,57]  |
  3507  |              resetPlaceHolder_2();  |         |  621  |     98  |  5  |  75  |  [89,71,48,17,8,98,57]  |
  3513  |                         R = R + 2;  |      2  |  623  |     98  |  5  |  75  |  [89,71,48,17,8,98,57]  |
  3517  |                         j = j + 1;  |         |  623  |     98  |  5  |  76  |  [89,71,48,17,8,98,57]  |
  3518  |              resetPlaceHolder_2();  |         |  623  |     98  |  5  |  76  |  [89,71,48,17,8,98,57]  |
  3524  |                         R = R + 2;  |      2  |  625  |     98  |  5  |  76  |  [89,71,48,17,8,98,57]  |
  3528  |                         j = j + 1;  |         |  625  |     98  |  5  |  77  |  [89,71,48,17,8,98,57]  |
  3529  |              resetPlaceHolder_2();  |         |  625  |     98  |  5  |  77  |  [89,71,48,17,8,98,57]  |
  3535  |                         R = R + 2;  |      2  |  627  |     98  |  5  |  77  |  [89,71,48,17,8,98,57]  |
  3539  |                         j = j + 1;  |         |  627  |     98  |  5  |  78  |  [89,71,48,17,8,98,57]  |
  3540  |              resetPlaceHolder_2();  |         |  627  |     98  |  5  |  78  |  [89,71,48,17,8,98,57]  |
  3546  |                         R = R + 2;  |      2  |  629  |     98  |  5  |  78  |  [89,71,48,17,8,98,57]  |
  3550  |                         j = j + 1;  |         |  629  |     98  |  5  |  79  |  [89,71,48,17,8,98,57]  |
  3551  |              resetPlaceHolder_2();  |         |  629  |     98  |  5  |  79  |  [89,71,48,17,8,98,57]  |
  3557  |                         R = R + 2;  |      2  |  631  |     98  |  5  |  79  |  [89,71,48,17,8,98,57]  |
  3561  |                         j = j + 1;  |         |  631  |     98  |  5  |  80  |  [89,71,48,17,8,98,57]  |
  3562  |              resetPlaceHolder_2();  |         |  631  |     98  |  5  |  80  |  [89,71,48,17,8,98,57]  |
  3568  |                         R = R + 2;  |      2  |  633  |     98  |  5  |  80  |  [89,71,48,17,8,98,57]  |
  3572  |                         j = j + 1;  |         |  633  |     98  |  5  |  81  |  [89,71,48,17,8,98,57]  |
  3573  |              resetPlaceHolder_2();  |         |  633  |     98  |  5  |  81  |  [89,71,48,17,8,98,57]  |
  3579  |                         R = R + 2;  |      2  |  635  |     98  |  5  |  81  |  [89,71,48,17,8,98,57]  |
  3583  |                         j = j + 1;  |         |  635  |     98  |  5  |  82  |  [89,71,48,17,8,98,57]  |
  3584  |              resetPlaceHolder_2();  |         |  635  |     98  |  5  |  82  |  [89,71,48,17,8,98,57]  |
  3590  |                         R = R + 2;  |      2  |  637  |     98  |  5  |  82  |  [89,71,48,17,8,98,57]  |
  3594  |                         j = j + 1;  |         |  637  |     98  |  5  |  83  |  [89,71,48,17,8,98,57]  |
  3595  |              resetPlaceHolder_2();  |         |  637  |     98  |  5  |  83  |  [89,71,48,17,8,98,57]  |
  3601  |                         R = R + 2;  |      2  |  639  |     98  |  5  |  83  |  [89,71,48,17,8,98,57]  |
  3605  |                         j = j + 1;  |         |  639  |     98  |  5  |  84  |  [89,71,48,17,8,98,57]  |
  3606  |              resetPlaceHolder_2();  |         |  639  |     98  |  5  |  84  |  [89,71,48,17,8,98,57]  |
  3612  |                         R = R + 2;  |      2  |  641  |     98  |  5  |  84  |  [89,71,48,17,8,98,57]  |
  3616  |                         j = j + 1;  |         |  641  |     98  |  5  |  85  |  [89,71,48,17,8,98,57]  |
  3617  |              resetPlaceHolder_2();  |         |  641  |     98  |  5  |  85  |  [89,71,48,17,8,98,57]  |
  3623  |                         R = R + 2;  |      2  |  643  |     98  |  5  |  85  |  [89,71,48,17,8,98,57]  |
  3627  |                         j = j + 1;  |         |  643  |     98  |  5  |  86  |  [89,71,48,17,8,98,57]  |
  3628  |              resetPlaceHolder_2();  |         |  643  |     98  |  5  |  86  |  [89,71,48,17,8,98,57]  |
  3634  |                         R = R + 2;  |      2  |  645  |     98  |  5  |  86  |  [89,71,48,17,8,98,57]  |
  3638  |                         j = j + 1;  |         |  645  |     98  |  5  |  87  |  [89,71,48,17,8,98,57]  |
  3639  |              resetPlaceHolder_2();  |         |  645  |     98  |  5  |  87  |  [89,71,48,17,8,98,57]  |
  3645  |                         R = R + 2;  |      2  |  647  |     98  |  5  |  87  |  [89,71,48,17,8,98,57]  |
  3649  |                         j = j + 1;  |         |  647  |     98  |  5  |  88  |  [89,71,48,17,8,98,57]  |
  3650  |              resetPlaceHolder_2();  |         |  647  |     98  |  5  |  88  |  [89,71,48,17,8,98,57]  |
  3656  |                         R = R + 2;  |      2  |  649  |     98  |  5  |  88  |  [89,71,48,17,8,98,57]  |
  3660  |                         j = j + 1;  |         |  649  |     98  |  5  |  89  |  [89,71,48,17,8,98,57]  |
  3661  |              resetPlaceHolder_2();  |         |  649  |     98  |  5  |  89  |  [89,71,48,17,8,98,57]  |
  3667  |                         R = R + 2;  |      2  |  651  |     98  |  5  |  89  |  [89,71,48,17,8,98,57]  |
  3671  |                         j = j + 1;  |         |  651  |     98  |  5  |  90  |  [89,71,48,17,8,98,57]  |
  3672  |              resetPlaceHolder_2();  |         |  651  |     98  |  5  |  90  |  [89,71,48,17,8,98,57]  |
  3678  |                         R = R + 2;  |      2  |  653  |     98  |  5  |  90  |  [89,71,48,17,8,98,57]  |
  3682  |                         j = j + 1;  |         |  653  |     98  |  5  |  91  |  [89,71,48,17,8,98,57]  |
  3683  |              resetPlaceHolder_2();  |         |  653  |     98  |  5  |  91  |  [89,71,48,17,8,98,57]  |
  3689  |                         R = R + 2;  |      2  |  655  |     98  |  5  |  91  |  [89,71,48,17,8,98,57]  |
  3693  |                         j = j + 1;  |         |  655  |     98  |  5  |  92  |  [89,71,48,17,8,98,57]  |
  3694  |              resetPlaceHolder_2();  |         |  655  |     98  |  5  |  92  |  [89,71,48,17,8,98,57]  |
  3700  |                         R = R + 2;  |      2  |  657  |     98  |  5  |  92  |  [89,71,48,17,8,98,57]  |
  3704  |                         j = j + 1;  |         |  657  |     98  |  5  |  93  |  [89,71,48,17,8,98,57]  |
  3705  |              resetPlaceHolder_2();  |         |  657  |     98  |  5  |  93  |  [89,71,48,17,8,98,57]  |
  3711  |                         R = R + 2;  |      2  |  659  |     98  |  5  |  93  |  [89,71,48,17,8,98,57]  |
  3715  |                         j = j + 1;  |         |  659  |     98  |  5  |  94  |  [89,71,48,17,8,98,57]  |
  3716  |              resetPlaceHolder_2();  |         |  659  |     98  |  5  |  94  |  [89,71,48,17,8,98,57]  |
  3722  |                         R = R + 2;  |      2  |  661  |     98  |  5  |  94  |  [89,71,48,17,8,98,57]  |
  3726  |                         j = j + 1;  |         |  661  |     98  |  5  |  95  |  [89,71,48,17,8,98,57]  |
  3727  |              resetPlaceHolder_2();  |         |  661  |     98  |  5  |  95  |  [89,71,48,17,8,98,57]  |
  3733  |                         R = R + 2;  |      2  |  663  |     98  |  5  |  95  |  [89,71,48,17,8,98,57]  |
  3737  |                         j = j + 1;  |         |  663  |     98  |  5  |  96  |  [89,71,48,17,8,98,57]  |
  3738  |              resetPlaceHolder_2();  |         |  663  |     98  |  5  |  96  |  [89,71,48,17,8,98,57]  |
  3744  |                         R = R + 2;  |      2  |  665  |     98  |  5  |  96  |  [89,71,48,17,8,98,57]  |
  3748  |                         j = j + 1;  |         |  665  |     98  |  5  |  97  |  [89,71,48,17,8,98,57]  |
  3749  |              resetPlaceHolder_2();  |         |  665  |     98  |  5  |  97  |  [89,71,48,17,8,98,57]  |
  3755  |                         R = R + 2;  |      2  |  667  |     98  |  5  |  97  |  [89,71,48,17,8,98,57]  |
  3759  |                         j = j + 1;  |         |  667  |     98  |  5  |  98  |  [89,71,48,17,8,98,57]  |
  3760  |              resetPlaceHolder_2();  |         |  667  |     98  |  5  |  98  |  [89,71,48,17,8,98,57]  |
  3766  |                         R = R + 1;  |      1  |  668  |     98  |  5  |  98  |  [89,71,48,17,8,98,57]  |
  3770  |                         i = i + 1;  |         |  668  |     98  |  6  |  98  |  [89,71,48,17,8,98,57]  |
  3771  |              resetPlaceHolder_1();  |         |  668  |     98  |  6  |  98  |  [89,71,48,17,8,98,57]  |
  3777  |      entry = arrayRead(sorted, i);  |         |  668  |     57  |  6  |  98  |  [89,71,48,17,8,98,57]  |
  3779  |                         int j = 0;  |         |  668  |     57  |  6  |   0  |  [89,71,48,17,8,98,57]  |
  3785  |                         R = R + 2;  |      2  |  670  |     57  |  6  |   0  |  [89,71,48,17,8,98,57]  |
  3789  |                         j = j + 1;  |         |  670  |     57  |  6  |   1  |  [89,71,48,17,8,98,57]  |
  3790  |              resetPlaceHolder_2();  |         |  670  |     57  |  6  |   1  |  [89,71,48,17,8,98,57]  |
  3796  |                         R = R + 2;  |      2  |  672  |     57  |  6  |   1  |  [89,71,48,17,8,98,57]  |
  3800  |                         j = j + 1;  |         |  672  |     57  |  6  |   2  |  [89,71,48,17,8,98,57]  |
  3801  |              resetPlaceHolder_2();  |         |  672  |     57  |  6  |   2  |  [89,71,48,17,8,98,57]  |
  3807  |                         R = R + 2;  |      2  |  674  |     57  |  6  |   2  |  [89,71,48,17,8,98,57]  |
  3811  |                         j = j + 1;  |         |  674  |     57  |  6  |   3  |  [89,71,48,17,8,98,57]  |
  3812  |              resetPlaceHolder_2();  |         |  674  |     57  |  6  |   3  |  [89,71,48,17,8,98,57]  |
  3818  |                         R = R + 2;  |      2  |  676  |     57  |  6  |   3  |  [89,71,48,17,8,98,57]  |
  3822  |                         j = j + 1;  |         |  676  |     57  |  6  |   4  |  [89,71,48,17,8,98,57]  |
  3823  |              resetPlaceHolder_2();  |         |  676  |     57  |  6  |   4  |  [89,71,48,17,8,98,57]  |
  3829  |                         R = R + 2;  |      2  |  678  |     57  |  6  |   4  |  [89,71,48,17,8,98,57]  |
  3833  |                         j = j + 1;  |         |  678  |     57  |  6  |   5  |  [89,71,48,17,8,98,57]  |
  3834  |              resetPlaceHolder_2();  |         |  678  |     57  |  6  |   5  |  [89,71,48,17,8,98,57]  |
  3840  |                         R = R + 2;  |      2  |  680  |     57  |  6  |   5  |  [89,71,48,17,8,98,57]  |
  3844  |                         j = j + 1;  |         |  680  |     57  |  6  |   6  |  [89,71,48,17,8,98,57]  |
  3845  |              resetPlaceHolder_2();  |         |  680  |     57  |  6  |   6  |  [89,71,48,17,8,98,57]  |
  3851  |                         R = R + 2;  |      2  |  682  |     57  |  6  |   6  |  [89,71,48,17,8,98,57]  |
  3855  |                         j = j + 1;  |         |  682  |     57  |  6  |   7  |  [89,71,48,17,8,98,57]  |
  3856  |              resetPlaceHolder_2();  |         |  682  |     57  |  6  |   7  |  [89,71,48,17,8,98,57]  |
  3862  |                         R = R + 2;  |      2  |  684  |     57  |  6  |   7  |  [89,71,48,17,8,98,57]  |
  3866  |                         j = j + 1;  |         |  684  |     57  |  6  |   8  |  [89,71,48,17,8,98,57]  |
  3867  |              resetPlaceHolder_2();  |         |  684  |     57  |  6  |   8  |  [89,71,48,17,8,98,57]  |
  3873  |                         R = R + 2;  |      2  |  686  |     57  |  6  |   8  |  [89,71,48,17,8,98,57]  |
  3877  |                         j = j + 1;  |         |  686  |     57  |  6  |   9  |  [89,71,48,17,8,98,57]  |
  3878  |              resetPlaceHolder_2();  |         |  686  |     57  |  6  |   9  |  [89,71,48,17,8,98,57]  |
  3884  |                         R = R + 2;  |      2  |  688  |     57  |  6  |   9  |  [89,71,48,17,8,98,57]  |
  3888  |                         j = j + 1;  |         |  688  |     57  |  6  |  10  |  [89,71,48,17,8,98,57]  |
  3889  |              resetPlaceHolder_2();  |         |  688  |     57  |  6  |  10  |  [89,71,48,17,8,98,57]  |
  3895  |                         R = R + 2;  |      2  |  690  |     57  |  6  |  10  |  [89,71,48,17,8,98,57]  |
  3899  |                         j = j + 1;  |         |  690  |     57  |  6  |  11  |  [89,71,48,17,8,98,57]  |
  3900  |              resetPlaceHolder_2();  |         |  690  |     57  |  6  |  11  |  [89,71,48,17,8,98,57]  |
  3906  |                         R = R + 2;  |      2  |  692  |     57  |  6  |  11  |  [89,71,48,17,8,98,57]  |
  3910  |                         j = j + 1;  |         |  692  |     57  |  6  |  12  |  [89,71,48,17,8,98,57]  |
  3911  |              resetPlaceHolder_2();  |         |  692  |     57  |  6  |  12  |  [89,71,48,17,8,98,57]  |
  3917  |                         R = R + 2;  |      2  |  694  |     57  |  6  |  12  |  [89,71,48,17,8,98,57]  |
  3921  |                         j = j + 1;  |         |  694  |     57  |  6  |  13  |  [89,71,48,17,8,98,57]  |
  3922  |              resetPlaceHolder_2();  |         |  694  |     57  |  6  |  13  |  [89,71,48,17,8,98,57]  |
  3928  |                         R = R + 2;  |      2  |  696  |     57  |  6  |  13  |  [89,71,48,17,8,98,57]  |
  3932  |                         j = j + 1;  |         |  696  |     57  |  6  |  14  |  [89,71,48,17,8,98,57]  |
  3933  |              resetPlaceHolder_2();  |         |  696  |     57  |  6  |  14  |  [89,71,48,17,8,98,57]  |
  3939  |                         R = R + 2;  |      2  |  698  |     57  |  6  |  14  |  [89,71,48,17,8,98,57]  |
  3943  |                         j = j + 1;  |         |  698  |     57  |  6  |  15  |  [89,71,48,17,8,98,57]  |
  3944  |              resetPlaceHolder_2();  |         |  698  |     57  |  6  |  15  |  [89,71,48,17,8,98,57]  |
  3950  |                         R = R + 2;  |      2  |  700  |     57  |  6  |  15  |  [89,71,48,17,8,98,57]  |
  3954  |                         j = j + 1;  |         |  700  |     57  |  6  |  16  |  [89,71,48,17,8,98,57]  |
  3955  |              resetPlaceHolder_2();  |         |  700  |     57  |  6  |  16  |  [89,71,48,17,8,98,57]  |
  3961  |                         R = R + 2;  |      2  |  702  |     57  |  6  |  16  |  [89,71,48,17,8,98,57]  |
  3965  |                         j = j + 1;  |         |  702  |     57  |  6  |  17  |  [89,71,48,17,8,98,57]  |
  3966  |              resetPlaceHolder_2();  |         |  702  |     57  |  6  |  17  |  [89,71,48,17,8,98,57]  |
  3972  |                         R = R + 2;  |      2  |  704  |     57  |  6  |  17  |  [89,71,48,17,8,98,57]  |
  3976  |                         j = j + 1;  |         |  704  |     57  |  6  |  18  |  [89,71,48,17,8,98,57]  |
  3977  |              resetPlaceHolder_2();  |         |  704  |     57  |  6  |  18  |  [89,71,48,17,8,98,57]  |
  3983  |                         R = R + 2;  |      2  |  706  |     57  |  6  |  18  |  [89,71,48,17,8,98,57]  |
  3987  |                         j = j + 1;  |         |  706  |     57  |  6  |  19  |  [89,71,48,17,8,98,57]  |
  3988  |              resetPlaceHolder_2();  |         |  706  |     57  |  6  |  19  |  [89,71,48,17,8,98,57]  |
  3994  |                         R = R + 2;  |      2  |  708  |     57  |  6  |  19  |  [89,71,48,17,8,98,57]  |
  3998  |                         j = j + 1;  |         |  708  |     57  |  6  |  20  |  [89,71,48,17,8,98,57]  |
  3999  |              resetPlaceHolder_2();  |         |  708  |     57  |  6  |  20  |  [89,71,48,17,8,98,57]  |
  4005  |                         R = R + 2;  |      2  |  710  |     57  |  6  |  20  |  [89,71,48,17,8,98,57]  |
  4009  |                         j = j + 1;  |         |  710  |     57  |  6  |  21  |  [89,71,48,17,8,98,57]  |
  4010  |              resetPlaceHolder_2();  |         |  710  |     57  |  6  |  21  |  [89,71,48,17,8,98,57]  |
  4016  |                         R = R + 2;  |      2  |  712  |     57  |  6  |  21  |  [89,71,48,17,8,98,57]  |
  4020  |                         j = j + 1;  |         |  712  |     57  |  6  |  22  |  [89,71,48,17,8,98,57]  |
  4021  |              resetPlaceHolder_2();  |         |  712  |     57  |  6  |  22  |  [89,71,48,17,8,98,57]  |
  4027  |                         R = R + 2;  |      2  |  714  |     57  |  6  |  22  |  [89,71,48,17,8,98,57]  |
  4031  |                         j = j + 1;  |         |  714  |     57  |  6  |  23  |  [89,71,48,17,8,98,57]  |
  4032  |              resetPlaceHolder_2();  |         |  714  |     57  |  6  |  23  |  [89,71,48,17,8,98,57]  |
  4038  |                         R = R + 2;  |      2  |  716  |     57  |  6  |  23  |  [89,71,48,17,8,98,57]  |
  4042  |                         j = j + 1;  |         |  716  |     57  |  6  |  24  |  [89,71,48,17,8,98,57]  |
  4043  |              resetPlaceHolder_2();  |         |  716  |     57  |  6  |  24  |  [89,71,48,17,8,98,57]  |
  4049  |                         R = R + 2;  |      2  |  718  |     57  |  6  |  24  |  [89,71,48,17,8,98,57]  |
  4053  |                         j = j + 1;  |         |  718  |     57  |  6  |  25  |  [89,71,48,17,8,98,57]  |
  4054  |              resetPlaceHolder_2();  |         |  718  |     57  |  6  |  25  |  [89,71,48,17,8,98,57]  |
  4060  |                         R = R + 2;  |      2  |  720  |     57  |  6  |  25  |  [89,71,48,17,8,98,57]  |
  4064  |                         j = j + 1;  |         |  720  |     57  |  6  |  26  |  [89,71,48,17,8,98,57]  |
  4065  |              resetPlaceHolder_2();  |         |  720  |     57  |  6  |  26  |  [89,71,48,17,8,98,57]  |
  4071  |                         R = R + 2;  |      2  |  722  |     57  |  6  |  26  |  [89,71,48,17,8,98,57]  |
  4075  |                         j = j + 1;  |         |  722  |     57  |  6  |  27  |  [89,71,48,17,8,98,57]  |
  4076  |              resetPlaceHolder_2();  |         |  722  |     57  |  6  |  27  |  [89,71,48,17,8,98,57]  |
  4082  |                         R = R + 2;  |      2  |  724  |     57  |  6  |  27  |  [89,71,48,17,8,98,57]  |
  4086  |                         j = j + 1;  |         |  724  |     57  |  6  |  28  |  [89,71,48,17,8,98,57]  |
  4087  |              resetPlaceHolder_2();  |         |  724  |     57  |  6  |  28  |  [89,71,48,17,8,98,57]  |
  4093  |                         R = R + 2;  |      2  |  726  |     57  |  6  |  28  |  [89,71,48,17,8,98,57]  |
  4097  |                         j = j + 1;  |         |  726  |     57  |  6  |  29  |  [89,71,48,17,8,98,57]  |
  4098  |              resetPlaceHolder_2();  |         |  726  |     57  |  6  |  29  |  [89,71,48,17,8,98,57]  |
  4104  |                         R = R + 2;  |      2  |  728  |     57  |  6  |  29  |  [89,71,48,17,8,98,57]  |
  4108  |                         j = j + 1;  |         |  728  |     57  |  6  |  30  |  [89,71,48,17,8,98,57]  |
  4109  |              resetPlaceHolder_2();  |         |  728  |     57  |  6  |  30  |  [89,71,48,17,8,98,57]  |
  4115  |                         R = R + 2;  |      2  |  730  |     57  |  6  |  30  |  [89,71,48,17,8,98,57]  |
  4119  |                         j = j + 1;  |         |  730  |     57  |  6  |  31  |  [89,71,48,17,8,98,57]  |
  4120  |              resetPlaceHolder_2();  |         |  730  |     57  |  6  |  31  |  [89,71,48,17,8,98,57]  |
  4126  |                         R = R + 2;  |      2  |  732  |     57  |  6  |  31  |  [89,71,48,17,8,98,57]  |
  4130  |                         j = j + 1;  |         |  732  |     57  |  6  |  32  |  [89,71,48,17,8,98,57]  |
  4131  |              resetPlaceHolder_2();  |         |  732  |     57  |  6  |  32  |  [89,71,48,17,8,98,57]  |
  4137  |                         R = R + 2;  |      2  |  734  |     57  |  6  |  32  |  [89,71,48,17,8,98,57]  |
  4141  |                         j = j + 1;  |         |  734  |     57  |  6  |  33  |  [89,71,48,17,8,98,57]  |
  4142  |              resetPlaceHolder_2();  |         |  734  |     57  |  6  |  33  |  [89,71,48,17,8,98,57]  |
  4148  |                         R = R + 2;  |      2  |  736  |     57  |  6  |  33  |  [89,71,48,17,8,98,57]  |
  4152  |                         j = j + 1;  |         |  736  |     57  |  6  |  34  |  [89,71,48,17,8,98,57]  |
  4153  |              resetPlaceHolder_2();  |         |  736  |     57  |  6  |  34  |  [89,71,48,17,8,98,57]  |
  4159  |                         R = R + 2;  |      2  |  738  |     57  |  6  |  34  |  [89,71,48,17,8,98,57]  |
  4163  |                         j = j + 1;  |         |  738  |     57  |  6  |  35  |  [89,71,48,17,8,98,57]  |
  4164  |              resetPlaceHolder_2();  |         |  738  |     57  |  6  |  35  |  [89,71,48,17,8,98,57]  |
  4170  |                         R = R + 2;  |      2  |  740  |     57  |  6  |  35  |  [89,71,48,17,8,98,57]  |
  4174  |                         j = j + 1;  |         |  740  |     57  |  6  |  36  |  [89,71,48,17,8,98,57]  |
  4175  |              resetPlaceHolder_2();  |         |  740  |     57  |  6  |  36  |  [89,71,48,17,8,98,57]  |
  4181  |                         R = R + 2;  |      2  |  742  |     57  |  6  |  36  |  [89,71,48,17,8,98,57]  |
  4185  |                         j = j + 1;  |         |  742  |     57  |  6  |  37  |  [89,71,48,17,8,98,57]  |
  4186  |              resetPlaceHolder_2();  |         |  742  |     57  |  6  |  37  |  [89,71,48,17,8,98,57]  |
  4192  |                         R = R + 2;  |      2  |  744  |     57  |  6  |  37  |  [89,71,48,17,8,98,57]  |
  4196  |                         j = j + 1;  |         |  744  |     57  |  6  |  38  |  [89,71,48,17,8,98,57]  |
  4197  |              resetPlaceHolder_2();  |         |  744  |     57  |  6  |  38  |  [89,71,48,17,8,98,57]  |
  4203  |                         R = R + 2;  |      2  |  746  |     57  |  6  |  38  |  [89,71,48,17,8,98,57]  |
  4207  |                         j = j + 1;  |         |  746  |     57  |  6  |  39  |  [89,71,48,17,8,98,57]  |
  4208  |              resetPlaceHolder_2();  |         |  746  |     57  |  6  |  39  |  [89,71,48,17,8,98,57]  |
  4214  |                         R = R + 2;  |      2  |  748  |     57  |  6  |  39  |  [89,71,48,17,8,98,57]  |
  4218  |                         j = j + 1;  |         |  748  |     57  |  6  |  40  |  [89,71,48,17,8,98,57]  |
  4219  |              resetPlaceHolder_2();  |         |  748  |     57  |  6  |  40  |  [89,71,48,17,8,98,57]  |
  4225  |                         R = R + 2;  |      2  |  750  |     57  |  6  |  40  |  [89,71,48,17,8,98,57]  |
  4229  |                         j = j + 1;  |         |  750  |     57  |  6  |  41  |  [89,71,48,17,8,98,57]  |
  4230  |              resetPlaceHolder_2();  |         |  750  |     57  |  6  |  41  |  [89,71,48,17,8,98,57]  |
  4236  |                         R = R + 2;  |      2  |  752  |     57  |  6  |  41  |  [89,71,48,17,8,98,57]  |
  4240  |                         j = j + 1;  |         |  752  |     57  |  6  |  42  |  [89,71,48,17,8,98,57]  |
  4241  |              resetPlaceHolder_2();  |         |  752  |     57  |  6  |  42  |  [89,71,48,17,8,98,57]  |
  4247  |                         R = R + 2;  |      2  |  754  |     57  |  6  |  42  |  [89,71,48,17,8,98,57]  |
  4251  |                         j = j + 1;  |         |  754  |     57  |  6  |  43  |  [89,71,48,17,8,98,57]  |
  4252  |              resetPlaceHolder_2();  |         |  754  |     57  |  6  |  43  |  [89,71,48,17,8,98,57]  |
  4258  |                         R = R + 2;  |      2  |  756  |     57  |  6  |  43  |  [89,71,48,17,8,98,57]  |
  4262  |                         j = j + 1;  |         |  756  |     57  |  6  |  44  |  [89,71,48,17,8,98,57]  |
  4263  |              resetPlaceHolder_2();  |         |  756  |     57  |  6  |  44  |  [89,71,48,17,8,98,57]  |
  4269  |                         R = R + 2;  |      2  |  758  |     57  |  6  |  44  |  [89,71,48,17,8,98,57]  |
  4273  |                         j = j + 1;  |         |  758  |     57  |  6  |  45  |  [89,71,48,17,8,98,57]  |
  4274  |              resetPlaceHolder_2();  |         |  758  |     57  |  6  |  45  |  [89,71,48,17,8,98,57]  |
  4280  |                         R = R + 2;  |      2  |  760  |     57  |  6  |  45  |  [89,71,48,17,8,98,57]  |
  4284  |                         j = j + 1;  |         |  760  |     57  |  6  |  46  |  [89,71,48,17,8,98,57]  |
  4285  |              resetPlaceHolder_2();  |         |  760  |     57  |  6  |  46  |  [89,71,48,17,8,98,57]  |
  4291  |                         R = R + 2;  |      2  |  762  |     57  |  6  |  46  |  [89,71,48,17,8,98,57]  |
  4295  |                         j = j + 1;  |         |  762  |     57  |  6  |  47  |  [89,71,48,17,8,98,57]  |
  4296  |              resetPlaceHolder_2();  |         |  762  |     57  |  6  |  47  |  [89,71,48,17,8,98,57]  |
  4302  |                         R = R + 2;  |      2  |  764  |     57  |  6  |  47  |  [89,71,48,17,8,98,57]  |
  4306  |                         j = j + 1;  |         |  764  |     57  |  6  |  48  |  [89,71,48,17,8,98,57]  |
  4307  |              resetPlaceHolder_2();  |         |  764  |     57  |  6  |  48  |  [89,71,48,17,8,98,57]  |
  4313  |                         R = R + 2;  |      2  |  766  |     57  |  6  |  48  |  [89,71,48,17,8,98,57]  |
  4317  |                         j = j + 1;  |         |  766  |     57  |  6  |  49  |  [89,71,48,17,8,98,57]  |
  4318  |              resetPlaceHolder_2();  |         |  766  |     57  |  6  |  49  |  [89,71,48,17,8,98,57]  |
  4324  |                         R = R + 2;  |      2  |  768  |     57  |  6  |  49  |  [89,71,48,17,8,98,57]  |
  4328  |                         j = j + 1;  |         |  768  |     57  |  6  |  50  |  [89,71,48,17,8,98,57]  |
  4329  |              resetPlaceHolder_2();  |         |  768  |     57  |  6  |  50  |  [89,71,48,17,8,98,57]  |
  4335  |                         R = R + 2;  |      2  |  770  |     57  |  6  |  50  |  [89,71,48,17,8,98,57]  |
  4339  |                         j = j + 1;  |         |  770  |     57  |  6  |  51  |  [89,71,48,17,8,98,57]  |
  4340  |              resetPlaceHolder_2();  |         |  770  |     57  |  6  |  51  |  [89,71,48,17,8,98,57]  |
  4346  |                         R = R + 2;  |      2  |  772  |     57  |  6  |  51  |  [89,71,48,17,8,98,57]  |
  4350  |                         j = j + 1;  |         |  772  |     57  |  6  |  52  |  [89,71,48,17,8,98,57]  |
  4351  |              resetPlaceHolder_2();  |         |  772  |     57  |  6  |  52  |  [89,71,48,17,8,98,57]  |
  4357  |                         R = R + 2;  |      2  |  774  |     57  |  6  |  52  |  [89,71,48,17,8,98,57]  |
  4361  |                         j = j + 1;  |         |  774  |     57  |  6  |  53  |  [89,71,48,17,8,98,57]  |
  4362  |              resetPlaceHolder_2();  |         |  774  |     57  |  6  |  53  |  [89,71,48,17,8,98,57]  |
  4368  |                         R = R + 2;  |      2  |  776  |     57  |  6  |  53  |  [89,71,48,17,8,98,57]  |
  4372  |                         j = j + 1;  |         |  776  |     57  |  6  |  54  |  [89,71,48,17,8,98,57]  |
  4373  |              resetPlaceHolder_2();  |         |  776  |     57  |  6  |  54  |  [89,71,48,17,8,98,57]  |
  4379  |                         R = R + 2;  |      2  |  778  |     57  |  6  |  54  |  [89,71,48,17,8,98,57]  |
  4383  |                         j = j + 1;  |         |  778  |     57  |  6  |  55  |  [89,71,48,17,8,98,57]  |
  4384  |              resetPlaceHolder_2();  |         |  778  |     57  |  6  |  55  |  [89,71,48,17,8,98,57]  |
  4390  |                         R = R + 2;  |      2  |  780  |     57  |  6  |  55  |  [89,71,48,17,8,98,57]  |
  4394  |                         j = j + 1;  |         |  780  |     57  |  6  |  56  |  [89,71,48,17,8,98,57]  |
  4395  |              resetPlaceHolder_2();  |         |  780  |     57  |  6  |  56  |  [89,71,48,17,8,98,57]  |
  4401  |                         R = R + 2;  |      2  |  782  |     57  |  6  |  56  |  [89,71,48,17,8,98,57]  |
  4405  |                         j = j + 1;  |         |  782  |     57  |  6  |  57  |  [89,71,48,17,8,98,57]  |
  4406  |              resetPlaceHolder_2();  |         |  782  |     57  |  6  |  57  |  [89,71,48,17,8,98,57]  |
  4412  |                         R = R + 1;  |      1  |  783  |     57  |  6  |  57  |  [89,71,48,17,8,98,57]  |
  4416  |                         i = i + 1;  |         |  783  |     57  |  7  |  57  |  [89,71,48,17,8,98,57]  |
  4417  |              resetPlaceHolder_1();  |         |  783  |     57  |  7  |  57  |  [89,71,48,17,8,98,57]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 395 trace node indices: [3873, 1501, 2452, 1369, 4005, 1633, 1105, 1237, 2463, 2787, 1850, 1083, 1982, 3172, 481, 217, 2908, 2776, 3040, 2114, 1971, 1655, 1872, 3414, 4247, 3895, 3370, 404, 3634, 3766, 3994, 1127, 3502, 2985, 1391, 3249, 3513, 2886, 4137, 2136, 52, 2603, 3029, 3425, 184, 3689, 3612, 2562, 2897, 3744, 2356, 1545, 3840, 2169, 1479, 1347, 3216, 3084, 4368, 228, 2158, 448, 2301, 316, 4390, 3557, 4302, 261, 492, 3524, 756, 789, 591, 4258, 2996, 646, 3983, 1828, 514, 1677, 2540, 1960, 4115, 3851, 602, 1215, 877, 734, 866, 1072, 1622, 998, 2809, 4038, 2103, 1600, 4379, 3906, 74, 206, 4082, 85, 2496, 2441, 910, 3711, 4016, 3972, 778, 349, 2147, 1666, 3884, 2015, 1883, 3282, 3271, 1938, 4280, 4192, 3403, 2820, 1457, 3546, 3535, 1787, 2213, 2345, 4104, 1281, 3667, 4027, 1402, 1270, 1259, 1534, 3862, 3381, 1138, 2268, 3205, 3018, 1567, 4291, 2798, 4049, 1160, 1028, 3326, 2323, 1292, 1182, 2419, 1424, 2312, 3194, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 2581, 1050, 173, 129, 569, 41, 371, 503, 3755, 4148, 360, 3183, 921, 657, 2963, 558, 2408, 2529, 888, 1732, 3807, 2235, 965, 1754, 3491, 4412, 2941, 1927, 745, 4269, 1916, 2048, 4159, 3458, 118, 3590, 1226, 3796, 382, 3051, 4236, 3436, 3700, 4060, 1765, 3579, 3304, 2474, 3568, 3678, 2721, 3238, 1894, 2257, 1589, 2246, 3106, 2669, 2180, 4203, 811, 4401, 2625, 3073, 1993, 140, 4181, 1325, 1149, 1556, 2647, 943, 668, 2974, 3150, 2842, 932, 1061, 2710, 1688, 3480, 1171, 1699, 2765, 3917, 2592, 1435, 3348, 1413, 1809, 2952, 2614, 426, 162, 3293, 3161, 1905, 2037, 2202, 1798, 525, 712, 580, 855, 690, 63, 3315, 2397, 1611, 2375, 1743, 3260, 327, 2732, 954, 2518, 2386, 4324, 2831, 4346, 2092, 2224, 3818, 2688, 3722, 338, 470, 3623, 3359, 3095, 1336, 1358, 3829, 613, 2279, 1094, 4093, 3117, 4225, 3961, 3007, 2875, 250, 1839, 3139, 1949, 3447, 976, 3928, 2743, 2919, 4170, 844, 2658, 1721, 2853, 2290, 4126, 2004, 2026, 1523, 1861, 2081, 4214, 1193, 272, 899, 3645, 536, 800, 1116, 2930, 151, 1512, 1578, 3785, 833, 3733, 3601, 30, 1380, 1303, 3337, 1248, 4357, 3062, 3469, 2636, 305, 107, 239, 294, 1314, 2334, 195, 437, 2070, 767, 1710, 635, 283, 415, 624, 987, 3128, 2430, 2485, 459, 723, 822, 2507, 3392, 3939, 2864, 4071, 2699, 2754, 4335, 3950, 3227, 1009, 2059, 1490, 4313, 2191, 1204, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1028,1039,1050,1061,1072,1083,1094,1105,1116,1127,1138,1149,1160,1171,1182,1193,1204,1215,1226,1237,1248,1259,1270,1281,1292,1303,1314,1325,1336,1347,1358,1369,1380,1391,1402,1413,1424,1435,1446,1457,1468,1479,1490,1501,1512,1523,1534,1545,1556,1567,1578,1589,1600,1611,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1828,1839,1850,1861,1872,1883,1894,1905,1916,1927,1938,1949,1960,1971,1982,1993,2004,2015,2026,2037,2048,2059,2070,2081,2092,2103,2114,2125,2136,2147,2158,2169,2180,2191,2202,2213,2224,2235,2246,2257,2268,2279,2290,2301,2312,2323,2334,2345,2356,2375,2386,2397,2408,2419,2430,2441,2452,2463,2474,2485,2496,2507,2518,2529,2540,2551,2562,2581,2592,2603,2614,2625,2636,2647,2658,2669,2688,2699,2710,2721,2732,2743,2754,2765,2776,2787,2798,2809,2820,2831,2842,2853,2864,2875,2886,2897,2908,2919,2930,2941,2952,2963,2974,2985,2996,3007,3018,3029,3040,3051,3062,3073,3084,3095,3106,3117,3128,3139,3150,3161,3172,3183,3194,3205,3216,3227,3238,3249,3260,3271,3282,3293,3304,3315,3326,3337,3348,3359,3370,3381,3392,3403,3414,3425,3436,3447,3458,3469,3480,3491,3502,3513,3524,3535,3546,3557,3568,3579,3590,3601,3612,3623,3634,3645,3656,3667,3678,3689,3700,3711,3722,3733,3744,3755,3766,3785,3796,3807,3818,3829,3840,3851,3862,3873,3884,3895,3906,3917,3928,3939,3950,3961,3972,3983,3994,4005,4016,4027,4038,4049,4060,4071,4082,4093,4104,4115,4126,4137,4148,4159,4170,4181,4192,4203,4214,4225,4236,4247,4258,4269,4280,4291,4302,4313,4324,4335,4346,4357,4368,4379,4390,4401,4412}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 1;  |      1  |                         0  |
  1014  |  resetPlaceHolder_1();  |         |                            |
  1028  |             R = R + 2;  |      2  |                         0  |
  1033  |  resetPlaceHolder_2();  |         |                            |
  1039  |             R = R + 2;  |      2  |                         0  |
  1044  |  resetPlaceHolder_2();  |         |                            |
  1050  |             R = R + 2;  |      2  |                         0  |
  1055  |  resetPlaceHolder_2();  |         |                            |
  1061  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_2();  |         |                            |
  1072  |             R = R + 2;  |      2  |                         0  |
  1077  |  resetPlaceHolder_2();  |         |                            |
  1083  |             R = R + 2;  |      2  |                         0  |
  1088  |  resetPlaceHolder_2();  |         |                            |
  1094  |             R = R + 2;  |      2  |                         0  |
  1099  |  resetPlaceHolder_2();  |         |                            |
  1105  |             R = R + 2;  |      2  |                         0  |
  1110  |  resetPlaceHolder_2();  |         |                            |
  1116  |             R = R + 2;  |      2  |                         0  |
  1121  |  resetPlaceHolder_2();  |         |                            |
  1127  |             R = R + 2;  |      2  |                         0  |
  1132  |  resetPlaceHolder_2();  |         |                            |
  1138  |             R = R + 2;  |      2  |                         0  |
  1143  |  resetPlaceHolder_2();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1154  |  resetPlaceHolder_2();  |         |                            |
  1160  |             R = R + 2;  |      2  |                         0  |
  1165  |  resetPlaceHolder_2();  |         |                            |
  1171  |             R = R + 2;  |      2  |                         0  |
  1176  |  resetPlaceHolder_2();  |         |                            |
  1182  |             R = R + 2;  |      2  |                         0  |
  1187  |  resetPlaceHolder_2();  |         |                            |
  1193  |             R = R + 2;  |      2  |                         0  |
  1198  |  resetPlaceHolder_2();  |         |                            |
  1204  |             R = R + 2;  |      2  |                         0  |
  1209  |  resetPlaceHolder_2();  |         |                            |
  1215  |             R = R + 2;  |      2  |                         0  |
  1220  |  resetPlaceHolder_2();  |         |                            |
  1226  |             R = R + 2;  |      2  |                         0  |
  1231  |  resetPlaceHolder_2();  |         |                            |
  1237  |             R = R + 2;  |      2  |                         0  |
  1242  |  resetPlaceHolder_2();  |         |                            |
  1248  |             R = R + 2;  |      2  |                         0  |
  1253  |  resetPlaceHolder_2();  |         |                            |
  1259  |             R = R + 2;  |      2  |                         0  |
  1264  |  resetPlaceHolder_2();  |         |                            |
  1270  |             R = R + 2;  |      2  |                         0  |
  1275  |  resetPlaceHolder_2();  |         |                            |
  1281  |             R = R + 2;  |      2  |                         0  |
  1286  |  resetPlaceHolder_2();  |         |                            |
  1292  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_2();  |         |                            |
  1303  |             R = R + 2;  |      2  |                         0  |
  1308  |  resetPlaceHolder_2();  |         |                            |
  1314  |             R = R + 2;  |      2  |                         0  |
  1319  |  resetPlaceHolder_2();  |         |                            |
  1325  |             R = R + 2;  |      2  |                         0  |
  1330  |  resetPlaceHolder_2();  |         |                            |
  1336  |             R = R + 2;  |      2  |                         0  |
  1341  |  resetPlaceHolder_2();  |         |                            |
  1347  |             R = R + 2;  |      2  |                         0  |
  1352  |  resetPlaceHolder_2();  |         |                            |
  1358  |             R = R + 2;  |      2  |                         0  |
  1363  |  resetPlaceHolder_2();  |         |                            |
  1369  |             R = R + 2;  |      2  |                         0  |
  1374  |  resetPlaceHolder_2();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1385  |  resetPlaceHolder_2();  |         |                            |
  1391  |             R = R + 2;  |      2  |                         0  |
  1396  |  resetPlaceHolder_2();  |         |                            |
  1402  |             R = R + 2;  |      2  |                         0  |
  1407  |  resetPlaceHolder_2();  |         |                            |
  1413  |             R = R + 2;  |      2  |                         0  |
  1418  |  resetPlaceHolder_2();  |         |                            |
  1424  |             R = R + 2;  |      2  |                         0  |
  1429  |  resetPlaceHolder_2();  |         |                            |
  1435  |             R = R + 2;  |      2  |                         0  |
  1440  |  resetPlaceHolder_2();  |         |                            |
  1446  |             R = R + 2;  |      2  |                         0  |
  1451  |  resetPlaceHolder_2();  |         |                            |
  1457  |             R = R + 2;  |      2  |                         0  |
  1462  |  resetPlaceHolder_2();  |         |                            |
  1468  |             R = R + 2;  |      2  |                         0  |
  1473  |  resetPlaceHolder_2();  |         |                            |
  1479  |             R = R + 2;  |      2  |                         0  |
  1484  |  resetPlaceHolder_2();  |         |                            |
  1490  |             R = R + 2;  |      2  |                         0  |
  1495  |  resetPlaceHolder_2();  |         |                            |
  1501  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_2();  |         |                            |
  1512  |             R = R + 2;  |      2  |                         0  |
  1517  |  resetPlaceHolder_2();  |         |                            |
  1523  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_2();  |         |                            |
  1534  |             R = R + 2;  |      2  |                         0  |
  1539  |  resetPlaceHolder_2();  |         |                            |
  1545  |             R = R + 2;  |      2  |                         0  |
  1550  |  resetPlaceHolder_2();  |         |                            |
  1556  |             R = R + 2;  |      2  |                         0  |
  1561  |  resetPlaceHolder_2();  |         |                            |
  1567  |             R = R + 2;  |      2  |                         0  |
  1572  |  resetPlaceHolder_2();  |         |                            |
  1578  |             R = R + 2;  |      2  |                         0  |
  1583  |  resetPlaceHolder_2();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1594  |  resetPlaceHolder_2();  |         |                            |
  1600  |             R = R + 2;  |      2  |                         0  |
  1605  |  resetPlaceHolder_2();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1616  |  resetPlaceHolder_2();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 1;  |      1  |                         0  |
  1814  |  resetPlaceHolder_1();  |         |                            |
  1828  |             R = R + 2;  |      2  |                         0  |
  1833  |  resetPlaceHolder_2();  |         |                            |
  1839  |             R = R + 2;  |      2  |                         0  |
  1844  |  resetPlaceHolder_2();  |         |                            |
  1850  |             R = R + 2;  |      2  |                         0  |
  1855  |  resetPlaceHolder_2();  |         |                            |
  1861  |             R = R + 2;  |      2  |                         0  |
  1866  |  resetPlaceHolder_2();  |         |                            |
  1872  |             R = R + 2;  |      2  |                         0  |
  1877  |  resetPlaceHolder_2();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1888  |  resetPlaceHolder_2();  |         |                            |
  1894  |             R = R + 2;  |      2  |                         0  |
  1899  |  resetPlaceHolder_2();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1910  |  resetPlaceHolder_2();  |         |                            |
  1916  |             R = R + 2;  |      2  |                         0  |
  1921  |  resetPlaceHolder_2();  |         |                            |
  1927  |             R = R + 2;  |      2  |                         0  |
  1932  |  resetPlaceHolder_2();  |         |                            |
  1938  |             R = R + 2;  |      2  |                         0  |
  1943  |  resetPlaceHolder_2();  |         |                            |
  1949  |             R = R + 2;  |      2  |                         0  |
  1954  |  resetPlaceHolder_2();  |         |                            |
  1960  |             R = R + 2;  |      2  |                         0  |
  1965  |  resetPlaceHolder_2();  |         |                            |
  1971  |             R = R + 2;  |      2  |                         0  |
  1976  |  resetPlaceHolder_2();  |         |                            |
  1982  |             R = R + 2;  |      2  |                         0  |
  1987  |  resetPlaceHolder_2();  |         |                            |
  1993  |             R = R + 2;  |      2  |                         0  |
  1998  |  resetPlaceHolder_2();  |         |                            |
  2004  |             R = R + 2;  |      2  |                         0  |
  2009  |  resetPlaceHolder_2();  |         |                            |
  2015  |             R = R + 2;  |      2  |                         0  |
  2020  |  resetPlaceHolder_2();  |         |                            |
  2026  |             R = R + 2;  |      2  |                         0  |
  2031  |  resetPlaceHolder_2();  |         |                            |
  2037  |             R = R + 2;  |      2  |                         0  |
  2042  |  resetPlaceHolder_2();  |         |                            |
  2048  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_2();  |         |                            |
  2059  |             R = R + 2;  |      2  |                         0  |
  2064  |  resetPlaceHolder_2();  |         |                            |
  2070  |             R = R + 2;  |      2  |                         0  |
  2075  |  resetPlaceHolder_2();  |         |                            |
  2081  |             R = R + 2;  |      2  |                         0  |
  2086  |  resetPlaceHolder_2();  |         |                            |
  2092  |             R = R + 2;  |      2  |                         0  |
  2097  |  resetPlaceHolder_2();  |         |                            |
  2103  |             R = R + 2;  |      2  |                         0  |
  2108  |  resetPlaceHolder_2();  |         |                            |
  2114  |             R = R + 2;  |      2  |                         0  |
  2119  |  resetPlaceHolder_2();  |         |                            |
  2125  |             R = R + 2;  |      2  |                         0  |
  2130  |  resetPlaceHolder_2();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2141  |  resetPlaceHolder_2();  |         |                            |
  2147  |             R = R + 2;  |      2  |                         0  |
  2152  |  resetPlaceHolder_2();  |         |                            |
  2158  |             R = R + 2;  |      2  |                         0  |
  2163  |  resetPlaceHolder_2();  |         |                            |
  2169  |             R = R + 2;  |      2  |                         0  |
  2174  |  resetPlaceHolder_2();  |         |                            |
  2180  |             R = R + 2;  |      2  |                         0  |
  2185  |  resetPlaceHolder_2();  |         |                            |
  2191  |             R = R + 2;  |      2  |                         0  |
  2196  |  resetPlaceHolder_2();  |         |                            |
  2202  |             R = R + 2;  |      2  |                         0  |
  2207  |  resetPlaceHolder_2();  |         |                            |
  2213  |             R = R + 2;  |      2  |                         0  |
  2218  |  resetPlaceHolder_2();  |         |                            |
  2224  |             R = R + 2;  |      2  |                         0  |
  2229  |  resetPlaceHolder_2();  |         |                            |
  2235  |             R = R + 2;  |      2  |                         0  |
  2240  |  resetPlaceHolder_2();  |         |                            |
  2246  |             R = R + 2;  |      2  |                         0  |
  2251  |  resetPlaceHolder_2();  |         |                            |
  2257  |             R = R + 2;  |      2  |                         0  |
  2262  |  resetPlaceHolder_2();  |         |                            |
  2268  |             R = R + 2;  |      2  |                         0  |
  2273  |  resetPlaceHolder_2();  |         |                            |
  2279  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_2();  |         |                            |
  2290  |             R = R + 2;  |      2  |                         0  |
  2295  |  resetPlaceHolder_2();  |         |                            |
  2301  |             R = R + 2;  |      2  |                         0  |
  2306  |  resetPlaceHolder_2();  |         |                            |
  2312  |             R = R + 2;  |      2  |                         0  |
  2317  |  resetPlaceHolder_2();  |         |                            |
  2323  |             R = R + 2;  |      2  |                         0  |
  2328  |  resetPlaceHolder_2();  |         |                            |
  2334  |             R = R + 2;  |      2  |                         0  |
  2339  |  resetPlaceHolder_2();  |         |                            |
  2345  |             R = R + 2;  |      2  |                         0  |
  2350  |  resetPlaceHolder_2();  |         |                            |
  2356  |             R = R + 1;  |      1  |                         0  |
  2361  |  resetPlaceHolder_1();  |         |                            |
  2375  |             R = R + 2;  |      2  |                         0  |
  2380  |  resetPlaceHolder_2();  |         |                            |
  2386  |             R = R + 2;  |      2  |                         0  |
  2391  |  resetPlaceHolder_2();  |         |                            |
  2397  |             R = R + 2;  |      2  |                         0  |
  2402  |  resetPlaceHolder_2();  |         |                            |
  2408  |             R = R + 2;  |      2  |                         0  |
  2413  |  resetPlaceHolder_2();  |         |                            |
  2419  |             R = R + 2;  |      2  |                         0  |
  2424  |  resetPlaceHolder_2();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2435  |  resetPlaceHolder_2();  |         |                            |
  2441  |             R = R + 2;  |      2  |                         0  |
  2446  |  resetPlaceHolder_2();  |         |                            |
  2452  |             R = R + 2;  |      2  |                         0  |
  2457  |  resetPlaceHolder_2();  |         |                            |
  2463  |             R = R + 2;  |      2  |                         0  |
  2468  |  resetPlaceHolder_2();  |         |                            |
  2474  |             R = R + 2;  |      2  |                         0  |
  2479  |  resetPlaceHolder_2();  |         |                            |
  2485  |             R = R + 2;  |      2  |                         0  |
  2490  |  resetPlaceHolder_2();  |         |                            |
  2496  |             R = R + 2;  |      2  |                         0  |
  2501  |  resetPlaceHolder_2();  |         |                            |
  2507  |             R = R + 2;  |      2  |                         0  |
  2512  |  resetPlaceHolder_2();  |         |                            |
  2518  |             R = R + 2;  |      2  |                         0  |
  2523  |  resetPlaceHolder_2();  |         |                            |
  2529  |             R = R + 2;  |      2  |                         0  |
  2534  |  resetPlaceHolder_2();  |         |                            |
  2540  |             R = R + 2;  |      2  |                         0  |
  2545  |  resetPlaceHolder_2();  |         |                            |
  2551  |             R = R + 2;  |      2  |                         0  |
  2556  |  resetPlaceHolder_2();  |         |                            |
  2562  |             R = R + 1;  |      1  |                         0  |
  2567  |  resetPlaceHolder_1();  |         |                            |
  2581  |             R = R + 2;  |      2  |                         0  |
  2586  |  resetPlaceHolder_2();  |         |                            |
  2592  |             R = R + 2;  |      2  |                         0  |
  2597  |  resetPlaceHolder_2();  |         |                            |
  2603  |             R = R + 2;  |      2  |                         0  |
  2608  |  resetPlaceHolder_2();  |         |                            |
  2614  |             R = R + 2;  |      2  |                         0  |
  2619  |  resetPlaceHolder_2();  |         |                            |
  2625  |             R = R + 2;  |      2  |                         0  |
  2630  |  resetPlaceHolder_2();  |         |                            |
  2636  |             R = R + 2;  |      2  |                         0  |
  2641  |  resetPlaceHolder_2();  |         |                            |
  2647  |             R = R + 2;  |      2  |                         0  |
  2652  |  resetPlaceHolder_2();  |         |                            |
  2658  |             R = R + 2;  |      2  |                         0  |
  2663  |  resetPlaceHolder_2();  |         |                            |
  2669  |             R = R + 1;  |      1  |                         0  |
  2674  |  resetPlaceHolder_1();  |         |                            |
  2688  |             R = R + 2;  |      2  |                         0  |
  2693  |  resetPlaceHolder_2();  |         |                            |
  2699  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_2();  |         |                            |
  2710  |             R = R + 2;  |      2  |                         0  |
  2715  |  resetPlaceHolder_2();  |         |                            |
  2721  |             R = R + 2;  |      2  |                         0  |
  2726  |  resetPlaceHolder_2();  |         |                            |
  2732  |             R = R + 2;  |      2  |                         0  |
  2737  |  resetPlaceHolder_2();  |         |                            |
  2743  |             R = R + 2;  |      2  |                         0  |
  2748  |  resetPlaceHolder_2();  |         |                            |
  2754  |             R = R + 2;  |      2  |                         0  |
  2759  |  resetPlaceHolder_2();  |         |                            |
  2765  |             R = R + 2;  |      2  |                         0  |
  2770  |  resetPlaceHolder_2();  |         |                            |
  2776  |             R = R + 2;  |      2  |                         0  |
  2781  |  resetPlaceHolder_2();  |         |                            |
  2787  |             R = R + 2;  |      2  |                         0  |
  2792  |  resetPlaceHolder_2();  |         |                            |
  2798  |             R = R + 2;  |      2  |                         0  |
  2803  |  resetPlaceHolder_2();  |         |                            |
  2809  |             R = R + 2;  |      2  |                         0  |
  2814  |  resetPlaceHolder_2();  |         |                            |
  2820  |             R = R + 2;  |      2  |                         0  |
  2825  |  resetPlaceHolder_2();  |         |                            |
  2831  |             R = R + 2;  |      2  |                         0  |
  2836  |  resetPlaceHolder_2();  |         |                            |
  2842  |             R = R + 2;  |      2  |                         0  |
  2847  |  resetPlaceHolder_2();  |         |                            |
  2853  |             R = R + 2;  |      2  |                         0  |
  2858  |  resetPlaceHolder_2();  |         |                            |
  2864  |             R = R + 2;  |      2  |                         0  |
  2869  |  resetPlaceHolder_2();  |         |                            |
  2875  |             R = R + 2;  |      2  |                         0  |
  2880  |  resetPlaceHolder_2();  |         |                            |
  2886  |             R = R + 2;  |      2  |                         0  |
  2891  |  resetPlaceHolder_2();  |         |                            |
  2897  |             R = R + 2;  |      2  |                         0  |
  2902  |  resetPlaceHolder_2();  |         |                            |
  2908  |             R = R + 2;  |      2  |                         0  |
  2913  |  resetPlaceHolder_2();  |         |                            |
  2919  |             R = R + 2;  |      2  |                         0  |
  2924  |  resetPlaceHolder_2();  |         |                            |
  2930  |             R = R + 2;  |      2  |                         0  |
  2935  |  resetPlaceHolder_2();  |         |                            |
  2941  |             R = R + 2;  |      2  |                         0  |
  2946  |  resetPlaceHolder_2();  |         |                            |
  2952  |             R = R + 2;  |      2  |                         0  |
  2957  |  resetPlaceHolder_2();  |         |                            |
  2963  |             R = R + 2;  |      2  |                         0  |
  2968  |  resetPlaceHolder_2();  |         |                            |
  2974  |             R = R + 2;  |      2  |                         0  |
  2979  |  resetPlaceHolder_2();  |         |                            |
  2985  |             R = R + 2;  |      2  |                         0  |
  2990  |  resetPlaceHolder_2();  |         |                            |
  2996  |             R = R + 2;  |      2  |                         0  |
  3001  |  resetPlaceHolder_2();  |         |                            |
  3007  |             R = R + 2;  |      2  |                         0  |
  3012  |  resetPlaceHolder_2();  |         |                            |
  3018  |             R = R + 2;  |      2  |                         0  |
  3023  |  resetPlaceHolder_2();  |         |                            |
  3029  |             R = R + 2;  |      2  |                         0  |
  3034  |  resetPlaceHolder_2();  |         |                            |
  3040  |             R = R + 2;  |      2  |                         0  |
  3045  |  resetPlaceHolder_2();  |         |                            |
  3051  |             R = R + 2;  |      2  |                         0  |
  3056  |  resetPlaceHolder_2();  |         |                            |
  3062  |             R = R + 2;  |      2  |                         0  |
  3067  |  resetPlaceHolder_2();  |         |                            |
  3073  |             R = R + 2;  |      2  |                         0  |
  3078  |  resetPlaceHolder_2();  |         |                            |
  3084  |             R = R + 2;  |      2  |                         0  |
  3089  |  resetPlaceHolder_2();  |         |                            |
  3095  |             R = R + 2;  |      2  |                         0  |
  3100  |  resetPlaceHolder_2();  |         |                            |
  3106  |             R = R + 2;  |      2  |                         0  |
  3111  |  resetPlaceHolder_2();  |         |                            |
  3117  |             R = R + 2;  |      2  |                         0  |
  3122  |  resetPlaceHolder_2();  |         |                            |
  3128  |             R = R + 2;  |      2  |                         0  |
  3133  |  resetPlaceHolder_2();  |         |                            |
  3139  |             R = R + 2;  |      2  |                         0  |
  3144  |  resetPlaceHolder_2();  |         |                            |
  3150  |             R = R + 2;  |      2  |                         0  |
  3155  |  resetPlaceHolder_2();  |         |                            |
  3161  |             R = R + 2;  |      2  |                         0  |
  3166  |  resetPlaceHolder_2();  |         |                            |
  3172  |             R = R + 2;  |      2  |                         0  |
  3177  |  resetPlaceHolder_2();  |         |                            |
  3183  |             R = R + 2;  |      2  |                         0  |
  3188  |  resetPlaceHolder_2();  |         |                            |
  3194  |             R = R + 2;  |      2  |                         0  |
  3199  |  resetPlaceHolder_2();  |         |                            |
  3205  |             R = R + 2;  |      2  |                         0  |
  3210  |  resetPlaceHolder_2();  |         |                            |
  3216  |             R = R + 2;  |      2  |                         0  |
  3221  |  resetPlaceHolder_2();  |         |                            |
  3227  |             R = R + 2;  |      2  |                         0  |
  3232  |  resetPlaceHolder_2();  |         |                            |
  3238  |             R = R + 2;  |      2  |                         0  |
  3243  |  resetPlaceHolder_2();  |         |                            |
  3249  |             R = R + 2;  |      2  |                         0  |
  3254  |  resetPlaceHolder_2();  |         |                            |
  3260  |             R = R + 2;  |      2  |                         0  |
  3265  |  resetPlaceHolder_2();  |         |                            |
  3271  |             R = R + 2;  |      2  |                         0  |
  3276  |  resetPlaceHolder_2();  |         |                            |
  3282  |             R = R + 2;  |      2  |                         0  |
  3287  |  resetPlaceHolder_2();  |         |                            |
  3293  |             R = R + 2;  |      2  |                         0  |
  3298  |  resetPlaceHolder_2();  |         |                            |
  3304  |             R = R + 2;  |      2  |                         0  |
  3309  |  resetPlaceHolder_2();  |         |                            |
  3315  |             R = R + 2;  |      2  |                         0  |
  3320  |  resetPlaceHolder_2();  |         |                            |
  3326  |             R = R + 2;  |      2  |                         0  |
  3331  |  resetPlaceHolder_2();  |         |                            |
  3337  |             R = R + 2;  |      2  |                         0  |
  3342  |  resetPlaceHolder_2();  |         |                            |
  3348  |             R = R + 2;  |      2  |                         0  |
  3353  |  resetPlaceHolder_2();  |         |                            |
  3359  |             R = R + 2;  |      2  |                         0  |
  3364  |  resetPlaceHolder_2();  |         |                            |
  3370  |             R = R + 2;  |      2  |                         0  |
  3375  |  resetPlaceHolder_2();  |         |                            |
  3381  |             R = R + 2;  |      2  |                         0  |
  3386  |  resetPlaceHolder_2();  |         |                            |
  3392  |             R = R + 2;  |      2  |                         0  |
  3397  |  resetPlaceHolder_2();  |         |                            |
  3403  |             R = R + 2;  |      2  |                         0  |
  3408  |  resetPlaceHolder_2();  |         |                            |
  3414  |             R = R + 2;  |      2  |                         0  |
  3419  |  resetPlaceHolder_2();  |         |                            |
  3425  |             R = R + 2;  |      2  |                         0  |
  3430  |  resetPlaceHolder_2();  |         |                            |
  3436  |             R = R + 2;  |      2  |                         0  |
  3441  |  resetPlaceHolder_2();  |         |                            |
  3447  |             R = R + 2;  |      2  |                         0  |
  3452  |  resetPlaceHolder_2();  |         |                            |
  3458  |             R = R + 2;  |      2  |                         0  |
  3463  |  resetPlaceHolder_2();  |         |                            |
  3469  |             R = R + 2;  |      2  |                         0  |
  3474  |  resetPlaceHolder_2();  |         |                            |
  3480  |             R = R + 2;  |      2  |                         0  |
  3485  |  resetPlaceHolder_2();  |         |                            |
  3491  |             R = R + 2;  |      2  |                         0  |
  3496  |  resetPlaceHolder_2();  |         |                            |
  3502  |             R = R + 2;  |      2  |                         0  |
  3507  |  resetPlaceHolder_2();  |         |                            |
  3513  |             R = R + 2;  |      2  |                         0  |
  3518  |  resetPlaceHolder_2();  |         |                            |
  3524  |             R = R + 2;  |      2  |                         0  |
  3529  |  resetPlaceHolder_2();  |         |                            |
  3535  |             R = R + 2;  |      2  |                         0  |
  3540  |  resetPlaceHolder_2();  |         |                            |
  3546  |             R = R + 2;  |      2  |                         0  |
  3551  |  resetPlaceHolder_2();  |         |                            |
  3557  |             R = R + 2;  |      2  |                         0  |
  3562  |  resetPlaceHolder_2();  |         |                            |
  3568  |             R = R + 2;  |      2  |                         0  |
  3573  |  resetPlaceHolder_2();  |         |                            |
  3579  |             R = R + 2;  |      2  |                         0  |
  3584  |  resetPlaceHolder_2();  |         |                            |
  3590  |             R = R + 2;  |      2  |                         0  |
  3595  |  resetPlaceHolder_2();  |         |                            |
  3601  |             R = R + 2;  |      2  |                         0  |
  3606  |  resetPlaceHolder_2();  |         |                            |
  3612  |             R = R + 2;  |      2  |                         0  |
  3617  |  resetPlaceHolder_2();  |         |                            |
  3623  |             R = R + 2;  |      2  |                         0  |
  3628  |  resetPlaceHolder_2();  |         |                            |
  3634  |             R = R + 2;  |      2  |                         0  |
  3639  |  resetPlaceHolder_2();  |         |                            |
  3645  |             R = R + 2;  |      2  |                         0  |
  3650  |  resetPlaceHolder_2();  |         |                            |
  3656  |             R = R + 2;  |      2  |                         0  |
  3661  |  resetPlaceHolder_2();  |         |                            |
  3667  |             R = R + 2;  |      2  |                         0  |
  3672  |  resetPlaceHolder_2();  |         |                            |
  3678  |             R = R + 2;  |      2  |                         0  |
  3683  |  resetPlaceHolder_2();  |         |                            |
  3689  |             R = R + 2;  |      2  |                         0  |
  3694  |  resetPlaceHolder_2();  |         |                            |
  3700  |             R = R + 2;  |      2  |                         0  |
  3705  |  resetPlaceHolder_2();  |         |                            |
  3711  |             R = R + 2;  |      2  |                         0  |
  3716  |  resetPlaceHolder_2();  |         |                            |
  3722  |             R = R + 2;  |      2  |                         0  |
  3727  |  resetPlaceHolder_2();  |         |                            |
  3733  |             R = R + 2;  |      2  |                         0  |
  3738  |  resetPlaceHolder_2();  |         |                            |
  3744  |             R = R + 2;  |      2  |                         0  |
  3749  |  resetPlaceHolder_2();  |         |                            |
  3755  |             R = R + 2;  |      2  |                         0  |
  3760  |  resetPlaceHolder_2();  |         |                            |
  3766  |             R = R + 1;  |      1  |                         0  |
  3771  |  resetPlaceHolder_1();  |         |                            |
  3785  |             R = R + 2;  |      2  |                         0  |
  3790  |  resetPlaceHolder_2();  |         |                            |
  3796  |             R = R + 2;  |      2  |                         0  |
  3801  |  resetPlaceHolder_2();  |         |                            |
  3807  |             R = R + 2;  |      2  |                         0  |
  3812  |  resetPlaceHolder_2();  |         |                            |
  3818  |             R = R + 2;  |      2  |                         0  |
  3823  |  resetPlaceHolder_2();  |         |                            |
  3829  |             R = R + 2;  |      2  |                         0  |
  3834  |  resetPlaceHolder_2();  |         |                            |
  3840  |             R = R + 2;  |      2  |                         0  |
  3845  |  resetPlaceHolder_2();  |         |                            |
  3851  |             R = R + 2;  |      2  |                         0  |
  3856  |  resetPlaceHolder_2();  |         |                            |
  3862  |             R = R + 2;  |      2  |                         0  |
  3867  |  resetPlaceHolder_2();  |         |                            |
  3873  |             R = R + 2;  |      2  |                         0  |
  3878  |  resetPlaceHolder_2();  |         |                            |
  3884  |             R = R + 2;  |      2  |                         0  |
  3889  |  resetPlaceHolder_2();  |         |                            |
  3895  |             R = R + 2;  |      2  |                         0  |
  3900  |  resetPlaceHolder_2();  |         |                            |
  3906  |             R = R + 2;  |      2  |                         0  |
  3911  |  resetPlaceHolder_2();  |         |                            |
  3917  |             R = R + 2;  |      2  |                         0  |
  3922  |  resetPlaceHolder_2();  |         |                            |
  3928  |             R = R + 2;  |      2  |                         0  |
  3933  |  resetPlaceHolder_2();  |         |                            |
  3939  |             R = R + 2;  |      2  |                         0  |
  3944  |  resetPlaceHolder_2();  |         |                            |
  3950  |             R = R + 2;  |      2  |                         0  |
  3955  |  resetPlaceHolder_2();  |         |                            |
  3961  |             R = R + 2;  |      2  |                         0  |
  3966  |  resetPlaceHolder_2();  |         |                            |
  3972  |             R = R + 2;  |      2  |                         0  |
  3977  |  resetPlaceHolder_2();  |         |                            |
  3983  |             R = R + 2;  |      2  |                         0  |
  3988  |  resetPlaceHolder_2();  |         |                            |
  3994  |             R = R + 2;  |      2  |                         0  |
  3999  |  resetPlaceHolder_2();  |         |                            |
  4005  |             R = R + 2;  |      2  |                         0  |
  4010  |  resetPlaceHolder_2();  |         |                            |
  4016  |             R = R + 2;  |      2  |                         0  |
  4021  |  resetPlaceHolder_2();  |         |                            |
  4027  |             R = R + 2;  |      2  |                         0  |
  4032  |  resetPlaceHolder_2();  |         |                            |
  4038  |             R = R + 2;  |      2  |                         0  |
  4043  |  resetPlaceHolder_2();  |         |                            |
  4049  |             R = R + 2;  |      2  |                         0  |
  4054  |  resetPlaceHolder_2();  |         |                            |
  4060  |             R = R + 2;  |      2  |                         0  |
  4065  |  resetPlaceHolder_2();  |         |                            |
  4071  |             R = R + 2;  |      2  |                         0  |
  4076  |  resetPlaceHolder_2();  |         |                            |
  4082  |             R = R + 2;  |      2  |                         0  |
  4087  |  resetPlaceHolder_2();  |         |                            |
  4093  |             R = R + 2;  |      2  |                         0  |
  4098  |  resetPlaceHolder_2();  |         |                            |
  4104  |             R = R + 2;  |      2  |                         0  |
  4109  |  resetPlaceHolder_2();  |         |                            |
  4115  |             R = R + 2;  |      2  |                         0  |
  4120  |  resetPlaceHolder_2();  |         |                            |
  4126  |             R = R + 2;  |      2  |                         0  |
  4131  |  resetPlaceHolder_2();  |         |                            |
  4137  |             R = R + 2;  |      2  |                         0  |
  4142  |  resetPlaceHolder_2();  |         |                            |
  4148  |             R = R + 2;  |      2  |                         0  |
  4153  |  resetPlaceHolder_2();  |         |                            |
  4159  |             R = R + 2;  |      2  |                         0  |
  4164  |  resetPlaceHolder_2();  |         |                            |
  4170  |             R = R + 2;  |      2  |                         0  |
  4175  |  resetPlaceHolder_2();  |         |                            |
  4181  |             R = R + 2;  |      2  |                         0  |
  4186  |  resetPlaceHolder_2();  |         |                            |
  4192  |             R = R + 2;  |      2  |                         0  |
  4197  |  resetPlaceHolder_2();  |         |                            |
  4203  |             R = R + 2;  |      2  |                         0  |
  4208  |  resetPlaceHolder_2();  |         |                            |
  4214  |             R = R + 2;  |      2  |                         0  |
  4219  |  resetPlaceHolder_2();  |         |                            |
  4225  |             R = R + 2;  |      2  |                         0  |
  4230  |  resetPlaceHolder_2();  |         |                            |
  4236  |             R = R + 2;  |      2  |                         0  |
  4241  |  resetPlaceHolder_2();  |         |                            |
  4247  |             R = R + 2;  |      2  |                         0  |
  4252  |  resetPlaceHolder_2();  |         |                            |
  4258  |             R = R + 2;  |      2  |                         0  |
  4263  |  resetPlaceHolder_2();  |         |                            |
  4269  |             R = R + 2;  |      2  |                         0  |
  4274  |  resetPlaceHolder_2();  |         |                            |
  4280  |             R = R + 2;  |      2  |                         0  |
  4285  |  resetPlaceHolder_2();  |         |                            |
  4291  |             R = R + 2;  |      2  |                         0  |
  4296  |  resetPlaceHolder_2();  |         |                            |
  4302  |             R = R + 2;  |      2  |                         0  |
  4307  |  resetPlaceHolder_2();  |         |                            |
  4313  |             R = R + 2;  |      2  |                         0  |
  4318  |  resetPlaceHolder_2();  |         |                            |
  4324  |             R = R + 2;  |      2  |                         0  |
  4329  |  resetPlaceHolder_2();  |         |                            |
  4335  |             R = R + 2;  |      2  |                         0  |
  4340  |  resetPlaceHolder_2();  |         |                            |
  4346  |             R = R + 2;  |      2  |                         0  |
  4351  |  resetPlaceHolder_2();  |         |                            |
  4357  |             R = R + 2;  |      2  |                         0  |
  4362  |  resetPlaceHolder_2();  |         |                            |
  4368  |             R = R + 2;  |      2  |                         0  |
  4373  |  resetPlaceHolder_2();  |         |                            |
  4379  |             R = R + 2;  |      2  |                         0  |
  4384  |  resetPlaceHolder_2();  |         |                            |
  4390  |             R = R + 2;  |      2  |                         0  |
  4395  |  resetPlaceHolder_2();  |         |                            |
  4401  |             R = R + 2;  |      2  |                         0  |
  4406  |  resetPlaceHolder_2();  |         |                            |
  4412  |             R = R + 1;  |      1  |                         0  |
  4417  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_2(); -> // reset R0
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 11:50:47,522 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:51:00,777 INFO     Done. Execution time: 13.25472378730774 seconds
2023-01-31 11:51:00,778 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1150-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1150-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.246s
user	0m29.152s
sys	0m2.684s

2023-01-31 11:51:00,778 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 11:51:00,779 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:51:03,476 INFO     Done. Execution time: 2.696828603744507 seconds
2023-01-31 11:51:03,476 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 11:51:03,476 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 11:51:03,476 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 11:51:06,059 INFO     Done. Execution time: 2.5820882320404053 seconds
2023-01-31 11:51:06,059 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 11:51:06,060 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:51:07,539 INFO     Done. Execution time: 1.4792206287384033 seconds
2023-01-31 11:51:07,540 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.468s
user	0m2.355s
sys	0m0.188s

2023-01-31 11:51:07,540 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 11:51:07,540 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:54:14,629 INFO     Done. Execution time: 187.08904194831848 seconds
2023-01-31 11:54:14,630 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz573118371654815315/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz573118371654815315/bin -o /tmp/qfuzz573118371654815315/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz573118371654815315/bin
Found file /tmp/qfuzz573118371654815315/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz573118371654815315/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz573118371654815315/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz573118371654815315/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz573118371654815315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz573118371654815315/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz573118371654815315/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz573118371654815315/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 131541 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [53.00]
4; /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz573118371654815315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_115414_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [71,48,86,8,98,57,5]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:54:14,630 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-31 11:54:14,630 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 11:54:20,335 INFO     Done. Execution time: 5.704654693603516 seconds
2023-01-31 11:54:20,335 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_115414_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_115414_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [71,48,86,8,98,57,5])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [71,48,86,8,98,57,5]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 19):
                                                                  
 Index  |   Commands   |  Costs  |  R  |  pattern  |  stopIndex  |
------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |        2  |       [47]  |
    18  |     return;  |         |  0  |        2  |       [47]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-31 11:54:20,336 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:54:23,254 INFO     Done. Execution time: 2.9175920486450195 seconds
2023-01-31 11:54:23,254 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1154-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1154-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.908s
user	0m5.170s
sys	0m0.281s

2023-01-31 11:54:23,254 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 11:54:23,254 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 11:57:30,255 INFO     Done. Execution time: 187.00038290023804 seconds
2023-01-31 11:57:30,255 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz3882296530417976132/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3882296530417976132/bin -o /tmp/qfuzz3882296530417976132/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3882296530417976132/bin
Found file /tmp/qfuzz3882296530417976132/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz3882296530417976132/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3882296530417976132/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3882296530417976132/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3882296530417976132/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3882296530417976132/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 135046 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (18 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta; 2; 3.00; [35.00,38.00]
5; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov,+partition,+delta; 4; 2.00; [29.00,35.50,38.00,51.50]
11; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
14; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 4; 2.00; [29.00,35.50,38.00,51.50]
22; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 4; 2.00; [29.00,35.50,38.00,51.50]
47; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
53; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
63; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
66; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 2.00; [29.00,35.50,38.00,51.50]
68; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 4; 2.00; [29.00,35.50,38.00,51.50]
77; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
81; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4; 4; 2.00; [29.00,35.50,38.00,51.50]
103; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
110; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8; 4; 2.00; [29.00,35.50,38.00,51.50]
118; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4; 4; 2.00; [29.00,35.50,38.00,51.50]
126; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000016,src:000000+000009,op:splice,rep:32; 4; 2.00; [29.00,35.50,38.00,51.50]
128; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000017,src:000000+000009,op:splice,rep:16; 4; 2.00; [29.00,35.50,38.00,52.00]
175; /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000018,src:000001+000008,op:splice,rep:4; 4; 2.00; [29.00,35.50,38.00,51.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000018,src:000001+000008,op:splice,rep:4
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000017,src:000000+000009,op:splice,rep:16
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000016,src:000000+000009,op:splice,rep:32
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov,+partition,+delta
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta
/tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000018,src:000001+000008,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 92, 2, 20, 10, 98, 92, 94, 7, 98, 1, 1, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 18, 96, 100, 28, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000017,src:000000+000009,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 31, 3, 36, 59, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000016,src:000000+000009,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 83, 1, 69, 1, 28, 30, 73, 91, 4, 89, 18, 89, 34, 12, 94, 42, 98, 98, 98, 98, 98, 100, 98, 98, 98, 98, 1, 1, 1, 1, 1, 34, 59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 71, 1, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 53, 55, 90, 37, 51, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60, 79, 1, 34, 37, 25, 33, 61, 98, 21, 55, 37, 13, 33, 61, 98, 21, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 13, 1, 32, 82, 5, 17, 69, 57, 90, 74, 80, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 3, 3, 56, 2, 1, 57, 5, 55, 4, 40, 29, 18, 64, 62, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 2, 86, 8, 98, 57, 5, 55, 4, 40, 29, 62, 64, 62, 16, 69, 55, 90, 74, 40, 16, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 45, 1, 40, 8, 98, 57, 5, 55, 4, 40, 29, 18, 62, 4, 16, 69, 55, 88, 74, 40, 15, 85, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 92, 2, 20, 10, 98, 92, 98, 7, 98, 1, 16, 96, 100, 28, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 2, 86, 82, 16, 69, 28, 1, 70, 82, 16, 69, 3, 67, 3, 3, 1, 65, 3, 99, 3, 3, 3, 19, 3, 3, 3, 3, 3, 3, 3, 3, 3, 69, 59, 16, 7, 98, 1, 30, 40, 61, 30, 71, 74, 60, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 85, 1, 89, 14, 20, 70, 89, 2, 79, 65, 10, 10, 10, 74, 10, 10, 21, 85, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 30, 1, 71, 71, 73, 71, 28, 38, 38, 23, 27, 28, 38, 38, 23, 41, 70, 70, 70, 70, 36, 22, 70, 85, 69, 71, 71, 71, 71, 83, 81, 38, 38, 11, 86, 70, 70, 60, 38, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 56, 2, 23, 1, 93, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 42, 1, 1, 1, 1, 1, 1, 31, 1, 69, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 57, 1, 13, 65, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 27, 27, 27, 27, 27, 62, 44, 83, 96, 14, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3882296530417976132/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_115729_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 99, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 59, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 60, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 53, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 11, 2, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 26, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 14, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 17, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 81, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2, 48
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:57:30,255 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-31 11:57:30,256 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 11:57:42,068 INFO     Done. Execution time: 11.811879873275757 seconds
2023-01-31 11:57:42,068 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_115729_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_115729_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 17 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(99, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(60, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(59, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(53, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(11, 2, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 17 (47.06%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(26, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(14, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(17, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(81, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2, 48)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 17 (94.12%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 17)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 17 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 11
recursiveTypeIndexes: 2
d: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 1
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 89
recursiveTypeIndexes: 2
d: 48
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 99
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 59
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 60
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 53
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 89
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 89
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 7
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 26
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 14
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 17
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 81
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                         
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d  |  recursiveTypeIndexes  |
-----------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |              5  |  3  |                     2  |
    32  |     return;  |         |  0  |              5  |  3  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 157):
                                                                                                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  argumentTypes  |  argumentsFiltered  |  builder  |  d  |  i  |  j  |  k  |  recursiveTypeIndexes  |  sep  |  sep2  |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              5  |                     |           |  2  |     |     |     |                     2  |       |        |
    33  |                   int builder = 0;  |         |  0  |              5  |                     |        0  |  2  |     |     |     |                     2  |       |        |
    34  |                      // int R = 0;  |         |  0  |              5  |                     |        0  |  2  |     |     |     |                     2  |       |        |
    35  |  // mostPreciseBound(R <= recur...  |         |  0  |              5  |                     |        0  |  2  |     |     |     |                     2  |       |        |
    36  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              5  |                     |        0  |  2  |     |     |     |                     2  |       |        |
    38  |                         int i = 0;  |         |  0  |              5  |                     |        0  |  2  |  0  |     |     |                     2  |       |        |
    43  |                       int sep = 2;  |         |  0  |              5  |                     |        0  |  2  |  0  |     |     |                     2  |    2  |        |
    47  |             builder = builder + 1;  |         |  0  |              5  |                     |        1  |  2  |  0  |     |     |                     2  |    2  |        |
    50  |                         R = R + 1;  |      1  |  1  |              5  |                     |        1  |  2  |  0  |     |     |                     2  |    2  |        |
    52  |                         int j = 1;  |         |  1  |              5  |                     |        1  |  2  |  0  |  1  |     |                     2  |    2  |        |
    59  |                         i = i + 1;  |         |  1  |              5  |                     |        1  |  2  |  1  |  1  |     |                     2  |    2  |        |
    60  |              resetPlaceHolder_1();  |         |  1  |              5  |                     |        1  |  2  |  1  |  1  |     |                     2  |    2  |        |
    65  |                       int sep = 2;  |         |  1  |              5  |                     |        1  |  2  |  1  |  1  |     |                     2  |    2  |        |
    69  |             builder = builder + 1;  |         |  1  |              5  |                     |        2  |  2  |  1  |  1  |     |                     2  |    2  |        |
    72  |                         R = R + 1;  |      1  |  2  |              5  |                     |        2  |  2  |  1  |  1  |     |                     2  |    2  |        |
    74  |                         int j = 1;  |         |  2  |              5  |                     |        2  |  2  |  1  |  1  |     |                     2  |    2  |        |
    81  |                         i = i + 1;  |         |  2  |              5  |                     |        2  |  2  |  2  |  1  |     |                     2  |    2  |        |
    82  |              resetPlaceHolder_1();  |         |  2  |              5  |                     |        2  |  2  |  2  |  1  |     |                     2  |    2  |        |
    89  |  int argumentsFiltered = argume...  |         |  2  |              5  |                  3  |        2  |  2  |  2  |  1  |     |                     2  |    2  |        |
   102  |             builder = builder + 1;  |         |  2  |              5  |                  3  |        3  |  2  |  2  |  1  |     |                     2  |    2  |        |
   105  |                         R = R + 1;  |      1  |  3  |              5  |                  3  |        3  |  2  |  2  |  1  |     |                     2  |    2  |        |
   107  |                      int sep2 = 2;  |         |  3  |              5  |                  3  |        3  |  2  |  2  |  1  |     |                     2  |    2  |     2  |
   109  |                         int k = 1;  |         |  3  |              5  |                  3  |        3  |  2  |  2  |  1  |  1  |                     2  |    2  |     2  |
   116  |          builder = builder + sep2;  |         |  3  |              5  |                  3  |        5  |  2  |  2  |  1  |  1  |                     2  |    2  |     2  |
   119  |                      R = R + sep2;  |      2  |  5  |              5  |                  3  |        5  |  2  |  2  |  1  |  1  |                     2  |    2  |     2  |
   123  |             builder = builder + 1;  |         |  5  |              5  |                  3  |        6  |  2  |  2  |  1  |  1  |                     2  |    2  |     2  |
   126  |                         R = R + 1;  |      1  |  6  |              5  |                  3  |        6  |  2  |  2  |  1  |  1  |                     2  |    2  |     2  |
   130  |                         k = k + 1;  |         |  6  |              5  |                  3  |        6  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   131  |              resetPlaceHolder_3();  |         |  6  |              5  |                  3  |        6  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   138  |          builder = builder + sep2;  |         |  6  |              5  |                  3  |        8  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   141  |                      R = R + sep2;  |      2  |  8  |              5  |                  3  |        8  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   145  |             builder = builder + 1;  |         |  8  |              5  |                  3  |        9  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   148  |                         R = R + 1;  |      1  |  9  |              5  |                  3  |        9  |  2  |  2  |  1  |  2  |                     2  |    2  |     2  |
   152  |                         k = k + 1;  |         |  9  |              5  |                  3  |        9  |  2  |  2  |  1  |  3  |                     2  |    2  |     2  |
   153  |              resetPlaceHolder_3();  |         |  9  |              5  |                  3  |        9  |  2  |  2  |  1  |  3  |                     2  |    2  |     2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [141, 105, 148, 50, 72, 119, 126]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {126}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {148}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {50}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {126}; {148}; {50}; {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {105}; {126}; {148}; {50}; {72} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         1  |
    82  |  resetPlaceHolder_1();  |         |                            |
   105  |             R = R + 1;  |      1  |                         2  |
   119  |          R = R + sep2;  |      2  |                            |
   126  |             R = R + 1;  |      1  |                         3  |
   131  |  resetPlaceHolder_3();  |         |                            |
   141  |          R = R + sep2;  |      2  |                            |
   148  |             R = R + 1;  |      1  |                         4  |
   153  |  resetPlaceHolder_3();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {119}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {119}; {141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {119}; {141} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |
   105  |             R = R + 1;  |      1  |                            |
   119  |          R = R + sep2;  |      2  |                         0  |
   126  |             R = R + 1;  |      1  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |
   141  |          R = R + sep2;  |      2  |                         1  |
   148  |             R = R + 1;  |      1  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {105}; {126}; {148}; {50}; {72}
GroupID(1): {119}; {141}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_3();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [51, 71])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [73, 104])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [106, 125])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [127, 147])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(131)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_3(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep2 -> R1 = R1 + sep2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-31 11:57:42,069 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:57:44,490 INFO     Done. Execution time: 2.420840263366699 seconds
2023-01-31 11:57:44,490 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:35: error: cannot find symbol
        R = R + sep;
        ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:35: error: cannot find symbol
        R = R + sep;
            ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:37: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:37: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class AppendRecursiveTypes
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.411s
user	0m4.434s
sys	0m0.187s

2023-01-31 11:57:44,490 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 11:57:44,490 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:00:51,490 INFO     Done. Execution time: 186.99904227256775 seconds
2023-01-31 12:00:51,490 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz2336703851804932342/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2336703851804932342/bin -o /tmp/qfuzz2336703851804932342/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2336703851804932342/bin
Found file /tmp/qfuzz2336703851804932342/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz2336703851804932342/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2336703851804932342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2336703851804932342/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2336703851804932342/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2336703851804932342/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 148116 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m148k to 148k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 44, 33, 85)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2336703851804932342/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_120051_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:00:51,491 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-31 12:00:51,491 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 12:01:00,463 INFO     Done. Execution time: 8.972075700759888 seconds
2023-01-31 12:01:00,464 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_120051_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_120051_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-31 12:01:00,464 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:01:12,094 INFO     Done. Execution time: 11.630094051361084 seconds
2023-01-31 12:01:12,094 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `8.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1201-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1201-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.619s
user	0m24.951s
sys	0m3.626s

2023-01-31 12:01:12,095 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 12:01:12,095 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:04:19,392 INFO     Done. Execution time: 187.296875 seconds
2023-01-31 12:04:19,392 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz4016466172303359258/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4016466172303359258/bin -o /tmp/qfuzz4016466172303359258/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4016466172303359258/bin
Found file /tmp/qfuzz4016466172303359258/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz4016466172303359258/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4016466172303359258/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4016466172303359258/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4016466172303359258/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz4016466172303359258/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 150946 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m150k to 150k us (average: 150k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 71.00; [175.00,975.00,1155.00,1435.00,1735.00,1806.00,1975.00]
2; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 5; 11.00; [35.00,46.00,1115.00,1235.00,1995.00]
4; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 7; 20.00; [95.00,115.00,175.00,1115.00,1155.00,1306.00,1975.00]
5; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 7; 80.00; [95.00,335.00,595.00,875.00,1395.00,1475.00,1666.00]
7; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 4; 11.00; [35.00,46.00,875.00,1735.00]
11; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 7; 140.00; [95.00,426.00,595.00,895.00,1115.00,1255.00,1775.00]
18; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 7; 169.00; [255.00,795.00,975.00,1155.00,1435.00,1806.00,1975.00]
19; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 7; 60.00; [175.00,1155.00,1215.00,1435.00,1735.00,1806.00,1975.00]
25; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 7; 71.00; [175.00,975.00,1295.00,1435.00,1735.00,1806.00,1975.00]
38; /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 7; 209.00; [526.00,735.00,975.00,1215.00,1435.00,1735.00,1975.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 71, 48, 86, 60, 98, 36, 58, 44, 47, 16, 8, 28, 58, 76, 16, 69, 55, 98, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 64, 13, 52, 21, 13, 69, 34, 64, 22, 16, 69, 55, 82, 64, 82, 39, 1, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 60, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 23, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 39, 12, 98, 57, 14, 2, 4, 40, 77, 18, 82, 82, 69, 31, 90, 47, 88, 79, 1, 1, 87)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 44, 55, 4, 88, 29, 62, 64, 62, 16, 69, 48, 30, 52, 14, 88, 29, 88, 14, 88, 29, 81, 48, 30, 30, 30, 30, 52, 14, 88, 29, 13, 14, 88, 29, 18, 64, 33, 27, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 86, 43, 43, 1, 1, 85, 1, 97, 74, 81, 17, 17, 33, 69, 52, 66, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(82, 16, 69, 43, 29, 73, 4, 91, 95, 1, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 100, 71, 9, 34, 57, 9, 34, 27, 16, 7, 4, 40, 29, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 61, 99, 67, 74, 7, 5, 8, 26, 54, 84, 30, 55, 71, 32, 69, 30, 21, 35, 61, 99, 67, 74, 7, 5, 74, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4016466172303359258/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_120419_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,71,48,86,60,98,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,64]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,60,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,39,12,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,44,55,4,88,29,62]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,86,43,43,1,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [82,16,69,43,29,73,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,8,98,57,5,55,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,55,61,99]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:04:19,393 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-31 12:04:19,393 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 12:04:30,487 INFO     Done. Execution time: 11.09376835823059 seconds
2023-01-31 12:04:30,487 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_120419_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_120419_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,71,48,86,60,98,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,64])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,60,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,39,12,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,44,55,4,88,29,62])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([82,16,69,43,29,73,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,8,98,57,5,55,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,55,61,99])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,86,43,43,1,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [25,71,48,86,60,98,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [89,71,48,86,8,98,64]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [89,71,60,86,8,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [89,71,48,39,12,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [20,44,55,4,88,29,62]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [1,1,86,43,43,1,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [82,16,69,43,29,73,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [64,8,98,57,5,55,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [1,1,1,1,55,61,99]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 122):
                                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |           diff           |  i  |  lhsBuilder  |  rhsBuilder  |
------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [25,71,48,86,60,98,36]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [25,71,48,86,60,98,36]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [25,71,48,86,60,98,36]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     25  |  [25,71,48,86,60,98,36]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     25  |   25  |     25  |  [25,71,48,86,60,98,36]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   25  |     25  |  [25,71,48,86,60,98,36]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   25  |     25  |  [25,71,48,86,60,98,36]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   25  |     71  |  [25,71,48,86,60,98,36]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     71  |   96  |     71  |  [25,71,48,86,60,98,36]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |   96  |     71  |  [25,71,48,86,60,98,36]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |   96  |     71  |  [25,71,48,86,60,98,36]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |   96  |     48  |  [25,71,48,86,60,98,36]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     48  |  144  |     48  |  [25,71,48,86,60,98,36]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  144  |     48  |  [25,71,48,86,60,98,36]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  144  |     48  |  [25,71,48,86,60,98,36]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  144  |     86  |  [25,71,48,86,60,98,36]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     86  |  230  |     86  |  [25,71,48,86,60,98,36]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  230  |     86  |  [25,71,48,86,60,98,36]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  230  |     86  |  [25,71,48,86,60,98,36]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  230  |     60  |  [25,71,48,86,60,98,36]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     60  |  290  |     60  |  [25,71,48,86,60,98,36]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  290  |     60  |  [25,71,48,86,60,98,36]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  290  |     60  |  [25,71,48,86,60,98,36]  |  5  |           0  |           0  |
    96  |        chunk = arrayRead(diff, i);  |         |  290  |     98  |  [25,71,48,86,60,98,36]  |  5  |           0  |           0  |
    99  |                     R = R + chunk;  |     98  |  388  |     98  |  [25,71,48,86,60,98,36]  |  5  |           0  |           0  |
   103  |                         i = i + 1;  |         |  388  |     98  |  [25,71,48,86,60,98,36]  |  6  |           0  |           0  |
   104  |              resetPlaceHolder_1();  |         |  388  |     98  |  [25,71,48,86,60,98,36]  |  6  |           0  |           0  |
   110  |        chunk = arrayRead(diff, i);  |         |  388  |     36  |  [25,71,48,86,60,98,36]  |  6  |           0  |           0  |
   113  |                     R = R + chunk;  |     36  |  424  |     36  |  [25,71,48,86,60,98,36]  |  6  |           0  |           0  |
   117  |                         i = i + 1;  |         |  424  |     36  |  [25,71,48,86,60,98,36]  |  7  |           0  |           0  |
   118  |              resetPlaceHolder_1();  |         |  424  |     36  |  [25,71,48,86,60,98,36]  |  7  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {85,113}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29,43}; {85,113}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29,43}; {85,113} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     25  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     71  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     48  |                            |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     86  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     60  |                         1  |
    90  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     98  |                            |
   104  |  resetPlaceHolder_1();  |         |                            |
   113  |         R = R + chunk;  |     36  |                         1  |
   118  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {57,71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {57,99}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [57, 71, 99]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43}; {85,113}
GroupID(1): {57,71,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |         R = R + chunk;  |     25  |                         0  |                            |
    34  |  resetPlaceHolder_1();  |         |                            |                            |
    43  |         R = R + chunk;  |     71  |                         0  |                            |
    48  |  resetPlaceHolder_1();  |         |                            |                            |
    57  |         R = R + chunk;  |     48  |                            |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |                            |
    71  |         R = R + chunk;  |     86  |                            |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    85  |         R = R + chunk;  |     60  |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     98  |                            |                         0  |
   104  |  resetPlaceHolder_1();  |         |                            |                            |
   113  |         R = R + chunk;  |     36  |                         1  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(48)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R0 = R0 + chunk;
    }
    else
    {
      if ((i < 5) || (i == 5))
      {
        R1 = R1 + chunk;
      }
      else
      {
        R0 = R0 + chunk;
      }
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
  else
  {
    // reset R0
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-31 12:04:30,487 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:10:13,144 INFO     Done. Execution time: 342.656676530838 seconds
2023-01-31 12:10:13,144 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 1) || (i == 1))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
      else
      {

      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 1) || (i == 1))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
      else
      {

      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4399451328119998101.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3269836146311488605.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5254667101566613455.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3825418082176694627.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8338783445026004022.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3385712485474878771.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8813092060815315925.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7812939081003551272.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1) (* 8 1 diff diff)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun diff () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> diff 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 (+ 0 (* 1 1) (* 8 1 diff diff)))
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 diff) (= a!1 diff)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    2)  (define-fun D1 () Int    (- 6))  (define-fun C1 () Int    3)  (define-fun diff () Int    1)  (define-fun D0p () Int    9)  (define-fun D1p () Int    7)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `339.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1204-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1204-transparentAmortize-60s-mostPrecise-000-099.csv`

real	5m42.649s
user	8m42.751s
sys	0m4.598s

2023-01-31 12:10:13,145 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 12:10:13,145 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:13:20,053 INFO     Done. Execution time: 186.90785098075867 seconds
2023-01-31 12:13:20,053 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz8252628444977162160/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8252628444977162160/bin -o /tmp/qfuzz8252628444977162160/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8252628444977162160/bin
Found file /tmp/qfuzz8252628444977162160/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz8252628444977162160/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8252628444977162160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8252628444977162160/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8252628444977162160/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8252628444977162160/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 143528 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 47.00; [108.00,175.00,975.00,1108.00,1155.00,1435.00,1735.00,1804.00,1975.00]
2; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 8; 40.00; [108.00,808.00,935.00,975.00,1235.00,1435.00,1575.00,1804.00]
4; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 9; 20.00; [28.00,115.00,224.00,568.00,1075.00,1155.00,1695.00,1715.00,1975.00]
5; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 9; 67.00; [108.00,175.00,468.00,975.00,1155.00,1435.00,1735.00,1804.00,1975.00]
12; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 9; 69.00; [35.00,175.00,588.00,975.00,1108.00,1435.00,1735.00,1804.00,1975.00]
16; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 9; 4.00; [155.00,215.00,944.00,948.00,1335.00,1375.00,1575.00,1655.00,1808.00]
19; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 9; 47.00; [108.00,175.00,975.00,1108.00,1155.00,1435.00,1655.00,1735.00,1804.00]
32; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 9; 120.00; [115.00,368.00,815.00,948.00,1155.00,1275.00,1535.00,1824.00,1975.00]
117; /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000008,src:000000+000006,op:splice,rep:8; 9; 7.00; [235.00,248.00,335.00,704.00,975.00,1228.00,1235.00,1435.00,1615.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000008,src:000000+000006,op:splice,rep:8
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000008,src:000000+000006,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 71, 48, 11, 16, 80, 61, 12, 61, 78, 36, 69, 18, 63, 91, 95, 87, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 76, 98, 57, 5, 63, 40, 18, 47, 16, 75, 8, 65, 26, 14, 80, 80, 80, 80, 96, 52, 55, 56, 80, 15, 80, 40, 91, 95, 35, 91, 50, 75, 68, 16, 1, 18, 31, 92, 45, 93, 49, 12, 40, 74, 1, 90, 1, 38, 5, 93, 49, 1, 14, 34, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 82, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 68, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 68, 78, 10, 82, 7, 66, 90, 47, 90, 26, 70, 26, 70, 79, 66, 90, 47, 90, 75, 70, 33, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 1, 29, 55, 4, 40, 29, 18, 64, 25, 69, 65, 97, 90, 24, 1, 67, 95, 74, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 23, 4, 40, 29, 18, 1, 82, 16, 69, 22, 90, 74, 40, 2, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 85, 84, 53, 57, 98, 5, 1, 28, 98, 69, 69, 2, 25, 50, 16, 97, 92, 56, 2, 25, 42, 60, 97, 92, 56, 84, 26, 50, 54, 54, 58, 28, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 71, 46, 61, 78, 5, 40, 47, 2, 57, 5, 55, 4, 40, 29, 18, 64, 82, 24, 29, 2, 40, 37, 18, 64, 82, 16, 5, 44, 47, 16, 7, 98, 1, 16, 40, 61, 30, 71, 8, 36, 43, 25, 33, 61, 52, 28, 100, 11, 52, 98, 57, 5, 55, 4, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8252628444977162160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_121319_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,71,48,11,16,80,61], 12, 61
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [90,76,98,57,5,63,40], 18, 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,82,57], 5, 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,68,78,10,82,7,66], 90, 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,1], 29, 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,85,84,53,57,98,5], 1, 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,71,46,61,78], 5, 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 55
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:13:20,053 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-31 12:13:20,054 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 12:13:37,156 INFO     Done. Execution time: 17.101643085479736 seconds
2023-01-31 12:13:37,156 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_121319_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_121319_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,71,48,11,16,80,61], 12, 61)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([90,76,98,57,5,63,40], 18, 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,82,57], 5, 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,68,78,10,82,7,66], 90, 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,1], 29, 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,85,84,53,57,98,5], 1, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,71,46,61,78], 5, 40)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [34,71,48,11,16,80,61]
years: 12
months: 61
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [90,76,98,57,5,63,40]
years: 18
months: 47
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [89,71,48,86,8,82,57]
years: 5
months: 55
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [46,68,78,10,82,7,66]
years: 90
months: 47
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [89,71,48,86,8,98,1]
years: 29
months: 55
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [89,71,48,86,8,98,57]
years: 5
months: 23
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [10,85,84,53,57,98,5]
years: 1
months: 28
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [89,71,48,71,46,61,78]
years: 5
months: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [89,71,48,86,8,98,57]
years: 5
months: 55
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 176):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |          tokens          |  years  |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      61  |  [34,71,48,11,16,80,61]  |     12  |
    26  |                      // int R = 0;  |         |    0  |         |     |      61  |  [34,71,48,11,16,80,61]  |     12  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      61  |  [34,71,48,11,16,80,61]  |     12  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      61  |  [34,71,48,11,16,80,61]  |     12  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      61  |  [34,71,48,11,16,80,61]  |     12  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |     34  |  0  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    41  |                     R = R + chunk;  |     34  |   34  |     34  |  0  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    44  |                     R = R + years;  |     12  |   46  |     34  |  0  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    47  |                    R = R + months;  |     61  |  107  |     34  |  0  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    51  |                         i = i + 1;  |         |  107  |     34  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    52  |              resetPlaceHolder_1();  |         |  107  |     34  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    58  |      chunk = arrayRead(tokens, i);  |         |  107  |     71  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    61  |                     R = R + chunk;  |     71  |  178  |     71  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    64  |                     R = R + years;  |     12  |  190  |     71  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    67  |                    R = R + months;  |     61  |  251  |     71  |  1  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    71  |                         i = i + 1;  |         |  251  |     71  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    72  |              resetPlaceHolder_1();  |         |  251  |     71  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    78  |      chunk = arrayRead(tokens, i);  |         |  251  |     48  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    81  |                     R = R + chunk;  |     48  |  299  |     48  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    84  |                     R = R + years;  |     12  |  311  |     48  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    87  |                    R = R + months;  |     61  |  372  |     48  |  2  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    91  |                         i = i + 1;  |         |  372  |     48  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    92  |              resetPlaceHolder_1();  |         |  372  |     48  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
    98  |      chunk = arrayRead(tokens, i);  |         |  372  |     11  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   101  |                     R = R + chunk;  |     11  |  383  |     11  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   104  |                     R = R + years;  |     12  |  395  |     11  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   107  |                    R = R + months;  |     61  |  456  |     11  |  3  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   111  |                         i = i + 1;  |         |  456  |     11  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   112  |              resetPlaceHolder_1();  |         |  456  |     11  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   118  |      chunk = arrayRead(tokens, i);  |         |  456  |     16  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   121  |                     R = R + chunk;  |     16  |  472  |     16  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   124  |                     R = R + years;  |     12  |  484  |     16  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   127  |                    R = R + months;  |     61  |  545  |     16  |  4  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   131  |                         i = i + 1;  |         |  545  |     16  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   132  |              resetPlaceHolder_1();  |         |  545  |     16  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   138  |      chunk = arrayRead(tokens, i);  |         |  545  |     80  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   141  |                     R = R + chunk;  |     80  |  625  |     80  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   144  |                     R = R + years;  |     12  |  637  |     80  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   147  |                    R = R + months;  |     61  |  698  |     80  |  5  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   151  |                         i = i + 1;  |         |  698  |     80  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   152  |              resetPlaceHolder_1();  |         |  698  |     80  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   158  |      chunk = arrayRead(tokens, i);  |         |  698  |     61  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   161  |                     R = R + chunk;  |     61  |  759  |     61  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   164  |                     R = R + years;  |     12  |  771  |     61  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   167  |                    R = R + months;  |     61  |  832  |     61  |  6  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   171  |                         i = i + 1;  |         |  832  |     61  |  7  |      61  |  [34,71,48,11,16,80,61]  |     12  |
   172  |              resetPlaceHolder_1();  |         |  832  |     61  |  7  |      61  |  [34,71,48,11,16,80,61]  |     12  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 21 trace node indices: [101, 164, 121, 84, 147, 61, 141, 124, 41, 161, 64, 44, 144, 81, 167, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {144}; {164}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {144}; {164}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     34  |                            |
    44  |         R = R + years;  |     12  |                         0  |
    47  |        R = R + months;  |     61  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     71  |                            |
    64  |         R = R + years;  |     12  |                         1  |
    67  |        R = R + months;  |     61  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     48  |                            |
    84  |         R = R + years;  |     12  |                         2  |
    87  |        R = R + months;  |     61  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     11  |                            |
   104  |         R = R + years;  |     12  |                         3  |
   107  |        R = R + months;  |     61  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     16  |                            |
   124  |         R = R + years;  |     12  |                         4  |
   127  |        R = R + months;  |     61  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     80  |                            |
   144  |         R = R + years;  |     12  |                         5  |
   147  |        R = R + months;  |     61  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     61  |                            |
   164  |         R = R + years;  |     12  |                         6  |
   167  |        R = R + months;  |     61  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     34  |                            |
    44  |         R = R + years;  |     12  |                            |
    47  |        R = R + months;  |     61  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     71  |                            |
    64  |         R = R + years;  |     12  |                            |
    67  |        R = R + months;  |     61  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     48  |                            |
    84  |         R = R + years;  |     12  |                            |
    87  |        R = R + months;  |     61  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     11  |                            |
   104  |         R = R + years;  |     12  |                            |
   107  |        R = R + months;  |     61  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     16  |                            |
   124  |         R = R + years;  |     12  |                            |
   127  |        R = R + months;  |     61  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     80  |                            |
   144  |         R = R + years;  |     12  |                            |
   147  |        R = R + months;  |     61  |                         5  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     61  |                         6  |
   164  |         R = R + years;  |     12  |                            |
   167  |        R = R + months;  |     61  |                         7  |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,101}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,121,141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,81,101}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,81,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,101,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,81,141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,101,141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,81,121,141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,101,121,141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {144}; {164}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121,141}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     34  |                            |                            |                         0  |
    44  |         R = R + years;  |     12  |                         0  |                            |                            |
    47  |        R = R + months;  |     61  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     71  |                            |                            |                         0  |
    64  |         R = R + years;  |     12  |                         1  |                            |                            |
    67  |        R = R + months;  |     61  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     48  |                            |                            |                         0  |
    84  |         R = R + years;  |     12  |                         2  |                            |                            |
    87  |        R = R + months;  |     61  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   104  |         R = R + years;  |     12  |                         3  |                            |                            |
   107  |        R = R + months;  |     61  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     16  |                            |                            |                         0  |
   124  |         R = R + years;  |     12  |                         4  |                            |                            |
   127  |        R = R + months;  |     61  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   141  |         R = R + chunk;  |     80  |                            |                            |                         0  |
   144  |         R = R + years;  |     12  |                         5  |                            |                            |
   147  |        R = R + months;  |     61  |                            |                         5  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |         R = R + chunk;  |     61  |                            |                         6  |                            |
   164  |         R = R + years;  |     12  |                         6  |                            |                            |
   167  |        R = R + months;  |     61  |                            |                         7  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 6 and 7 segment (index range: [162, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     34  |                            |                            |                         0  |
    44  |         R = R + years;  |     12  |                         0  |                            |                            |
    47  |        R = R + months;  |     61  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     71  |                            |                            |                         0  |
    64  |         R = R + years;  |     12  |                         1  |                            |                            |
    67  |        R = R + months;  |     61  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     48  |                            |                            |                         0  |
    84  |         R = R + years;  |     12  |                         2  |                            |                            |
    87  |        R = R + months;  |     61  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   104  |         R = R + years;  |     12  |                         3  |                            |                            |
   107  |        R = R + months;  |     61  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     16  |                            |                            |                         0  |
   124  |         R = R + years;  |     12  |                         4  |                            |                            |
   127  |        R = R + months;  |     61  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   141  |         R = R + chunk;  |     80  |                            |                            |                         0  |
   144  |         R = R + years;  |     12  |                         5  |                            |                            |
   147  |        R = R + months;  |     61  |                            |                         5  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |         R = R + chunk;  |     61  |                            |                         6  |                            |
   164  |         R = R + years;  |     12  |                         6  |                            |                            |
   167  |        R = R + months;  |     61  |                            |                         7  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 152, 132, 92, 112, 72)
GroupID(1): Set(52, 152, 132, 92, 112, 72)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R years -> R0 = R0 + years;
use R chunk -> if ((i < 5) || (i == 5))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
use R months -> R1 = R1 + months;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-31 12:13:37,156 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:16:10,083 INFO     Done. Execution time: 152.9265103340149 seconds
2023-01-31 12:16:10,084 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 5) || (i == 5))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 5) || (i == 5))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months) (* 1 1 tokens)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months) (* 1 1 tokens)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (<= D1p (+ 0 (* 1 1 months) (* 1 1 tokens))))
      (a!5 (or (<= D2p (+ 0 (* 1 1 tokens))) (= D2p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1 years))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       a!4
       (or a!4 (= D1p 0))
       (<= D2p 0)
       a!5
       (<= D0p (+ 0 (* 1 1 years)))
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 months) (* 1 1 tokens))) (= D1 0)))
      (a!2 (or (<= D2 (+ 0 (* 1 1 tokens))) (= D2 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1 years))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 (+ 0 (* 1 1 tokens)))
     (<= C2 0)
     (<= C0 (+ 0 (* 1 1 tokens)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 1))  (define-fun D2 () Int    7)  (define-fun D1 () Int    7)  (define-fun C1 () Int    10)  (define-fun months () Int    1)  (define-fun tokens () Int    13)  (define-fun years () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    3)  (define-fun C2 () Int    0)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `150.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1213-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1213-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m32.917s
user	8m45.574s
sys	0m25.218s

2023-01-31 12:16:10,084 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 12:16:10,084 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:19:17,460 INFO     Done. Execution time: 187.3752567768097 seconds
2023-01-31 12:19:17,460 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz5166791477821878858/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5166791477821878858/bin -o /tmp/qfuzz5166791477821878858/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5166791477821878858/bin
Found file /tmp/qfuzz5166791477821878858/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz5166791477821878858/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5166791477821878858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5166791477821878858/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5166791477821878858/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz5166791477821878858/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 170750 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m170k to 170k us (average: 170k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(54, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5166791477821878858/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_121917_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:19:17,460 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-31 12:19:17,461 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 12:19:27,102 INFO     Done. Execution time: 9.641543865203857 seconds
2023-01-31 12:19:27,103 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_121917_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_121917_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-31 12:19:27,103 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:19:37,622 INFO     Done. Execution time: 10.518853664398193 seconds
2023-01-31 12:19:37,622 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `7.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1219-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1219-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.504s
user	0m22.103s
sys	0m3.337s

2023-01-31 12:19:37,623 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:19:37,623 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:22:44,742 INFO     Done. Execution time: 187.11871647834778 seconds
2023-01-31 12:22:44,742 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz8063639759398677401/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8063639759398677401/bin -o /tmp/qfuzz8063639759398677401/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8063639759398677401/bin
Found file /tmp/qfuzz8063639759398677401/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz8063639759398677401/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8063639759398677401/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8063639759398677401/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8063639759398677401/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8063639759398677401/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 163490 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m163k to 163k us (average: 163k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 11; 1.00; [28.00,32.00,35.50,37.00,168.00,968.00,1148.00,1428.00,1728.00,1788.00,1968.00]
2; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 10; 1.00; [28.00,32.00,35.50,37.00,608.00,648.00,808.00,1588.00,1848.00,1988.00]
4; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 11; 1.00; [28.00,32.00,35.50,37.00,228.00,268.00,548.00,1168.00,1428.00,1508.00,1948.00]
5; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 11; 1.00; [28.00,32.00,35.50,37.00,508.00,668.00,868.00,928.00,1228.00,1368.00,1568.00]
8; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 10; 1.00; [28.00,32.00,35.50,37.00,108.00,168.00,588.00,1048.00,1908.00,1948.00]
29; /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 10; 1.00; [28.00,32.00,35.50,37.00,168.00,368.00,608.00,808.00,908.00,1468.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 18, 45, 40, 8, 73, 1, 99, 89, 76, 40, 53, 2, 9, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52, 5, 1, 97, 29, 8, 95, 1, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 43, 25, 46, 61, 78, 68, 44, 47, 16, 54, 64, 82, 16, 69, 55, 90, 74, 9, 34, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 75, 13, 97, 11, 27, 58, 11, 44, 74, 40, 98, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 40, 79, 32, 92, 30, 99, 15, 32, 91, 42, 99, 33, 39, 77, 35, 1, 56)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8063639759398677401/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122244_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,18,45,40,8,73,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52,5,1,97,29,8,95]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,43,25,46,61,78,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [71,75,13,97,11,27,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,40,79,32,92,30,99]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:22:44,742 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:22:44,743 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:23:02,988 INFO     Done. Execution time: 18.245429515838623 seconds
2023-01-31 12:23:02,989 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122244_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122244_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,18,45,40,8,73,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,43,25,46,61,78,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([71,75,13,97,11,27,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52,5,1,97,29,8,95])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,40,79,32,92,30,99])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [30,18,45,40,8,73,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [52,5,1,97,29,8,95]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [33,43,25,46,61,78,68]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [71,75,13,97,11,27,58]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [1,40,79,32,92,30,99]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 255):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |      baseMessage       |  buffer  |  chunk  |  i  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [30,18,45,40,8,73,1]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [30,18,45,40,8,73,1]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [30,18,45,40,8,73,1]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [30,18,45,40,8,73,1]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    42  |                     R = R + chunk;  |     30  |   35  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    45  |                         R = R + 1;  |      1  |   36  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    48  |                         R = R + 1;  |      1  |   37  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    51  |                         R = R + 1;  |      1  |   38  |  [30,18,45,40,8,73,1]  |       0  |     30  |  0  |
    55  |                         i = i + 1;  |         |   38  |  [30,18,45,40,8,73,1]  |       0  |     30  |  1  |
    56  |              resetPlaceHolder_1();  |         |   38  |  [30,18,45,40,8,73,1]  |       0  |     30  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   38  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    65  |                         R = R + 1;  |      1  |   39  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    68  |                         R = R + 1;  |      1  |   40  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    71  |                         R = R + 1;  |      1  |   41  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    74  |                     R = R + chunk;  |     18  |   59  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    77  |                         R = R + 1;  |      1  |   60  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    80  |                         R = R + 1;  |      1  |   61  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    83  |                         R = R + 1;  |      1  |   62  |  [30,18,45,40,8,73,1]  |       0  |     18  |  1  |
    87  |                         i = i + 1;  |         |   62  |  [30,18,45,40,8,73,1]  |       0  |     18  |  2  |
    88  |              resetPlaceHolder_1();  |         |   62  |  [30,18,45,40,8,73,1]  |       0  |     18  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |   62  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
    97  |                         R = R + 1;  |      1  |   63  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   100  |                         R = R + 1;  |      1  |   64  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   103  |                         R = R + 1;  |      1  |   65  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   106  |                     R = R + chunk;  |     45  |  110  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   109  |                         R = R + 1;  |      1  |  111  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   112  |                         R = R + 1;  |      1  |  112  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   115  |                         R = R + 1;  |      1  |  113  |  [30,18,45,40,8,73,1]  |       0  |     45  |  2  |
   119  |                         i = i + 1;  |         |  113  |  [30,18,45,40,8,73,1]  |       0  |     45  |  3  |
   120  |              resetPlaceHolder_1();  |         |  113  |  [30,18,45,40,8,73,1]  |       0  |     45  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  113  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   129  |                         R = R + 1;  |      1  |  114  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   132  |                         R = R + 1;  |      1  |  115  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   135  |                         R = R + 1;  |      1  |  116  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   138  |                     R = R + chunk;  |     40  |  156  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   141  |                         R = R + 1;  |      1  |  157  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   144  |                         R = R + 1;  |      1  |  158  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   147  |                         R = R + 1;  |      1  |  159  |  [30,18,45,40,8,73,1]  |       0  |     40  |  3  |
   151  |                         i = i + 1;  |         |  159  |  [30,18,45,40,8,73,1]  |       0  |     40  |  4  |
   152  |              resetPlaceHolder_1();  |         |  159  |  [30,18,45,40,8,73,1]  |       0  |     40  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  159  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   161  |                         R = R + 1;  |      1  |  160  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   164  |                         R = R + 1;  |      1  |  161  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   167  |                         R = R + 1;  |      1  |  162  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   170  |                     R = R + chunk;  |      8  |  170  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   173  |                         R = R + 1;  |      1  |  171  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   176  |                         R = R + 1;  |      1  |  172  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   179  |                         R = R + 1;  |      1  |  173  |  [30,18,45,40,8,73,1]  |       0  |      8  |  4  |
   183  |                         i = i + 1;  |         |  173  |  [30,18,45,40,8,73,1]  |       0  |      8  |  5  |
   184  |              resetPlaceHolder_1();  |         |  173  |  [30,18,45,40,8,73,1]  |       0  |      8  |  5  |
   190  |  chunk = arrayRead(baseMessage,...  |         |  173  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   193  |                         R = R + 1;  |      1  |  174  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   196  |                         R = R + 1;  |      1  |  175  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   199  |                         R = R + 1;  |      1  |  176  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   202  |                     R = R + chunk;  |     73  |  249  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   205  |                         R = R + 1;  |      1  |  250  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   208  |                         R = R + 1;  |      1  |  251  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   211  |                         R = R + 1;  |      1  |  252  |  [30,18,45,40,8,73,1]  |       0  |     73  |  5  |
   215  |                         i = i + 1;  |         |  252  |  [30,18,45,40,8,73,1]  |       0  |     73  |  6  |
   216  |              resetPlaceHolder_1();  |         |  252  |  [30,18,45,40,8,73,1]  |       0  |     73  |  6  |
   222  |  chunk = arrayRead(baseMessage,...  |         |  252  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   225  |                         R = R + 1;  |      1  |  253  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   228  |                         R = R + 1;  |      1  |  254  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   231  |                         R = R + 1;  |      1  |  255  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   234  |                     R = R + chunk;  |      1  |  256  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   237  |                         R = R + 1;  |      1  |  257  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   240  |                         R = R + 1;  |      1  |  258  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   243  |                         R = R + 1;  |      1  |  259  |  [30,18,45,40,8,73,1]  |       0  |      1  |  6  |
   247  |                         i = i + 1;  |         |  259  |  [30,18,45,40,8,73,1]  |       0  |      1  |  7  |
   248  |              resetPlaceHolder_1();  |         |  259  |  [30,18,45,40,8,73,1]  |       0  |      1  |  7  |
   254  |                         R = R + 1;  |      1  |  260  |  [30,18,45,40,8,73,1]  |       0  |      1  |  7  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 52 trace node indices: [138, 234, 170, 115, 202, 42, 196, 20, 228, 164, 179, 211, 106, 147, 132, 243, 74, 33, 65, 97, 141, 109, 225, 77, 193, 173, 129, 237, 205, 45, 161, 17, 176, 71, 144, 39, 208, 103, 240, 135, 80, 167, 112, 48, 199, 231, 36, 51, 68, 254, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {193}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {196}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {199}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {205}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {208}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {228}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {231}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     30  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     18  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     45  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     40  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |      8  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                        32  |
   196  |             R = R + 1;  |      1  |                        33  |
   199  |             R = R + 1;  |      1  |                        34  |
   202  |         R = R + chunk;  |     73  |                            |
   205  |             R = R + 1;  |      1  |                        35  |
   208  |             R = R + 1;  |      1  |                        36  |
   211  |             R = R + 1;  |      1  |                        37  |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                        38  |
   228  |             R = R + 1;  |      1  |                        39  |
   231  |             R = R + 1;  |      1  |                        40  |
   234  |         R = R + chunk;  |      1  |                        41  |
   237  |             R = R + 1;  |      1  |                        42  |
   240  |             R = R + 1;  |      1  |                        43  |
   243  |             R = R + 1;  |      1  |                        44  |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                        45  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {138,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {138,170}; {42,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {138,170}; {42,74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |     30  |                         0  |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |     18  |                         0  |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     45  |                            |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |     40  |                         1  |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |      8  |                         1  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                            |
   196  |             R = R + 1;  |      1  |                            |
   199  |             R = R + 1;  |      1  |                            |
   202  |         R = R + chunk;  |     73  |                            |
   205  |             R = R + 1;  |      1  |                            |
   208  |             R = R + 1;  |      1  |                            |
   211  |             R = R + 1;  |      1  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                            |
   228  |             R = R + 1;  |      1  |                            |
   231  |             R = R + 1;  |      1  |                            |
   234  |         R = R + chunk;  |      1  |                            |
   237  |             R = R + 1;  |      1  |                            |
   240  |             R = R + 1;  |      1  |                            |
   243  |             R = R + 1;  |      1  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {138,170}; {42,74}
GroupID(2): {106,202}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 192])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 32 and 33 segment (index range: [194, 195])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 33 and 34 segment (index range: [197, 198])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 34 and 35 segment (index range: [200, 204])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 35 and 36 segment (index range: [206, 207])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 36 and 37 segment (index range: [209, 210])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 37 and 38 segment (index range: [212, 224])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 38 and 39 segment (index range: [226, 227])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 39 and 40 segment (index range: [229, 230])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 40 and 41 segment (index range: [232, 233])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 41 and 42 segment (index range: [235, 236])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 42 and 43 segment (index range: [238, 239])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 43 and 44 segment (index range: [241, 242])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 44 and 45 segment (index range: [244, 253])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     30  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     45  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     73  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(88)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 4) || (i == 4))
{
  if ((i < 1) || (i == 1))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
else
{
  if ((i < 5) || (i == 5))
  {
    R2 = R2 + chunk;
  }
  else
  {
    R0 = R0 + chunk;
  }
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-31 12:23:02,991 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:27:22,035 INFO     Done. Execution time: 259.04351115226746 seconds
2023-01-31 12:27:22,035 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 4) || (i == 4))
      {
        if ((i < 1) || (i == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 4) || (i == 4))
      {
        if ((i < 1) || (i == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4229755366444707194.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1319741855449727397.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8833368603746514272.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2750387750899961084.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4693908883608714161.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5397173371813965672.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2928236740975175242.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6047314461084636538.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 baseMessage baseMessage baseMessage)))` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       (or true (= D2p 0))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 (+ 0 (* 1 1 baseMessage baseMessage baseMessage)))
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    4)  (define-fun D1 () Int    6)  (define-fun D2 () Int    2)  (define-fun C2 () Int    8)  (define-fun C1 () Int    9)  (define-fun baseMessage () Int    16)  (define-fun D0p () Int    15)  (define-fun D1p () Int    13)  (define-fun D2p () Int    0)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `256.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1223-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1223-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m19.015s
user	7m18.738s
sys	0m5.179s

2023-01-31 12:27:22,036 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 12:27:22,036 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:30:29,524 INFO     Done. Execution time: 187.48762345314026 seconds
2023-01-31 12:30:29,524 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz8720267102561482852/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8720267102561482852/bin -o /tmp/qfuzz8720267102561482852/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8720267102561482852/bin
Found file /tmp/qfuzz8720267102561482852/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz8720267102561482852/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8720267102561482852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8720267102561482852/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8720267102561482852/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8720267102561482852/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 136936 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (18 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 1; 0.00; [57.00]
4; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
10; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
14; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
25; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
27; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
29; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
32; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
33; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
40; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
44; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
57; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
67; /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 61, 26, 71, 9, 22, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 69, 1, 13, 43, 13, 13, 13, 13, 13, 13, 13, 13, 100, 81, 33, 13, 13, 13, 13, 100, 81, 33, 1, 13, 13, 13, 13, 13, 13, 49, 69, 13, 13, 13, 13, 13, 13, 37, 13, 13, 85, 13, 13, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 40, 29, 29, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 5, 61, 84, 98)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 1, 17, 55, 60, 16, 97, 40, 99, 52, 37, 75, 45, 68, 54, 21, 1, 14, 3, 39, 99, 39, 39, 42, 90, 87, 40, 20, 41, 1, 81, 92, 21, 45, 98, 95, 37, 37, 75, 45, 2, 5, 75, 60, 24, 82)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 17, 13, 1, 65, 5, 1, 1, 9, 10, 1, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 45, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 81, 22, 86, 86, 7, 95, 18, 14, 91, 1, 13, 25, 52, 20, 25, 56, 20, 43, 43, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 67, 91, 17, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 64, 82, 16, 69, 55, 90, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 39, 2, 65)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 88, 57, 55, 30, 39, 23, 97, 87, 90, 48, 30, 55, 71, 32, 69, 30, 21, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8720267102561482852/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123029_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 92
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 31
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 68
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 91
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:30:29,525 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-31 12:30:29,525 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 12:30:38,964 INFO     Done. Execution time: 9.438177585601807 seconds
2023-01-31 12:30:38,964 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123029_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123029_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 18 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(92)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 18 (44.44%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(31)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(68)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(58)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(91)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 18 (88.89%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 18)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 18 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 92
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 16
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 70
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 31
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 68
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 58
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 91
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 89
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 18 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 950):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         44  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         44  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         44  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         44  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         44  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         44  |          44  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         44  |          43  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         44  |          43  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         44  |          43  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         44  |          43  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         44  |          42  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         44  |          42  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         44  |          42  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         44  |          42  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         44  |          41  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         44  |          41  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         44  |          41  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         44  |          41  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         44  |          40  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         44  |          40  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         44  |          40  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         44  |          40  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         44  |          39  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         44  |          39  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         44  |          39  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         44  |          39  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         44  |          38  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         44  |          38  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         44  |          38  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         44  |          38  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         44  |          37  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         44  |          37  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         44  |          37  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         44  |          37  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         44  |          36  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         44  |          36  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         44  |          36  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         44  |          36  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         44  |          35  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         44  |          35  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         44  |          35  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         44  |          35  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         44  |          34  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         44  |          34  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         44  |          34  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         44  |          34  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         44  |          33  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         44  |          33  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         44  |          33  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         44  |          33  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         44  |          32  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         44  |          32  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         44  |          32  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         44  |          32  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         44  |          31  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         44  |          31  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         44  |          31  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         44  |          31  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         44  |          30  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         44  |          30  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         44  |          30  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         44  |          30  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         44  |          29  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         44  |          29  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         44  |          29  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         44  |          29  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         44  |          28  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         44  |          28  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         44  |          28  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         44  |          28  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         44  |          27  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         44  |          27  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         44  |          27  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         44  |          27  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         44  |          26  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         44  |          26  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         44  |          26  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         44  |          26  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         44  |          25  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         44  |          25  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         44  |          25  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         44  |          25  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         44  |          24  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         44  |          24  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         44  |          24  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         44  |          24  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         44  |          23  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         44  |          23  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         44  |          23  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         44  |          23  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         44  |          22  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         44  |          22  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         44  |          22  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         44  |          22  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         44  |          21  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         44  |          21  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         44  |          21  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         44  |          21  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         44  |          20  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         44  |          20  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         44  |          20  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         44  |          20  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         44  |          19  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         44  |          19  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         44  |          19  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         44  |          19  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         44  |          18  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         44  |          18  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         44  |          18  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         44  |          18  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         44  |          17  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         44  |          17  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         44  |          17  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         44  |          17  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         44  |          16  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         44  |          16  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         44  |          16  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         44  |          16  |
   617  |       className_ = className_ - 1;  |         |  56  |           56  |         44  |          15  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |  56  |           58  |         44  |          15  |
   624  |                         R = R + 2;  |      2  |  58  |           58  |         44  |          15  |
   625  |              resetPlaceHolder_1();  |         |  58  |           58  |         44  |          15  |
   638  |       className_ = className_ - 1;  |         |  58  |           58  |         44  |          14  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |  58  |           60  |         44  |          14  |
   645  |                         R = R + 2;  |      2  |  60  |           60  |         44  |          14  |
   646  |              resetPlaceHolder_1();  |         |  60  |           60  |         44  |          14  |
   659  |       className_ = className_ - 1;  |         |  60  |           60  |         44  |          13  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |  60  |           62  |         44  |          13  |
   666  |                         R = R + 2;  |      2  |  62  |           62  |         44  |          13  |
   667  |              resetPlaceHolder_1();  |         |  62  |           62  |         44  |          13  |
   680  |       className_ = className_ - 1;  |         |  62  |           62  |         44  |          12  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |  62  |           64  |         44  |          12  |
   687  |                         R = R + 2;  |      2  |  64  |           64  |         44  |          12  |
   688  |              resetPlaceHolder_1();  |         |  64  |           64  |         44  |          12  |
   701  |       className_ = className_ - 1;  |         |  64  |           64  |         44  |          11  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |  64  |           66  |         44  |          11  |
   708  |                         R = R + 2;  |      2  |  66  |           66  |         44  |          11  |
   709  |              resetPlaceHolder_1();  |         |  66  |           66  |         44  |          11  |
   722  |       className_ = className_ - 1;  |         |  66  |           66  |         44  |          10  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |  66  |           68  |         44  |          10  |
   729  |                         R = R + 2;  |      2  |  68  |           68  |         44  |          10  |
   730  |              resetPlaceHolder_1();  |         |  68  |           68  |         44  |          10  |
   743  |       className_ = className_ - 1;  |         |  68  |           68  |         44  |           9  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |  68  |           70  |         44  |           9  |
   750  |                         R = R + 2;  |      2  |  70  |           70  |         44  |           9  |
   751  |              resetPlaceHolder_1();  |         |  70  |           70  |         44  |           9  |
   764  |       className_ = className_ - 1;  |         |  70  |           70  |         44  |           8  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |  70  |           72  |         44  |           8  |
   771  |                         R = R + 2;  |      2  |  72  |           72  |         44  |           8  |
   772  |              resetPlaceHolder_1();  |         |  72  |           72  |         44  |           8  |
   785  |       className_ = className_ - 1;  |         |  72  |           72  |         44  |           7  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |  72  |           74  |         44  |           7  |
   792  |                         R = R + 2;  |      2  |  74  |           74  |         44  |           7  |
   793  |              resetPlaceHolder_1();  |         |  74  |           74  |         44  |           7  |
   806  |       className_ = className_ - 1;  |         |  74  |           74  |         44  |           6  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |  74  |           76  |         44  |           6  |
   813  |                         R = R + 2;  |      2  |  76  |           76  |         44  |           6  |
   814  |              resetPlaceHolder_1();  |         |  76  |           76  |         44  |           6  |
   827  |       className_ = className_ - 1;  |         |  76  |           76  |         44  |           5  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |  76  |           78  |         44  |           5  |
   834  |                         R = R + 2;  |      2  |  78  |           78  |         44  |           5  |
   835  |              resetPlaceHolder_1();  |         |  78  |           78  |         44  |           5  |
   848  |       className_ = className_ - 1;  |         |  78  |           78  |         44  |           4  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |  78  |           80  |         44  |           4  |
   855  |                         R = R + 2;  |      2  |  80  |           80  |         44  |           4  |
   856  |              resetPlaceHolder_1();  |         |  80  |           80  |         44  |           4  |
   869  |       className_ = className_ - 1;  |         |  80  |           80  |         44  |           3  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |  80  |           82  |         44  |           3  |
   876  |                         R = R + 2;  |      2  |  82  |           82  |         44  |           3  |
   877  |              resetPlaceHolder_1();  |         |  82  |           82  |         44  |           3  |
   890  |       className_ = className_ - 1;  |         |  82  |           82  |         44  |           2  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |  82  |           84  |         44  |           2  |
   897  |                         R = R + 2;  |      2  |  84  |           84  |         44  |           2  |
   898  |              resetPlaceHolder_1();  |         |  84  |           84  |         44  |           2  |
   911  |       className_ = className_ - 1;  |         |  84  |           84  |         44  |           1  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |  84  |           86  |         44  |           1  |
   918  |                         R = R + 2;  |      2  |  86  |           86  |         44  |           1  |
   919  |              resetPlaceHolder_1();  |         |  86  |           86  |         44  |           1  |
   932  |       className_ = className_ - 1;  |         |  86  |           86  |         44  |           0  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |  86  |           88  |         44  |           0  |
   939  |                         R = R + 2;  |      2  |  88  |           88  |         44  |           0  |
   940  |              resetPlaceHolder_1();  |         |  88  |           88  |         44  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 44 trace node indices: [645, 666, 582, 120, 288, 372, 57, 78, 834, 687, 561, 729, 435, 456, 519, 141, 225, 393, 792, 750, 204, 498, 540, 477, 330, 267, 162, 939, 855, 414, 876, 99, 771, 813, 351, 246, 36, 183, 603, 918, 897, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 730, 247, 142, 814, 898, 709, 436, 37, 184, 751, 289, 646, 121, 877, 793, 625, 583, 499, 457, 205, 541, 856, 562, 772, 919, 604, 520, 394, 226, 310, 331, 688, 58, 667, 478, 835, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-31 12:30:38,964 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:30:49,476 INFO     Done. Execution time: 10.510995626449585 seconds
2023-01-31 12:30:49,476 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `8.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1230-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1230-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.501s
user	0m21.915s
sys	0m2.930s

2023-01-31 12:30:49,476 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 12:30:49,476 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:33:56,620 INFO     Done. Execution time: 187.1438455581665 seconds
2023-01-31 12:33:56,621 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz2163571667984056445/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2163571667984056445/bin -o /tmp/qfuzz2163571667984056445/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2163571667984056445/bin
Found file /tmp/qfuzz2163571667984056445/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz2163571667984056445/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2163571667984056445/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2163571667984056445/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2163571667984056445/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2163571667984056445/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 124508 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2163571667984056445/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123356_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:33:56,621 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-31 12:33:56,621 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 12:34:05,380 INFO     Done. Execution time: 8.758705139160156 seconds
2023-01-31 12:34:05,381 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123356_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123356_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-31 12:34:05,381 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:34:14,392 INFO     Done. Execution time: 9.01078987121582 seconds
2023-01-31 12:34:14,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1234-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1234-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.999s
user	0m19.943s
sys	0m2.368s

2023-01-31 12:34:14,393 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 12:34:14,393 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:42:14,455 INFO     Done. Execution time: 480.06139159202576 seconds
2023-01-31 12:42:14,455 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5113235214624316828/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5113235214624316828/bin -o /tmp/qfuzz5113235214624316828/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5113235214624316828/bin
Found file /tmp/qfuzz5113235214624316828/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5113235214624316828/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5113235214624316828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5113235214624316828/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5113235214624316828/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz5113235214624316828/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 138967 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:3332)
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:596)
	at java.lang.StringBuilder.append(StringBuilder.java:195)
	at org.apache.commons.io.output.StringBuilderWriter.write(StringBuilderWriter.java:143)
	at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2370)
	at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2348)
	at org.apache.commons.io.IOUtils.copy(IOUtils.java:2325)
	at org.apache.commons.io.IOUtils.copy(IOUtils.java:2273)
	at org.apache.commons.io.IOUtils.toString(IOUtils.java:1041)
	at org.apache.commons.io.FileUtils.readFileToString(FileUtils.java:1766)
	at brbo.BrboMain$.executeCommand(BrboMain.scala:278)
	at brbo.backend2.qfuzz.Executor$.$anonfun$run$2(Executor.scala:83)
	at brbo.backend2.qfuzz.Executor$$$Lambda$125/2031588185.apply$mcV$sp(Unknown Source)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659)
	at scala.concurrent.Future$$$Lambda$126/1320388319.apply(Unknown Source)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.Future$$Lambda$127/973843173.apply(Unknown Source)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.Promise$$Lambda$128/1077873186.apply(Unknown Source)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:175)

2023-01-31 12:42:14,456 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-31 12:42:14,456 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 12:42:16,991 INFO     Done. Execution time: 2.5351274013519287 seconds
2023-01-31 12:42:16,991 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
java.util.NoSuchElementException
	at scala.collection.LinearSeqOptimized.last(LinearSeqOptimized.scala:150)
	at scala.collection.LinearSeqOptimized.last$(LinearSeqOptimized.scala:149)
	at scala.collection.immutable.List.last(List.scala:91)
	at brbo.backend2.qfuzz.Executor$.getInputFilePath(Executor.scala:215)
	at brbo.BrboMain$.decompose(BrboMain.scala:168)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:111)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 12:42:16,992 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:42:18,367 INFO     Done. Execution time: 1.3756144046783447 seconds
2023-01-31 12:42:18,368 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.366s
user	0m2.190s
sys	0m0.162s

2023-01-31 12:42:18,368 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 12:42:18,368 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:45:25,518 INFO     Done. Execution time: 187.14914774894714 seconds
2023-01-31 12:45:25,518 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz5744621526256900673/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5744621526256900673/bin -o /tmp/qfuzz5744621526256900673/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5744621526256900673/bin
Found file /tmp/qfuzz5744621526256900673/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz5744621526256900673/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5744621526256900673/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5744621526256900673/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5744621526256900673/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz5744621526256900673/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 136540 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5744621526256900673/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124525_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:45:25,518 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-31 12:45:25,518 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 12:45:33,876 INFO     Done. Execution time: 8.357046365737915 seconds
2023-01-31 12:45:33,876 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124525_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124525_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-31 12:45:33,876 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:45:43,705 INFO     Done. Execution time: 9.828681945800781 seconds
2023-01-31 12:45:43,705 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `7.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1245-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1245-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.820s
user	0m20.601s
sys	0m2.715s

2023-01-31 12:45:43,705 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 12:45:43,706 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:48:50,864 INFO     Done. Execution time: 187.1577913761139 seconds
2023-01-31 12:48:50,864 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz4782516956498251952/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4782516956498251952/bin -o /tmp/qfuzz4782516956498251952/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4782516956498251952/bin
Found file /tmp/qfuzz4782516956498251952/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz4782516956498251952/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4782516956498251952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4782516956498251952/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4782516956498251952/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz4782516956498251952/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 115212 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4782516956498251952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124850_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:48:50,864 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-31 12:48:50,864 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 12:48:58,611 INFO     Done. Execution time: 7.74695897102356 seconds
2023-01-31 12:48:58,612 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124850_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124850_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-31 12:48:58,612 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:49:08,567 INFO     Done. Execution time: 9.954559564590454 seconds
2023-01-31 12:49:08,567 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `7.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1248-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1248-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.946s
user	0m22.200s
sys	0m3.030s

2023-01-31 12:49:08,567 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 12:49:08,567 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:52:15,699 INFO     Done. Execution time: 187.13108682632446 seconds
2023-01-31 12:52:15,699 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz5942993994085065433/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5942993994085065433/bin -o /tmp/qfuzz5942993994085065433/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5942993994085065433/bin
Found file /tmp/qfuzz5942993994085065433/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz5942993994085065433/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5942993994085065433/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5942993994085065433/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5942993994085065433/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz5942993994085065433/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 138313 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 12, 43, 33, 21, 53, 52, 57, 41, 43, 14, 33, 53, 75, 95, 25, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz5942993994085065433/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125215_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:52:15,699 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-31 12:52:15,700 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 12:52:20,889 INFO     Done. Execution time: 5.18899941444397 seconds
2023-01-31 12:52:20,889 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125215_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125215_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-31 12:52:20,889 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:52:23,712 INFO     Done. Execution time: 2.821985960006714 seconds
2023-01-31 12:52:23,712 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1252-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1252-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.813s
user	0m4.886s
sys	0m0.272s

2023-01-31 12:52:23,712 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 12:52:23,712 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:55:30,433 INFO     Done. Execution time: 186.72059798240662 seconds
2023-01-31 12:55:30,433 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz9102734172009357584/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9102734172009357584/bin -o /tmp/qfuzz9102734172009357584/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9102734172009357584/bin
Found file /tmp/qfuzz9102734172009357584/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz9102734172009357584/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9102734172009357584/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9102734172009357584/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9102734172009357584/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz9102734172009357584/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 134422 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 1, 1, 1, 19, 93, 1, 9, 51, 75, 96)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz9102734172009357584/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125530_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:55:30,434 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-31 12:55:30,434 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 12:55:39,956 INFO     Done. Execution time: 9.522526741027832 seconds
2023-01-31 12:55:39,957 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125530_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125530_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-31 12:55:39,957 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:55:52,438 INFO     Done. Execution time: 12.480890274047852 seconds
2023-01-31 12:55:52,438 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `10.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1255-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1255-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.473s
user	0m34.209s
sys	0m4.606s

2023-01-31 12:55:52,438 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 12:55:52,438 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 12:58:58,738 INFO     Done. Execution time: 186.29962396621704 seconds
2023-01-31 12:58:58,738 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz1382838254268561878/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1382838254268561878/bin -o /tmp/qfuzz1382838254268561878/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1382838254268561878/bin
Found file /tmp/qfuzz1382838254268561878/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz1382838254268561878/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1382838254268561878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1382838254268561878/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1382838254268561878/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz1382838254268561878/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 124975 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 1, 34, 90, 34, 13, 34, 77, 77, 20, 81, 34, 77, 77, 20, 89, 41, 97, 97, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1382838254268561878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125858_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:58:58,739 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-31 12:58:58,739 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 12:59:07,972 INFO     Done. Execution time: 9.233286619186401 seconds
2023-01-31 12:59:07,973 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125858_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125858_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-31 12:59:07,973 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:59:17,797 INFO     Done. Execution time: 9.823567390441895 seconds
2023-01-31 12:59:17,797 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `7.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1259-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1259-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.805s
user	0m20.846s
sys	0m2.912s

2023-01-31 12:59:17,797 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 12:59:17,798 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:02:24,600 INFO     Done. Execution time: 186.80200719833374 seconds
2023-01-31 13:02:24,600 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz4441452235187704608/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4441452235187704608/bin -o /tmp/qfuzz4441452235187704608/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4441452235187704608/bin
Found file /tmp/qfuzz4441452235187704608/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz4441452235187704608/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4441452235187704608/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4441452235187704608/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4441452235187704608/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz4441452235187704608/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 133444 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 89, 10, 54, 23, 57, 55, 16, 17, 18, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4441452235187704608/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130224_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:02:24,601 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-31 13:02:24,601 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 13:02:31,233 INFO     Done. Execution time: 6.631906986236572 seconds
2023-01-31 13:02:31,233 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130224_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130224_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-31 13:02:31,233 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:02:40,074 INFO     Done. Execution time: 8.839929103851318 seconds
2023-01-31 13:02:40,074 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1302-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1302-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.832s
user	0m19.209s
sys	0m2.678s

2023-01-31 13:02:40,074 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 13:02:40,074 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:05:47,311 INFO     Done. Execution time: 187.23642587661743 seconds
2023-01-31 13:05:47,311 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz8646939196835115569/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8646939196835115569/bin -o /tmp/qfuzz8646939196835115569/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8646939196835115569/bin
Found file /tmp/qfuzz8646939196835115569/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz8646939196835115569/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8646939196835115569/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8646939196835115569/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8646939196835115569/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8646939196835115569/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 31, exec speed = 132122 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [35.00,43.00]
2; /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]
3; /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 8.00; [35.00,43.00]
4; /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 1; 0.00; [43.00]
6; /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 1, 25, 18, 61, 92, 77, 56, 72, 20, 7, 22, 74, 80, 24, 42, 97, 66, 87, 55, 55, 55, 22, 1, 1, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 25, 9, 51, 25, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 91, 67, 44, 42, 79, 88, 18, 98, 23, 40, 30, 55, 71, 32, 93, 6, 9, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8646939196835115569/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130547_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [1,25,18,61,92,77,56]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [71,25,9,51,25,91,95]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [1,1,1,55,91,67,44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [71,48,86,8,98,57,5]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:05:47,312 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-31 13:05:47,312 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 13:05:53,678 INFO     Done. Execution time: 6.366238355636597 seconds
2023-01-31 13:05:53,678 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130547_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130547_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [1,25,18,61,92,77,56])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [71,25,9,51,25,91,95])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [68])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [1,1,1,55,91,67,44])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [71,48,86,8,98,57,5])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [68]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [1,1,1,55,91,67,44]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [1,25,18,61,92,77,56]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [71,25,9,51,25,91,95]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [71,48,86,8,98,57,5]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 15):
                                                            
 Index  |   Commands   |  Costs  |  R  |  choices  |  str  |
------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [68]  |    2  |
    14  |     return;  |         |  0  |     [68]  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 73):
                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  choice  |         choices         |  i  |  str  |  strDigits  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [1,25,18,61,92,77,56]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [1,25,18,61,92,77,56]  |     |    2  |             |
    15  |  // mostPreciseBound(R <= str |...  |         |  0  |          |  [1,25,18,61,92,77,56]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [1,25,18,61,92,77,56]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [1,25,18,61,92,77,56]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [1,25,18,61,92,77,56]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [1,25,18,61,92,77,56]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |       1  |  [1,25,18,61,92,77,56]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |       1  |  [1,25,18,61,92,77,56]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |       1  |  [1,25,18,61,92,77,56]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |      25  |  [1,25,18,61,92,77,56]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |      25  |  [1,25,18,61,92,77,56]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |      25  |  [1,25,18,61,92,77,56]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |      25  |  [1,25,18,61,92,77,56]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |      25  |  [1,25,18,61,92,77,56]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-31 13:05:53,679 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:06:17,956 INFO     Done. Execution time: 24.276905059814453 seconds
2023-01-31 13:06:17,956 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `22.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1305-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1305-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m24.268s
user	0m53.307s
sys	0m4.830s

2023-01-31 13:06:17,956 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 13:06:17,956 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:09:24,789 INFO     Done. Execution time: 186.83286929130554 seconds
2023-01-31 13:09:24,790 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz6383664583567017042/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6383664583567017042/bin -o /tmp/qfuzz6383664583567017042/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6383664583567017042/bin
Found file /tmp/qfuzz6383664583567017042/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz6383664583567017042/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6383664583567017042/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6383664583567017042/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6383664583567017042/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6383664583567017042/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 130243 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 3; 819.00; [32.00,851.00,1765.00]
12; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2; 3; 206.00; [32.00,1445.00,1651.00]
13; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32; 1; 0.00; [45.00]
22; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:4; 3; 574.00; [32.00,971.00,1545.00]
60; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000005,src:000001+000004,op:splice,rep:4; 3; 46.00; [32.00,1765.00,1811.00]
150; /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000006,src:000003+000001,op:splice,rep:4,+delta; 3; 859.00; [32.00,891.00,1885.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000006,src:000003+000001,op:splice,rep:4,+delta
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000005,src:000001+000004,op:splice,rep:4
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:4
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000006,src:000003+000001,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 93, 44, 44, 60, 34, 76, 1, 67, 92, 57, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000005,src:000001+000004,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 87, 90, 44, 24, 45, 57, 1, 7, 28, 85)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 76, 48, 86, 24, 45, 57, 1, 47, 40, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 69, 1, 16, 69, 1, 56, 2, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 82, 44, 60, 34, 76, 1, 67, 92, 88, 65)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 87, 42, 44, 60, 34, 76, 1, 67, 92, 96, 65)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6383664583567017042/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130924_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,93,44,44,60,34,76], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,87,90,44,24,45,57], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,76,48,86,24,45,57], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,69,1,16,69,1,56], 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,82,44,60,34,76], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,87,42,44,60,34,76], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:09:24,790 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-31 13:09:24,790 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 13:09:31,381 INFO     Done. Execution time: 6.5906713008880615 seconds
2023-01-31 13:09:31,381 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130924_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130924_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,93,44,44,60,34,76], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,87,90,44,24,45,57], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,69,1,16,69,1,56], 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,76,48,86,24,45,57], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,82,44,60,34,76], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,87,42,44,60,34,76], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [56,69,1,16,69,1,56]
startIndex: 2
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [89,71,48,86,8,98,57]
startIndex: 5
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [56,93,44,44,60,34,76]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [25,87,90,44,24,45,57]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [89,76,48,86,24,45,57]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [89,71,82,44,60,34,76]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [25,87,42,44,60,34,76]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                             
 Index  |   Commands   |  Costs  |  R  |         array          |  endIndex  |  startIndex  |
---------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [56,69,1,16,69,1,56]  |         2  |           2  |
    48  |     return;  |         |  0  |  [56,69,1,16,69,1,56]  |         2  |           2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 72):
                                                                                                                                       
 Index  |              Commands               |  Costs  |  R   |          array           |  chunk  |  endIndex  |  i  |  startIndex  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |  [56,93,44,44,60,34,76]  |         |         2  |     |           1  |
    48  |                      // int R = 0;  |         |   0  |  [56,93,44,44,60,34,76]  |         |         2  |     |           1  |
    49  |  // mostPreciseBound(R <= array...  |         |   0  |  [56,93,44,44,60,34,76]  |         |         2  |     |           1  |
    50  |  // lessPreciseBound(R <= MAX +...  |         |   0  |  [56,93,44,44,60,34,76]  |         |         2  |     |           1  |
    52  |                int i = startIndex;  |         |   0  |  [56,93,44,44,60,34,76]  |         |         2  |  1  |           1  |
    54  |                     int chunk = 0;  |         |   0  |  [56,93,44,44,60,34,76]  |      0  |         2  |  1  |           1  |
    57  |       chunk = arrayRead(array, i);  |         |   0  |  [56,93,44,44,60,34,76]  |     93  |         2  |  1  |           1  |
    60  |                     R = R + chunk;  |     93  |  93  |  [56,93,44,44,60,34,76]  |     93  |         2  |  1  |           1  |
    64  |                         i = i + 1;  |         |  93  |  [56,93,44,44,60,34,76]  |     93  |         2  |  2  |           1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [60]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {60}
                                                                   
 Index  |     Commands     |  Costs  |  SegmentIDs in GroupID(0)  |
-------------------------------------------------------------------
    60  |  R = R + chunk;  |     93  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-31 13:09:31,382 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:09:33,677 INFO     Done. Execution time: 2.2947614192962646 seconds
2023-01-31 13:09:33,677 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:34: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:34: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:40: error: cannot find symbol
      R = R + chunk;
      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:40: error: cannot find symbol
      R = R + chunk;
          ^
  symbol:   variable R
  location: class Join
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.286s
user	0m4.271s
sys	0m0.209s

2023-01-31 13:09:33,677 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 13:09:33,677 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:12:40,585 INFO     Done. Execution time: 186.90785598754883 seconds
2023-01-31 13:12:40,586 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz2073737783897773059/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2073737783897773059/bin -o /tmp/qfuzz2073737783897773059/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2073737783897773059/bin
Found file /tmp/qfuzz2073737783897773059/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz2073737783897773059/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2073737783897773059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2073737783897773059/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2073737783897773059/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2073737783897773059/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 131558 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 70.00; [32.00,171.00,971.00,1151.00,1431.00,1731.00,1801.00,1971.00]
2; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 5; 120.00; [31.50,761.00,991.00,1111.00,1631.00]
9; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:64; 5; 21.00; [11.00,32.00,611.00,1121.00,1471.00]
11; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:128; 3; 21.00; [11.00,32.00,1641.00]
17; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:64,+delta; 8; 79.00; [32.00,111.00,191.00,691.00,931.00,1081.00,1251.00,1711.00]
20; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:128; 4; 21.00; [11.00,32.00,511.00,1441.00]
21; /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000006,src:000000+000001,op:splice,rep:8,+delta; 8; 180.00; [32.00,331.00,611.00,951.00,1171.00,1391.00,1571.00,1801.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000006,src:000000+000001,op:splice,rep:8,+delta
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:128
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:64,+delta
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:128
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:64
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000006,src:000000+000001,op:splice,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 69, 78, 58, 30, 47, 16, 24, 92, 2, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 46, 34, 85, 62, 5, 9, 27, 81, 29, 58, 89, 1, 96, 24, 30, 17, 96, 40, 30, 22, 26, 21, 3, 1, 97, 52, 21, 3, 57, 57, 1, 52, 12, 37, 57, 92, 98)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 30, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 1, 69, 1, 55, 49, 81, 1, 69, 1, 55, 49, 32, 32, 36, 88, 92, 36, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2073737783897773059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131240_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,69,78,58,30,47,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [71,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [53,46,34,85,62,5,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55,30,73]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,1,69,1,55,49,81]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:12:40,586 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-31 13:12:40,586 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 13:12:56,731 INFO     Done. Execution time: 16.144345998764038 seconds
2023-01-31 13:12:56,731 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131240_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131240_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,69,78,58,30,47,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([71,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([53,46,34,85,62,5,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55,30,73])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,1,69,1,55,49,81])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,69,78,58,30,47,16]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [71,25]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [53,46,34,85,62,5,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [55,30,73]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [37,1,69,1,55,49,81]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                    
 Index  |   Commands   |  Costs  |  R  |  objects  |
----------------------------------------------------
     2  |  int R = 0;  |         |  0  |       []  |
    10  |     return;  |         |  0  |       []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects          |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [89,69,78,58,30,47,16]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [89,69,78,58,30,47,16]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [89,69,78,58,30,47,16]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [89,69,78,58,30,47,16]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [89,69,78,58,30,47,16]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [89,69,78,58,30,47,16]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     89  |  0  |  [89,69,78,58,30,47,16]  |
    22  |                     R = R + chunk;  |     89  |   89  |     89  |  0  |  [89,69,78,58,30,47,16]  |
    26  |                         i = i + 1;  |         |   89  |     89  |  1  |  [89,69,78,58,30,47,16]  |
    32  |                         R = R + 1;  |      1  |   90  |     89  |  1  |  [89,69,78,58,30,47,16]  |
    35  |     chunk = arrayRead(objects, i);  |         |   90  |     69  |  1  |  [89,69,78,58,30,47,16]  |
    38  |                     R = R + chunk;  |     69  |  159  |     69  |  1  |  [89,69,78,58,30,47,16]  |
    42  |                         i = i + 1;  |         |  159  |     69  |  2  |  [89,69,78,58,30,47,16]  |
    43  |              resetPlaceHolder_1();  |         |  159  |     69  |  2  |  [89,69,78,58,30,47,16]  |
    49  |                         R = R + 1;  |      1  |  160  |     69  |  2  |  [89,69,78,58,30,47,16]  |
    52  |     chunk = arrayRead(objects, i);  |         |  160  |     78  |  2  |  [89,69,78,58,30,47,16]  |
    55  |                     R = R + chunk;  |     78  |  238  |     78  |  2  |  [89,69,78,58,30,47,16]  |
    59  |                         i = i + 1;  |         |  238  |     78  |  3  |  [89,69,78,58,30,47,16]  |
    60  |              resetPlaceHolder_1();  |         |  238  |     78  |  3  |  [89,69,78,58,30,47,16]  |
    66  |                         R = R + 1;  |      1  |  239  |     78  |  3  |  [89,69,78,58,30,47,16]  |
    69  |     chunk = arrayRead(objects, i);  |         |  239  |     58  |  3  |  [89,69,78,58,30,47,16]  |
    72  |                     R = R + chunk;  |     58  |  297  |     58  |  3  |  [89,69,78,58,30,47,16]  |
    76  |                         i = i + 1;  |         |  297  |     58  |  4  |  [89,69,78,58,30,47,16]  |
    77  |              resetPlaceHolder_1();  |         |  297  |     58  |  4  |  [89,69,78,58,30,47,16]  |
    83  |                         R = R + 1;  |      1  |  298  |     58  |  4  |  [89,69,78,58,30,47,16]  |
    86  |     chunk = arrayRead(objects, i);  |         |  298  |     30  |  4  |  [89,69,78,58,30,47,16]  |
    89  |                     R = R + chunk;  |     30  |  328  |     30  |  4  |  [89,69,78,58,30,47,16]  |
    93  |                         i = i + 1;  |         |  328  |     30  |  5  |  [89,69,78,58,30,47,16]  |
    94  |              resetPlaceHolder_1();  |         |  328  |     30  |  5  |  [89,69,78,58,30,47,16]  |
   100  |                         R = R + 1;  |      1  |  329  |     30  |  5  |  [89,69,78,58,30,47,16]  |
   103  |     chunk = arrayRead(objects, i);  |         |  329  |     47  |  5  |  [89,69,78,58,30,47,16]  |
   106  |                     R = R + chunk;  |     47  |  376  |     47  |  5  |  [89,69,78,58,30,47,16]  |
   110  |                         i = i + 1;  |         |  376  |     47  |  6  |  [89,69,78,58,30,47,16]  |
   111  |              resetPlaceHolder_1();  |         |  376  |     47  |  6  |  [89,69,78,58,30,47,16]  |
   117  |                         R = R + 1;  |      1  |  377  |     47  |  6  |  [89,69,78,58,30,47,16]  |
   120  |     chunk = arrayRead(objects, i);  |         |  377  |     16  |  6  |  [89,69,78,58,30,47,16]  |
   123  |                     R = R + chunk;  |     16  |  393  |     16  |  6  |  [89,69,78,58,30,47,16]  |
   127  |                         i = i + 1;  |         |  393  |     16  |  7  |  [89,69,78,58,30,47,16]  |
   128  |              resetPlaceHolder_1();  |         |  393  |     16  |  7  |  [89,69,78,58,30,47,16]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     89  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     69  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     78  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     58  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     30  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                         4  |
   106  |         R = R + chunk;  |     47  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                         5  |
   123  |         R = R + chunk;  |     16  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,55,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,72,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,89,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,55,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72,89,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,72,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72,89,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,89,106,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89,106,123}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     89  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |     69  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     78  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     58  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     30  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |
   123  |         R = R + chunk;  |     16  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-31 13:12:56,731 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:13:14,770 INFO     Done. Execution time: 18.038445472717285 seconds
2023-01-31 13:13:14,770 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `15.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1312-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1312-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.023s
user	0m50.404s
sys	0m5.838s

2023-01-31 13:13:14,770 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 13:13:14,771 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:16:21,893 INFO     Done. Execution time: 187.12172317504883 seconds
2023-01-31 13:16:21,893 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz7832824319276913949/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7832824319276913949/bin -o /tmp/qfuzz7832824319276913949/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7832824319276913949/bin
Found file /tmp/qfuzz7832824319276913949/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz7832824319276913949/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7832824319276913949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7832824319276913949/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7832824319276913949/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz7832824319276913949/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 137458 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 59.00; [112.00,171.00,971.00,1151.00,1431.00,1731.00,1801.00,1971.00]
2; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 6; 10.00; [31.00,41.00,151.00,751.00,1111.00,1752.00]
3; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 8; 79.00; [171.00,521.00,971.00,1151.00,1431.00,1652.00,1731.00,1971.00]
5; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 8; 99.00; [171.00,591.00,691.00,872.00,971.00,1431.00,1561.00,1731.00]
8; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 8; 100.00; [171.00,312.00,1051.00,1151.00,1431.00,1651.00,1801.00,1971.00]
9; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 8; 70.00; [112.00,411.00,1151.00,1431.00,1551.00,1731.00,1801.00,1971.00]
11; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 59.00; [112.00,171.00,971.00,1431.00,1731.00,1801.00,1971.00]
21; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 6; 200.00; [131.00,331.50,691.00,1011.00,1501.00,1891.00]
49; /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 8; 170.00; [112.00,331.00,591.00,811.00,1151.00,1611.00,1801.00,1971.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 29, 16, 40, 80, 98, 57, 5, 55, 21, 48, 55, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74, 50, 6, 50, 94, 34, 16, 16, 16, 16, 16, 16, 16, 16, 4, 9, 13, 16, 16, 53, 92, 16, 30, 2, 58, 50, 82, 86, 33, 1, 24, 6, 100, 58, 69, 16, 16, 16, 16, 16, 16, 16, 2, 1, 4, 16, 16, 16, 16, 16, 53, 82, 3, 1, 30, 16, 37, 54, 16, 16, 16, 16, 16, 4, 16, 28, 16, 2, 24, 71, 82, 86, 33, 1, 24, 6, 100, 58, 69, 20, 42, 3, 27, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 71, 5, 19, 4, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 20, 86, 77, 98, 57, 5, 55, 4, 40, 29, 9, 34, 43, 25, 33, 61, 100, 74, 40, 91, 95, 81, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 52, 82, 8, 98, 57, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 71, 48, 86, 8, 29, 34, 43, 5, 23, 100, 53, 32, 13, 5, 30, 71, 29, 34, 43, 41, 40, 62, 58, 48, 49, 55, 76, 85, 56, 1, 46, 29, 18, 64, 82, 64, 82, 16, 49, 55, 40, 80, 29, 29, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 71, 48, 86, 8, 98, 57, 82, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 37, 7, 87, 69, 7, 87, 64, 2, 56, 82, 96, 45, 40, 95, 55, 71, 29, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7832824319276913949/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131621_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,29,16,40,80,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [74,50,6,50,94,34,16], 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,71], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,20,86,77,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,52,82,8,98,57], 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [77,71,48,86,8,29,34], 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,71,48,86,8,98,57], 82
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,55,37,7], 87
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:16:21,893 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-31 13:16:21,893 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 13:16:38,094 INFO     Done. Execution time: 16.200733184814453 seconds
2023-01-31 13:16:38,095 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131621_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131621_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,29,16,40,80,98,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([74,50,6,50,94,34,16], 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,71], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,20,86,77,98,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,52,82,8,98,57], 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([77,71,48,86,8,29,34], 43)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,71,48,86,8,98,57], 82)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,55,37,7], 87)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,29,16,40,80,98,57]
separator: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [74,50,6,50,94,34,16]
separator: 16
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,71,48,86,8,98,71]
separator: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,71,20,86,77,98,57]
separator: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,71,52,82,8,98,57]
separator: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [77,71,48,86,8,29,34]
separator: 43
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [25,71,48,86,8,98,57]
separator: 82
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [1,1,1,1,55,37,7]
separator: 87
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,71,48,86,8,98,57]
separator: 5
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects          |  separator  |
--------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [89,29,16,40,80,98,57]  |          5  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [89,29,16,40,80,98,57]  |          5  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [89,29,16,40,80,98,57]  |          5  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [89,29,16,40,80,98,57]  |          5  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [89,29,16,40,80,98,57]  |          5  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [89,29,16,40,80,98,57]  |          5  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     89  |  0  |  [89,29,16,40,80,98,57]  |          5  |
    22  |                     R = R + chunk;  |     89  |   89  |     89  |  0  |  [89,29,16,40,80,98,57]  |          5  |
    26  |                         i = i + 1;  |         |   89  |     89  |  1  |  [89,29,16,40,80,98,57]  |          5  |
    32  |                 R = R + separator;  |      5  |   94  |     89  |  1  |  [89,29,16,40,80,98,57]  |          5  |
    35  |     chunk = arrayRead(objects, i);  |         |   94  |     29  |  1  |  [89,29,16,40,80,98,57]  |          5  |
    38  |                     R = R + chunk;  |     29  |  123  |     29  |  1  |  [89,29,16,40,80,98,57]  |          5  |
    42  |                         i = i + 1;  |         |  123  |     29  |  2  |  [89,29,16,40,80,98,57]  |          5  |
    43  |              resetPlaceHolder_1();  |         |  123  |     29  |  2  |  [89,29,16,40,80,98,57]  |          5  |
    49  |                 R = R + separator;  |      5  |  128  |     29  |  2  |  [89,29,16,40,80,98,57]  |          5  |
    52  |     chunk = arrayRead(objects, i);  |         |  128  |     16  |  2  |  [89,29,16,40,80,98,57]  |          5  |
    55  |                     R = R + chunk;  |     16  |  144  |     16  |  2  |  [89,29,16,40,80,98,57]  |          5  |
    59  |                         i = i + 1;  |         |  144  |     16  |  3  |  [89,29,16,40,80,98,57]  |          5  |
    60  |              resetPlaceHolder_1();  |         |  144  |     16  |  3  |  [89,29,16,40,80,98,57]  |          5  |
    66  |                 R = R + separator;  |      5  |  149  |     16  |  3  |  [89,29,16,40,80,98,57]  |          5  |
    69  |     chunk = arrayRead(objects, i);  |         |  149  |     40  |  3  |  [89,29,16,40,80,98,57]  |          5  |
    72  |                     R = R + chunk;  |     40  |  189  |     40  |  3  |  [89,29,16,40,80,98,57]  |          5  |
    76  |                         i = i + 1;  |         |  189  |     40  |  4  |  [89,29,16,40,80,98,57]  |          5  |
    77  |              resetPlaceHolder_1();  |         |  189  |     40  |  4  |  [89,29,16,40,80,98,57]  |          5  |
    83  |                 R = R + separator;  |      5  |  194  |     40  |  4  |  [89,29,16,40,80,98,57]  |          5  |
    86  |     chunk = arrayRead(objects, i);  |         |  194  |     80  |  4  |  [89,29,16,40,80,98,57]  |          5  |
    89  |                     R = R + chunk;  |     80  |  274  |     80  |  4  |  [89,29,16,40,80,98,57]  |          5  |
    93  |                         i = i + 1;  |         |  274  |     80  |  5  |  [89,29,16,40,80,98,57]  |          5  |
    94  |              resetPlaceHolder_1();  |         |  274  |     80  |  5  |  [89,29,16,40,80,98,57]  |          5  |
   100  |                 R = R + separator;  |      5  |  279  |     80  |  5  |  [89,29,16,40,80,98,57]  |          5  |
   103  |     chunk = arrayRead(objects, i);  |         |  279  |     98  |  5  |  [89,29,16,40,80,98,57]  |          5  |
   106  |                     R = R + chunk;  |     98  |  377  |     98  |  5  |  [89,29,16,40,80,98,57]  |          5  |
   110  |                         i = i + 1;  |         |  377  |     98  |  6  |  [89,29,16,40,80,98,57]  |          5  |
   111  |              resetPlaceHolder_1();  |         |  377  |     98  |  6  |  [89,29,16,40,80,98,57]  |          5  |
   117  |                 R = R + separator;  |      5  |  382  |     98  |  6  |  [89,29,16,40,80,98,57]  |          5  |
   120  |     chunk = arrayRead(objects, i);  |         |  382  |     57  |  6  |  [89,29,16,40,80,98,57]  |          5  |
   123  |                     R = R + chunk;  |     57  |  439  |     57  |  6  |  [89,29,16,40,80,98,57]  |          5  |
   127  |                         i = i + 1;  |         |  439  |     57  |  7  |  [89,29,16,40,80,98,57]  |          5  |
   128  |              resetPlaceHolder_1();  |         |  439  |     57  |  7  |  [89,29,16,40,80,98,57]  |          5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     89  |                            |
    32  |     R = R + separator;  |      5  |                         0  |
    38  |         R = R + chunk;  |     29  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |      5  |                         1  |
    55  |         R = R + chunk;  |     16  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |      5  |                         2  |
    72  |         R = R + chunk;  |     40  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |      5  |                         3  |
    89  |         R = R + chunk;  |     80  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |      5  |                         4  |
   106  |         R = R + chunk;  |     98  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |      5  |                         5  |
   123  |         R = R + chunk;  |     57  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89,106,123}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     89  |                            |                         0  |
    32  |     R = R + separator;  |      5  |                         0  |                            |
    38  |         R = R + chunk;  |     29  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |      5  |                         1  |                            |
    55  |         R = R + chunk;  |     16  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |      5  |                         2  |                            |
    72  |         R = R + chunk;  |     40  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |      5  |                         3  |                            |
    89  |         R = R + chunk;  |     80  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |      5  |                         4  |                            |
   106  |         R = R + chunk;  |     98  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |      5  |                         5  |                            |
   123  |         R = R + chunk;  |     57  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-31 13:16:38,095 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:16:47,583 INFO     Done. Execution time: 9.488205909729004 seconds
2023-01-31 13:16:47,584 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1316-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1316-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.479s
user	0m18.907s
sys	0m2.069s

2023-01-31 13:16:47,584 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 13:16:47,584 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:19:54,143 INFO     Done. Execution time: 186.55896043777466 seconds
2023-01-31 13:19:54,143 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz6251581921943484449/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6251581921943484449/bin -o /tmp/qfuzz6251581921943484449/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6251581921943484449/bin
Found file /tmp/qfuzz6251581921943484449/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz6251581921943484449/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6251581921943484449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6251581921943484449/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6251581921943484449/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6251581921943484449/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 138320 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 130.00; [178.00,978.00,1108.00,1804.00]
2; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 4; 230.00; [628.00,858.00,1118.00,1424.00]
3; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 4; 16.00; [48.00,64.00,1018.00,1158.00]
5; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 4; 366.00; [508.00,978.00,1438.00,1804.00]
8; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 4; 40.00; [558.00,598.00,808.00,1804.00]
9; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 10.00; [398.00,944.00,1828.00,1838.00]
15; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 4; 420.00; [198.00,618.00,1164.00,1688.00]
35; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 110.00; [178.00,868.00,978.00,1804.00]
36; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 4; 514.00; [238.00,764.00,1278.00,1968.00]
161; /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:32,+delta; 4; 604.00; [38.00,784.00,1388.00,1998.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:32,+delta
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 9, 1, 2, 99, 17, 53, 8, 69, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 11, 11, 49, 63, 90, 18, 100, 98, 69, 84, 26, 58, 91, 39, 65, 40, 75, 90, 100, 58, 91, 39, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 3, 48, 86, 8, 98, 57, 5, 43, 4, 40, 44, 64, 24, 84, 91, 2, 1, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 88, 30, 71, 9, 34, 40, 52, 84, 29, 30, 71, 9, 34, 44, 90, 29, 18, 16, 69, 38, 54, 16, 40, 30, 66, 71, 9, 34, 44, 25, 33, 61, 13, 66, 71, 9, 34, 44, 25, 33, 45, 52, 56, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 15, 19, 91, 91, 91, 91, 47, 91, 91, 91, 91, 91, 91, 91, 91, 52, 2, 39, 39, 37, 28, 68, 26, 95, 61, 90, 11, 15, 55, 15, 36, 1, 68, 12, 20, 6, 85, 24, 57, 50, 57, 68, 26, 95, 28, 68, 2, 39, 39, 37, 28, 68, 26, 95, 96, 99, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 37, 29, 29, 27, 98, 1, 16, 40, 45, 85, 1, 9, 34, 33, 5, 52, 45, 78, 42, 44, 47, 16, 90, 98, 1, 16, 57, 45, 53, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 70, 71, 9, 34, 43, 25, 33, 61, 52, 28, 8, 8, 98, 57, 5, 55, 4, 40, 29, 18, 42, 14, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 2, 50, 2, 57, 1, 56, 2, 2, 93, 17, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 35, 42, 1, 55, 75, 80, 65, 31, 70, 35, 42, 34, 27, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6251581921943484449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_131953_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,9,1,2,99,17,53], 8, 69, 14
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,11,11,49,63,90,18], 100, 98, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,3,48,86,8,98,57], 5, 43, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,88,30,71,9,34,40], 52, 84, 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,15,19,91,91,91,91], 47, 91, 91
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,37,29,29,27,98,1], 16, 40, 45
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,70,71,9,34], 43, 25, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [2,2,50,2,57,1,56], 2, 2, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,35,42,1,55,75,80], 65, 31, 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 55, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:19:54,143 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-31 13:19:54,144 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 13:20:06,324 INFO     Done. Execution time: 12.180482864379883 seconds
2023-01-31 13:20:06,325 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_131953_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_131953_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,9,1,2,99,17,53], 8, 69, 14)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,3,48,86,8,98,57], 5, 43, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,11,11,49,63,90,18], 100, 98, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,88,30,71,9,34,40], 52, 84, 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,15,19,91,91,91,91], 47, 91, 91)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,37,29,29,27,98,1], 16, 40, 45)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,70,71,9,34], 43, 25, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([2,2,50,2,57,1,56], 2, 2, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,35,42,1,55,75,80], 65, 31, 70)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 55, 4)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [38,9,1,2,99,17,53]
searchString: 8
replacement: 69
max: 14
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [37,11,11,49,63,90,18]
searchString: 100
replacement: 98
max: 69
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,3,48,86,8,98,57]
searchString: 5
replacement: 43
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,88,30,71,9,34,40]
searchString: 52
replacement: 84
max: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [46,15,19,91,91,91,91]
searchString: 47
replacement: 91
max: 91
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,37,29,29,27,98,1]
searchString: 16
replacement: 40
max: 45
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,70,71,9,34]
searchString: 43
replacement: 25
max: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [2,2,50,2,57,1,56]
searchString: 2
replacement: 2
max: 93
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [70,35,42,1,55,75,80]
searchString: 65
replacement: 31
max: 70
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
searchString: 5
replacement: 55
max: 4
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     38  |  0  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    51  |                     R = R + chunk;  |     38  |   38  |     38  |  0  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    54  |               R = R + replacement;  |     69  |  107  |     38  |  0  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  107  |      9  |  0  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    63  |                         i = i + 2;  |         |  107  |      9  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    64  |              resetPlaceHolder_1();  |         |  107  |      9  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    72  |        chunk = arrayRead(text, i);  |         |  107  |      1  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    75  |                     R = R + chunk;  |      1  |  108  |      1  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    78  |               R = R + replacement;  |     69  |  177  |      1  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  177  |      2  |  2  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    87  |                         i = i + 2;  |         |  177  |      2  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    88  |              resetPlaceHolder_1();  |         |  177  |      2  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    96  |        chunk = arrayRead(text, i);  |         |  177  |     99  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
    99  |                     R = R + chunk;  |     99  |  276  |     99  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
   102  |               R = R + replacement;  |     69  |  345  |     99  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
   107  |  chunk = arrayRead(text, (i + 1...  |         |  345  |     17  |  4  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
   111  |                         i = i + 2;  |         |  345  |     17  |  6  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
   112  |              resetPlaceHolder_1();  |         |  345  |     17  |  6  |   14  |           69  |             8  |  [38,9,1,2,99,17,53]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [78, 102, 54, 99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     38  |                            |
    54  |   R = R + replacement;  |     69  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      1  |                            |
    78  |   R = R + replacement;  |     69  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     99  |                            |
   102  |   R = R + replacement;  |     69  |                         2  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [99, 75, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {54}; {78}
GroupID(1): {51,75,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     38  |                            |                         0  |
    54  |   R = R + replacement;  |     69  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      1  |                            |                         0  |
    78  |   R = R + replacement;  |     69  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     99  |                            |                         0  |
   102  |   R = R + replacement;  |     69  |                         2  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64, 88)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-31 13:20:06,325 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:22:03,646 INFO     Done. Execution time: 117.32099795341492 seconds
2023-01-31 13:22:03,646 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5251184978033230342.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `114.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1320-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1320-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m57.310s
user	4m26.840s
sys	0m22.271s

2023-01-31 13:22:03,647 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 13:22:03,647 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:25:11,140 INFO     Done. Execution time: 187.49241375923157 seconds
2023-01-31 13:25:11,140 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz2063917221331736065/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2063917221331736065/bin -o /tmp/qfuzz2063917221331736065/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2063917221331736065/bin
Found file /tmp/qfuzz2063917221331736065/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz2063917221331736065/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2063917221331736065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2063917221331736065/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2063917221331736065/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2063917221331736065/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 147541 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m147k to 147k us (average: 147k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
3; /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 8.00; [32.00,40.00]
16; /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov
/tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2063917221331736065/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132510_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 71
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:25:11,140 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-31 13:25:11,141 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 13:25:19,978 INFO     Done. Execution time: 8.837409496307373 seconds
2023-01-31 13:25:19,979 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132510_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132510_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 71)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 71
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             2  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |             2  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             2  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             2  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |             2  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |             2  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |             2  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |             2  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |             2  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |             2  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |             2  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |             2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-31 13:25:19,979 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:25:46,782 INFO     Done. Execution time: 26.8030846118927 seconds
2023-01-31 13:25:46,783 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `24.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1325-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1325-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m26.794s
user	0m48.259s
sys	0m4.886s

2023-01-31 13:25:46,783 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:25:46,783 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:28:53,609 INFO     Done. Execution time: 186.8261992931366 seconds
2023-01-31 13:28:53,610 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz397583332895335618/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz397583332895335618/bin -o /tmp/qfuzz397583332895335618/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz397583332895335618/bin
Found file /tmp/qfuzz397583332895335618/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz397583332895335618/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz397583332895335618/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz397583332895335618/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz397583332895335618/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz397583332895335618/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz397583332895335618/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz397583332895335618/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 36, exec speed = 131329 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m36 to 36 bits (average: 36.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [1810.00]
2; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]
8; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 1; 0.00; [1330.00]
13; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 5; 166.00; [417.00,617.00,930.00,1096.00,1437.00]
27; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 219.00; [37.00,256.00,1150.00]
28; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 2; 1644.00; [166.00,1810.00]
35; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta; 6; 140.00; [37.00,177.00,877.00,1637.00,1810.00,1966.00]
40; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 6; 167.00; [177.00,986.00,1157.00,1417.00,1810.00,1977.00]
73; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 4; 167.00; [206.00,1157.00,1810.00,1977.00]
169; /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:4; 4; 167.00; [146.00,1157.00,1810.00,1977.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:4
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 5, 98, 57, 5, 3, 1, 2, 40, 61, 1, 44, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 3, 49, 2, 40, 61, 14, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 70, 8, 98, 57, 5, 1, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 7, 65, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 54, 97, 1, 8, 43, 81, 4, 1, 1, 96, 69, 3, 44, 25, 76, 26, 9, 46, 71, 68, 40, 61, 52, 71, 9, 55, 7, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 88, 5, 5, 5, 5, 5, 5, 5, 5, 5, 57, 1, 5, 5, 81, 5, 87, 13, 86, 71, 62, 40, 61, 30, 71, 25, 33, 61, 52, 77, 4, 35, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 7, 17, 1, 4, 10, 1, 1, 4, 54, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 16, 74, 53, 20, 30, 71, 1, 2, 74, 2, 2, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 87, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 30, 30, 30, 30, 30, 54, 30, 30, 1, 30, 30, 30, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz397583332895335618/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_132853_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,5,98,57], 5, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,70,8,98,57], 5, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,54,97,1,8,43,81], 4, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,88,5,5,5,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,7,17,1,4,10,1], 1, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,16,74,53,20,30,71], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,71,48,86,8,98,57], 5, 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,30,30,30,30,30,54], 30, 30
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5, 55
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:28:53,610 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:28:53,610 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:29:05,253 INFO     Done. Execution time: 11.642452955245972 seconds
2023-01-31 13:29:05,253 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_132853_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_132853_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,5,98,57], 5, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,70,8,98,57], 5, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,54,97,1,8,43,81], 4, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,88,5,5,5,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,7,17,1,4,10,1], 1, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,16,74,53,20,30,71], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,71,48,86,8,98,57], 5, 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,30,30,30,30,30,54], 30, 30)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5, 55)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [65,71,48,86,8,98,57]
isSeparator: 5
max: 55
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [30,30,30,30,30,30,54]
isSeparator: 30
max: 30
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,71,48,86,8,98,57]
isSeparator: 5
max: 55
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,71,48,86,5,98,57]
isSeparator: 5
max: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,71,48,86,8,98,57]
isSeparator: 5
max: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,71,48,70,8,98,57]
isSeparator: 5
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,54,97,1,8,43,81]
isSeparator: 4
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [89,71,88,5,5,5,5]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [56,7,17,1,4,10,1]
isSeparator: 1
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [45,16,74,53,20,30,71]
isSeparator: 1
max: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 195):
                                                                                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |           str           |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |            5  |                    |   55  |                   |  [65,71,48,86,8,98,57]  |
    28  |                      // int R = 0;  |         |   0  |         |     |            5  |                    |   55  |                   |  [65,71,48,86,8,98,57]  |
    29  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |            5  |                    |   55  |                   |  [65,71,48,86,8,98,57]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |            5  |                    |   55  |                   |  [65,71,48,86,8,98,57]  |
    32  |           int numberOfStrings = 0;  |         |   0  |         |     |            5  |                    |   55  |                0  |  [65,71,48,86,8,98,57]  |
    34  |                     int chunk = 0;  |         |   0  |      0  |     |            5  |                    |   55  |                0  |  [65,71,48,86,8,98,57]  |
    36  |          int isSeparatorChunk = 0;  |         |   0  |      0  |     |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    38  |                         int i = 0;  |         |   0  |      0  |  0  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    44  |         chunk = arrayRead(str, i);  |         |   0  |     65  |  0  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    54  |                     R = R + chunk;  |     65  |  65  |     65  |  0  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    58  |                         i = i + 1;  |         |  65  |     65  |  1  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    59  |              resetPlaceHolder_1();  |         |  65  |     65  |  1  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    65  |         chunk = arrayRead(str, i);  |         |  65  |     71  |  1  |            5  |                 0  |   55  |                0  |  [65,71,48,86,8,98,57]  |
    76  |  numberOfStrings = numberOfStri...  |         |  65  |     71  |  1  |            5  |                 0  |   55  |                1  |  [65,71,48,86,8,98,57]  |
    80  |                         i = i + 1;  |         |  65  |     71  |  2  |            5  |                 0  |   55  |                1  |  [65,71,48,86,8,98,57]  |
    81  |              resetPlaceHolder_1();  |         |  65  |     71  |  2  |            5  |                 0  |   55  |                1  |  [65,71,48,86,8,98,57]  |
    87  |         chunk = arrayRead(str, i);  |         |  65  |     48  |  2  |            5  |                 0  |   55  |                1  |  [65,71,48,86,8,98,57]  |
    98  |  numberOfStrings = numberOfStri...  |         |  65  |     48  |  2  |            5  |                 0  |   55  |                2  |  [65,71,48,86,8,98,57]  |
   102  |                         i = i + 1;  |         |  65  |     48  |  3  |            5  |                 0  |   55  |                2  |  [65,71,48,86,8,98,57]  |
   103  |              resetPlaceHolder_1();  |         |  65  |     48  |  3  |            5  |                 0  |   55  |                2  |  [65,71,48,86,8,98,57]  |
   109  |         chunk = arrayRead(str, i);  |         |  65  |     86  |  3  |            5  |                 0  |   55  |                2  |  [65,71,48,86,8,98,57]  |
   120  |  numberOfStrings = numberOfStri...  |         |  65  |     86  |  3  |            5  |                 0  |   55  |                3  |  [65,71,48,86,8,98,57]  |
   124  |                         i = i + 1;  |         |  65  |     86  |  4  |            5  |                 0  |   55  |                3  |  [65,71,48,86,8,98,57]  |
   125  |              resetPlaceHolder_1();  |         |  65  |     86  |  4  |            5  |                 0  |   55  |                3  |  [65,71,48,86,8,98,57]  |
   131  |         chunk = arrayRead(str, i);  |         |  65  |      8  |  4  |            5  |                 0  |   55  |                3  |  [65,71,48,86,8,98,57]  |
   142  |  numberOfStrings = numberOfStri...  |         |  65  |      8  |  4  |            5  |                 0  |   55  |                4  |  [65,71,48,86,8,98,57]  |
   146  |                         i = i + 1;  |         |  65  |      8  |  5  |            5  |                 0  |   55  |                4  |  [65,71,48,86,8,98,57]  |
   147  |              resetPlaceHolder_1();  |         |  65  |      8  |  5  |            5  |                 0  |   55  |                4  |  [65,71,48,86,8,98,57]  |
   153  |         chunk = arrayRead(str, i);  |         |  65  |     98  |  5  |            5  |                 0  |   55  |                4  |  [65,71,48,86,8,98,57]  |
   164  |  numberOfStrings = numberOfStri...  |         |  65  |     98  |  5  |            5  |                 0  |   55  |                5  |  [65,71,48,86,8,98,57]  |
   168  |                         i = i + 1;  |         |  65  |     98  |  6  |            5  |                 0  |   55  |                5  |  [65,71,48,86,8,98,57]  |
   169  |              resetPlaceHolder_1();  |         |  65  |     98  |  6  |            5  |                 0  |   55  |                5  |  [65,71,48,86,8,98,57]  |
   175  |         chunk = arrayRead(str, i);  |         |  65  |     57  |  6  |            5  |                 0  |   55  |                5  |  [65,71,48,86,8,98,57]  |
   186  |  numberOfStrings = numberOfStri...  |         |  65  |     57  |  6  |            5  |                 0  |   55  |                6  |  [65,71,48,86,8,98,57]  |
   190  |                         i = i + 1;  |         |  65  |     57  |  7  |            5  |                 0  |   55  |                6  |  [65,71,48,86,8,98,57]  |
   191  |              resetPlaceHolder_1();  |         |  65  |     57  |  7  |            5  |                 0  |   55  |                6  |  [65,71,48,86,8,98,57]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     65  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   169  |  resetPlaceHolder_1();  |         |                            |
   191  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 183):
                                                                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |           str           |
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            5  |                    |    3  |                   |  [89,71,48,86,5,98,57]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            5  |                    |    3  |                   |  [89,71,48,86,5,98,57]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            5  |                    |    3  |                   |  [89,71,48,86,5,98,57]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            5  |                    |    3  |                   |  [89,71,48,86,5,98,57]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            5  |                    |    3  |                0  |  [89,71,48,86,5,98,57]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            5  |                    |    3  |                0  |  [89,71,48,86,5,98,57]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |     89  |  0  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    54  |                     R = R + chunk;  |     89  |   89  |     89  |  0  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    58  |                         i = i + 1;  |         |   89  |     89  |  1  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    59  |              resetPlaceHolder_1();  |         |   89  |     89  |  1  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    65  |         chunk = arrayRead(str, i);  |         |   89  |     71  |  1  |            5  |                 0  |    3  |                0  |  [89,71,48,86,5,98,57]  |
    76  |  numberOfStrings = numberOfStri...  |         |   89  |     71  |  1  |            5  |                 0  |    3  |                1  |  [89,71,48,86,5,98,57]  |
    80  |                         i = i + 1;  |         |   89  |     71  |  2  |            5  |                 0  |    3  |                1  |  [89,71,48,86,5,98,57]  |
    81  |              resetPlaceHolder_1();  |         |   89  |     71  |  2  |            5  |                 0  |    3  |                1  |  [89,71,48,86,5,98,57]  |
    87  |         chunk = arrayRead(str, i);  |         |   89  |     48  |  2  |            5  |                 0  |    3  |                1  |  [89,71,48,86,5,98,57]  |
    98  |  numberOfStrings = numberOfStri...  |         |   89  |     48  |  2  |            5  |                 0  |    3  |                2  |  [89,71,48,86,5,98,57]  |
   102  |                         i = i + 1;  |         |   89  |     48  |  3  |            5  |                 0  |    3  |                2  |  [89,71,48,86,5,98,57]  |
   103  |              resetPlaceHolder_1();  |         |   89  |     48  |  3  |            5  |                 0  |    3  |                2  |  [89,71,48,86,5,98,57]  |
   109  |         chunk = arrayRead(str, i);  |         |   89  |     86  |  3  |            5  |                 0  |    3  |                2  |  [89,71,48,86,5,98,57]  |
   120  |  numberOfStrings = numberOfStri...  |         |   89  |     86  |  3  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   124  |                         i = i + 1;  |         |   89  |     86  |  4  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   125  |              resetPlaceHolder_1();  |         |   89  |     86  |  4  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   131  |         chunk = arrayRead(str, i);  |         |   89  |      5  |  4  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   138  |                     R = R + chunk;  |      5  |   94  |      5  |  4  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   142  |                         i = i + 1;  |         |   94  |      5  |  5  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   143  |                          continue;  |         |   94  |      5  |  5  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   149  |         chunk = arrayRead(str, i);  |         |   94  |     98  |  5  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   156  |                     R = R + chunk;  |     98  |  192  |     98  |  5  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   160  |                         i = i + 1;  |         |  192  |     98  |  6  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   161  |                          continue;  |         |  192  |     98  |  6  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   167  |         chunk = arrayRead(str, i);  |         |  192  |     57  |  6  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   174  |                     R = R + chunk;  |     57  |  249  |     57  |  6  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   178  |                         i = i + 1;  |         |  249  |     57  |  7  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
   179  |                          continue;  |         |  249  |     57  |  7  |            5  |                 0  |    3  |                3  |  [89,71,48,86,5,98,57]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [54, 138, 156, 174]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [54, 138, 156, 174]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [54, 138, 156, 174]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [54, 138, 156, 174]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54,138,156,174}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     89  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   138  |         R = R + chunk;  |      5  |                         0  |
   156  |         R = R + chunk;  |     98  |                         0  |
   174  |         R = R + chunk;  |     57  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-31 13:29:05,253 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:31:12,864 INFO     Done. Execution time: 127.61052131652832 seconds
2023-01-31 13:31:12,864 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `124.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1329-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1329-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m7.599s
user	3m23.203s
sys	0m8.782s

2023-01-31 13:31:12,865 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 13:31:12,865 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:34:19,977 INFO     Done. Execution time: 187.11220455169678 seconds
2023-01-31 13:34:19,978 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz8550553494461342974/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8550553494461342974/bin -o /tmp/qfuzz8550553494461342974/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8550553494461342974/bin
Found file /tmp/qfuzz8550553494461342974/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz8550553494461342974/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8550553494461342974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8550553494461342974/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8550553494461342974/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8550553494461342974/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 128592 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 31.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 32.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 33.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 34.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 35.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 36.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 37.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 38.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 39.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 40.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 41.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 42.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 43.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 44.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 45.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 46.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 47.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 48.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 49.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 50.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 51.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 52.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 53.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 54.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 55.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 56.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8550553494461342974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8550553494461342974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8550553494461342974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133419_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:34:19,978 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-31 13:34:19,978 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 13:34:23,821 INFO     Done. Execution time: 3.842909574508667 seconds
2023-01-31 13:34:23,821 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133419_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133419_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-31 13:34:23,822 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:34:26,604 INFO     Done. Execution time: 2.7821311950683594 seconds
2023-01-31 13:34:26,605 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1334-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1334-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.772s
user	0m4.919s
sys	0m0.290s

2023-01-31 13:34:26,605 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 13:34:26,605 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:37:33,536 INFO     Done. Execution time: 186.93102741241455 seconds
2023-01-31 13:37:33,536 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz2479618495138780293/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2479618495138780293/bin -o /tmp/qfuzz2479618495138780293/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2479618495138780293/bin
Found file /tmp/qfuzz2479618495138780293/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz2479618495138780293/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2479618495138780293/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2479618495138780293/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2479618495138780293/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2479618495138780293/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 130251 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [73.00]
5; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [77.00]
23; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8,+cov; 1; 0.00; [77.00]
42; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+cov; 1; 0.00; [99.00]
97; /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000005,src:000002+000000,op:splice,rep:64,+cov; 1; 0.00; [99.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000005,src:000002+000000,op:splice,rep:64,+cov
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+cov
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8,+cov
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000005,src:000002+000000,op:splice,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 37, 1, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(73, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 30, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 1, 51, 19, 1, 1, 81, 26, 31, 37, 36, 33, 51, 19, 4, 37, 60, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 51, 19, 1, 1, 37, 26, 31, 19, 4, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74, 71, 28, 14, 1, 61, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2479618495138780293/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133733_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 1, 1, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 1, 51, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 51, 19, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 71, 28, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 71, 48, false, 8
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:37:33,537 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-31 13:37:33,537 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 13:37:40,072 INFO     Done. Execution time: 6.534808397293091 seconds
2023-01-31 13:37:40,072 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133733_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133733_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 1, 1, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 51, 19, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 71, 28, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 1, 51, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 71, 48, false, 8)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 1
choice: 1
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 1
choice: 1
max: 51
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 51
choice: 1
max: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 71
choice: 1
max: 28
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 71
choice: 8
max: 48
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 102):
                                                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  max  |  preserveAllTokens  |  separatorChars  |  sizePlus1  |  start  |  str  |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |       1  |     |             |        |         |    1  |              false  |               1  |             |         |    2  |
    32  |                      // int R = 0;  |         |  0  |       1  |     |             |        |         |    1  |              false  |               1  |             |         |    2  |
    33  |      // mostPreciseBound(R <= str)  |         |  0  |       1  |     |             |        |         |    1  |              false  |               1  |             |         |    2  |
    34  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       1  |     |             |        |         |    1  |              false  |               1  |             |         |    2  |
    36  |                      int list = 0;  |         |  0  |       1  |     |             |     0  |         |    1  |              false  |               1  |             |         |    2  |
    38  |                 int sizePlus1 = 1;  |         |  0  |       1  |     |             |     0  |         |    1  |              false  |               1  |          1  |         |    2  |
    40  |                         int i = 0;  |         |  0  |       1  |  0  |             |     0  |         |    1  |              false  |               1  |          1  |         |    2  |
    42  |                     int start = 0;  |         |  0  |       1  |  0  |             |     0  |         |    1  |              false  |               1  |          1  |      0  |    2  |
    44  |                 int match = false;  |         |  0  |       1  |  0  |             |     0  |  false  |    1  |              false  |               1  |          1  |      0  |    2  |
    46  |             int lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |    1  |              false  |               1  |          1  |      0  |    2  |
    60  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |    1  |              false  |               1  |          1  |      0  |    2  |
    62  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    66  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    67  |              resetPlaceHolder_2();  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    75  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    77  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    81  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    82  |              resetPlaceHolder_2();  |         |  0  |       1  |  2  |      false  |     0  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
    96  |         list = list + (i - start);  |         |  0  |       1  |  2  |      false  |     2  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
   101  |               R = R + (i - start);  |      2  |  2  |       1  |  2  |      false  |     2  |   true  |    1  |              false  |               1  |          1  |      0  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [101]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {101}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    67  |  resetPlaceHolder_2();  |         |                            |
    82  |  resetPlaceHolder_2();  |         |                            |
   101  |   R = R + (i - start);  |      2  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |       8  |   48  |              false  |              71  |    2  |
    32  |     return;  |         |  0  |       8  |   48  |              false  |              71  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R (i - start) -> R0 = R0 + (i - start);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-31 13:37:40,072 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:37:41,928 INFO     Done. Execution time: 1.8553133010864258 seconds
2023-01-31 13:37:41,928 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:47: error: cannot find symbol
            R = R + (i - start);
            ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:47: error: cannot find symbol
            R = R + (i - start);
                ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:90: error: cannot find symbol
              R = R + (i - start);
              ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:90: error: cannot find symbol
              R = R + (i - start);
                  ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:131: error: cannot find symbol
              R = R + (i - start);
              ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:131: error: cannot find symbol
              R = R + (i - start);
                  ^
  symbol:   variable R
  location: class SplitWorker2
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java; message: Not a primitive type: NONE
6 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.847s
user	0m3.388s
sys	0m0.173s

2023-01-31 13:37:41,928 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 13:37:41,929 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:40:48,279 INFO     Done. Execution time: 186.3503053188324 seconds
2023-01-31 13:40:48,279 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz6577763070786689164/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6577763070786689164/bin -o /tmp/qfuzz6577763070786689164/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6577763070786689164/bin
Found file /tmp/qfuzz6577763070786689164/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz6577763070786689164/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6577763070786689164/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6577763070786689164/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6577763070786689164/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6577763070786689164/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 130045 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 19, 78, 52, 42, 40, 64, 12, 64)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6577763070786689164/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134048_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:40:48,280 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-31 13:40:48,280 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 13:40:53,131 INFO     Done. Execution time: 4.850853681564331 seconds
2023-01-31 13:40:53,131 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134048_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134048_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-31 13:40:53,131 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:40:55,732 INFO     Done. Execution time: 2.600764513015747 seconds
2023-01-31 13:40:55,732 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1340-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1340-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.591s
user	0m4.644s
sys	0m0.226s

2023-01-31 13:40:55,733 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 13:40:55,733 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:44:02,666 INFO     Done. Execution time: 186.9328327178955 seconds
2023-01-31 13:44:02,666 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz7797845862855350359/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7797845862855350359/bin -o /tmp/qfuzz7797845862855350359/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7797845862855350359/bin
Found file /tmp/qfuzz7797845862855350359/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz7797845862855350359/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7797845862855350359/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7797845862855350359/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7797845862855350359/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz7797845862855350359/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 160518 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m160k to 160k us (average: 160k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #10 (13 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 180.00; [178.00,978.00,1158.00,1802.00]
2; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 140.00; [518.00,898.00,1038.00,1802.00]
3; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 4; 244.00; [178.00,798.00,1158.00,1402.00]
5; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 16.00; [918.00,1802.00,1818.00,1918.00]
7; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 4; 316.00; [38.00,362.00,678.00,1138.00]
10; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 4; 320.00; [258.00,578.00,978.00,1802.00]
12; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta; 4; 464.00; [58.00,522.00,1518.00,1998.00]
20; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 4; 4.00; [38.00,42.00,178.00,978.00]
23; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2; 4; 180.00; [178.00,978.00,1158.00,2002.00]
25; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 120.00; [178.00,298.00,978.00,1802.00]
70; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta; 4; 480.00; [178.00,678.00,1158.00,1802.00]
81; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta; 4; 540.00; [38.00,698.00,1238.00,1802.00]
151; /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000012,src:000000+000011,op:splice,rep:2,+delta; 4; 560.00; [38.00,678.00,1238.00,1802.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000012,src:000000+000011,op:splice,rep:2,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000012,src:000000+000011,op:splice,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 57, 61, 30, 1, 1, 33, 99, 52, 38, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 57, 61, 30, 1, 1, 34, 99, 52, 38, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 33, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 77, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 25, 69, 14, 99, 8, 98, 61, 77, 5, 76, 34, 43, 57, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 83, 48, 82, 8, 1, 1, 69, 85, 90, 4, 40, 91, 95, 65, 44, 33, 69, 58, 44, 97, 21, 34, 15, 90, 33, 61, 52, 28, 100, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 54, 99, 37, 69, 75, 56, 2, 93, 97, 69, 65, 49, 93, 65, 73, 17, 1, 17, 4, 48, 1, 1, 72, 60, 49, 1, 49, 49, 65, 49, 49, 93, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 28, 61, 12, 71, 9, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 93, 1, 65, 33, 17, 56, 55, 45, 4, 92, 3, 82, 53, 71, 42, 42, 92, 3, 82, 53, 79, 1, 57, 9, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 75, 45, 5, 90, 71, 95, 34, 43, 73, 33, 68, 52, 28, 83, 75, 74, 40, 99, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 71, 39, 86, 8, 14, 57, 85, 55, 4, 40, 29, 18, 89, 71, 39, 86, 8, 98, 57, 1, 91, 95, 65, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 37, 51, 86, 44, 4, 25, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7797845862855350359/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134402_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,57,61,30,1,1,33], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,57,61,30,1,1,34], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,33,86,8,98,57], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,25,69,14,99], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,71,48,86,8,98,57], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,83,48,82,8,1,1], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,54,99,37,69,75,56], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,28,61,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,93,1,65,33,17,56], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,75,45,5,90,71,95], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [69,71,39,86,8,14,57], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,37,51,86,44,4,25], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:44:02,666 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-31 13:44:02,667 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 13:44:13,953 INFO     Done. Execution time: 11.286187648773193 seconds
2023-01-31 13:44:13,953 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134402_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134402_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,57,61,30,1,1,33], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,57,61,30,1,1,34], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,33,86,8,98,57], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,25,69,14,99], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,71,48,86,8,98,57], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,83,48,82,8,1,1], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,54,99,37,69,75,56], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,28,61,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,93,1,65,33,17,56], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,75,45,5,90,71,95], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([69,71,39,86,8,14,57], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,37,51,86,44,4,25], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 13 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,57,61,30,1,1,33]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,57,61,30,1,1,34]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,71,33,86,8,98,57]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,71,48,25,69,14,99]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [99,71,48,86,8,98,57]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [1,83,48,82,8,1,1]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [25,54,99,37,69,75,56]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,71,48,86,28,61,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [17,93,1,65,33,17,56]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,75,45,5,90,71,95]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [69,71,39,86,8,14,57]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,37,51,86,44,4,25]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [89,71,48,86,8,98,57]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |        template        |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [89,57,61,30,1,1,33]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [89,57,61,30,1,1,33]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [89,57,61,30,1,1,33]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [89,57,61,30,1,1,33]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [89,57,61,30,1,1,33]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [89,57,61,30,1,1,33]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [89,57,61,30,1,1,33]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     89  |  0  |          0  |  [89,57,61,30,1,1,33]  |
    32  |                     R = R + chunk;  |     89  |   89  |     2  |     89  |  0  |          0  |  [89,57,61,30,1,1,33]  |
    36  |                         i = i + 1;  |         |   89  |     2  |     89  |  1  |          0  |  [89,57,61,30,1,1,33]  |
    44  |  separator = arrayRead(template...  |         |   89  |     2  |     89  |  1  |         57  |  [89,57,61,30,1,1,33]  |
    49  |  chunk = arrayRead(template, (i...  |         |   89  |     2  |     61  |  1  |         57  |  [89,57,61,30,1,1,33]  |
    52  |                     R = R + chunk;  |     61  |  150  |     2  |     61  |  1  |         57  |  [89,57,61,30,1,1,33]  |
    56  |                         i = i + 2;  |         |  150  |     2  |     61  |  3  |         57  |  [89,57,61,30,1,1,33]  |
    57  |              resetPlaceHolder_1();  |         |  150  |     2  |     61  |  3  |         57  |  [89,57,61,30,1,1,33]  |
    65  |  separator = arrayRead(template...  |         |  150  |     2  |     61  |  3  |         30  |  [89,57,61,30,1,1,33]  |
    70  |  chunk = arrayRead(template, (i...  |         |  150  |     2  |      1  |  3  |         30  |  [89,57,61,30,1,1,33]  |
    73  |                     R = R + chunk;  |      1  |  151  |     2  |      1  |  3  |         30  |  [89,57,61,30,1,1,33]  |
    77  |                         i = i + 2;  |         |  151  |     2  |      1  |  5  |         30  |  [89,57,61,30,1,1,33]  |
    78  |              resetPlaceHolder_1();  |         |  151  |     2  |      1  |  5  |         30  |  [89,57,61,30,1,1,33]  |
    86  |  separator = arrayRead(template...  |         |  151  |     2  |      1  |  5  |          1  |  [89,57,61,30,1,1,33]  |
    91  |  chunk = arrayRead(template, (i...  |         |  151  |     2  |     33  |  5  |          1  |  [89,57,61,30,1,1,33]  |
    94  |                     R = R + chunk;  |     33  |  184  |     2  |     33  |  5  |          1  |  [89,57,61,30,1,1,33]  |
    98  |                         i = i + 2;  |         |  184  |     2  |     33  |  7  |          1  |  [89,57,61,30,1,1,33]  |
    99  |              resetPlaceHolder_1();  |         |  184  |     2  |     33  |  7  |          1  |  [89,57,61,30,1,1,33]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [32, 52, 73, 94]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52,73,94}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     89  |                         0  |
    52  |         R = R + chunk;  |     61  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |      1  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     33  |                         0  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-31 13:44:13,954 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:44:16,064 INFO     Done. Execution time: 2.1101818084716797 seconds
2023-01-31 13:44:16,064 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.102s
user	0m3.822s
sys	0m0.258s

2023-01-31 13:44:16,064 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 13:44:16,065 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:47:23,335 INFO     Done. Execution time: 187.2702398300171 seconds
2023-01-31 13:47:23,335 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz3554658747144852322/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3554658747144852322/bin -o /tmp/qfuzz3554658747144852322/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3554658747144852322/bin
Found file /tmp/qfuzz3554658747144852322/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz3554658747144852322/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3554658747144852322/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3554658747144852322/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3554658747144852322/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz3554658747144852322/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 133675 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [1794.00]
2; /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 1; 0.00; [674.00]
4; /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [714.00]
13; /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 2; 3.00; [31.00,34.00]
24; /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta; 2; 23.00; [31.00,54.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 87, 95, 74, 2, 11, 53, 1, 37, 1, 82, 26, 70, 73, 65, 65, 29, 7, 19, 95, 9, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 9, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 99, 31, 35, 99, 6, 2, 23, 99, 99, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 52, 89, 71, 48, 74, 80, 61, 87, 16, 7, 98, 56, 97, 69, 55, 90, 74, 40, 49, 55, 4, 34, 43, 25, 33, 52, 89, 71, 48, 74, 20, 41, 22, 16, 7, 98, 95)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz3554658747144852322/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134723_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 35, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 33, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:47:23,335 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-31 13:47:23,336 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 13:47:31,362 INFO     Done. Execution time: 8.026245355606079 seconds
2023-01-31 13:47:31,362 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134723_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134723_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(35, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(33, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 1
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 2
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 35
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 33
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 89
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       1  |
    19  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       1  |
    20  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       1  |
    21  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       1  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       1  |
    26  |                  sb = sb + string;  |         |  0  |     |          2  |   1  |       1  |
    29  |                    R = R + string;  |      1  |  1  |     |          2  |   1  |       1  |
    31  |                    int i = string;  |         |  1  |  1  |          2  |   1  |       1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |          2  |   2  |       1  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |          2  |   2  |       1  |
    45  |                         i = i + 1;  |         |  2  |  2  |          2  |   2  |       1  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |          2  |   2  |       1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [29, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |        R = R + string;  |      1  |                         0  |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |        R = R + string;  |      1  |                         0  |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 40])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |        R = R + string;  |      1  |                         0  |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       2  |
    19  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       2  |
    20  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       2  |
    21  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       2  |
    26  |                  sb = sb + string;  |         |  0  |     |          2  |   2  |       2  |
    29  |                    R = R + string;  |      2  |  2  |     |          2  |   2  |       2  |
    31  |                    int i = string;  |         |  2  |  2  |          2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |      2  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-31 13:47:31,362 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:47:45,080 INFO     Done. Execution time: 13.71709656715393 seconds
2023-01-31 13:47:45,080 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadEnd  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 minLength) (* 1 1 string)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun string () Int)
(declare-fun minLength () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> string 0))
(assert (> minLength 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 minLength) (* 1 1 string))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 minLength) (* 1 1 string))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C19 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    15)  (define-fun minLength () Int    7)  (define-fun string () Int    9)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`)
INFO  brbo.BrboMain - Time consumption: `11.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1347-transparentAmortize-60s-mostPrecise/guava-raw-0131-1347-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.709s
user	0m27.029s
sys	0m3.574s

2023-01-31 13:47:45,080 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 13:47:45,080 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:50:51,906 INFO     Done. Execution time: 186.8252468109131 seconds
2023-01-31 13:50:51,906 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz1488653726927560931/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1488653726927560931/bin -o /tmp/qfuzz1488653726927560931/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1488653726927560931/bin
Found file /tmp/qfuzz1488653726927560931/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz1488653726927560931/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1488653726927560931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1488653726927560931/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1488653726927560931/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz1488653726927560931/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 136410 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta; 2; 6.00; [31.00,37.00]
32; /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:128,+delta; 2; 14.00; [37.00,51.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:128,+delta
/tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
/tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 79, 95, 32, 18, 15, 15, 95, 69, 82, 41, 1, 19, 15, 91, 36, 11, 14, 83, 91, 36, 11, 14, 35, 59, 97, 56, 56, 36, 29, 1, 57, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 61, 1, 91, 97, 93, 78, 12, 55, 43, 34, 73, 44, 92, 30, 55, 71, 32, 69, 30, 21, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz1488653726927560931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135051_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:50:51,906 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-31 13:50:51,907 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 13:50:59,798 INFO     Done. Execution time: 7.8910887241363525 seconds
2023-01-31 13:50:59,798 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135051_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135051_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 1
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 2
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 89
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 54):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       1  |
    23  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       1  |
    24  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       1  |
    25  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       1  |
    26  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       1  |
    28  |                    int i = string;  |         |  0  |  1  |          2  |   0  |       1  |
    35  |                       sb = sb + 1;  |         |  0  |  1  |          2  |   1  |       1  |
    38  |                         R = R + 1;  |      1  |  1  |  1  |          2  |   1  |       1  |
    42  |                         i = i + 1;  |         |  1  |  2  |          2  |   1  |       1  |
    43  |              resetPlaceHolder_1();  |         |  1  |  2  |          2  |   1  |       1  |
    50  |                  sb = sb + string;  |         |  1  |  2  |          2  |   2  |       1  |
    53  |                    R = R + string;  |      1  |  2  |  2  |          2  |   2  |       1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 53]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {53}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {53} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {53}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [39, 52])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |       2  |
    22  |     return;  |         |  0  |          2  |       2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-31 13:50:59,798 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:51:15,008 INFO     Done. Execution time: 15.209927082061768 seconds
2023-01-31 13:51:15,009 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    sb = sb + string;
    D0 = D0 + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    sb = sb + string;
    D0 = D0 + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 minLength)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `12.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1351-transparentAmortize-60s-mostPrecise/guava-raw-0131-1351-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.202s
user	0m28.888s
sys	0m3.961s

2023-01-31 13:51:15,010 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    186.79306268692017,
    11.62692928314209,
    56.16189432144165
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    186.99235677719116,
    21.38009476661682,
    101.95169520378113
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    186.755597114563,
    23.006131410598755,
    64.11403393745422
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    187.3005895614624,
    22.93432879447937,
    8.764014959335327
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    187.0828137397766,
    15.135403633117676,
    10.338807821273804
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": [
    186.7823474407196,
    16.693285703659058,
    18.125981092453003
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": [
    187.18211317062378,
    10.939434289932251,
    63.16850996017456
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    186.70857000350952,
    10.102368116378784,
    21.89996886253357
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    187.1303858757019,
    8.699541807174683,
    10.751680135726929
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    187.36767506599426,
    60.16830539703369,
    13.25472378730774
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    2.696828603744507,
    2.5820882320404053,
    1.4792206287384033
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    187.08904194831848,
    5.704654693603516,
    2.9175920486450195
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    187.00038290023804,
    11.811879873275757,
    2.420840263366699
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    186.99904227256775,
    8.972075700759888,
    11.630094051361084
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    187.296875,
    11.09376835823059,
    342.656676530838
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    186.90785098075867,
    17.101643085479736,
    152.9265103340149
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    187.3752567768097,
    9.641543865203857,
    10.518853664398193
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    187.11871647834778,
    18.245429515838623,
    259.04351115226746
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    187.48762345314026,
    9.438177585601807,
    10.510995626449585
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    187.1438455581665,
    8.758705139160156,
    9.01078987121582
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    480.06139159202576,
    2.5351274013519287,
    1.3756144046783447
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    187.14914774894714,
    8.357046365737915,
    9.828681945800781
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    187.1577913761139,
    7.74695897102356,
    9.954559564590454
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    187.13108682632446,
    5.18899941444397,
    2.821985960006714
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    186.72059798240662,
    9.522526741027832,
    12.480890274047852
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    186.29962396621704,
    9.233286619186401,
    9.823567390441895
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    186.80200719833374,
    6.631906986236572,
    8.839929103851318
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    187.23642587661743,
    6.366238355636597,
    24.276905059814453
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    186.83286929130554,
    6.5906713008880615,
    2.2947614192962646
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    186.90785598754883,
    16.144345998764038,
    18.038445472717285
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    187.12172317504883,
    16.200733184814453,
    9.488205909729004
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    186.55896043777466,
    12.180482864379883,
    117.32099795341492
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    187.49241375923157,
    8.837409496307373,
    26.8030846118927
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    186.8261992931366,
    11.642452955245972,
    127.61052131652832
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    187.11220455169678,
    3.842909574508667,
    2.7821311950683594
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    186.93102741241455,
    6.534808397293091,
    1.8553133010864258
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    186.3503053188324,
    4.850853681564331,
    2.600764513015747
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    186.9328327178955,
    11.286187648773193,
    2.1101818084716797
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    187.2702398300171,
    8.026245355606079,
    13.71709656715393
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    186.8252468109131,
    7.8910887241363525,
    15.209927082061768
  ]
}
2023-01-31 13:51:15,010 INFO     Total time elapsed: 9653.456954956055 seconds
2023-01-31 13:51:15,010 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-31 13:51:15,010 INFO     Number of verified programs: {
  "stac": 2,
  "lang3": 12,
  "stringutils": 7,
  "guava": 1
}
2023-01-31 13:51:15,010 INFO     Number of not verified programs: {
  "stac": 5,
  "lang3": 5,
  "stringutils": 1,
  "guava": 1
}
2023-01-31 13:51:15,011 INFO     Number of unknown programs: {
  "lang3": 3,
  "stringutils": 2,
  "guava": 1
}
2023-01-31 13:51:15,011 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 2
}
2023-01-31 13:51:15,011 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/qfuzz_00.json

2023-01-31 13:51:15,115 INFO     Arguments:
2023-01-31 13:51:15,115 INFO     timeout	180
2023-01-31 13:51:15,115 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-31 13:51:15,115 INFO     samples	0
2023-01-31 13:51:15,116 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-31 13:51:15,116 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-31 13:51:15,116 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-31 13:51:15,116 INFO     dry	False
2023-01-31 13:51:15,116 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/naive_01.txt
2023-01-31 13:51:15,116 INFO     mode	naive
2023-01-31 13:51:15,116 INFO     version	master
2023-01-31 13:51:15,116 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
2023-01-31 13:51:15,116 INFO     min_int	1
2023-01-31 13:51:15,116 INFO     max_int	100
2023-01-31 13:51:15,116 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-31 13:51:15,122 INFO     Done. Execution time: 0.005339145660400391 seconds
2023-01-31 13:51:15,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "a46acaaae36a654d9e52218d239766824b4c902a"`
2023-01-31 13:51:15,129 INFO     Done. Execution time: 0.006224393844604492 seconds
2023-01-31 13:51:15,129 INFO     Build a new version: "a46acaaae36a654d9e52218d239766824b4c902a"
2023-01-31 13:51:15,129 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-31 13:51:29,662 INFO     Done. Execution time: 14.532196998596191 seconds
2023-01-31 13:51:29,662 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 6 s, completed Jan 31, 2023 1:51:29 PM

2023-01-31 13:51:29,668 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 13:51:29,668 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:54:36,424 INFO     Done. Execution time: 186.7556037902832 seconds
2023-01-31 13:54:36,424 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz2293983981043749408/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2293983981043749408/bin -o /tmp/qfuzz2293983981043749408/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2293983981043749408/bin
Found file /tmp/qfuzz2293983981043749408/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz2293983981043749408/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2293983981043749408/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2293983981043749408/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2293983981043749408/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz2293983981043749408/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 135633 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 132576 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m132k to 135k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz2293983981043749408/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135436_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:54:36,424 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 13:54:36,425 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 13:54:49,214 INFO     Done. Execution time: 12.789265155792236 seconds
2023-01-31 13:54:49,214 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135436_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135436_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |           text           |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [56,68,33,58,29,78,76]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [56,68,33,58,29,78,76]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    25  |                     R = R + chunk;  |     56  |   56  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    29  |                         i = i + 1;  |         |   56  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    30  |              resetPlaceHolder_1();  |         |   56  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    36  |        chunk = arrayRead(text, i);  |         |   56  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    39  |                     R = R + chunk;  |     68  |  124  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    43  |                         i = i + 1;  |         |  124  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    44  |              resetPlaceHolder_1();  |         |  124  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    50  |        chunk = arrayRead(text, i);  |         |  124  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    53  |                     R = R + chunk;  |     33  |  157  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    57  |                         i = i + 1;  |         |  157  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    58  |              resetPlaceHolder_1();  |         |  157  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    64  |        chunk = arrayRead(text, i);  |         |  157  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    67  |                     R = R + chunk;  |     58  |  215  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    71  |                         i = i + 1;  |         |  215  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    72  |              resetPlaceHolder_1();  |         |  215  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    78  |        chunk = arrayRead(text, i);  |         |  215  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    81  |                     R = R + chunk;  |     29  |  244  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    85  |                         i = i + 1;  |         |  244  |     29  |  5  |  [56,68,33,58,29,78,76]  |
    86  |              resetPlaceHolder_1();  |         |  244  |     29  |  5  |  [56,68,33,58,29,78,76]  |
    92  |        chunk = arrayRead(text, i);  |         |  244  |     78  |  5  |  [56,68,33,58,29,78,76]  |
    95  |                     R = R + chunk;  |     78  |  322  |     78  |  5  |  [56,68,33,58,29,78,76]  |
    99  |                         i = i + 1;  |         |  322  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   100  |              resetPlaceHolder_1();  |         |  322  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   106  |        chunk = arrayRead(text, i);  |         |  322  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   109  |                     R = R + chunk;  |     76  |  398  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   113  |                         i = i + 1;  |         |  398  |     76  |  7  |  [56,68,33,58,29,78,76]  |
   114  |              resetPlaceHolder_1();  |         |  398  |     76  |  7  |  [56,68,33,58,29,78,76]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     56  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     68  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     33  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     58  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     29  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     78  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     76  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 13:54:49,215 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:54:57,842 INFO     Done. Execution time: 8.626819372177124 seconds
2023-01-31 13:54:57,842 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1354-transparentAmortize-60s-mostPrecise/stac-raw-0131-1354-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.619s
user	0m19.400s
sys	0m2.498s

2023-01-31 13:54:57,842 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 13:54:57,843 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 13:58:04,407 INFO     Done. Execution time: 186.56403136253357 seconds
2023-01-31 13:58:04,407 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz4264640852528284172/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4264640852528284172/bin -o /tmp/qfuzz4264640852528284172/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4264640852528284172/bin
Found file /tmp/qfuzz4264640852528284172/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz4264640852528284172/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4264640852528284172/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4264640852528284172/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4264640852528284172/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz4264640852528284172/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 127926 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 124805 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m124k to 127k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 2, 43, 25, 33, 61, 52, 28, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz4264640852528284172/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_135804_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,2,43,25,33,61], 2, 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76], 2, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 2, 55
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:58:04,407 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 13:58:04,408 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 13:58:23,119 INFO     Done. Execution time: 18.711055755615234 seconds
2023-01-31 13:58:23,119 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_135804_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_135804_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,2,43,25,33,61], 2, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76], 2, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 2, 55)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,1,2,43,25,33,61]
templateds: 2
separator: 28
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
templateds: 2
separator: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
templateds: 2
separator: 55
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         28  |           2  |  [1,1,2,43,25,33,61]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |      1  |  0  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    46  |                     R = R + chunk;  |      1  |    1  |      1  |  0  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    50  |                         j = j + 1;  |         |    1  |      1  |  0  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    51  |              resetPlaceHolder_2();  |         |    1  |      1  |  0  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    57  |        chunk = arrayRead(text, j);  |         |    1  |      1  |  0  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    60  |                     R = R + chunk;  |      1  |    2  |      1  |  0  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    64  |                         j = j + 1;  |         |    2  |      1  |  0  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    65  |              resetPlaceHolder_2();  |         |    2  |      1  |  0  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    71  |        chunk = arrayRead(text, j);  |         |    2  |      2  |  0  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    74  |                     R = R + chunk;  |      2  |    4  |      2  |  0  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    78  |                         j = j + 1;  |         |    4  |      2  |  0  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    79  |              resetPlaceHolder_2();  |         |    4  |      2  |  0  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    85  |        chunk = arrayRead(text, j);  |         |    4  |     43  |  0  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    88  |                     R = R + chunk;  |     43  |   47  |     43  |  0  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    92  |                         j = j + 1;  |         |   47  |     43  |  0  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    93  |              resetPlaceHolder_2();  |         |   47  |     43  |  0  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
    99  |        chunk = arrayRead(text, j);  |         |   47  |     25  |  0  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   102  |                     R = R + chunk;  |     25  |   72  |     25  |  0  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   106  |                         j = j + 1;  |         |   72  |     25  |  0  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   107  |              resetPlaceHolder_2();  |         |   72  |     25  |  0  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   113  |        chunk = arrayRead(text, j);  |         |   72  |     33  |  0  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   116  |                     R = R + chunk;  |     33  |  105  |     33  |  0  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   120  |                         j = j + 1;  |         |  105  |     33  |  0  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   121  |              resetPlaceHolder_2();  |         |  105  |     33  |  0  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   127  |        chunk = arrayRead(text, j);  |         |  105  |     61  |  0  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   130  |                     R = R + chunk;  |     61  |  166  |     61  |  0  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   134  |                         j = j + 1;  |         |  166  |     61  |  0  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   135  |              resetPlaceHolder_2();  |         |  166  |     61  |  0  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   141  |                 R = R + separator;  |     28  |  194  |     61  |  0  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   145  |                         i = i + 1;  |         |  194  |     61  |  1  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   146  |              resetPlaceHolder_1();  |         |  194  |     61  |  1  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   151  |                         int j = 0;  |         |  194  |     61  |  1  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   157  |        chunk = arrayRead(text, j);  |         |  194  |      1  |  1  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   160  |                     R = R + chunk;  |      1  |  195  |      1  |  1  |  0  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   164  |                         j = j + 1;  |         |  195  |      1  |  1  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   165  |              resetPlaceHolder_2();  |         |  195  |      1  |  1  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   171  |        chunk = arrayRead(text, j);  |         |  195  |      1  |  1  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   174  |                     R = R + chunk;  |      1  |  196  |      1  |  1  |  1  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   178  |                         j = j + 1;  |         |  196  |      1  |  1  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   179  |              resetPlaceHolder_2();  |         |  196  |      1  |  1  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   185  |        chunk = arrayRead(text, j);  |         |  196  |      2  |  1  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   188  |                     R = R + chunk;  |      2  |  198  |      2  |  1  |  2  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   192  |                         j = j + 1;  |         |  198  |      2  |  1  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   193  |              resetPlaceHolder_2();  |         |  198  |      2  |  1  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   199  |        chunk = arrayRead(text, j);  |         |  198  |     43  |  1  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   202  |                     R = R + chunk;  |     43  |  241  |     43  |  1  |  3  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   206  |                         j = j + 1;  |         |  241  |     43  |  1  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   207  |              resetPlaceHolder_2();  |         |  241  |     43  |  1  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   213  |        chunk = arrayRead(text, j);  |         |  241  |     25  |  1  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   216  |                     R = R + chunk;  |     25  |  266  |     25  |  1  |  4  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   220  |                         j = j + 1;  |         |  266  |     25  |  1  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   221  |              resetPlaceHolder_2();  |         |  266  |     25  |  1  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   227  |        chunk = arrayRead(text, j);  |         |  266  |     33  |  1  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   230  |                     R = R + chunk;  |     33  |  299  |     33  |  1  |  5  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   234  |                         j = j + 1;  |         |  299  |     33  |  1  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   235  |              resetPlaceHolder_2();  |         |  299  |     33  |  1  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   241  |        chunk = arrayRead(text, j);  |         |  299  |     61  |  1  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   244  |                     R = R + chunk;  |     61  |  360  |     61  |  1  |  6  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   248  |                         j = j + 1;  |         |  360  |     61  |  1  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   249  |              resetPlaceHolder_2();  |         |  360  |     61  |  1  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   255  |                 R = R + separator;  |     28  |  388  |     61  |  1  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   259  |                         i = i + 1;  |         |  388  |     61  |  2  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
   260  |              resetPlaceHolder_1();  |         |  388  |     61  |  2  |  7  |         28  |           2  |  [1,1,2,43,25,33,61]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {141}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {141}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      1  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      1  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |      2  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     43  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     25  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     33  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     61  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     28  |                         0  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |      1  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      1  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |      2  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     43  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     25  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     33  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     61  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     28  |                         1  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {174}; {46}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(0), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {160}; {174}; {46}; {60} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      1  |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      1  |                         1  |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |      2  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     43  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     25  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     33  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     61  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     28  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |      1  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      1  |                         3  |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |      2  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     43  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     25  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     33  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     61  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     28  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 10 trace node indices: [88, 202, 216, 116, 74, 102, 188, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 10 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {216,244}; {88,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {216,244}; {88,202} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      1  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      1  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |      2  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     43  |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     25  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     33  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     61  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     28  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |      1  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      1  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |      2  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     43  |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     25  |                         1  |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     33  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     61  |                         1  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     28  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [116, 74, 102, 188, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 6 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [116, 74, 102, 188, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [116, 74, 102, 188, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,130,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [116, 74, 102, 188, 230, 130]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {141}; {255}
GroupID(1): {160}; {174}; {46}; {60}
GroupID(2): {216,244}; {88,202}
GroupID(3): {74,102,116,130,188,230}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      1  |                            |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    60  |         R = R + chunk;  |      1  |                            |                         1  |                            |                            |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    74  |         R = R + chunk;  |      2  |                            |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     43  |                            |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   102  |         R = R + chunk;  |     25  |                            |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   116  |         R = R + chunk;  |     33  |                            |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   130  |         R = R + chunk;  |     61  |                            |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   141  |     R = R + separator;  |     28  |                         0  |                            |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   160  |         R = R + chunk;  |      1  |                            |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   174  |         R = R + chunk;  |      1  |                            |                         3  |                            |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   188  |         R = R + chunk;  |      2  |                            |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   202  |         R = R + chunk;  |     43  |                            |                            |                         0  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   216  |         R = R + chunk;  |     25  |                            |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   230  |         R = R + chunk;  |     33  |                            |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   244  |         R = R + chunk;  |     61  |                            |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   255  |     R = R + separator;  |     28  |                         1  |                            |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
GroupID(3): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(51, 65, 165)
GroupID(2): Set(207)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R3
  if ((i < 0) || (i == 0))
  {
    // reset R2
  }
  else
  {
    if ((j < 3) || (j == 3))
    {
      // reset R2
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        if (S2 < R2)
        {
          S2 = R2;
        }
        else
        {
          ;
        }
        R2 = 0;
        C2 = C2 + 1;
      }
      else
      {
        // reset R2
      }
    }
  }
  if ((j < 2) || (j == 2))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    // reset R1
  }
  // reset R0
}
use R separator -> R0 = R0 + separator;
use R chunk -> if ((j < 1) || (j == 1))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 0) || (i == 0))
  {
    if ((j < 3) || (j == 3))
    {
      if ((j < 2) || (j == 2))
      {
        R3 = R3 + chunk;
      }
      else
      {
        R2 = R2 + chunk;
      }
    }
    else
    {
      R3 = R3 + chunk;
    }
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      R3 = R3 + chunk;
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 5) || (j == 5))
        {
          R3 = R3 + chunk;
        }
        else
        {
          R2 = R2 + chunk;
        }
      }
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 13:58:23,120 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:59:26,126 INFO     Done. Execution time: 63.005950689315796 seconds
2023-01-31 13:59:26,126 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((text * templateds) + (separator * templateds))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 3) || (j == 3))
            {
              if ((j < 2) || (j == 2))
              {
                D3 = D3 + chunk;
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
            else
            {
              D3 = D3 + chunk;
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        j = j + 1;
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 3) || (j == 3))
          {

          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
            else
            {

            }
          }
        }
        if ((j < 2) || (j == 2))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((text * templateds) + (separator * templateds))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 3) || (j == 3))
            {
              if ((j < 2) || (j == 2))
              {
                D3 = D3 + chunk;
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
            else
            {
              D3 = D3 + chunk;
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        j = j + 1;
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 3) || (j == 3))
          {

          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
            else
            {

            }
          }
        }
        if ((j < 2) || (j == 2))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6599308167110807672.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8950107473663217994.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6330665622358946249.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4239842540436096916.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-723220532678651377.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5180338103324799520.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2756741630193492510.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7150414043096185489.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-759051815689219353.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8955729964595221014.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5874152283828610605.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8109120262706733275.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C85 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C86 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C84 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (and (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C84 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C86 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C85 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    3)  (define-fun D0 () Int    2)  (define-fun D3 () Int    3)  (define-fun D1 () Int    (- 8))  (define-fun C2 () Int    5)  (define-fun C1 () Int    13)  (define-fun C3 () Int    1)  (define-fun templateds () Int    1)  (define-fun text () Int    12)  (define-fun separator () Int    16)  (define-fun D2p () Int    14)  (define-fun D0p () Int    0)  (define-fun D3p () Int    15)  (define-fun D1p () Int    2)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C85 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C86 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C84 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1358-transparentAmortize-60s-mostPrecise/stac-raw-0131-1358-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.998s
user	4m2.937s
sys	0m3.301s

2023-01-31 13:59:26,127 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 13:59:26,127 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:02:32,783 INFO     Done. Execution time: 186.65588092803955 seconds
2023-01-31 14:02:32,783 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7846915312289684662/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7846915312289684662/bin -o /tmp/qfuzz7846915312289684662/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7846915312289684662/bin
Found file /tmp/qfuzz7846915312289684662/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7846915312289684662/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7846915312289684662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7846915312289684662/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7846915312289684662/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz7846915312289684662/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 122819 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 125855 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m122k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 55, 37, 67, 68, 20, 95, 57, 47, 89, 79, 88, 30, 55, 71, 32, 69, 30, 21, 35, 75, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7846915312289684662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140232_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,55,37,67], 2, 20, 95
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76], 2, 78, 56
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 2, 55, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:02:32,783 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 14:02:32,783 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 14:02:51,262 INFO     Done. Execution time: 18.478164434432983 seconds
2023-01-31 14:02:51,262 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140232_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140232_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,55,37,67], 2, 20, 95)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 2, 55, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76], 2, 78, 56)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,1,1,1,55,37,67]
ts: 2
sep: 20
rep: 95
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
ts: 2
sep: 78
rep: 56
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
ts: 2
sep: 55
rep: 4
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |         text         |  ts  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    38  |                     int chunk = 0;  |         |     0  |      0  |     |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    40  |                         int i = 0;  |         |     0  |      0  |  0  |     |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    45  |                         int j = 0;  |         |     0  |      0  |  0  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |     0  |      1  |  0  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    54  |                     R = R + chunk;  |      1  |     1  |      1  |  0  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    57  |                       R = R + rep;  |     95  |    96  |      1  |  0  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    61  |                         j = j + 1;  |         |    96  |      1  |  0  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    62  |              resetPlaceHolder_2();  |         |    96  |      1  |  0  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |    96  |      1  |  0  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    71  |                     R = R + chunk;  |      1  |    97  |      1  |  0  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    74  |                       R = R + rep;  |     95  |   192  |      1  |  0  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    78  |                         j = j + 1;  |         |   192  |      1  |  0  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   192  |      1  |  0  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   192  |      1  |  0  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    88  |                     R = R + chunk;  |      1  |   193  |      1  |  0  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    91  |                       R = R + rep;  |     95  |   288  |      1  |  0  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    95  |                         j = j + 1;  |         |   288  |      1  |  0  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   288  |      1  |  0  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   288  |      1  |  0  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   105  |                     R = R + chunk;  |      1  |   289  |      1  |  0  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   108  |                       R = R + rep;  |     95  |   384  |      1  |  0  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   112  |                         j = j + 1;  |         |   384  |      1  |  0  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   113  |              resetPlaceHolder_2();  |         |   384  |      1  |  0  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |   384  |     55  |  0  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   122  |                     R = R + chunk;  |     55  |   439  |     55  |  0  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   125  |                       R = R + rep;  |     95  |   534  |     55  |  0  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   129  |                         j = j + 1;  |         |   534  |     55  |  0  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   130  |              resetPlaceHolder_2();  |         |   534  |     55  |  0  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |   534  |     37  |  0  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   139  |                     R = R + chunk;  |     37  |   571  |     37  |  0  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   142  |                       R = R + rep;  |     95  |   666  |     37  |  0  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   146  |                         j = j + 1;  |         |   666  |     37  |  0  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   147  |              resetPlaceHolder_2();  |         |   666  |     37  |  0  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |   666  |     67  |  0  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   156  |                     R = R + chunk;  |     67  |   733  |     67  |  0  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   159  |                       R = R + rep;  |     95  |   828  |     67  |  0  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   163  |                         j = j + 1;  |         |   828  |     67  |  0  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   164  |              resetPlaceHolder_2();  |         |   828  |     67  |  0  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   170  |                       R = R + sep;  |     20  |   848  |     67  |  0  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   174  |                         i = i + 1;  |         |   848  |     67  |  1  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   175  |              resetPlaceHolder_1();  |         |   848  |     67  |  1  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   180  |                         int j = 0;  |         |   848  |     67  |  1  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |   848  |      1  |  1  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   189  |                     R = R + chunk;  |      1  |   849  |      1  |  1  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   192  |                       R = R + rep;  |     95  |   944  |      1  |  1  |  0  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   196  |                         j = j + 1;  |         |   944  |      1  |  1  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   197  |              resetPlaceHolder_2();  |         |   944  |      1  |  1  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |   944  |      1  |  1  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   206  |                     R = R + chunk;  |      1  |   945  |      1  |  1  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   209  |                       R = R + rep;  |     95  |  1040  |      1  |  1  |  1  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   213  |                         j = j + 1;  |         |  1040  |      1  |  1  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  1040  |      1  |  1  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  1040  |      1  |  1  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   223  |                     R = R + chunk;  |      1  |  1041  |      1  |  1  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   226  |                       R = R + rep;  |     95  |  1136  |      1  |  1  |  2  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   230  |                         j = j + 1;  |         |  1136  |      1  |  1  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  1136  |      1  |  1  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  1136  |      1  |  1  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   240  |                     R = R + chunk;  |      1  |  1137  |      1  |  1  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   243  |                       R = R + rep;  |     95  |  1232  |      1  |  1  |  3  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   247  |                         j = j + 1;  |         |  1232  |      1  |  1  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  1232  |      1  |  1  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  1232  |     55  |  1  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   257  |                     R = R + chunk;  |     55  |  1287  |     55  |  1  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   260  |                       R = R + rep;  |     95  |  1382  |     55  |  1  |  4  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   264  |                         j = j + 1;  |         |  1382  |     55  |  1  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  1382  |     55  |  1  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  1382  |     37  |  1  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   274  |                     R = R + chunk;  |     37  |  1419  |     37  |  1  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   277  |                       R = R + rep;  |     95  |  1514  |     37  |  1  |  5  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   281  |                         j = j + 1;  |         |  1514  |     37  |  1  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  1514  |     37  |  1  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  1514  |     67  |  1  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   291  |                     R = R + chunk;  |     67  |  1581  |     67  |  1  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   294  |                       R = R + rep;  |     95  |  1676  |     67  |  1  |  6  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   298  |                         j = j + 1;  |         |  1676  |     67  |  1  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  1676  |     67  |  1  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   305  |                       R = R + sep;  |     20  |  1696  |     67  |  1  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   309  |                         i = i + 1;  |         |  1696  |     67  |  2  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  1696  |     67  |  2  |  7  |   95  |   20  |  [1,1,1,1,55,37,67]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 6 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {189}; {206}; {223}; {240}; {54}; {71}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(2), Set(3), Set(0), Set(1), Set(2), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {105}; {189}; {206}; {223}; {240}; {54}; {71}; {88} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      1  |                         0  |
    57  |           R = R + rep;  |     95  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      1  |                         1  |
    74  |           R = R + rep;  |     95  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      1  |                         2  |
    91  |           R = R + rep;  |     95  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      1  |                         3  |
   108  |           R = R + rep;  |     95  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     55  |                            |
   125  |           R = R + rep;  |     95  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     37  |                            |
   142  |           R = R + rep;  |     95  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     67  |                            |
   159  |           R = R + rep;  |     95  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     20  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      1  |                         4  |
   192  |           R = R + rep;  |     95  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      1  |                         5  |
   209  |           R = R + rep;  |     95  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |      1  |                         6  |
   226  |           R = R + rep;  |     95  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      1  |                         7  |
   243  |           R = R + rep;  |     95  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     55  |                            |
   260  |           R = R + rep;  |     95  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     37  |                            |
   277  |           R = R + rep;  |     95  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     67  |                            |
   294  |           R = R + rep;  |     95  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     20  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      1  |                            |
    57  |           R = R + rep;  |     95  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      1  |                            |
    74  |           R = R + rep;  |     95  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      1  |                            |
    91  |           R = R + rep;  |     95  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      1  |                            |
   108  |           R = R + rep;  |     95  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     55  |                            |
   125  |           R = R + rep;  |     95  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     37  |                            |
   142  |           R = R + rep;  |     95  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     67  |                            |
   159  |           R = R + rep;  |     95  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     20  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      1  |                            |
   192  |           R = R + rep;  |     95  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      1  |                            |
   209  |           R = R + rep;  |     95  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |      1  |                            |
   226  |           R = R + rep;  |     95  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      1  |                            |
   243  |           R = R + rep;  |     95  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     55  |                            |
   260  |           R = R + rep;  |     95  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     37  |                            |
   277  |           R = R + rep;  |     95  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     67  |                            |
   294  |           R = R + rep;  |     95  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     20  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {305} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      1  |                            |
    57  |           R = R + rep;  |     95  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      1  |                            |
    74  |           R = R + rep;  |     95  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      1  |                            |
    91  |           R = R + rep;  |     95  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      1  |                            |
   108  |           R = R + rep;  |     95  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     55  |                            |
   125  |           R = R + rep;  |     95  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     37  |                            |
   142  |           R = R + rep;  |     95  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     67  |                            |
   159  |           R = R + rep;  |     95  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     20  |                         0  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      1  |                            |
   192  |           R = R + rep;  |     95  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      1  |                            |
   209  |           R = R + rep;  |     95  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |      1  |                            |
   226  |           R = R + rep;  |     95  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      1  |                            |
   243  |           R = R + rep;  |     95  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     55  |                            |
   260  |           R = R + rep;  |     95  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     37  |                            |
   277  |           R = R + rep;  |     95  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     67  |                            |
   294  |           R = R + rep;  |     95  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     20  |                         1  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [257, 156, 291, 274, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,139}; {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,139}; {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139,156}; {274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 6), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139,156}; {274,291}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [257, 156, 291, 274, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {139,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {139,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {156,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,139,156}; {257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5, 6), Set(4, 5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,139,156}; {257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [257, 156, 291, 274, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,156,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,156,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {139,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,156,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {156,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [257, 156, 291, 274, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,257,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,156,257,274,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [257, 156, 291, 274, 139, 122]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {105}; {189}; {206}; {223}; {240}; {54}; {71}; {88}
GroupID(1): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(2): {170}; {305}
GroupID(3): {122,139,156,257,274,291}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      1  |                         0  |                            |                            |                            |
    57  |           R = R + rep;  |     95  |                            |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |      1  |                         1  |                            |                            |                            |
    74  |           R = R + rep;  |     95  |                            |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |      1  |                         2  |                            |                            |                            |
    91  |           R = R + rep;  |     95  |                            |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |      1  |                         3  |                            |                            |                            |
   108  |           R = R + rep;  |     95  |                            |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     55  |                            |                            |                            |                         0  |
   125  |           R = R + rep;  |     95  |                            |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     95  |                            |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     67  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     95  |                            |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |     20  |                            |                            |                         0  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      1  |                         4  |                            |                            |                            |
   192  |           R = R + rep;  |     95  |                            |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |      1  |                         5  |                            |                            |                            |
   209  |           R = R + rep;  |     95  |                            |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |      1  |                         6  |                            |                            |                            |
   226  |           R = R + rep;  |     95  |                            |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |      1  |                         7  |                            |                            |                            |
   243  |           R = R + rep;  |     95  |                            |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     55  |                            |                            |                            |                         0  |
   260  |           R = R + rep;  |     95  |                            |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     95  |                            |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     67  |                            |                            |                            |                         0  |
   294  |           R = R + rep;  |     95  |                            |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |     20  |                            |                            |                         1  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(197, 96, 113, 231, 214, 79, 62)
GroupID(1): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(2): Set(175)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R2 = R2 + sep;
use R rep -> R1 = R1 + rep;
resetPlaceHolder_1(); -> {
  // reset R3
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  // reset R1
  // reset R0
}
resetPlaceHolder_2(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if ((j < 4) || (j == 4))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((j < 3) || (j == 3))
{
  R0 = R0 + chunk;
}
else
{
  R3 = R3 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 14:02:51,263 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:05:51,063 INFO     Done. Execution time: 179.8002951145172 seconds
2023-01-31 14:05:51,064 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D3 = D3 + chunk;
        }
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
        if ((j < 4) || (j == 4))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
      D2 = D2 + sep;
      i = i + 1;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D3 = D3 + chunk;
        }
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
        if ((j < 4) || (j == 4))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
      D2 = D2 + sep;
      i = i + 1;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3623638816570281336.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8856288119847217907.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1324716209935549604.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3117484923028569027.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-678887398981052646.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6842252674829819736.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-594019249215405311.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3035998577147011814.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= D3p 0)` for variable `D3p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 rep)))` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6591618784364101305.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 rep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D3 (+ 0 (* 1 1 text)))` for variable `D3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!5 (or (<= D1p (+ 0 (* 1 1 rep))) (= D1p 0)))
      (a!6 (or (<= D3p (+ 0 (* 1 1 text))) (= D3p 0))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4))
       (<= D1p (+ 0 (* 1 1 rep)))
       a!5
       true
       (or true (= D2p 0))
       (<= D3p 0)
       a!6
       true
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 rep))) (= D1 0)))
      (a!2 (or (<= D3 (+ 0 (* 1 1 text))) (= D3 0))))
  (and a!1 (or true (= D2 0)) a!2 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C3 () Int    0)  (define-fun D0 () Int    7)  (define-fun D3 () Int    7)  (define-fun D2 () Int    6)  (define-fun D1 () Int    2)  (define-fun C2 () Int    15)  (define-fun C1 () Int    15)  (define-fun rep () Int    2)  (define-fun sep () Int    4)  (define-fun text () Int    13)  (define-fun ts () Int    6)  (define-fun D0p () Int    2)  (define-fun D2p () Int    15)  (define-fun D1p () Int    2)  (define-fun C0 () Int    1)  (define-fun D3p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `177.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1402-transparentAmortize-60s-mostPrecise/stac-raw-0131-1402-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m59.793s
user	9m35.423s
sys	0m11.573s

2023-01-31 14:05:51,064 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:05:51,064 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:08:57,598 INFO     Done. Execution time: 186.53345775604248 seconds
2023-01-31 14:08:57,598 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz778285696408708773/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz778285696408708773/bin -o /tmp/qfuzz778285696408708773/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz778285696408708773/bin
Found file /tmp/qfuzz778285696408708773/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz778285696408708773/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz778285696408708773/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz778285696408708773/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz778285696408708773/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz778285696408708773/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz778285696408708773/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz778285696408708773/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 19, exec speed = 129875 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 20, exec speed = 125308 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m19 to 20 bits (average: 19.50 bits)
[1;90m        Exec timing : [0m125k to 129k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz778285696408708773/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140857_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76], 59
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57], 5
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:08:57,598 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:08:57,598 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:09:22,024 INFO     Done. Execution time: 24.425631046295166 seconds
2023-01-31 14:09:22,025 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140857_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140857_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76], 59)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57], 5)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
choice: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
choice: 59
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       5  |         |     |  [89,71,48,86,8,98,57]  |
    10  |                      // int R = 0;  |         |    0  |       5  |         |     |  [89,71,48,86,8,98,57]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       5  |         |     |  [89,71,48,86,8,98,57]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       5  |         |     |  [89,71,48,86,8,98,57]  |
    14  |                     int chunk = 0;  |         |    0  |       5  |      0  |     |  [89,71,48,86,8,98,57]  |
    25  |                         int j = 0;  |         |    0  |       5  |      0  |  0  |  [89,71,48,86,8,98,57]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       5  |     89  |  0  |  [89,71,48,86,8,98,57]  |
    34  |                     R = R + chunk;  |     89  |   89  |       5  |     89  |  0  |  [89,71,48,86,8,98,57]  |
    38  |                         j = j + 1;  |         |   89  |       5  |     89  |  1  |  [89,71,48,86,8,98,57]  |
    39  |              resetPlaceHolder_2();  |         |   89  |       5  |     89  |  1  |  [89,71,48,86,8,98,57]  |
    45  |        chunk = arrayRead(text, j);  |         |   89  |       5  |     71  |  1  |  [89,71,48,86,8,98,57]  |
    48  |                     R = R + chunk;  |     71  |  160  |       5  |     71  |  1  |  [89,71,48,86,8,98,57]  |
    52  |                         j = j + 1;  |         |  160  |       5  |     71  |  2  |  [89,71,48,86,8,98,57]  |
    53  |              resetPlaceHolder_2();  |         |  160  |       5  |     71  |  2  |  [89,71,48,86,8,98,57]  |
    59  |        chunk = arrayRead(text, j);  |         |  160  |       5  |     48  |  2  |  [89,71,48,86,8,98,57]  |
    62  |                     R = R + chunk;  |     48  |  208  |       5  |     48  |  2  |  [89,71,48,86,8,98,57]  |
    66  |                         j = j + 1;  |         |  208  |       5  |     48  |  3  |  [89,71,48,86,8,98,57]  |
    67  |              resetPlaceHolder_2();  |         |  208  |       5  |     48  |  3  |  [89,71,48,86,8,98,57]  |
    73  |        chunk = arrayRead(text, j);  |         |  208  |       5  |     86  |  3  |  [89,71,48,86,8,98,57]  |
    76  |                     R = R + chunk;  |     86  |  294  |       5  |     86  |  3  |  [89,71,48,86,8,98,57]  |
    80  |                         j = j + 1;  |         |  294  |       5  |     86  |  4  |  [89,71,48,86,8,98,57]  |
    81  |              resetPlaceHolder_2();  |         |  294  |       5  |     86  |  4  |  [89,71,48,86,8,98,57]  |
    87  |        chunk = arrayRead(text, j);  |         |  294  |       5  |      8  |  4  |  [89,71,48,86,8,98,57]  |
    90  |                     R = R + chunk;  |      8  |  302  |       5  |      8  |  4  |  [89,71,48,86,8,98,57]  |
    94  |                         j = j + 1;  |         |  302  |       5  |      8  |  5  |  [89,71,48,86,8,98,57]  |
    95  |              resetPlaceHolder_2();  |         |  302  |       5  |      8  |  5  |  [89,71,48,86,8,98,57]  |
   101  |        chunk = arrayRead(text, j);  |         |  302  |       5  |     98  |  5  |  [89,71,48,86,8,98,57]  |
   104  |                     R = R + chunk;  |     98  |  400  |       5  |     98  |  5  |  [89,71,48,86,8,98,57]  |
   108  |                         j = j + 1;  |         |  400  |       5  |     98  |  6  |  [89,71,48,86,8,98,57]  |
   109  |              resetPlaceHolder_2();  |         |  400  |       5  |     98  |  6  |  [89,71,48,86,8,98,57]  |
   115  |        chunk = arrayRead(text, j);  |         |  400  |       5  |     57  |  6  |  [89,71,48,86,8,98,57]  |
   118  |                     R = R + chunk;  |     57  |  457  |       5  |     57  |  6  |  [89,71,48,86,8,98,57]  |
   122  |                         j = j + 1;  |         |  457  |       5  |     57  |  7  |  [89,71,48,86,8,98,57]  |
   123  |              resetPlaceHolder_2();  |         |  457  |       5  |     57  |  7  |  [89,71,48,86,8,98,57]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,76,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     89  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |     71  |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     48  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     86  |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |      8  |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     98  |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     57  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |           text           |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      59  |         |     |  [56,68,33,58,29,78,76]  |
    10  |                      // int R = 0;  |         |    0  |      59  |         |     |  [56,68,33,58,29,78,76]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      59  |         |     |  [56,68,33,58,29,78,76]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      59  |         |     |  [56,68,33,58,29,78,76]  |
    14  |                     int chunk = 0;  |         |    0  |      59  |      0  |     |  [56,68,33,58,29,78,76]  |
    25  |                         int i = 0;  |         |    0  |      59  |      0  |  0  |  [56,68,33,58,29,78,76]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      59  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    34  |                     R = R + chunk;  |     56  |   56  |      59  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    38  |                         i = i + 1;  |         |   56  |      59  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    39  |              resetPlaceHolder_1();  |         |   56  |      59  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    45  |        chunk = arrayRead(text, i);  |         |   56  |      59  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    48  |                     R = R + chunk;  |     68  |  124  |      59  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    52  |                         i = i + 1;  |         |  124  |      59  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    53  |              resetPlaceHolder_1();  |         |  124  |      59  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    59  |        chunk = arrayRead(text, i);  |         |  124  |      59  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    62  |                     R = R + chunk;  |     33  |  157  |      59  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    66  |                         i = i + 1;  |         |  157  |      59  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    67  |              resetPlaceHolder_1();  |         |  157  |      59  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    73  |        chunk = arrayRead(text, i);  |         |  157  |      59  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    76  |                     R = R + chunk;  |     58  |  215  |      59  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    80  |                         i = i + 1;  |         |  215  |      59  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    81  |              resetPlaceHolder_1();  |         |  215  |      59  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    87  |        chunk = arrayRead(text, i);  |         |  215  |      59  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    90  |                     R = R + chunk;  |     29  |  244  |      59  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    94  |                         i = i + 1;  |         |  244  |      59  |     29  |  5  |  [56,68,33,58,29,78,76]  |
    95  |              resetPlaceHolder_1();  |         |  244  |      59  |     29  |  5  |  [56,68,33,58,29,78,76]  |
   101  |        chunk = arrayRead(text, i);  |         |  244  |      59  |     78  |  5  |  [56,68,33,58,29,78,76]  |
   104  |                     R = R + chunk;  |     78  |  322  |      59  |     78  |  5  |  [56,68,33,58,29,78,76]  |
   108  |                         i = i + 1;  |         |  322  |      59  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   109  |              resetPlaceHolder_1();  |         |  322  |      59  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   115  |        chunk = arrayRead(text, i);  |         |  322  |      59  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   118  |                     R = R + chunk;  |     76  |  398  |      59  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   122  |                         i = i + 1;  |         |  398  |      59  |     76  |  7  |  [56,68,33,58,29,78,76]  |
   123  |              resetPlaceHolder_1();  |         |  398  |      59  |     76  |  7  |  [56,68,33,58,29,78,76]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,62,76,90,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     56  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |     68  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     33  |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     58  |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |     29  |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     78  |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     76  |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
resetPlaceHolder_2(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 14:09:22,025 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:09:30,655 INFO     Done. Execution time: 8.629646062850952 seconds
2023-01-31 14:09:30,655 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun text () Int    4)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1409-transparentAmortize-60s-mostPrecise/stac-raw-0131-1409-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.620s
user	0m14.396s
sys	0m1.445s

2023-01-31 14:09:30,656 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 14:09:30,656 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:12:37,524 INFO     Done. Execution time: 186.8677945137024 seconds
2023-01-31 14:12:37,524 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz6853066186849544334/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6853066186849544334/bin -o /tmp/qfuzz6853066186849544334/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6853066186849544334/bin
Found file /tmp/qfuzz6853066186849544334/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz6853066186849544334/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6853066186849544334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6853066186849544334/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6853066186849544334/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz6853066186849544334/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 133581 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 128504 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m128k to 133k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz6853066186849544334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141237_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:12:37,524 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 14:12:37,525 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 14:12:52,049 INFO     Done. Execution time: 14.524333238601685 seconds
2023-01-31 14:12:52,049 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141237_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141237_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |           text           |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [56,68,33,58,29,78,76]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [56,68,33,58,29,78,76]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [56,68,33,58,29,78,76]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [56,68,33,58,29,78,76]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [56,68,33,58,29,78,76]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [56,68,33,58,29,78,76]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [56,68,33,58,29,78,76]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     56  |  0  |    0  |  [56,68,33,58,29,78,76]  |
    24  |                     R = R + chunk;  |     56  |   56  |     56  |  0  |    0  |  [56,68,33,58,29,78,76]  |
    28  |                         i = i + 1;  |         |   56  |     56  |  1  |    0  |  [56,68,33,58,29,78,76]  |
    34  |        chunk = arrayRead(text, i);  |         |   56  |     68  |  1  |    0  |  [56,68,33,58,29,78,76]  |
    37  |                     R = R + chunk;  |     68  |  124  |     68  |  1  |    0  |  [56,68,33,58,29,78,76]  |
    41  |                         i = i + 1;  |         |  124  |     68  |  2  |    0  |  [56,68,33,58,29,78,76]  |
    42  |              resetPlaceHolder_1();  |         |  124  |     68  |  2  |    0  |  [56,68,33,58,29,78,76]  |
    48  |        chunk = arrayRead(text, i);  |         |  124  |     33  |  2  |    0  |  [56,68,33,58,29,78,76]  |
    51  |                     R = R + chunk;  |     33  |  157  |     33  |  2  |    0  |  [56,68,33,58,29,78,76]  |
    55  |                         i = i + 1;  |         |  157  |     33  |  3  |    0  |  [56,68,33,58,29,78,76]  |
    56  |              resetPlaceHolder_1();  |         |  157  |     33  |  3  |    0  |  [56,68,33,58,29,78,76]  |
    62  |        chunk = arrayRead(text, i);  |         |  157  |     58  |  3  |    0  |  [56,68,33,58,29,78,76]  |
    65  |                     R = R + chunk;  |     58  |  215  |     58  |  3  |    0  |  [56,68,33,58,29,78,76]  |
    69  |                         i = i + 1;  |         |  215  |     58  |  4  |    0  |  [56,68,33,58,29,78,76]  |
    70  |              resetPlaceHolder_1();  |         |  215  |     58  |  4  |    0  |  [56,68,33,58,29,78,76]  |
    76  |        chunk = arrayRead(text, i);  |         |  215  |     29  |  4  |    0  |  [56,68,33,58,29,78,76]  |
    79  |                     R = R + chunk;  |     29  |  244  |     29  |  4  |    0  |  [56,68,33,58,29,78,76]  |
    83  |                         i = i + 1;  |         |  244  |     29  |  5  |    0  |  [56,68,33,58,29,78,76]  |
    84  |              resetPlaceHolder_1();  |         |  244  |     29  |  5  |    0  |  [56,68,33,58,29,78,76]  |
    90  |        chunk = arrayRead(text, i);  |         |  244  |     78  |  5  |    0  |  [56,68,33,58,29,78,76]  |
    93  |                     R = R + chunk;  |     78  |  322  |     78  |  5  |    0  |  [56,68,33,58,29,78,76]  |
    97  |                         i = i + 1;  |         |  322  |     78  |  6  |    0  |  [56,68,33,58,29,78,76]  |
    98  |              resetPlaceHolder_1();  |         |  322  |     78  |  6  |    0  |  [56,68,33,58,29,78,76]  |
   104  |        chunk = arrayRead(text, i);  |         |  322  |     76  |  6  |    0  |  [56,68,33,58,29,78,76]  |
   107  |                     R = R + chunk;  |     76  |  398  |     76  |  6  |    0  |  [56,68,33,58,29,78,76]  |
   111  |                         i = i + 1;  |         |  398  |     76  |  7  |    0  |  [56,68,33,58,29,78,76]  |
   112  |              resetPlaceHolder_1();  |         |  398  |     76  |  7  |    0  |  [56,68,33,58,29,78,76]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {37,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,51,107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {37,65,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {37,51,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {37,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,51,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {37,51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79,93,107}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     56  |                         0  |
    37  |         R = R + chunk;  |     68  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     33  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     58  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     29  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     78  |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |     76  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 14:12:52,050 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:13:01,332 INFO     Done. Execution time: 9.282674551010132 seconds
2023-01-31 14:13:01,333 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `7.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1412-transparentAmortize-60s-mostPrecise/stac-raw-0131-1412-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.270s
user	0m21.263s
sys	0m2.530s

2023-01-31 14:13:01,333 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:13:01,333 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:16:09,229 INFO     Done. Execution time: 187.89510321617126 seconds
2023-01-31 14:16:09,229 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz8245790774342822344/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8245790774342822344/bin -o /tmp/qfuzz8245790774342822344/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8245790774342822344/bin
Found file /tmp/qfuzz8245790774342822344/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz8245790774342822344/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8245790774342822344/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8245790774342822344/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8245790774342822344/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8245790774342822344/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 126507 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 127521 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m126k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8245790774342822344/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141608_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:16:09,229 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:16:09,229 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:16:25,813 INFO     Done. Execution time: 16.583473205566406 seconds
2023-01-31 14:16:25,813 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141608_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141608_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |           text           |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [56,68,33,58,29,78,76]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [56,68,33,58,29,78,76]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    25  |                     R = R + chunk;  |     56  |   56  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    28  |                         R = R + 1;  |      1  |   57  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    32  |                         i = i + 1;  |         |   57  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    33  |              resetPlaceHolder_1();  |         |   57  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    39  |        chunk = arrayRead(text, i);  |         |   57  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    42  |                     R = R + chunk;  |     68  |  125  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    45  |                         R = R + 1;  |      1  |  126  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    49  |                         i = i + 1;  |         |  126  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    50  |              resetPlaceHolder_1();  |         |  126  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    56  |        chunk = arrayRead(text, i);  |         |  126  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    59  |                     R = R + chunk;  |     33  |  159  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    62  |                         R = R + 1;  |      1  |  160  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    66  |                         i = i + 1;  |         |  160  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    67  |              resetPlaceHolder_1();  |         |  160  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    73  |        chunk = arrayRead(text, i);  |         |  160  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    76  |                     R = R + chunk;  |     58  |  218  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    79  |                         R = R + 1;  |      1  |  219  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    83  |                         i = i + 1;  |         |  219  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    84  |              resetPlaceHolder_1();  |         |  219  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    90  |        chunk = arrayRead(text, i);  |         |  219  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    93  |                     R = R + chunk;  |     29  |  248  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    96  |                         R = R + 1;  |      1  |  249  |     29  |  4  |  [56,68,33,58,29,78,76]  |
   100  |                         i = i + 1;  |         |  249  |     29  |  5  |  [56,68,33,58,29,78,76]  |
   101  |              resetPlaceHolder_1();  |         |  249  |     29  |  5  |  [56,68,33,58,29,78,76]  |
   107  |        chunk = arrayRead(text, i);  |         |  249  |     78  |  5  |  [56,68,33,58,29,78,76]  |
   110  |                     R = R + chunk;  |     78  |  327  |     78  |  5  |  [56,68,33,58,29,78,76]  |
   113  |                         R = R + 1;  |      1  |  328  |     78  |  5  |  [56,68,33,58,29,78,76]  |
   117  |                         i = i + 1;  |         |  328  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   118  |              resetPlaceHolder_1();  |         |  328  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   124  |        chunk = arrayRead(text, i);  |         |  328  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   127  |                     R = R + chunk;  |     76  |  404  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   130  |                         R = R + 1;  |      1  |  405  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   134  |                         i = i + 1;  |         |  405  |     76  |  7  |  [56,68,33,58,29,78,76]  |
   135  |              resetPlaceHolder_1();  |         |  405  |     76  |  7  |  [56,68,33,58,29,78,76]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     56  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     68  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     33  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     58  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     29  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     78  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     76  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,42,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59,76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,42,59,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,42,59,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,42,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,42,59,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25,42,59,76,93,110,127}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     56  |                            |                         0  |
    28  |             R = R + 1;  |      1  |                         0  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |
    42  |         R = R + chunk;  |     68  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |
    59  |         R = R + chunk;  |     33  |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     58  |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     29  |                            |                         0  |
    96  |             R = R + 1;  |      1  |                         4  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |
   110  |         R = R + chunk;  |     78  |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
   127  |         R = R + chunk;  |     76  |                            |                         0  |
   130  |             R = R + 1;  |      1  |                         6  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 14:16:25,813 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:16:41,909 INFO     Done. Execution time: 16.095585107803345 seconds
2023-01-31 14:16:41,909 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `13.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1416-transparentAmortize-60s-mostPrecise/stac-raw-0131-1416-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.087s
user	0m45.753s
sys	0m4.989s

2023-01-31 14:16:41,910 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:16:41,910 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:19:48,324 INFO     Done. Execution time: 186.41394972801208 seconds
2023-01-31 14:19:48,324 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz8138475593207782768/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8138475593207782768/bin -o /tmp/qfuzz8138475593207782768/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8138475593207782768/bin
Found file /tmp/qfuzz8138475593207782768/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz8138475593207782768/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8138475593207782768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8138475593207782768/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8138475593207782768/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8138475593207782768/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 134346 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 121082 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m121k to 134k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8138475593207782768/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_141948_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:19:48,325 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:19:48,325 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:20:01,493 INFO     Done. Execution time: 13.167514324188232 seconds
2023-01-31 14:20:01,493 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_141948_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_141948_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [56,68,33,58,29,78,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |           text           |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [56,68,33,58,29,78,76]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [56,68,33,58,29,78,76]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [56,68,33,58,29,78,76]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    25  |                     R = R + chunk;  |     56  |   56  |     56  |  0  |  [56,68,33,58,29,78,76]  |
    29  |                         i = i + 1;  |         |   56  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    30  |              resetPlaceHolder_1();  |         |   56  |     56  |  1  |  [56,68,33,58,29,78,76]  |
    36  |        chunk = arrayRead(text, i);  |         |   56  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    39  |                     R = R + chunk;  |     68  |  124  |     68  |  1  |  [56,68,33,58,29,78,76]  |
    43  |                         i = i + 1;  |         |  124  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    44  |              resetPlaceHolder_1();  |         |  124  |     68  |  2  |  [56,68,33,58,29,78,76]  |
    50  |        chunk = arrayRead(text, i);  |         |  124  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    53  |                     R = R + chunk;  |     33  |  157  |     33  |  2  |  [56,68,33,58,29,78,76]  |
    57  |                         i = i + 1;  |         |  157  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    58  |              resetPlaceHolder_1();  |         |  157  |     33  |  3  |  [56,68,33,58,29,78,76]  |
    64  |        chunk = arrayRead(text, i);  |         |  157  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    67  |                     R = R + chunk;  |     58  |  215  |     58  |  3  |  [56,68,33,58,29,78,76]  |
    71  |                         i = i + 1;  |         |  215  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    72  |              resetPlaceHolder_1();  |         |  215  |     58  |  4  |  [56,68,33,58,29,78,76]  |
    78  |        chunk = arrayRead(text, i);  |         |  215  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    81  |                     R = R + chunk;  |     29  |  244  |     29  |  4  |  [56,68,33,58,29,78,76]  |
    85  |                         i = i + 1;  |         |  244  |     29  |  5  |  [56,68,33,58,29,78,76]  |
    86  |              resetPlaceHolder_1();  |         |  244  |     29  |  5  |  [56,68,33,58,29,78,76]  |
    92  |        chunk = arrayRead(text, i);  |         |  244  |     78  |  5  |  [56,68,33,58,29,78,76]  |
    95  |                     R = R + chunk;  |     78  |  322  |     78  |  5  |  [56,68,33,58,29,78,76]  |
    99  |                         i = i + 1;  |         |  322  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   100  |              resetPlaceHolder_1();  |         |  322  |     78  |  6  |  [56,68,33,58,29,78,76]  |
   106  |        chunk = arrayRead(text, i);  |         |  322  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   109  |                     R = R + chunk;  |     76  |  398  |     76  |  6  |  [56,68,33,58,29,78,76]  |
   113  |                         i = i + 1;  |         |  398  |     76  |  7  |  [56,68,33,58,29,78,76]  |
   114  |              resetPlaceHolder_1();  |         |  398  |     76  |  7  |  [56,68,33,58,29,78,76]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     56  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     68  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     33  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     58  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     29  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     78  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     76  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 14:20:01,493 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:20:12,001 INFO     Done. Execution time: 10.507685899734497 seconds
2023-01-31 14:20:12,001 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1420-transparentAmortize-60s-mostPrecise/stac-raw-0131-1420-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.498s
user	0m23.019s
sys	0m3.032s

2023-01-31 14:20:12,002 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 14:20:12,002 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:23:18,995 INFO     Done. Execution time: 186.9932713508606 seconds
2023-01-31 14:23:18,996 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz8089396440937728606/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8089396440937728606/bin -o /tmp/qfuzz8089396440937728606/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8089396440937728606/bin
Found file /tmp/qfuzz8089396440937728606/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz8089396440937728606/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8089396440937728606/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8089396440937728606/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8089396440937728606/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8089396440937728606/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 14, exec speed = 133734 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 14, exec speed = 127067 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m14 to 14 bits (average: 14.00 bits)
[1;90m        Exec timing : [0m127k to 133k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8089396440937728606/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142318_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 56, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:23:18,996 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 14:23:18,996 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 14:23:27,700 INFO     Done. Execution time: 8.703710317611694 seconds
2023-01-31 14:23:27,701 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142318_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142318_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(56, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 56
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 89
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   56  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   56  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   56  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   56  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   56  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   56  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   56  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   56  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       57  |  1  |   56  |      2  |
    41  |                       R = R + sep;  |     56  |  57  |       57  |  1  |   56  |      2  |
    45  |             builder = builder + 1;  |         |  57  |       58  |  1  |   56  |      2  |
    48  |                         R = R + 1;  |      1  |  58  |       58  |  1  |   56  |      2  |
    52  |                         i = i + 1;  |         |  58  |       58  |  2  |   56  |      2  |
    53  |              resetPlaceHolder_1();  |         |  58  |       58  |  2  |   56  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     56  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     56  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     56  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 14:23:27,701 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:23:45,431 INFO     Done. Execution time: 17.729912519454956 seconds
2023-01-31 14:23:45,431 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `15.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1423-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1423-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.720s
user	0m46.917s
sys	0m6.427s

2023-01-31 14:23:45,431 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 14:23:45,432 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:26:52,199 INFO     Done. Execution time: 186.76677870750427 seconds
2023-01-31 14:26:52,199 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7176143733097184808/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7176143733097184808/bin -o /tmp/qfuzz7176143733097184808/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7176143733097184808/bin
Found file /tmp/qfuzz7176143733097184808/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7176143733097184808/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7176143733097184808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7176143733097184808/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7176143733097184808/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz7176143733097184808/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 15, exec speed = 139217 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 15, exec speed = 116572 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m15 to 15 bits (average: 15.00 bits)
[1;90m        Exec timing : [0m116k to 139k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz7176143733097184808/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_142651_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:26:52,199 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 14:26:52,199 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 14:27:00,356 INFO     Done. Execution time: 8.156140327453613 seconds
2023-01-31 14:27:00,356 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_142651_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_142651_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 14:27:00,356 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:27:10,521 INFO     Done. Execution time: 10.164705753326416 seconds
2023-01-31 14:27:10,521 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `7.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1427-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1427-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.156s
user	0m22.716s
sys	0m3.015s

2023-01-31 14:27:10,521 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 14:27:10,522 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:30:17,245 INFO     Done. Execution time: 186.72278785705566 seconds
2023-01-31 14:30:17,245 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz8613553811713731022/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8613553811713731022/bin -o /tmp/qfuzz8613553811713731022/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8613553811713731022/bin
Found file /tmp/qfuzz8613553811713731022/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz8613553811713731022/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8613553811713731022/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8613553811713731022/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8613553811713731022/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds -o /tmp/qfuzz8613553811713731022/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 134916 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 131205 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m131k to 134k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 1; 0.00; [0.00]
8; /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 5, 5, 55, 4, 1, 29, 18, 64, 82, 12, 69, 33, 61, 52, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 18, 64, 82, 16, 17, 7, 90, 74, 96, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 68, 33, 58, 29, 78, 76, 59, 78, 56, 72, 30, 87, 15, 2, 62, 45, 30, 88, 90, 45, 22, 75, 94, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 100] from /tmp/qfuzz8613553811713731022/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 71, 48, 86, 8, 98, 57, 5, 55, 4, 40, 29, 18, 64, 82, 16, 69, 55, 90, 74, 40, 91, 95, 65, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143016_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,18,64,82]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,68,33,58,29,78,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,71,48,86,8,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:30:17,245 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 14:30:17,245 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 14:31:15,294 INFO     Done. Execution time: 58.048829555511475 seconds
2023-01-31 14:31:15,295 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143016_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143016_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,18,64,82])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,68,33,58,29,78,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,71,48,86,8,98,57])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,8,98,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,18,64,82]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [56,68,33,58,29,78,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [89,71,48,86,8,98,57]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 4608):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [89,71,48,86,8,98,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [89,71,48,86,8,98,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [89,71,48,86,8,98,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [89,71,48,86,8,98,5]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [89,71,48,86,8,98,5]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [89,71,48,86,8,98,5]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     89  |  0  |      |  [89,71,48,86,8,98,5]  |
    24  |                         int j = 0;  |         |    0  |     89  |  0  |   0  |  [89,71,48,86,8,98,5]  |
    30  |                         R = R + 2;  |      2  |    2  |     89  |  0  |   0  |  [89,71,48,86,8,98,5]  |
    34  |                         j = j + 1;  |         |    2  |     89  |  0  |   1  |  [89,71,48,86,8,98,5]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     89  |  0  |   1  |  [89,71,48,86,8,98,5]  |
    41  |                         R = R + 2;  |      2  |    4  |     89  |  0  |   1  |  [89,71,48,86,8,98,5]  |
    45  |                         j = j + 1;  |         |    4  |     89  |  0  |   2  |  [89,71,48,86,8,98,5]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     89  |  0  |   2  |  [89,71,48,86,8,98,5]  |
    52  |                         R = R + 2;  |      2  |    6  |     89  |  0  |   2  |  [89,71,48,86,8,98,5]  |
    56  |                         j = j + 1;  |         |    6  |     89  |  0  |   3  |  [89,71,48,86,8,98,5]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     89  |  0  |   3  |  [89,71,48,86,8,98,5]  |
    63  |                         R = R + 2;  |      2  |    8  |     89  |  0  |   3  |  [89,71,48,86,8,98,5]  |
    67  |                         j = j + 1;  |         |    8  |     89  |  0  |   4  |  [89,71,48,86,8,98,5]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     89  |  0  |   4  |  [89,71,48,86,8,98,5]  |
    74  |                         R = R + 2;  |      2  |   10  |     89  |  0  |   4  |  [89,71,48,86,8,98,5]  |
    78  |                         j = j + 1;  |         |   10  |     89  |  0  |   5  |  [89,71,48,86,8,98,5]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     89  |  0  |   5  |  [89,71,48,86,8,98,5]  |
    85  |                         R = R + 2;  |      2  |   12  |     89  |  0  |   5  |  [89,71,48,86,8,98,5]  |
    89  |                         j = j + 1;  |         |   12  |     89  |  0  |   6  |  [89,71,48,86,8,98,5]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     89  |  0  |   6  |  [89,71,48,86,8,98,5]  |
    96  |                         R = R + 2;  |      2  |   14  |     89  |  0  |   6  |  [89,71,48,86,8,98,5]  |
   100  |                         j = j + 1;  |         |   14  |     89  |  0  |   7  |  [89,71,48,86,8,98,5]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     89  |  0  |   7  |  [89,71,48,86,8,98,5]  |
   107  |                         R = R + 2;  |      2  |   16  |     89  |  0  |   7  |  [89,71,48,86,8,98,5]  |
   111  |                         j = j + 1;  |         |   16  |     89  |  0  |   8  |  [89,71,48,86,8,98,5]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     89  |  0  |   8  |  [89,71,48,86,8,98,5]  |
   118  |                         R = R + 2;  |      2  |   18  |     89  |  0  |   8  |  [89,71,48,86,8,98,5]  |
   122  |                         j = j + 1;  |         |   18  |     89  |  0  |   9  |  [89,71,48,86,8,98,5]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     89  |  0  |   9  |  [89,71,48,86,8,98,5]  |
   129  |                         R = R + 2;  |      2  |   20  |     89  |  0  |   9  |  [89,71,48,86,8,98,5]  |
   133  |                         j = j + 1;  |         |   20  |     89  |  0  |  10  |  [89,71,48,86,8,98,5]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     89  |  0  |  10  |  [89,71,48,86,8,98,5]  |
   140  |                         R = R + 2;  |      2  |   22  |     89  |  0  |  10  |  [89,71,48,86,8,98,5]  |
   144  |                         j = j + 1;  |         |   22  |     89  |  0  |  11  |  [89,71,48,86,8,98,5]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     89  |  0  |  11  |  [89,71,48,86,8,98,5]  |
   151  |                         R = R + 2;  |      2  |   24  |     89  |  0  |  11  |  [89,71,48,86,8,98,5]  |
   155  |                         j = j + 1;  |         |   24  |     89  |  0  |  12  |  [89,71,48,86,8,98,5]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     89  |  0  |  12  |  [89,71,48,86,8,98,5]  |
   162  |                         R = R + 2;  |      2  |   26  |     89  |  0  |  12  |  [89,71,48,86,8,98,5]  |
   166  |                         j = j + 1;  |         |   26  |     89  |  0  |  13  |  [89,71,48,86,8,98,5]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     89  |  0  |  13  |  [89,71,48,86,8,98,5]  |
   173  |                         R = R + 2;  |      2  |   28  |     89  |  0  |  13  |  [89,71,48,86,8,98,5]  |
   177  |                         j = j + 1;  |         |   28  |     89  |  0  |  14  |  [89,71,48,86,8,98,5]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     89  |  0  |  14  |  [89,71,48,86,8,98,5]  |
   184  |                         R = R + 2;  |      2  |   30  |     89  |  0  |  14  |  [89,71,48,86,8,98,5]  |
   188  |                         j = j + 1;  |         |   30  |     89  |  0  |  15  |  [89,71,48,86,8,98,5]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     89  |  0  |  15  |  [89,71,48,86,8,98,5]  |
   195  |                         R = R + 2;  |      2  |   32  |     89  |  0  |  15  |  [89,71,48,86,8,98,5]  |
   199  |                         j = j + 1;  |         |   32  |     89  |  0  |  16  |  [89,71,48,86,8,98,5]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     89  |  0  |  16  |  [89,71,48,86,8,98,5]  |
   206  |                         R = R + 2;  |      2  |   34  |     89  |  0  |  16  |  [89,71,48,86,8,98,5]  |
   210  |                         j = j + 1;  |         |   34  |     89  |  0  |  17  |  [89,71,48,86,8,98,5]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     89  |  0  |  17  |  [89,71,48,86,8,98,5]  |
   217  |                         R = R + 2;  |      2  |   36  |     89  |  0  |  17  |  [89,71,48,86,8,98,5]  |
   221  |                         j = j + 1;  |         |   36  |     89  |  0  |  18  |  [89,71,48,86,8,98,5]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     89  |  0  |  18  |  [89,71,48,86,8,98,5]  |
   228  |                         R = R + 2;  |      2  |   38  |     89  |  0  |  18  |  [89,71,48,86,8,98,5]  |
   232  |                         j = j + 1;  |         |   38  |     89  |  0  |  19  |  [89,71,48,86,8,98,5]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     89  |  0  |  19  |  [89,71,48,86,8,98,5]  |
   239  |                         R = R + 2;  |      2  |   40  |     89  |  0  |  19  |  [89,71,48,86,8,98,5]  |
   243  |                         j = j + 1;  |         |   40  |     89  |  0  |  20  |  [89,71,48,86,8,98,5]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     89  |  0  |  20  |  [89,71,48,86,8,98,5]  |
   250  |                         R = R + 2;  |      2  |   42  |     89  |  0  |  20  |  [89,71,48,86,8,98,5]  |
   254  |                         j = j + 1;  |         |   42  |     89  |  0  |  21  |  [89,71,48,86,8,98,5]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     89  |  0  |  21  |  [89,71,48,86,8,98,5]  |
   261  |                         R = R + 2;  |      2  |   44  |     89  |  0  |  21  |  [89,71,48,86,8,98,5]  |
   265  |                         j = j + 1;  |         |   44  |     89  |  0  |  22  |  [89,71,48,86,8,98,5]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     89  |  0  |  22  |  [89,71,48,86,8,98,5]  |
   272  |                         R = R + 2;  |      2  |   46  |     89  |  0  |  22  |  [89,71,48,86,8,98,5]  |
   276  |                         j = j + 1;  |         |   46  |     89  |  0  |  23  |  [89,71,48,86,8,98,5]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     89  |  0  |  23  |  [89,71,48,86,8,98,5]  |
   283  |                         R = R + 2;  |      2  |   48  |     89  |  0  |  23  |  [89,71,48,86,8,98,5]  |
   287  |                         j = j + 1;  |         |   48  |     89  |  0  |  24  |  [89,71,48,86,8,98,5]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     89  |  0  |  24  |  [89,71,48,86,8,98,5]  |
   294  |                         R = R + 2;  |      2  |   50  |     89  |  0  |  24  |  [89,71,48,86,8,98,5]  |
   298  |                         j = j + 1;  |         |   50  |     89  |  0  |  25  |  [89,71,48,86,8,98,5]  |
   299  |              resetPlaceHolder_2();  |         |   50  |     89  |  0  |  25  |  [89,71,48,86,8,98,5]  |
   305  |                         R = R + 2;  |      2  |   52  |     89  |  0  |  25  |  [89,71,48,86,8,98,5]  |
   309  |                         j = j + 1;  |         |   52  |     89  |  0  |  26  |  [89,71,48,86,8,98,5]  |
   310  |              resetPlaceHolder_2();  |         |   52  |     89  |  0  |  26  |  [89,71,48,86,8,98,5]  |
   316  |                         R = R + 2;  |      2  |   54  |     89  |  0  |  26  |  [89,71,48,86,8,98,5]  |
   320  |                         j = j + 1;  |         |   54  |     89  |  0  |  27  |  [89,71,48,86,8,98,5]  |
   321  |              resetPlaceHolder_2();  |         |   54  |     89  |  0  |  27  |  [89,71,48,86,8,98,5]  |
   327  |                         R = R + 2;  |      2  |   56  |     89  |  0  |  27  |  [89,71,48,86,8,98,5]  |
   331  |                         j = j + 1;  |         |   56  |     89  |  0  |  28  |  [89,71,48,86,8,98,5]  |
   332  |              resetPlaceHolder_2();  |         |   56  |     89  |  0  |  28  |  [89,71,48,86,8,98,5]  |
   338  |                         R = R + 2;  |      2  |   58  |     89  |  0  |  28  |  [89,71,48,86,8,98,5]  |
   342  |                         j = j + 1;  |         |   58  |     89  |  0  |  29  |  [89,71,48,86,8,98,5]  |
   343  |              resetPlaceHolder_2();  |         |   58  |     89  |  0  |  29  |  [89,71,48,86,8,98,5]  |
   349  |                         R = R + 2;  |      2  |   60  |     89  |  0  |  29  |  [89,71,48,86,8,98,5]  |
   353  |                         j = j + 1;  |         |   60  |     89  |  0  |  30  |  [89,71,48,86,8,98,5]  |
   354  |              resetPlaceHolder_2();  |         |   60  |     89  |  0  |  30  |  [89,71,48,86,8,98,5]  |
   360  |                         R = R + 2;  |      2  |   62  |     89  |  0  |  30  |  [89,71,48,86,8,98,5]  |
   364  |                         j = j + 1;  |         |   62  |     89  |  0  |  31  |  [89,71,48,86,8,98,5]  |
   365  |              resetPlaceHolder_2();  |         |   62  |     89  |  0  |  31  |  [89,71,48,86,8,98,5]  |
   371  |                         R = R + 2;  |      2  |   64  |     89  |  0  |  31  |  [89,71,48,86,8,98,5]  |
   375  |                         j = j + 1;  |         |   64  |     89  |  0  |  32  |  [89,71,48,86,8,98,5]  |
   376  |              resetPlaceHolder_2();  |         |   64  |     89  |  0  |  32  |  [89,71,48,86,8,98,5]  |
   382  |                         R = R + 2;  |      2  |   66  |     89  |  0  |  32  |  [89,71,48,86,8,98,5]  |
   386  |                         j = j + 1;  |         |   66  |     89  |  0  |  33  |  [89,71,48,86,8,98,5]  |
   387  |              resetPlaceHolder_2();  |         |   66  |     89  |  0  |  33  |  [89,71,48,86,8,98,5]  |
   393  |                         R = R + 2;  |      2  |   68  |     89  |  0  |  33  |  [89,71,48,86,8,98,5]  |
   397  |                         j = j + 1;  |         |   68  |     89  |  0  |  34  |  [89,71,48,86,8,98,5]  |
   398  |              resetPlaceHolder_2();  |         |   68  |     89  |  0  |  34  |  [89,71,48,86,8,98,5]  |
   404  |                         R = R + 2;  |      2  |   70  |     89  |  0  |  34  |  [89,71,48,86,8,98,5]  |
   408  |                         j = j + 1;  |         |   70  |     89  |  0  |  35  |  [89,71,48,86,8,98,5]  |
   409  |              resetPlaceHolder_2();  |         |   70  |     89  |  0  |  35  |  [89,71,48,86,8,98,5]  |
   415  |                         R = R + 2;  |      2  |   72  |     89  |  0  |  35  |  [89,71,48,86,8,98,5]  |
   419  |                         j = j + 1;  |         |   72  |     89  |  0  |  36  |  [89,71,48,86,8,98,5]  |
   420  |              resetPlaceHolder_2();  |         |   72  |     89  |  0  |  36  |  [89,71,48,86,8,98,5]  |
   426  |                         R = R + 2;  |      2  |   74  |     89  |  0  |  36  |  [89,71,48,86,8,98,5]  |
   430  |                         j = j + 1;  |         |   74  |     89  |  0  |  37  |  [89,71,48,86,8,98,5]  |
   431  |              resetPlaceHolder_2();  |         |   74  |     89  |  0  |  37  |  [89,71,48,86,8,98,5]  |
   437  |                         R = R + 2;  |      2  |   76  |     89  |  0  |  37  |  [89,71,48,86,8,98,5]  |
   441  |                         j = j + 1;  |         |   76  |     89  |  0  |  38  |  [89,71,48,86,8,98,5]  |
   442  |              resetPlaceHolder_2();  |         |   76  |     89  |  0  |  38  |  [89,71,48,86,8,98,5]  |
   448  |                         R = R + 2;  |      2  |   78  |     89  |  0  |  38  |  [89,71,48,86,8,98,5]  |
   452  |                         j = j + 1;  |         |   78  |     89  |  0  |  39  |  [89,71,48,86,8,98,5]  |
   453  |              resetPlaceHolder_2();  |         |   78  |     89  |  0  |  39  |  [89,71,48,86,8,98,5]  |
   459  |                         R = R + 2;  |      2  |   80  |     89  |  0  |  39  |  [89,71,48,86,8,98,5]  |
   463  |                         j = j + 1;  |         |   80  |     89  |  0  |  40  |  [89,71,48,86,8,98,5]  |
   464  |              resetPlaceHolder_2();  |         |   80  |     89  |  0  |  40  |  [89,71,48,86,8,98,5]  |
   470  |                         R = R + 2;  |      2  |   82  |     89  |  0  |  40  |  [89,71,48,86,8,98,5]  |
   474  |                         j = j + 1;  |         |   82  |     89  |  0  |  41  |  [89,71,48,86,8,98,5]  |
   475  |              resetPlaceHolder_2();  |         |   82  |     89  |  0  |  41  |  [89,71,48,86,8,98,5]  |
   481  |                         R = R + 2;  |      2  |   84  |     89  |  0  |  41  |  [89,71,48,86,8,98,5]  |
   485  |                         j = j + 1;  |         |   84  |     89  |  0  |  42  |  [89,71,48,86,8,98,5]  |
   486  |              resetPlaceHolder_2();  |         |   84  |     89  |  0  |  42  |  [89,71,48,86,8,98,5]  |
   492  |                         R = R + 2;  |      2  |   86  |     89  |  0  |  42  |  [89,71,48,86,8,98,5]  |
   496  |                         j = j + 1;  |         |   86  |     89  |  0  |  43  |  [89,71,48,86,8,98,5]  |
   497  |              resetPlaceHolder_2();  |         |   86  |     89  |  0  |  43  |  [89,71,48,86,8,98,5]  |
   503  |                         R = R + 2;  |      2  |   88  |     89  |  0  |  43  |  [89,71,48,86,8,98,5]  |
   507  |                         j = j + 1;  |         |   88  |     89  |  0  |  44  |  [89,71,48,86,8,98,5]  |
   508  |              resetPlaceHolder_2();  |         |   88  |     89  |  0  |  44  |  [89,71,48,86,8,98,5]  |
   514  |                         R = R + 2;  |      2  |   90  |     89  |  0  |  44  |  [89,71,48,86,8,98,5]  |
   518  |                         j = j + 1;  |         |   90  |     89  |  0  |  45  |  [89,71,48,86,8,98,5]  |
   519  |              resetPlaceHolder_2();  |         |   90  |     89  |  0  |  45  |  [89,71,48,86,8,98,5]  |
   525  |                         R = R + 2;  |      2  |   92  |     89  |  0  |  45  |  [89,71,48,86,8,98,5]  |
   529  |                         j = j + 1;  |         |   92  |     89  |  0  |  46  |  [89,71,48,86,8,98,5]  |
   530  |              resetPlaceHolder_2();  |         |   92  |     89  |  0  |  46  |  [89,71,48,86,8,98,5]  |
   536  |                         R = R + 2;  |      2  |   94  |     89  |  0  |  46  |  [89,71,48,86,8,98,5]  |
   540  |                         j = j + 1;  |         |   94  |     89  |  0  |  47  |  [89,71,48,86,8,98,5]  |
   541  |              resetPlaceHolder_2();  |         |   94  |     89  |  0  |  47  |  [89,71,48,86,8,98,5]  |
   547  |                         R = R + 2;  |      2  |   96  |     89  |  0  |  47  |  [89,71,48,86,8,98,5]  |
   551  |                         j = j + 1;  |         |   96  |     89  |  0  |  48  |  [89,71,48,86,8,98,5]  |
   552  |              resetPlaceHolder_2();  |         |   96  |     89  |  0  |  48  |  [89,71,48,86,8,98,5]  |
   558  |                         R = R + 2;  |      2  |   98  |     89  |  0  |  48  |  [89,71,48,86,8,98,5]  |
   562  |                         j = j + 1;  |         |   98  |     89  |  0  |  49  |  [89,71,48,86,8,98,5]  |
   563  |              resetPlaceHolder_2();  |         |   98  |     89  |  0  |  49  |  [89,71,48,86,8,98,5]  |
   569  |                         R = R + 2;  |      2  |  100  |     89  |  0  |  49  |  [89,71,48,86,8,98,5]  |
   573  |                         j = j + 1;  |         |  100  |     89  |  0  |  50  |  [89,71,48,86,8,98,5]  |
   574  |              resetPlaceHolder_2();  |         |  100  |     89  |  0  |  50  |  [89,71,48,86,8,98,5]  |
   580  |                         R = R + 2;  |      2  |  102  |     89  |  0  |  50  |  [89,71,48,86,8,98,5]  |
   584  |                         j = j + 1;  |         |  102  |     89  |  0  |  51  |  [89,71,48,86,8,98,5]  |
   585  |              resetPlaceHolder_2();  |         |  102  |     89  |  0  |  51  |  [89,71,48,86,8,98,5]  |
   591  |                         R = R + 2;  |      2  |  104  |     89  |  0  |  51  |  [89,71,48,86,8,98,5]  |
   595  |                         j = j + 1;  |         |  104  |     89  |  0  |  52  |  [89,71,48,86,8,98,5]  |
   596  |              resetPlaceHolder_2();  |         |  104  |     89  |  0  |  52  |  [89,71,48,86,8,98,5]  |
   602  |                         R = R + 2;  |      2  |  106  |     89  |  0  |  52  |  [89,71,48,86,8,98,5]  |
   606  |                         j = j + 1;  |         |  106  |     89  |  0  |  53  |  [89,71,48,86,8,98,5]  |
   607  |              resetPlaceHolder_2();  |         |  106  |     89  |  0  |  53  |  [89,71,48,86,8,98,5]  |
   613  |                         R = R + 2;  |      2  |  108  |     89  |  0  |  53  |  [89,71,48,86,8,98,5]  |
   617  |                         j = j + 1;  |         |  108  |     89  |  0  |  54  |  [89,71,48,86,8,98,5]  |
   618  |              resetPlaceHolder_2();  |         |  108  |     89  |  0  |  54  |  [89,71,48,86,8,98,5]  |
   624  |                         R = R + 2;  |      2  |  110  |     89  |  0  |  54  |  [89,71,48,86,8,98,5]  |
   628  |                         j = j + 1;  |         |  110  |     89  |  0  |  55  |  [89,71,48,86,8,98,5]  |
   629  |              resetPlaceHolder_2();  |         |  110  |     89  |  0  |  55  |  [89,71,48,86,8,98,5]  |
   635  |                         R = R + 2;  |      2  |  112  |     89  |  0  |  55  |  [89,71,48,86,8,98,5]  |
   639  |                         j = j + 1;  |         |  112  |     89  |  0  |  56  |  [89,71,48,86,8,98,5]  |
   640  |              resetPlaceHolder_2();  |         |  112  |     89  |  0  |  56  |  [89,71,48,86,8,98,5]  |
   646  |                         R = R + 2;  |      2  |  114  |     89  |  0  |  56  |  [89,71,48,86,8,98,5]  |
   650  |                         j = j + 1;  |         |  114  |     89  |  0  |  57  |  [89,71,48,86,8,98,5]  |
   651  |              resetPlaceHolder_2();  |         |  114  |     89  |  0  |  57  |  [89,71,48,86,8,98,5]  |
   657  |                         R = R + 2;  |      2  |  116  |     89  |  0  |  57  |  [89,71,48,86,8,98,5]  |
   661  |                         j = j + 1;  |         |  116  |     89  |  0  |  58  |  [89,71,48,86,8,98,5]  |
   662  |              resetPlaceHolder_2();  |         |  116  |     89  |  0  |  58  |  [89,71,48,86,8,98,5]  |
   668  |                         R = R + 2;  |      2  |  118  |     89  |  0  |  58  |  [89,71,48,86,8,98,5]  |
   672  |                         j = j + 1;  |         |  118  |     89  |  0  |  59  |  [89,71,48,86,8,98,5]  |
   673  |              resetPlaceHolder_2();  |         |  118  |     89  |  0  |  59  |  [89,71,48,86,8,98,5]  |
   679  |                         R = R + 2;  |      2  |  120  |     89  |  0  |  59  |  [89,71,48,86,8,98,5]  |
   683  |                         j = j + 1;  |         |  120  |     89  |  0  |  60  |  [89,71,48,86,8,98,5]  |
   684  |              resetPlaceHolder_2();  |         |  120  |     89  |  0  |  60  |  [89,71,48,86,8,98,5]  |
   690  |                         R = R + 2;  |      2  |  122  |     89  |  0  |  60  |  [89,71,48,86,8,98,5]  |
   694  |                         j = j + 1;  |         |  122  |     89  |  0  |  61  |  [89,71,48,86,8,98,5]  |
   695  |              resetPlaceHolder_2();  |         |  122  |     89  |  0  |  61  |  [89,71,48,86,8,98,5]  |
   701  |                         R = R + 2;  |      2  |  124  |     89  |  0  |  61  |  [89,71,48,86,8,98,5]  |
   705  |                         j = j + 1;  |         |  124  |     89  |  0  |  62  |  [89,71,48,86,8,98,5]  |
   706  |              resetPlaceHolder_2();  |         |  124  |     89  |  0  |  62  |  [89,71,48,86,8,98,5]  |
   712  |                         R = R + 2;  |      2  |  126  |     89  |  0  |  62  |  [89,71,48,86,8,98,5]  |
   716  |                         j = j + 1;  |         |  126  |     89  |  0  |  63  |  [89,71,48,86,8,98,5]  |
   717  |              resetPlaceHolder_2();  |         |  126  |     89  |  0  |  63  |  [89,71,48,86,8,98,5]  |
   723  |                         R = R + 2;  |      2  |  128  |     89  |  0  |  63  |  [89,71,48,86,8,98,5]  |
   727  |                         j = j + 1;  |         |  128  |     89  |  0  |  64  |  [89,71,48,86,8,98,5]  |
   728  |              resetPlaceHolder_2();  |         |  128  |     89  |  0  |  64  |  [89,71,48,86,8,98,5]  |
   734  |                         R = R + 2;  |      2  |  130  |     89  |  0  |  64  |  [89,71,48,86,8,98,5]  |
   738  |                         j = j + 1;  |         |  130  |     89  |  0  |  65  |  [89,71,48,86,8,98,5]  |
   739  |              resetPlaceHolder_2();  |         |  130  |     89  |  0  |  65  |  [89,71,48,86,8,98,5]  |
   745  |                         R = R + 2;  |      2  |  132  |     89  |  0  |  65  |  [89,71,48,86,8,98,5]  |
   749  |                         j = j + 1;  |         |  132  |     89  |  0  |  66  |  [89,71,48,86,8,98,5]  |
   750  |              resetPlaceHolder_2();  |         |  132  |     89  |  0  |  66  |  [89,71,48,86,8,98,5]  |
   756  |                         R = R + 2;  |      2  |  134  |     89  |  0  |  66  |  [89,71,48,86,8,98,5]  |
   760  |                         j = j + 1;  |         |  134  |     89  |  0  |  67  |  [89,71,48,86,8,98,5]  |
   761  |              resetPlaceHolder_2();  |         |  134  |     89  |  0  |  67  |  [89,71,48,86,8,98,5]  |
   767  |                         R = R + 2;  |      2  |  136  |     89  |  0  |  67  |  [89,71,48,86,8,98,5]  |
   771  |                         j = j + 1;  |         |  136  |     89  |  0  |  68  |  [89,71,48,86,8,98,5]  |
   772  |              resetPlaceHolder_2();  |         |  136  |     89  |  0  |  68  |  [89,71,48,86,8,98,5]  |
   778  |                         R = R + 2;  |      2  |  138  |     89  |  0  |  68  |  [89,71,48,86,8,98,5]  |
   782  |                         j = j + 1;  |         |  138  |     89  |  0  |  69  |  [89,71,48,86,8,98,5]  |
   783  |              resetPlaceHolder_2();  |         |  138  |     89  |  0  |  69  |  [89,71,48,86,8,98,5]  |
   789  |                         R = R + 2;  |      2  |  140  |     89  |  0  |  69  |  [89,71,48,86,8,98,5]  |
   793  |                         j = j + 1;  |         |  140  |     89  |  0  |  70  |  [89,71,48,86,8,98,5]  |
   794  |              resetPlaceHolder_2();  |         |  140  |     89  |  0  |  70  |  [89,71,48,86,8,98,5]  |
   800  |                         R = R + 2;  |      2  |  142  |     89  |  0  |  70  |  [89,71,48,86,8,98,5]  |
   804  |                         j = j + 1;  |         |  142  |     89  |  0  |  71  |  [89,71,48,86,8,98,5]  |
   805  |              resetPlaceHolder_2();  |         |  142  |     89  |  0  |  71  |  [89,71,48,86,8,98,5]  |
   811  |                         R = R + 2;  |      2  |  144  |     89  |  0  |  71  |  [89,71,48,86,8,98,5]  |
   815  |                         j = j + 1;  |         |  144  |     89  |  0  |  72  |  [89,71,48,86,8,98,5]  |
   816  |              resetPlaceHolder_2();  |         |  144  |     89  |  0  |  72  |  [89,71,48,86,8,98,5]  |
   822  |                         R = R + 2;  |      2  |  146  |     89  |  0  |  72  |  [89,71,48,86,8,98,5]  |
   826  |                         j = j + 1;  |         |  146  |     89  |  0  |  73  |  [89,71,48,86,8,98,5]  |
   827  |              resetPlaceHolder_2();  |         |  146  |     89  |  0  |  73  |  [89,71,48,86,8,98,5]  |
   833  |                         R = R + 2;  |      2  |  148  |     89  |  0  |  73  |  [89,71,48,86,8,98,5]  |
   837  |                         j = j + 1;  |         |  148  |     89  |  0  |  74  |  [89,71,48,86,8,98,5]  |
   838  |              resetPlaceHolder_2();  |         |  148  |     89  |  0  |  74  |  [89,71,48,86,8,98,5]  |
   844  |                         R = R + 2;  |      2  |  150  |     89  |  0  |  74  |  [89,71,48,86,8,98,5]  |
   848  |                         j = j + 1;  |         |  150  |     89  |  0  |  75  |  [89,71,48,86,8,98,5]  |
   849  |              resetPlaceHolder_2();  |         |  150  |     89  |  0  |  75  |  [89,71,48,86,8,98,5]  |
   855  |                         R = R + 2;  |      2  |  152  |     89  |  0  |  75  |  [89,71,48,86,8,98,5]  |
   859  |                         j = j + 1;  |         |  152  |     89  |  0  |  76  |  [89,71,48,86,8,98,5]  |
   860  |              resetPlaceHolder_2();  |         |  152  |     89  |  0  |  76  |  [89,71,48,86,8,98,5]  |
   866  |                         R = R + 2;  |      2  |  154  |     89  |  0  |  76  |  [89,71,48,86,8,98,5]  |
   870  |                         j = j + 1;  |         |  154  |     89  |  0  |  77  |  [89,71,48,86,8,98,5]  |
   871  |              resetPlaceHolder_2();  |         |  154  |     89  |  0  |  77  |  [89,71,48,86,8,98,5]  |
   877  |                         R = R + 2;  |      2  |  156  |     89  |  0  |  77  |  [89,71,48,86,8,98,5]  |
   881  |                         j = j + 1;  |         |  156  |     89  |  0  |  78  |  [89,71,48,86,8,98,5]  |
   882  |              resetPlaceHolder_2();  |         |  156  |     89  |  0  |  78  |  [89,71,48,86,8,98,5]  |
   888  |                         R = R + 2;  |      2  |  158  |     89  |  0  |  78  |  [89,71,48,86,8,98,5]  |
   892  |                         j = j + 1;  |         |  158  |     89  |  0  |  79  |  [89,71,48,86,8,98,5]  |
   893  |              resetPlaceHolder_2();  |         |  158  |     89  |  0  |  79  |  [89,71,48,86,8,98,5]  |
   899  |                         R = R + 2;  |      2  |  160  |     89  |  0  |  79  |  [89,71,48,86,8,98,5]  |
   903  |                         j = j + 1;  |         |  160  |     89  |  0  |  80  |  [89,71,48,86,8,98,5]  |
   904  |              resetPlaceHolder_2();  |         |  160  |     89  |  0  |  80  |  [89,71,48,86,8,98,5]  |
   910  |                         R = R + 2;  |      2  |  162  |     89  |  0  |  80  |  [89,71,48,86,8,98,5]  |
   914  |                         j = j + 1;  |         |  162  |     89  |  0  |  81  |  [89,71,48,86,8,98,5]  |
   915  |              resetPlaceHolder_2();  |         |  162  |     89  |  0  |  81  |  [89,71,48,86,8,98,5]  |
   921  |                         R = R + 2;  |      2  |  164  |     89  |  0  |  81  |  [89,71,48,86,8,98,5]  |
   925  |                         j = j + 1;  |         |  164  |     89  |  0  |  82  |  [89,71,48,86,8,98,5]  |
   926  |              resetPlaceHolder_2();  |         |  164  |     89  |  0  |  82  |  [89,71,48,86,8,98,5]  |
   932  |                         R = R + 2;  |      2  |  166  |     89  |  0  |  82  |  [89,71,48,86,8,98,5]  |
   936  |                         j = j + 1;  |         |  166  |     89  |  0  |  83  |  [89,71,48,86,8,98,5]  |
   937  |              resetPlaceHolder_2();  |         |  166  |     89  |  0  |  83  |  [89,71,48,86,8,98,5]  |
   943  |                         R = R + 2;  |      2  |  168  |     89  |  0  |  83  |  [89,71,48,86,8,98,5]  |
   947  |                         j = j + 1;  |         |  168  |     89  |  0  |  84  |  [89,71,48,86,8,98,5]  |
   948  |              resetPlaceHolder_2();  |         |  168  |     89  |  0  |  84  |  [89,71,48,86,8,98,5]  |
   954  |                         R = R + 2;  |      2  |  170  |     89  |  0  |  84  |  [89,71,48,86,8,98,5]  |
   958  |                         j = j + 1;  |         |  170  |     89  |  0  |  85  |  [89,71,48,86,8,98,5]  |
   959  |              resetPlaceHolder_2();  |         |  170  |     89  |  0  |  85  |  [89,71,48,86,8,98,5]  |
   965  |                         R = R + 2;  |      2  |  172  |     89  |  0  |  85  |  [89,71,48,86,8,98,5]  |
   969  |                         j = j + 1;  |         |  172  |     89  |  0  |  86  |  [89,71,48,86,8,98,5]  |
   970  |              resetPlaceHolder_2();  |         |  172  |     89  |  0  |  86  |  [89,71,48,86,8,98,5]  |
   976  |                         R = R + 2;  |      2  |  174  |     89  |  0  |  86  |  [89,71,48,86,8,98,5]  |
   980  |                         j = j + 1;  |         |  174  |     89  |  0  |  87  |  [89,71,48,86,8,98,5]  |
   981  |              resetPlaceHolder_2();  |         |  174  |     89  |  0  |  87  |  [89,71,48,86,8,98,5]  |
   987  |                         R = R + 2;  |      2  |  176  |     89  |  0  |  87  |  [89,71,48,86,8,98,5]  |
   991  |                         j = j + 1;  |         |  176  |     89  |  0  |  88  |  [89,71,48,86,8,98,5]  |
   992  |              resetPlaceHolder_2();  |         |  176  |     89  |  0  |  88  |  [89,71,48,86,8,98,5]  |
   998  |                         R = R + 2;  |      2  |  178  |     89  |  0  |  88  |  [89,71,48,86,8,98,5]  |
  1002  |                         j = j + 1;  |         |  178  |     89  |  0  |  89  |  [89,71,48,86,8,98,5]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |     89  |  0  |  89  |  [89,71,48,86,8,98,5]  |
  1009  |                         R = R + 1;  |      1  |  179  |     89  |  0  |  89  |  [89,71,48,86,8,98,5]  |
  1013  |                         i = i + 1;  |         |  179  |     89  |  1  |  89  |  [89,71,48,86,8,98,5]  |
  1014  |              resetPlaceHolder_1();  |         |  179  |     89  |  1  |  89  |  [89,71,48,86,8,98,5]  |
  1020  |      entry = arrayRead(sorted, i);  |         |  179  |     71  |  1  |  89  |  [89,71,48,86,8,98,5]  |
  1022  |                         int j = 0;  |         |  179  |     71  |  1  |   0  |  [89,71,48,86,8,98,5]  |
  1028  |                         R = R + 2;  |      2  |  181  |     71  |  1  |   0  |  [89,71,48,86,8,98,5]  |
  1032  |                         j = j + 1;  |         |  181  |     71  |  1  |   1  |  [89,71,48,86,8,98,5]  |
  1033  |              resetPlaceHolder_2();  |         |  181  |     71  |  1  |   1  |  [89,71,48,86,8,98,5]  |
  1039  |                         R = R + 2;  |      2  |  183  |     71  |  1  |   1  |  [89,71,48,86,8,98,5]  |
  1043  |                         j = j + 1;  |         |  183  |     71  |  1  |   2  |  [89,71,48,86,8,98,5]  |
  1044  |              resetPlaceHolder_2();  |         |  183  |     71  |  1  |   2  |  [89,71,48,86,8,98,5]  |
  1050  |                         R = R + 2;  |      2  |  185  |     71  |  1  |   2  |  [89,71,48,86,8,98,5]  |
  1054  |                         j = j + 1;  |         |  185  |     71  |  1  |   3  |  [89,71,48,86,8,98,5]  |
  1055  |              resetPlaceHolder_2();  |         |  185  |     71  |  1  |   3  |  [89,71,48,86,8,98,5]  |
  1061  |                         R = R + 2;  |      2  |  187  |     71  |  1  |   3  |  [89,71,48,86,8,98,5]  |
  1065  |                         j = j + 1;  |         |  187  |     71  |  1  |   4  |  [89,71,48,86,8,98,5]  |
  1066  |              resetPlaceHolder_2();  |         |  187  |     71  |  1  |   4  |  [89,71,48,86,8,98,5]  |
  1072  |                         R = R + 2;  |      2  |  189  |     71  |  1  |   4  |  [89,71,48,86,8,98,5]  |
  1076  |                         j = j + 1;  |         |  189  |     71  |  1  |   5  |  [89,71,48,86,8,98,5]  |
  1077  |              resetPlaceHolder_2();  |         |  189  |     71  |  1  |   5  |  [89,71,48,86,8,98,5]  |
  1083  |                         R = R + 2;  |      2  |  191  |     71  |  1  |   5  |  [89,71,48,86,8,98,5]  |
  1087  |                         j = j + 1;  |         |  191  |     71  |  1  |   6  |  [89,71,48,86,8,98,5]  |
  1088  |              resetPlaceHolder_2();  |         |  191  |     71  |  1  |   6  |  [89,71,48,86,8,98,5]  |
  1094  |                         R = R + 2;  |      2  |  193  |     71  |  1  |   6  |  [89,71,48,86,8,98,5]  |
  1098  |                         j = j + 1;  |         |  193  |     71  |  1  |   7  |  [89,71,48,86,8,98,5]  |
  1099  |              resetPlaceHolder_2();  |         |  193  |     71  |  1  |   7  |  [89,71,48,86,8,98,5]  |
  1105  |                         R = R + 2;  |      2  |  195  |     71  |  1  |   7  |  [89,71,48,86,8,98,5]  |
  1109  |                         j = j + 1;  |         |  195  |     71  |  1  |   8  |  [89,71,48,86,8,98,5]  |
  1110  |              resetPlaceHolder_2();  |         |  195  |     71  |  1  |   8  |  [89,71,48,86,8,98,5]  |
  1116  |                         R = R + 2;  |      2  |  197  |     71  |  1  |   8  |  [89,71,48,86,8,98,5]  |
  1120  |                         j = j + 1;  |         |  197  |     71  |  1  |   9  |  [89,71,48,86,8,98,5]  |
  1121  |              resetPlaceHolder_2();  |         |  197  |     71  |  1  |   9  |  [89,71,48,86,8,98,5]  |
  1127  |                         R = R + 2;  |      2  |  199  |     71  |  1  |   9  |  [89,71,48,86,8,98,5]  |
  1131  |                         j = j + 1;  |         |  199  |     71  |  1  |  10  |  [89,71,48,86,8,98,5]  |
  1132  |              resetPlaceHolder_2();  |         |  199  |     71  |  1  |  10  |  [89,71,48,86,8,98,5]  |
  1138  |                         R = R + 2;  |      2  |  201  |     71  |  1  |  10  |  [89,71,48,86,8,98,5]  |
  1142  |                         j = j + 1;  |         |  201  |     71  |  1  |  11  |  [89,71,48,86,8,98,5]  |
  1143  |              resetPlaceHolder_2();  |         |  201  |     71  |  1  |  11  |  [89,71,48,86,8,98,5]  |
  1149  |                         R = R + 2;  |      2  |  203  |     71  |  1  |  11  |  [89,71,48,86,8,98,5]  |
  1153  |                         j = j + 1;  |         |  203  |     71  |  1  |  12  |  [89,71,48,86,8,98,5]  |
  1154  |              resetPlaceHolder_2();  |         |  203  |     71  |  1  |  12  |  [89,71,48,86,8,98,5]  |
  1160  |                         R = R + 2;  |      2  |  205  |     71  |  1  |  12  |  [89,71,48,86,8,98,5]  |
  1164  |                         j = j + 1;  |         |  205  |     71  |  1  |  13  |  [89,71,48,86,8,98,5]  |
  1165  |              resetPlaceHolder_2();  |         |  205  |     71  |  1  |  13  |  [89,71,48,86,8,98,5]  |
  1171  |                         R = R + 2;  |      2  |  207  |     71  |  1  |  13  |  [89,71,48,86,8,98,5]  |
  1175  |                         j = j + 1;  |         |  207  |     71  |  1  |  14  |  [89,71,48,86,8,98,5]  |
  1176  |              resetPlaceHolder_2();  |         |  207  |     71  |  1  |  14  |  [89,71,48,86,8,98,5]  |
  1182  |                         R = R + 2;  |      2  |  209  |     71  |  1  |  14  |  [89,71,48,86,8,98,5]  |
  1186  |                         j = j + 1;  |         |  209  |     71  |  1  |  15  |  [89,71,48,86,8,98,5]  |
  1187  |              resetPlaceHolder_2();  |         |  209  |     71  |  1  |  15  |  [89,71,48,86,8,98,5]  |
  1193  |                         R = R + 2;  |      2  |  211  |     71  |  1  |  15  |  [89,71,48,86,8,98,5]  |
  1197  |                         j = j + 1;  |         |  211  |     71  |  1  |  16  |  [89,71,48,86,8,98,5]  |
  1198  |              resetPlaceHolder_2();  |         |  211  |     71  |  1  |  16  |  [89,71,48,86,8,98,5]  |
  1204  |                         R = R + 2;  |      2  |  213  |     71  |  1  |  16  |  [89,71,48,86,8,98,5]  |
  1208  |                         j = j + 1;  |         |  213  |     71  |  1  |  17  |  [89,71,48,86,8,98,5]  |
  1209  |              resetPlaceHolder_2();  |         |  213  |     71  |  1  |  17  |  [89,71,48,86,8,98,5]  |
  1215  |                         R = R + 2;  |      2  |  215  |     71  |  1  |  17  |  [89,71,48,86,8,98,5]  |
  1219  |                         j = j + 1;  |         |  215  |     71  |  1  |  18  |  [89,71,48,86,8,98,5]  |
  1220  |              resetPlaceHolder_2();  |         |  215  |     71  |  1  |  18  |  [89,71,48,86,8,98,5]  |
  1226  |                         R = R + 2;  |      2  |  217  |     71  |  1  |  18  |  [89,71,48,86,8,98,5]  |
  1230  |                         j = j + 1;  |         |  217  |     71  |  1  |  19  |  [89,71,48,86,8,98,5]  |
  1231  |              resetPlaceHolder_2();  |         |  217  |     71  |  1  |  19  |  [89,71,48,86,8,98,5]  |
  1237  |                         R = R + 2;  |      2  |  219  |     71  |  1  |  19  |  [89,71,48,86,8,98,5]  |
  1241  |                         j = j + 1;  |         |  219  |     71  |  1  |  20  |  [89,71,48,86,8,98,5]  |
  1242  |              resetPlaceHolder_2();  |         |  219  |     71  |  1  |  20  |  [89,71,48,86,8,98,5]  |
  1248  |                         R = R + 2;  |      2  |  221  |     71  |  1  |  20  |  [89,71,48,86,8,98,5]  |
  1252  |                         j = j + 1;  |         |  221  |     71  |  1  |  21  |  [89,71,48,86,8,98,5]  |
  1253  |              resetPlaceHolder_2();  |         |  221  |     71  |  1  |  21  |  [89,71,48,86,8,98,5]  |
  1259  |                         R = R + 2;  |      2  |  223  |     71  |  1  |  21  |  [89,71,48,86,8,98,5]  |
  1263  |                         j = j + 1;  |         |  223  |     71  |  1  |  22  |  [89,71,48,86,8,98,5]  |
  1264  |              resetPlaceHolder_2();  |         |  223  |     71  |  1  |  22  |  [89,71,48,86,8,98,5]  |
  1270  |                         R = R + 2;  |      2  |  225  |     71  |  1  |  22  |  [89,71,48,86,8,98,5]  |
  1274  |                         j = j + 1;  |         |  225  |     71  |  1  |  23  |  [89,71,48,86,8,98,5]  |
  1275  |              resetPlaceHolder_2();  |         |  225  |     71  |  1  |  23  |  [89,71,48,86,8,98,5]  |
  1281  |                         R = R + 2;  |      2  |  227  |     71  |  1  |  23  |  [89,71,48,86,8,98,5]  |
  1285  |                         j = j + 1;  |         |  227  |     71  |  1  |  24  |  [89,71,48,86,8,98,5]  |
  1286  |              resetPlaceHolder_2();  |         |  227  |     71  |  1  |  24  |  [89,71,48,86,8,98,5]  |
  1292  |                         R = R + 2;  |      2  |  229  |     71  |  1  |  24  |  [89,71,48,86,8,98,5]  |
  1296  |                         j = j + 1;  |         |  229  |     71  |  1  |  25  |  [89,71,48,86,8,98,5]  |
  1297  |              resetPlaceHolder_2();  |         |  229  |     71  |  1  |  25  |  [89,71,48,86,8,98,5]  |
  1303  |                         R = R + 2;  |      2  |  231  |     71  |  1  |  25  |  [89,71,48,86,8,98,5]  |
  1307  |                         j = j + 1;  |         |  231  |     71  |  1  |  26  |  [89,71,48,86,8,98,5]  |
  1308  |              resetPlaceHolder_2();  |         |  231  |     71  |  1  |  26  |  [89,71,48,86,8,98,5]  |
  1314  |                         R = R + 2;  |      2  |  233  |     71  |  1  |  26  |  [89,71,48,86,8,98,5]  |
  1318  |                         j = j + 1;  |         |  233  |     71  |  1  |  27  |  [89,71,48,86,8,98,5]  |
  1319  |              resetPlaceHolder_2();  |         |  233  |     71  |  1  |  27  |  [89,71,48,86,8,98,5]  |
  1325  |                         R = R + 2;  |      2  |  235  |     71  |  1  |  27  |  [89,71,48,86,8,98,5]  |
  1329  |                         j = j + 1;  |         |  235  |     71  |  1  |  28  |  [89,71,48,86,8,98,5]  |
  1330  |              resetPlaceHolder_2();  |         |  235  |     71  |  1  |  28  |  [89,71,48,86,8,98,5]  |
  1336  |                         R = R + 2;  |      2  |  237  |     71  |  1  |  28  |  [89,71,48,86,8,98,5]  |
  1340  |                         j = j + 1;  |         |  237  |     71  |  1  |  29  |  [89,71,48,86,8,98,5]  |
  1341  |              resetPlaceHolder_2();  |         |  237  |     71  |  1  |  29  |  [89,71,48,86,8,98,5]  |
  1347  |                         R = R + 2;  |      2  |  239  |     71  |  1  |  29  |  [89,71,48,86,8,98,5]  |
  1351  |                         j = j + 1;  |         |  239  |     71  |  1  |  30  |  [89,71,48,86,8,98,5]  |
  1352  |              resetPlaceHolder_2();  |         |  239  |     71  |  1  |  30  |  [89,71,48,86,8,98,5]  |
  1358  |                         R = R + 2;  |      2  |  241  |     71  |  1  |  30  |  [89,71,48,86,8,98,5]  |
  1362  |                         j = j + 1;  |         |  241  |     71  |  1  |  31  |  [89,71,48,86,8,98,5]  |
  1363  |              resetPlaceHolder_2();  |         |  241  |     71  |  1  |  31  |  [89,71,48,86,8,98,5]  |
  1369  |                         R = R + 2;  |      2  |  243  |     71  |  1  |  31  |  [89,71,48,86,8,98,5]  |
  1373  |                         j = j + 1;  |         |  243  |     71  |  1  |  32  |  [89,71,48,86,8,98,5]  |
  1374  |              resetPlaceHolder_2();  |         |  243  |     71  |  1  |  32  |  [89,71,48,86,8,98,5]  |
  1380  |                         R = R + 2;  |      2  |  245  |     71  |  1  |  32  |  [89,71,48,86,8,98,5]  |
  1384  |                         j = j + 1;  |         |  245  |     71  |  1  |  33  |  [89,71,48,86,8,98,5]  |
  1385  |              resetPlaceHolder_2();  |         |  245  |     71  |  1  |  33  |  [89,71,48,86,8,98,5]  |
  1391  |                         R = R + 2;  |      2  |  247  |     71  |  1  |  33  |  [89,71,48,86,8,98,5]  |
  1395  |                         j = j + 1;  |         |  247  |     71  |  1  |  34  |  [89,71,48,86,8,98,5]  |
  1396  |              resetPlaceHolder_2();  |         |  247  |     71  |  1  |  34  |  [89,71,48,86,8,98,5]  |
  1402  |                         R = R + 2;  |      2  |  249  |     71  |  1  |  34  |  [89,71,48,86,8,98,5]  |
  1406  |                         j = j + 1;  |         |  249  |     71  |  1  |  35  |  [89,71,48,86,8,98,5]  |
  1407  |              resetPlaceHolder_2();  |         |  249  |     71  |  1  |  35  |  [89,71,48,86,8,98,5]  |
  1413  |                         R = R + 2;  |      2  |  251  |     71  |  1  |  35  |  [89,71,48,86,8,98,5]  |
  1417  |                         j = j + 1;  |         |  251  |     71  |  1  |  36  |  [89,71,48,86,8,98,5]  |
  1418  |              resetPlaceHolder_2();  |         |  251  |     71  |  1  |  36  |  [89,71,48,86,8,98,5]  |
  1424  |                         R = R + 2;  |      2  |  253  |     71  |  1  |  36  |  [89,71,48,86,8,98,5]  |
  1428  |                         j = j + 1;  |         |  253  |     71  |  1  |  37  |  [89,71,48,86,8,98,5]  |
  1429  |              resetPlaceHolder_2();  |         |  253  |     71  |  1  |  37  |  [89,71,48,86,8,98,5]  |
  1435  |                         R = R + 2;  |      2  |  255  |     71  |  1  |  37  |  [89,71,48,86,8,98,5]  |
  1439  |                         j = j + 1;  |         |  255  |     71  |  1  |  38  |  [89,71,48,86,8,98,5]  |
  1440  |              resetPlaceHolder_2();  |         |  255  |     71  |  1  |  38  |  [89,71,48,86,8,98,5]  |
  1446  |                         R = R + 2;  |      2  |  257  |     71  |  1  |  38  |  [89,71,48,86,8,98,5]  |
  1450  |                         j = j + 1;  |         |  257  |     71  |  1  |  39  |  [89,71,48,86,8,98,5]  |
  1451  |              resetPlaceHolder_2();  |         |  257  |     71  |  1  |  39  |  [89,71,48,86,8,98,5]  |
  1457  |                         R = R + 2;  |      2  |  259  |     71  |  1  |  39  |  [89,71,48,86,8,98,5]  |
  1461  |                         j = j + 1;  |         |  259  |     71  |  1  |  40  |  [89,71,48,86,8,98,5]  |
  1462  |              resetPlaceHolder_2();  |         |  259  |     71  |  1  |  40  |  [89,71,48,86,8,98,5]  |
  1468  |                         R = R + 2;  |      2  |  261  |     71  |  1  |  40  |  [89,71,48,86,8,98,5]  |
  1472  |                         j = j + 1;  |         |  261  |     71  |  1  |  41  |  [89,71,48,86,8,98,5]  |
  1473  |              resetPlaceHolder_2();  |         |  261  |     71  |  1  |  41  |  [89,71,48,86,8,98,5]  |
  1479  |                         R = R + 2;  |      2  |  263  |     71  |  1  |  41  |  [89,71,48,86,8,98,5]  |
  1483  |                         j = j + 1;  |         |  263  |     71  |  1  |  42  |  [89,71,48,86,8,98,5]  |
  1484  |              resetPlaceHolder_2();  |         |  263  |     71  |  1  |  42  |  [89,71,48,86,8,98,5]  |
  1490  |                         R = R + 2;  |      2  |  265  |     71  |  1  |  42  |  [89,71,48,86,8,98,5]  |
  1494  |                         j = j + 1;  |         |  265  |     71  |  1  |  43  |  [89,71,48,86,8,98,5]  |
  1495  |              resetPlaceHolder_2();  |         |  265  |     71  |  1  |  43  |  [89,71,48,86,8,98,5]  |
  1501  |                         R = R + 2;  |      2  |  267  |     71  |  1  |  43  |  [89,71,48,86,8,98,5]  |
  1505  |                         j = j + 1;  |         |  267  |     71  |  1  |  44  |  [89,71,48,86,8,98,5]  |
  1506  |              resetPlaceHolder_2();  |         |  267  |     71  |  1  |  44  |  [89,71,48,86,8,98,5]  |
  1512  |                         R = R + 2;  |      2  |  269  |     71  |  1  |  44  |  [89,71,48,86,8,98,5]  |
  1516  |                         j = j + 1;  |         |  269  |     71  |  1  |  45  |  [89,71,48,86,8,98,5]  |
  1517  |              resetPlaceHolder_2();  |         |  269  |     71  |  1  |  45  |  [89,71,48,86,8,98,5]  |
  1523  |                         R = R + 2;  |      2  |  271  |     71  |  1  |  45  |  [89,71,48,86,8,98,5]  |
  1527  |                         j = j + 1;  |         |  271  |     71  |  1  |  46  |  [89,71,48,86,8,98,5]  |
  1528  |              resetPlaceHolder_2();  |         |  271  |     71  |  1  |  46  |  [89,71,48,86,8,98,5]  |
  1534  |                         R = R + 2;  |      2  |  273  |     71  |  1  |  46  |  [89,71,48,86,8,98,5]  |
  1538  |                         j = j + 1;  |         |  273  |     71  |  1  |  47  |  [89,71,48,86,8,98,5]  |
  1539  |              resetPlaceHolder_2();  |         |  273  |     71  |  1  |  47  |  [89,71,48,86,8,98,5]  |
  1545  |                         R = R + 2;  |      2  |  275  |     71  |  1  |  47  |  [89,71,48,86,8,98,5]  |
  1549  |                         j = j + 1;  |         |  275  |     71  |  1  |  48  |  [89,71,48,86,8,98,5]  |
  1550  |              resetPlaceHolder_2();  |         |  275  |     71  |  1  |  48  |  [89,71,48,86,8,98,5]  |
  1556  |                         R = R + 2;  |      2  |  277  |     71  |  1  |  48  |  [89,71,48,86,8,98,5]  |
  1560  |                         j = j + 1;  |         |  277  |     71  |  1  |  49  |  [89,71,48,86,8,98,5]  |
  1561  |              resetPlaceHolder_2();  |         |  277  |     71  |  1  |  49  |  [89,71,48,86,8,98,5]  |
  1567  |                         R = R + 2;  |      2  |  279  |     71  |  1  |  49  |  [89,71,48,86,8,98,5]  |
  1571  |                         j = j + 1;  |         |  279  |     71  |  1  |  50  |  [89,71,48,86,8,98,5]  |
  1572  |              resetPlaceHolder_2();  |         |  279  |     71  |  1  |  50  |  [89,71,48,86,8,98,5]  |
  1578  |                         R = R + 2;  |      2  |  281  |     71  |  1  |  50  |  [89,71,48,86,8,98,5]  |
  1582  |                         j = j + 1;  |         |  281  |     71  |  1  |  51  |  [89,71,48,86,8,98,5]  |
  1583  |              resetPlaceHolder_2();  |         |  281  |     71  |  1  |  51  |  [89,71,48,86,8,98,5]  |
  1589  |                         R = R + 2;  |      2  |  283  |     71  |  1  |  51  |  [89,71,48,86,8,98,5]  |
  1593  |                         j = j + 1;  |         |  283  |     71  |  1  |  52  |  [89,71,48,86,8,98,5]  |
  1594  |              resetPlaceHolder_2();  |         |  283  |     71  |  1  |  52  |  [89,71,48,86,8,98,5]  |
  1600  |                         R = R + 2;  |      2  |  285  |     71  |  1  |  52  |  [89,71,48,86,8,98,5]  |
  1604  |                         j = j + 1;  |         |  285  |     71  |  1  |  53  |  [89,71,48,86,8,98,5]  |
  1605  |              resetPlaceHolder_2();  |         |  285  |     71  |  1  |  53  |  [89,71,48,86,8,98,5]  |
  1611  |                         R = R + 2;  |      2  |  287  |     71  |  1  |  53  |  [89,71,48,86,8,98,5]  |
  1615  |                         j = j + 1;  |         |  287  |     71  |  1  |  54  |  [89,71,48,86,8,98,5]  |
  1616  |              resetPlaceHolder_2();  |         |  287  |     71  |  1  |  54  |  [89,71,48,86,8,98,5]  |
  1622  |                         R = R + 2;  |      2  |  289  |     71  |  1  |  54  |  [89,71,48,86,8,98,5]  |
  1626  |                         j = j + 1;  |         |  289  |     71  |  1  |  55  |  [89,71,48,86,8,98,5]  |
  1627  |              resetPlaceHolder_2();  |         |  289  |     71  |  1  |  55  |  [89,71,48,86,8,98,5]  |
  1633  |                         R = R + 2;  |      2  |  291  |     71  |  1  |  55  |  [89,71,48,86,8,98,5]  |
  1637  |                         j = j + 1;  |         |  291  |     71  |  1  |  56  |  [89,71,48,86,8,98,5]  |
  1638  |              resetPlaceHolder_2();  |         |  291  |     71  |  1  |  56  |  [89,71,48,86,8,98,5]  |
  1644  |                         R = R + 2;  |      2  |  293  |     71  |  1  |  56  |  [89,71,48,86,8,98,5]  |
  1648  |                         j = j + 1;  |         |  293  |     71  |  1  |  57  |  [89,71,48,86,8,98,5]  |
  1649  |              resetPlaceHolder_2();  |         |  293  |     71  |  1  |  57  |  [89,71,48,86,8,98,5]  |
  1655  |                         R = R + 2;  |      2  |  295  |     71  |  1  |  57  |  [89,71,48,86,8,98,5]  |
  1659  |                         j = j + 1;  |         |  295  |     71  |  1  |  58  |  [89,71,48,86,8,98,5]  |
  1660  |              resetPlaceHolder_2();  |         |  295  |     71  |  1  |  58  |  [89,71,48,86,8,98,5]  |
  1666  |                         R = R + 2;  |      2  |  297  |     71  |  1  |  58  |  [89,71,48,86,8,98,5]  |
  1670  |                         j = j + 1;  |         |  297  |     71  |  1  |  59  |  [89,71,48,86,8,98,5]  |
  1671  |              resetPlaceHolder_2();  |         |  297  |     71  |  1  |  59  |  [89,71,48,86,8,98,5]  |
  1677  |                         R = R + 2;  |      2  |  299  |     71  |  1  |  59  |  [89,71,48,86,8,98,5]  |
  1681  |                         j = j + 1;  |         |  299  |     71  |  1  |  60  |  [89,71,48,86,8,98,5]  |
  1682  |              resetPlaceHolder_2();  |         |  299  |     71  |  1  |  60  |  [89,71,48,86,8,98,5]  |
  1688  |                         R = R + 2;  |      2  |  301  |     71  |  1  |  60  |  [89,71,48,86,8,98,5]  |
  1692  |                         j = j + 1;  |         |  301  |     71  |  1  |  61  |  [89,71,48,86,8,98,5]  |
  1693  |              resetPlaceHolder_2();  |         |  301  |     71  |  1  |  61  |  [89,71,48,86,8,98,5]  |
  1699  |                         R = R + 2;  |      2  |  303  |     71  |  1  |  61  |  [89,71,48,86,8,98,5]  |
  1703  |                         j = j + 1;  |         |  303  |     71  |  1  |  62  |  [89,71,48,86,8,98,5]  |
  1704  |              resetPlaceHolder_2();  |         |  303  |     71  |  1  |  62  |  [89,71,48,86,8,98,5]  |
  1710  |                         R = R + 2;  |      2  |  305  |     71  |  1  |  62  |  [89,71,48,86,8,98,5]  |
  1714  |                         j = j + 1;  |         |  305  |     71  |  1  |  63  |  [89,71,48,86,8,98,5]  |
  1715  |              resetPlaceHolder_2();  |         |  305  |     71  |  1  |  63  |  [89,71,48,86,8,98,5]  |
  1721  |                         R = R + 2;  |      2  |  307  |     71  |  1  |  63  |  [89,71,48,86,8,98,5]  |
  1725  |                         j = j + 1;  |         |  307  |     71  |  1  |  64  |  [89,71,48,86,8,98,5]  |
  1726  |              resetPlaceHolder_2();  |         |  307  |     71  |  1  |  64  |  [89,71,48,86,8,98,5]  |
  1732  |                         R = R + 2;  |      2  |  309  |     71  |  1  |  64  |  [89,71,48,86,8,98,5]  |
  1736  |                         j = j + 1;  |         |  309  |     71  |  1  |  65  |  [89,71,48,86,8,98,5]  |
  1737  |              resetPlaceHolder_2();  |         |  309  |     71  |  1  |  65  |  [89,71,48,86,8,98,5]  |
  1743  |                         R = R + 2;  |      2  |  311  |     71  |  1  |  65  |  [89,71,48,86,8,98,5]  |
  1747  |                         j = j + 1;  |         |  311  |     71  |  1  |  66  |  [89,71,48,86,8,98,5]  |
  1748  |              resetPlaceHolder_2();  |         |  311  |     71  |  1  |  66  |  [89,71,48,86,8,98,5]  |
  1754  |                         R = R + 2;  |      2  |  313  |     71  |  1  |  66  |  [89,71,48,86,8,98,5]  |
  1758  |                         j = j + 1;  |         |  313  |     71  |  1  |  67  |  [89,71,48,86,8,98,5]  |
  1759  |              resetPlaceHolder_2();  |         |  313  |     71  |  1  |  67  |  [89,71,48,86,8,98,5]  |
  1765  |                         R = R + 2;  |      2  |  315  |     71  |  1  |  67  |  [89,71,48,86,8,98,5]  |
  1769  |                         j = j + 1;  |         |  315  |     71  |  1  |  68  |  [89,71,48,86,8,98,5]  |
  1770  |              resetPlaceHolder_2();  |         |  315  |     71  |  1  |  68  |  [89,71,48,86,8,98,5]  |
  1776  |                         R = R + 2;  |      2  |  317  |     71  |  1  |  68  |  [89,71,48,86,8,98,5]  |
  1780  |                         j = j + 1;  |         |  317  |     71  |  1  |  69  |  [89,71,48,86,8,98,5]  |
  1781  |              resetPlaceHolder_2();  |         |  317  |     71  |  1  |  69  |  [89,71,48,86,8,98,5]  |
  1787  |                         R = R + 2;  |      2  |  319  |     71  |  1  |  69  |  [89,71,48,86,8,98,5]  |
  1791  |                         j = j + 1;  |         |  319  |     71  |  1  |  70  |  [89,71,48,86,8,98,5]  |
  1792  |              resetPlaceHolder_2();  |         |  319  |     71  |  1  |  70  |  [89,71,48,86,8,98,5]  |
  1798  |                         R = R + 2;  |      2  |  321  |     71  |  1  |  70  |  [89,71,48,86,8,98,5]  |
  1802  |                         j = j + 1;  |         |  321  |     71  |  1  |  71  |  [89,71,48,86,8,98,5]  |
  1803  |              resetPlaceHolder_2();  |         |  321  |     71  |  1  |  71  |  [89,71,48,86,8,98,5]  |
  1809  |                         R = R + 1;  |      1  |  322  |     71  |  1  |  71  |  [89,71,48,86,8,98,5]  |
  1813  |                         i = i + 1;  |         |  322  |     71  |  2  |  71  |  [89,71,48,86,8,98,5]  |
  1814  |              resetPlaceHolder_1();  |         |  322  |     71  |  2  |  71  |  [89,71,48,86,8,98,5]  |
  1820  |      entry = arrayRead(sorted, i);  |         |  322  |     48  |  2  |  71  |  [89,71,48,86,8,98,5]  |
  1822  |                         int j = 0;  |         |  322  |     48  |  2  |   0  |  [89,71,48,86,8,98,5]  |
  1828  |                         R = R + 2;  |      2  |  324  |     48  |  2  |   0  |  [89,71,48,86,8,98,5]  |
  1832  |                         j = j + 1;  |         |  324  |     48  |  2  |   1  |  [89,71,48,86,8,98,5]  |
  1833  |              resetPlaceHolder_2();  |         |  324  |     48  |  2  |   1  |  [89,71,48,86,8,98,5]  |
  1839  |                         R = R + 2;  |      2  |  326  |     48  |  2  |   1  |  [89,71,48,86,8,98,5]  |
  1843  |                         j = j + 1;  |         |  326  |     48  |  2  |   2  |  [89,71,48,86,8,98,5]  |
  1844  |              resetPlaceHolder_2();  |         |  326  |     48  |  2  |   2  |  [89,71,48,86,8,98,5]  |
  1850  |                         R = R + 2;  |      2  |  328  |     48  |  2  |   2  |  [89,71,48,86,8,98,5]  |
  1854  |                         j = j + 1;  |         |  328  |     48  |  2  |   3  |  [89,71,48,86,8,98,5]  |
  1855  |              resetPlaceHolder_2();  |         |  328  |     48  |  2  |   3  |  [89,71,48,86,8,98,5]  |
  1861  |                         R = R + 2;  |      2  |  330  |     48  |  2  |   3  |  [89,71,48,86,8,98,5]  |
  1865  |                         j = j + 1;  |         |  330  |     48  |  2  |   4  |  [89,71,48,86,8,98,5]  |
  1866  |              resetPlaceHolder_2();  |         |  330  |     48  |  2  |   4  |  [89,71,48,86,8,98,5]  |
  1872  |                         R = R + 2;  |      2  |  332  |     48  |  2  |   4  |  [89,71,48,86,8,98,5]  |
  1876  |                         j = j + 1;  |         |  332  |     48  |  2  |   5  |  [89,71,48,86,8,98,5]  |
  1877  |              resetPlaceHolder_2();  |         |  332  |     48  |  2  |   5  |  [89,71,48,86,8,98,5]  |
  1883  |                         R = R + 2;  |      2  |  334  |     48  |  2  |   5  |  [89,71,48,86,8,98,5]  |
  1887  |                         j = j + 1;  |         |  334  |     48  |  2  |   6  |  [89,71,48,86,8,98,5]  |
  1888  |              resetPlaceHolder_2();  |         |  334  |     48  |  2  |   6  |  [89,71,48,86,8,98,5]  |
  1894  |                         R = R + 2;  |      2  |  336  |     48  |  2  |   6  |  [89,71,48,86,8,98,5]  |
  1898  |                         j = j + 1;  |         |  336  |     48  |  2  |   7  |  [89,71,48,86,8,98,5]  |
  1899  |              resetPlaceHolder_2();  |         |  336  |     48  |  2  |   7  |  [89,71,48,86,8,98,5]  |
  1905  |                         R = R + 2;  |      2  |  338  |     48  |  2  |   7  |  [89,71,48,86,8,98,5]  |
  1909  |                         j = j + 1;  |         |  338  |     48  |  2  |   8  |  [89,71,48,86,8,98,5]  |
  1910  |              resetPlaceHolder_2();  |         |  338  |     48  |  2  |   8  |  [89,71,48,86,8,98,5]  |
  1916  |                         R = R + 2;  |      2  |  340  |     48  |  2  |   8  |  [89,71,48,86,8,98,5]  |
  1920  |                         j = j + 1;  |         |  340  |     48  |  2  |   9  |  [89,71,48,86,8,98,5]  |
  1921  |              resetPlaceHolder_2();  |         |  340  |     48  |  2  |   9  |  [89,71,48,86,8,98,5]  |
  1927  |                         R = R + 2;  |      2  |  342  |     48  |  2  |   9  |  [89,71,48,86,8,98,5]  |
  1931  |                         j = j + 1;  |         |  342  |     48  |  2  |  10  |  [89,71,48,86,8,98,5]  |
  1932  |              resetPlaceHolder_2();  |         |  342  |     48  |  2  |  10  |  [89,71,48,86,8,98,5]  |
  1938  |                         R = R + 2;  |      2  |  344  |     48  |  2  |  10  |  [89,71,48,86,8,98,5]  |
  1942  |                         j = j + 1;  |         |  344  |     48  |  2  |  11  |  [89,71,48,86,8,98,5]  |
  1943  |              resetPlaceHolder_2();  |         |  344  |     48  |  2  |  11  |  [89,71,48,86,8,98,5]  |
  1949  |                         R = R + 2;  |      2  |  346  |     48  |  2  |  11  |  [89,71,48,86,8,98,5]  |
  1953  |                         j = j + 1;  |         |  346  |     48  |  2  |  12  |  [89,71,48,86,8,98,5]  |
  1954  |              resetPlaceHolder_2();  |         |  346  |     48  |  2  |  12  |  [89,71,48,86,8,98,5]  |
  1960  |                         R = R + 2;  |      2  |  348  |     48  |  2  |  12  |  [89,71,48,86,8,98,5]  |
  1964  |                         j = j + 1;  |         |  348  |     48  |  2  |  13  |  [89,71,48,86,8,98,5]  |
  1965  |              resetPlaceHolder_2();  |         |  348  |     48  |  2  |  13  |  [89,71,48,86,8,98,5]  |
  1971  |                         R = R + 2;  |      2  |  350  |     48  |  2  |  13  |  [89,71,48,86,8,98,5]  |
  1975  |                         j = j + 1;  |         |  350  |     48  |  2  |  14  |  [89,71,48,86,8,98,5]  |
  1976  |              resetPlaceHolder_2();  |         |  350  |     48  |  2  |  14  |  [89,71,48,86,8,98,5]  |
  1982  |                         R = R + 2;  |      2  |  352  |     48  |  2  |  14  |  [89,71,48,86,8,98,5]  |
  1986  |                         j = j + 1;  |         |  352  |     48  |  2  |  15  |  [89,71,48,86,8,98,5]  |
  1987  |              resetPlaceHolder_2();  |         |  352  |     48  |  2  |  15  |  [89,71,48,86,8,98,5]  |
  1993  |                         R = R + 2;  |      2  |  354  |     48  |  2  |  15  |  [89,71,48,86,8,98,5]  |
  1997  |                         j = j + 1;  |         |  354  |     48  |  2  |  16  |  [89,71,48,86,8,98,5]  |
  1998  |              resetPlaceHolder_2();  |         |  354  |     48  |  2  |  16  |  [89,71,48,86,8,98,5]  |
  2004  |                         R = R + 2;  |      2  |  356  |     48  |  2  |  16  |  [89,71,48,86,8,98,5]  |
  2008  |                         j = j + 1;  |         |  356  |     48  |  2  |  17  |  [89,71,48,86,8,98,5]  |
  2009  |              resetPlaceHolder_2();  |         |  356  |     48  |  2  |  17  |  [89,71,48,86,8,98,5]  |
  2015  |                         R = R + 2;  |      2  |  358  |     48  |  2  |  17  |  [89,71,48,86,8,98,5]  |
  2019  |                         j = j + 1;  |         |  358  |     48  |  2  |  18  |  [89,71,48,86,8,98,5]  |
  2020  |              resetPlaceHolder_2();  |         |  358  |     48  |  2  |  18  |  [89,71,48,86,8,98,5]  |
  2026  |                         R = R + 2;  |      2  |  360  |     48  |  2  |  18  |  [89,71,48,86,8,98,5]  |
  2030  |                         j = j + 1;  |         |  360  |     48  |  2  |  19  |  [89,71,48,86,8,98,5]  |
  2031  |              resetPlaceHolder_2();  |         |  360  |     48  |  2  |  19  |  [89,71,48,86,8,98,5]  |
  2037  |                         R = R + 2;  |      2  |  362  |     48  |  2  |  19  |  [89,71,48,86,8,98,5]  |
  2041  |                         j = j + 1;  |         |  362  |     48  |  2  |  20  |  [89,71,48,86,8,98,5]  |
  2042  |              resetPlaceHolder_2();  |         |  362  |     48  |  2  |  20  |  [89,71,48,86,8,98,5]  |
  2048  |                         R = R + 2;  |      2  |  364  |     48  |  2  |  20  |  [89,71,48,86,8,98,5]  |
  2052  |                         j = j + 1;  |         |  364  |     48  |  2  |  21  |  [89,71,48,86,8,98,5]  |
  2053  |              resetPlaceHolder_2();  |         |  364  |     48  |  2  |  21  |  [89,71,48,86,8,98,5]  |
  2059  |                         R = R + 2;  |      2  |  366  |     48  |  2  |  21  |  [89,71,48,86,8,98,5]  |
  2063  |                         j = j + 1;  |         |  366  |     48  |  2  |  22  |  [89,71,48,86,8,98,5]  |
  2064  |              resetPlaceHolder_2();  |         |  366  |     48  |  2  |  22  |  [89,71,48,86,8,98,5]  |
  2070  |                         R = R + 2;  |      2  |  368  |     48  |  2  |  22  |  [89,71,48,86,8,98,5]  |
  2074  |                         j = j + 1;  |         |  368  |     48  |  2  |  23  |  [89,71,48,86,8,98,5]  |
  2075  |              resetPlaceHolder_2();  |         |  368  |     48  |  2  |  23  |  [89,71,48,86,8,98,5]  |
  2081  |                         R = R + 2;  |      2  |  370  |     48  |  2  |  23  |  [89,71,48,86,8,98,5]  |
  2085  |                         j = j + 1;  |         |  370  |     48  |  2  |  24  |  [89,71,48,86,8,98,5]  |
  2086  |              resetPlaceHolder_2();  |         |  370  |     48  |  2  |  24  |  [89,71,48,86,8,98,5]  |
  2092  |                         R = R + 2;  |      2  |  372  |     48  |  2  |  24  |  [89,71,48,86,8,98,5]  |
  2096  |                         j = j + 1;  |         |  372  |     48  |  2  |  25  |  [89,71,48,86,8,98,5]  |
  2097  |              resetPlaceHolder_2();  |         |  372  |     48  |  2  |  25  |  [89,71,48,86,8,98,5]  |
  2103  |                         R = R + 2;  |      2  |  374  |     48  |  2  |  25  |  [89,71,48,86,8,98,5]  |
  2107  |                         j = j + 1;  |         |  374  |     48  |  2  |  26  |  [89,71,48,86,8,98,5]  |
  2108  |              resetPlaceHolder_2();  |         |  374  |     48  |  2  |  26  |  [89,71,48,86,8,98,5]  |
  2114  |                         R = R + 2;  |      2  |  376  |     48  |  2  |  26  |  [89,71,48,86,8,98,5]  |
  2118  |                         j = j + 1;  |         |  376  |     48  |  2  |  27  |  [89,71,48,86,8,98,5]  |
  2119  |              resetPlaceHolder_2();  |         |  376  |     48  |  2  |  27  |  [89,71,48,86,8,98,5]  |
  2125  |                         R = R + 2;  |      2  |  378  |     48  |  2  |  27  |  [89,71,48,86,8,98,5]  |
  2129  |                         j = j + 1;  |         |  378  |     48  |  2  |  28  |  [89,71,48,86,8,98,5]  |
  2130  |              resetPlaceHolder_2();  |         |  378  |     48  |  2  |  28  |  [89,71,48,86,8,98,5]  |
  2136  |                         R = R + 2;  |      2  |  380  |     48  |  2  |  28  |  [89,71,48,86,8,98,5]  |
  2140  |                         j = j + 1;  |         |  380  |     48  |  2  |  29  |  [89,71,48,86,8,98,5]  |
  2141  |              resetPlaceHolder_2();  |         |  380  |     48  |  2  |  29  |  [89,71,48,86,8,98,5]  |
  2147  |                         R = R + 2;  |      2  |  382  |     48  |  2  |  29  |  [89,71,48,86,8,98,5]  |
  2151  |                         j = j + 1;  |         |  382  |     48  |  2  |  30  |  [89,71,48,86,8,98,5]  |
  2152  |              resetPlaceHolder_2();  |         |  382  |     48  |  2  |  30  |  [89,71,48,86,8,98,5]  |
  2158  |                         R = R + 2;  |      2  |  384  |     48  |  2  |  30  |  [89,71,48,86,8,98,5]  |
  2162  |                         j = j + 1;  |         |  384  |     48  |  2  |  31  |  [89,71,48,86,8,98,5]  |
  2163  |              resetPlaceHolder_2();  |         |  384  |     48  |  2  |  31  |  [89,71,48,86,8,98,5]  |
  2169  |                         R = R + 2;  |      2  |  386  |     48  |  2  |  31  |  [89,71,48,86,8,98,5]  |
  2173  |                         j = j + 1;  |         |  386  |     48  |  2  |  32  |  [89,71,48,86,8,98,5]  |
  2174  |              resetPlaceHolder_2();  |         |  386  |     48  |  2  |  32  |  [89,71,48,86,8,98,5]  |
  2180  |                         R = R + 2;  |      2  |  388  |     48  |  2  |  32  |  [89,71,48,86,8,98,5]  |
  2184  |                         j = j + 1;  |         |  388  |     48  |  2  |  33  |  [89,71,48,86,8,98,5]  |
  2185  |              resetPlaceHolder_2();  |         |  388  |     48  |  2  |  33  |  [89,71,48,86,8,98,5]  |
  2191  |                         R = R + 2;  |      2  |  390  |     48  |  2  |  33  |  [89,71,48,86,8,98,5]  |
  2195  |                         j = j + 1;  |         |  390  |     48  |  2  |  34  |  [89,71,48,86,8,98,5]  |
  2196  |              resetPlaceHolder_2();  |         |  390  |     48  |  2  |  34  |  [89,71,48,86,8,98,5]  |
  2202  |                         R = R + 2;  |      2  |  392  |     48  |  2  |  34  |  [89,71,48,86,8,98,5]  |
  2206  |                         j = j + 1;  |         |  392  |     48  |  2  |  35  |  [89,71,48,86,8,98,5]  |
  2207  |              resetPlaceHolder_2();  |         |  392  |     48  |  2  |  35  |  [89,71,48,86,8,98,5]  |
  2213  |                         R = R + 2;  |      2  |  394  |     48  |  2  |  35  |  [89,71,48,86,8,98,5]  |
  2217  |                         j = j + 1;  |         |  394  |     48  |  2  |  36  |  [89,71,48,86,8,98,5]  |
  2218  |              resetPlaceHolder_2();  |         |  394  |     48  |  2  |  36  |  [89,71,48,86,8,98,5]  |
  2224  |                         R = R + 2;  |      2  |  396  |     48  |  2  |  36  |  [89,71,48,86,8,98,5]  |
  2228  |                         j = j + 1;  |         |  396  |     48  |  2  |  37  |  [89,71,48,86,8,98,5]  |
  2229  |              resetPlaceHolder_2();  |         |  396  |     48  |  2  |  37  |  [89,71,48,86,8,98,5]  |
  2235  |                         R = R + 2;  |      2  |  398  |     48  |  2  |  37  |  [89,71,48,86,8,98,5]  |
  2239  |                         j = j + 1;  |         |  398  |     48  |  2  |  38  |  [89,71,48,86,8,98,5]  |
  2240  |              resetPlaceHolder_2();  |         |  398  |     48  |  2  |  38  |  [89,71,48,86,8,98,5]  |
  2246  |                         R = R + 2;  |      2  |  400  |     48  |  2  |  38  |  [89,71,48,86,8,98,5]  |
  2250  |                         j = j + 1;  |         |  400  |     48  |  2  |  39  |  [89,71,48,86,8,98,5]  |
  2251  |              resetPlaceHolder_2();  |         |  400  |     48  |  2  |  39  |  [89,71,48,86,8,98,5]  |
  2257  |                         R = R + 2;  |      2  |  402  |     48  |  2  |  39  |  [89,71,48,86,8,98,5]  |
  2261  |                         j = j + 1;  |         |  402  |     48  |  2  |  40  |  [89,71,48,86,8,98,5]  |
  2262  |              resetPlaceHolder_2();  |         |  402  |     48  |  2  |  40  |  [89,71,48,86,8,98,5]  |
  2268  |                         R = R + 2;  |      2  |  404  |     48  |  2  |  40  |  [89,71,48,86,8,98,5]  |
  2272  |                         j = j + 1;  |         |  404  |     48  |  2  |  41  |  [89,71,48,86,8,98,5]  |
  2273  |              resetPlaceHolder_2();  |         |  404  |     48  |  2  |  41  |  [89,71,48,86,8,98,5]  |
  2279  |                         R = R + 2;  |      2  |  406  |     48  |  2  |  41  |  [89,71,48,86,8,98,5]  |
  2283  |                         j = j + 1;  |         |  406  |     48  |  2  |  42  |  [89,71,48,86,8,98,5]  |
  2284  |              resetPlaceHolder_2();  |         |  406  |     48  |  2  |  42  |  [89,71,48,86,8,98,5]  |
  2290  |                         R = R + 2;  |      2  |  408  |     48  |  2  |  42  |  [89,71,48,86,8,98,5]  |
  2294  |                         j = j + 1;  |         |  408  |     48  |  2  |  43  |  [89,71,48,86,8,98,5]  |
  2295  |              resetPlaceHolder_2();  |         |  408  |     48  |  2  |  43  |  [89,71,48,86,8,98,5]  |
  2301  |                         R = R + 2;  |      2  |  410  |     48  |  2  |  43  |  [89,71,48,86,8,98,5]  |
  2305  |                         j = j + 1;  |         |  410  |     48  |  2  |  44  |  [89,71,48,86,8,98,5]  |
  2306  |              resetPlaceHolder_2();  |         |  410  |     48  |  2  |  44  |  [89,71,48,86,8,98,5]  |
  2312  |                         R = R + 2;  |      2  |  412  |     48  |  2  |  44  |  [89,71,48,86,8,98,5]  |
  2316  |                         j = j + 1;  |         |  412  |     48  |  2  |  45  |  [89,71,48,86,8,98,5]  |
  2317  |              resetPlaceHolder_2();  |         |  412  |     48  |  2  |  45  |  [89,71,48,86,8,98,5]  |
  2323  |                         R = R + 2;  |      2  |  414  |     48  |  2  |  45  |  [89,71,48,86,8,98,5]  |
  2327  |                         j = j + 1;  |         |  414  |     48  |  2  |  46  |  [89,71,48,86,8,98,5]  |
  2328  |              resetPlaceHolder_2();  |         |  414  |     48  |  2  |  46  |  [89,71,48,86,8,98,5]  |
  2334  |                         R = R + 2;  |      2  |  416  |     48  |  2  |  46  |  [89,71,48,86,8,98,5]  |
  2338  |                         j = j + 1;  |         |  416  |     48  |  2  |  47  |  [89,71,48,86,8,98,5]  |
  2339  |              resetPlaceHolder_2();  |         |  416  |     48  |  2  |  47  |  [89,71,48,86,8,98,5]  |
  2345  |                         R = R + 2;  |      2  |  418  |     48  |  2  |  47  |  [89,71,48,86,8,98,5]  |
  2349  |                         j = j + 1;  |         |  418  |     48  |  2  |  48  |  [89,71,48,86,8,98,5]  |
  2350  |              resetPlaceHolder_2();  |         |  418  |     48  |  2  |  48  |  [89,71,48,86,8,98,5]  |
  2356  |                         R = R + 1;  |      1  |  419  |     48  |  2  |  48  |  [89,71,48,86,8,98,5]  |
  2360  |                         i = i + 1;  |         |  419  |     48  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2361  |              resetPlaceHolder_1();  |         |  419  |     48  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2367  |      entry = arrayRead(sorted, i);  |         |  419  |     86  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2369  |                         int j = 0;  |         |  419  |     86  |  3  |   0  |  [89,71,48,86,8,98,5]  |
  2375  |                         R = R + 2;  |      2  |  421  |     86  |  3  |   0  |  [89,71,48,86,8,98,5]  |
  2379  |                         j = j + 1;  |         |  421  |     86  |  3  |   1  |  [89,71,48,86,8,98,5]  |
  2380  |              resetPlaceHolder_2();  |         |  421  |     86  |  3  |   1  |  [89,71,48,86,8,98,5]  |
  2386  |                         R = R + 2;  |      2  |  423  |     86  |  3  |   1  |  [89,71,48,86,8,98,5]  |
  2390  |                         j = j + 1;  |         |  423  |     86  |  3  |   2  |  [89,71,48,86,8,98,5]  |
  2391  |              resetPlaceHolder_2();  |         |  423  |     86  |  3  |   2  |  [89,71,48,86,8,98,5]  |
  2397  |                         R = R + 2;  |      2  |  425  |     86  |  3  |   2  |  [89,71,48,86,8,98,5]  |
  2401  |                         j = j + 1;  |         |  425  |     86  |  3  |   3  |  [89,71,48,86,8,98,5]  |
  2402  |              resetPlaceHolder_2();  |         |  425  |     86  |  3  |   3  |  [89,71,48,86,8,98,5]  |
  2408  |                         R = R + 2;  |      2  |  427  |     86  |  3  |   3  |  [89,71,48,86,8,98,5]  |
  2412  |                         j = j + 1;  |         |  427  |     86  |  3  |   4  |  [89,71,48,86,8,98,5]  |
  2413  |              resetPlaceHolder_2();  |         |  427  |     86  |  3  |   4  |  [89,71,48,86,8,98,5]  |
  2419  |                         R = R + 2;  |      2  |  429  |     86  |  3  |   4  |  [89,71,48,86,8,98,5]  |
  2423  |                         j = j + 1;  |         |  429  |     86  |  3  |   5  |  [89,71,48,86,8,98,5]  |
  2424  |              resetPlaceHolder_2();  |         |  429  |     86  |  3  |   5  |  [89,71,48,86,8,98,5]  |
  2430  |                         R = R + 2;  |      2  |  431  |     86  |  3  |   5  |  [89,71,48,86,8,98,5]  |
  2434  |                         j = j + 1;  |         |  431  |     86  |  3  |   6  |  [89,71,48,86,8,98,5]  |
  2435  |              resetPlaceHolder_2();  |         |  431  |     86  |  3  |   6  |  [89,71,48,86,8,98,5]  |
  2441  |                         R = R + 2;  |      2  |  433  |     86  |  3  |   6  |  [89,71,48,86,8,98,5]  |
  2445  |                         j = j + 1;  |         |  433  |     86  |  3  |   7  |  [89,71,48,86,8,98,5]  |
  2446  |              resetPlaceHolder_2();  |         |  433  |     86  |  3  |   7  |  [89,71,48,86,8,98,5]  |
  2452  |                         R = R + 2;  |      2  |  435  |     86  |  3  |   7  |  [89,71,48,86,8,98,5]  |
  2456  |                         j = j + 1;  |         |  435  |     86  |  3  |   8  |  [89,71,48,86,8,98,5]  |
  2457  |              resetPlaceHolder_2();  |         |  435  |     86  |  3  |   8  |  [89,71,48,86,8,98,5]  |
  2463  |                         R = R + 2;  |      2  |  437  |     86  |  3  |   8  |  [89,71,48,86,8,98,5]  |
  2467  |                         j = j + 1;  |         |  437  |     86  |  3  |   9  |  [89,71,48,86,8,98,5]  |
  2468  |              resetPlaceHolder_2();  |         |  437  |     86  |  3  |   9  |  [89,71,48,86,8,98,5]  |
  2474  |                         R = R + 2;  |      2  |  439  |     86  |  3  |   9  |  [89,71,48,86,8,98,5]  |
  2478  |                         j = j + 1;  |         |  439  |     86  |  3  |  10  |  [89,71,48,86,8,98,5]  |
  2479  |              resetPlaceHolder_2();  |         |  439  |     86  |  3  |  10  |  [89,71,48,86,8,98,5]  |
  2485  |                         R = R + 2;  |      2  |  441  |     86  |  3  |  10  |  [89,71,48,86,8,98,5]  |
  2489  |                         j = j + 1;  |         |  441  |     86  |  3  |  11  |  [89,71,48,86,8,98,5]  |
  2490  |              resetPlaceHolder_2();  |         |  441  |     86  |  3  |  11  |  [89,71,48,86,8,98,5]  |
  2496  |                         R = R + 2;  |      2  |  443  |     86  |  3  |  11  |  [89,71,48,86,8,98,5]  |
  2500  |                         j = j + 1;  |         |  443  |     86  |  3  |  12  |  [89,71,48,86,8,98,5]  |
  2501  |              resetPlaceHolder_2();  |         |  443  |     86  |  3  |  12  |  [89,71,48,86,8,98,5]  |
  2507  |                         R = R + 2;  |      2  |  445  |     86  |  3  |  12  |  [89,71,48,86,8,98,5]  |
  2511  |                         j = j + 1;  |         |  445  |     86  |  3  |  13  |  [89,71,48,86,8,98,5]  |
  2512  |              resetPlaceHolder_2();  |         |  445  |     86  |  3  |  13  |  [89,71,48,86,8,98,5]  |
  2518  |                         R = R + 2;  |      2  |  447  |     86  |  3  |  13  |  [89,71,48,86,8,98,5]  |
  2522  |                         j = j + 1;  |         |  447  |     86  |  3  |  14  |  [89,71,48,86,8,98,5]  |
  2523  |              resetPlaceHolder_2();  |         |  447  |     86  |  3  |  14  |  [89,71,48,86,8,98,5]  |
  2529  |                         R = R + 2;  |      2  |  449  |     86  |  3  |  14  |  [89,71,48,86,8,98,5]  |
  2533  |                         j = j + 1;  |         |  449  |     86  |  3  |  15  |  [89,71,48,86,8,98,5]  |
  2534  |              resetPlaceHolder_2();  |         |  449  |     86  |  3  |  15  |  [89,71,48,86,8,98,5]  |
  2540  |                         R = R + 2;  |      2  |  451  |     86  |  3  |  15  |  [89,71,48,86,8,98,5]  |
  2544  |                         j = j + 1;  |         |  451  |     86  |  3  |  16  |  [89,71,48,86,8,98,5]  |
  2545  |              resetPlaceHolder_2();  |         |  451  |     86  |  3  |  16  |  [89,71,48,86,8,98,5]  |
  2551  |                         R = R + 2;  |      2  |  453  |     86  |  3  |  16  |  [89,71,48,86,8,98,5]  |
  2555  |                         j = j + 1;  |         |  453  |     86  |  3  |  17  |  [89,71,48,86,8,98,5]  |
  2556  |              resetPlaceHolder_2();  |         |  453  |     86  |  3  |  17  |  [89,71,48,86,8,98,5]  |
  2562  |                         R = R + 2;  |      2  |  455  |     86  |  3  |  17  |  [89,71,48,86,8,98,5]  |
  2566  |                         j = j + 1;  |         |  455  |     86  |  3  |  18  |  [89,71,48,86,8,98,5]  |
  2567  |              resetPlaceHolder_2();  |         |  455  |     86  |  3  |  18  |  [89,71,48,86,8,98,5]  |
  2573  |                         R = R + 2;  |      2  |  457  |     86  |  3  |  18  |  [89,71,48,86,8,98,5]  |
  2577  |                         j = j + 1;  |         |  457  |     86  |  3  |  19  |  [89,71,48,86,8,98,5]  |
  2578  |              resetPlaceHolder_2();  |         |  457  |     86  |  3  |  19  |  [89,71,48,86,8,98,5]  |
  2584  |                         R = R + 2;  |      2  |  459  |     86  |  3  |  19  |  [89,71,48,86,8,98,5]  |
  2588  |                         j = j + 1;  |         |  459  |     86  |  3  |  20  |  [89,71,48,86,8,98,5]  |
  2589  |              resetPlaceHolder_2();  |         |  459  |     86  |  3  |  20  |  [89,71,48,86,8,98,5]  |
  2595  |                         R = R + 2;  |      2  |  461  |     86  |  3  |  20  |  [89,71,48,86,8,98,5]  |
  2599  |                         j = j + 1;  |         |  461  |     86  |  3  |  21  |  [89,71,48,86,8,98,5]  |
  2600  |              resetPlaceHolder_2();  |         |  461  |     86  |  3  |  21  |  [89,71,48,86,8,98,5]  |
  2606  |                         R = R + 2;  |      2  |  463  |     86  |  3  |  21  |  [89,71,48,86,8,98,5]  |
  2610  |                         j = j + 1;  |         |  463  |     86  |  3  |  22  |  [89,71,48,86,8,98,5]  |
  2611  |              resetPlaceHolder_2();  |         |  463  |     86  |  3  |  22  |  [89,71,48,86,8,98,5]  |
  2617  |                         R = R + 2;  |      2  |  465  |     86  |  3  |  22  |  [89,71,48,86,8,98,5]  |
  2621  |                         j = j + 1;  |         |  465  |     86  |  3  |  23  |  [89,71,48,86,8,98,5]  |
  2622  |              resetPlaceHolder_2();  |         |  465  |     86  |  3  |  23  |  [89,71,48,86,8,98,5]  |
  2628  |                         R = R + 2;  |      2  |  467  |     86  |  3  |  23  |  [89,71,48,86,8,98,5]  |
  2632  |                         j = j + 1;  |         |  467  |     86  |  3  |  24  |  [89,71,48,86,8,98,5]  |
  2633  |              resetPlaceHolder_2();  |         |  467  |     86  |  3  |  24  |  [89,71,48,86,8,98,5]  |
  2639  |                         R = R + 2;  |      2  |  469  |     86  |  3  |  24  |  [89,71,48,86,8,98,5]  |
  2643  |                         j = j + 1;  |         |  469  |     86  |  3  |  25  |  [89,71,48,86,8,98,5]  |
  2644  |              resetPlaceHolder_2();  |         |  469  |     86  |  3  |  25  |  [89,71,48,86,8,98,5]  |
  2650  |                         R = R + 2;  |      2  |  471  |     86  |  3  |  25  |  [89,71,48,86,8,98,5]  |
  2654  |                         j = j + 1;  |         |  471  |     86  |  3  |  26  |  [89,71,48,86,8,98,5]  |
  2655  |              resetPlaceHolder_2();  |         |  471  |     86  |  3  |  26  |  [89,71,48,86,8,98,5]  |
  2661  |                         R = R + 2;  |      2  |  473  |     86  |  3  |  26  |  [89,71,48,86,8,98,5]  |
  2665  |                         j = j + 1;  |         |  473  |     86  |  3  |  27  |  [89,71,48,86,8,98,5]  |
  2666  |              resetPlaceHolder_2();  |         |  473  |     86  |  3  |  27  |  [89,71,48,86,8,98,5]  |
  2672  |                         R = R + 2;  |      2  |  475  |     86  |  3  |  27  |  [89,71,48,86,8,98,5]  |
  2676  |                         j = j + 1;  |         |  475  |     86  |  3  |  28  |  [89,71,48,86,8,98,5]  |
  2677  |              resetPlaceHolder_2();  |         |  475  |     86  |  3  |  28  |  [89,71,48,86,8,98,5]  |
  2683  |                         R = R + 2;  |      2  |  477  |     86  |  3  |  28  |  [89,71,48,86,8,98,5]  |
  2687  |                         j = j + 1;  |         |  477  |     86  |  3  |  29  |  [89,71,48,86,8,98,5]  |
  2688  |              resetPlaceHolder_2();  |         |  477  |     86  |  3  |  29  |  [89,71,48,86,8,98,5]  |
  2694  |                         R = R + 2;  |      2  |  479  |     86  |  3  |  29  |  [89,71,48,86,8,98,5]  |
  2698  |                         j = j + 1;  |         |  479  |     86  |  3  |  30  |  [89,71,48,86,8,98,5]  |
  2699  |              resetPlaceHolder_2();  |         |  479  |     86  |  3  |  30  |  [89,71,48,86,8,98,5]  |
  2705  |                         R = R + 2;  |      2  |  481  |     86  |  3  |  30  |  [89,71,48,86,8,98,5]  |
  2709  |                         j = j + 1;  |         |  481  |     86  |  3  |  31  |  [89,71,48,86,8,98,5]  |
  2710  |              resetPlaceHolder_2();  |         |  481  |     86  |  3  |  31  |  [89,71,48,86,8,98,5]  |
  2716  |                         R = R + 2;  |      2  |  483  |     86  |  3  |  31  |  [89,71,48,86,8,98,5]  |
  2720  |                         j = j + 1;  |         |  483  |     86  |  3  |  32  |  [89,71,48,86,8,98,5]  |
  2721  |              resetPlaceHolder_2();  |         |  483  |     86  |  3  |  32  |  [89,71,48,86,8,98,5]  |
  2727  |                         R = R + 2;  |      2  |  485  |     86  |  3  |  32  |  [89,71,48,86,8,98,5]  |
  2731  |                         j = j + 1;  |         |  485  |     86  |  3  |  33  |  [89,71,48,86,8,98,5]  |
  2732  |              resetPlaceHolder_2();  |         |  485  |     86  |  3  |  33  |  [89,71,48,86,8,98,5]  |
  2738  |                         R = R + 2;  |      2  |  487  |     86  |  3  |  33  |  [89,71,48,86,8,98,5]  |
  2742  |                         j = j + 1;  |         |  487  |     86  |  3  |  34  |  [89,71,48,86,8,98,5]  |
  2743  |              resetPlaceHolder_2();  |         |  487  |     86  |  3  |  34  |  [89,71,48,86,8,98,5]  |
  2749  |                         R = R + 2;  |      2  |  489  |     86  |  3  |  34  |  [89,71,48,86,8,98,5]  |
  2753  |                         j = j + 1;  |         |  489  |     86  |  3  |  35  |  [89,71,48,86,8,98,5]  |
  2754  |              resetPlaceHolder_2();  |         |  489  |     86  |  3  |  35  |  [89,71,48,86,8,98,5]  |
  2760  |                         R = R + 2;  |      2  |  491  |     86  |  3  |  35  |  [89,71,48,86,8,98,5]  |
  2764  |                         j = j + 1;  |         |  491  |     86  |  3  |  36  |  [89,71,48,86,8,98,5]  |
  2765  |              resetPlaceHolder_2();  |         |  491  |     86  |  3  |  36  |  [89,71,48,86,8,98,5]  |
  2771  |                         R = R + 2;  |      2  |  493  |     86  |  3  |  36  |  [89,71,48,86,8,98,5]  |
  2775  |                         j = j + 1;  |         |  493  |     86  |  3  |  37  |  [89,71,48,86,8,98,5]  |
  2776  |              resetPlaceHolder_2();  |         |  493  |     86  |  3  |  37  |  [89,71,48,86,8,98,5]  |
  2782  |                         R = R + 2;  |      2  |  495  |     86  |  3  |  37  |  [89,71,48,86,8,98,5]  |
  2786  |                         j = j + 1;  |         |  495  |     86  |  3  |  38  |  [89,71,48,86,8,98,5]  |
  2787  |              resetPlaceHolder_2();  |         |  495  |     86  |  3  |  38  |  [89,71,48,86,8,98,5]  |
  2793  |                         R = R + 2;  |      2  |  497  |     86  |  3  |  38  |  [89,71,48,86,8,98,5]  |
  2797  |                         j = j + 1;  |         |  497  |     86  |  3  |  39  |  [89,71,48,86,8,98,5]  |
  2798  |              resetPlaceHolder_2();  |         |  497  |     86  |  3  |  39  |  [89,71,48,86,8,98,5]  |
  2804  |                         R = R + 2;  |      2  |  499  |     86  |  3  |  39  |  [89,71,48,86,8,98,5]  |
  2808  |                         j = j + 1;  |         |  499  |     86  |  3  |  40  |  [89,71,48,86,8,98,5]  |
  2809  |              resetPlaceHolder_2();  |         |  499  |     86  |  3  |  40  |  [89,71,48,86,8,98,5]  |
  2815  |                         R = R + 2;  |      2  |  501  |     86  |  3  |  40  |  [89,71,48,86,8,98,5]  |
  2819  |                         j = j + 1;  |         |  501  |     86  |  3  |  41  |  [89,71,48,86,8,98,5]  |
  2820  |              resetPlaceHolder_2();  |         |  501  |     86  |  3  |  41  |  [89,71,48,86,8,98,5]  |
  2826  |                         R = R + 2;  |      2  |  503  |     86  |  3  |  41  |  [89,71,48,86,8,98,5]  |
  2830  |                         j = j + 1;  |         |  503  |     86  |  3  |  42  |  [89,71,48,86,8,98,5]  |
  2831  |              resetPlaceHolder_2();  |         |  503  |     86  |  3  |  42  |  [89,71,48,86,8,98,5]  |
  2837  |                         R = R + 2;  |      2  |  505  |     86  |  3  |  42  |  [89,71,48,86,8,98,5]  |
  2841  |                         j = j + 1;  |         |  505  |     86  |  3  |  43  |  [89,71,48,86,8,98,5]  |
  2842  |              resetPlaceHolder_2();  |         |  505  |     86  |  3  |  43  |  [89,71,48,86,8,98,5]  |
  2848  |                         R = R + 2;  |      2  |  507  |     86  |  3  |  43  |  [89,71,48,86,8,98,5]  |
  2852  |                         j = j + 1;  |         |  507  |     86  |  3  |  44  |  [89,71,48,86,8,98,5]  |
  2853  |              resetPlaceHolder_2();  |         |  507  |     86  |  3  |  44  |  [89,71,48,86,8,98,5]  |
  2859  |                         R = R + 2;  |      2  |  509  |     86  |  3  |  44  |  [89,71,48,86,8,98,5]  |
  2863  |                         j = j + 1;  |         |  509  |     86  |  3  |  45  |  [89,71,48,86,8,98,5]  |
  2864  |              resetPlaceHolder_2();  |         |  509  |     86  |  3  |  45  |  [89,71,48,86,8,98,5]  |
  2870  |                         R = R + 2;  |      2  |  511  |     86  |  3  |  45  |  [89,71,48,86,8,98,5]  |
  2874  |                         j = j + 1;  |         |  511  |     86  |  3  |  46  |  [89,71,48,86,8,98,5]  |
  2875  |              resetPlaceHolder_2();  |         |  511  |     86  |  3  |  46  |  [89,71,48,86,8,98,5]  |
  2881  |                         R = R + 2;  |      2  |  513  |     86  |  3  |  46  |  [89,71,48,86,8,98,5]  |
  2885  |                         j = j + 1;  |         |  513  |     86  |  3  |  47  |  [89,71,48,86,8,98,5]  |
  2886  |              resetPlaceHolder_2();  |         |  513  |     86  |  3  |  47  |  [89,71,48,86,8,98,5]  |
  2892  |                         R = R + 2;  |      2  |  515  |     86  |  3  |  47  |  [89,71,48,86,8,98,5]  |
  2896  |                         j = j + 1;  |         |  515  |     86  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2897  |              resetPlaceHolder_2();  |         |  515  |     86  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2903  |                         R = R + 2;  |      2  |  517  |     86  |  3  |  48  |  [89,71,48,86,8,98,5]  |
  2907  |                         j = j + 1;  |         |  517  |     86  |  3  |  49  |  [89,71,48,86,8,98,5]  |
  2908  |              resetPlaceHolder_2();  |         |  517  |     86  |  3  |  49  |  [89,71,48,86,8,98,5]  |
  2914  |                         R = R + 2;  |      2  |  519  |     86  |  3  |  49  |  [89,71,48,86,8,98,5]  |
  2918  |                         j = j + 1;  |         |  519  |     86  |  3  |  50  |  [89,71,48,86,8,98,5]  |
  2919  |              resetPlaceHolder_2();  |         |  519  |     86  |  3  |  50  |  [89,71,48,86,8,98,5]  |
  2925  |                         R = R + 2;  |      2  |  521  |     86  |  3  |  50  |  [89,71,48,86,8,98,5]  |
  2929  |                         j = j + 1;  |         |  521  |     86  |  3  |  51  |  [89,71,48,86,8,98,5]  |
  2930  |              resetPlaceHolder_2();  |         |  521  |     86  |  3  |  51  |  [89,71,48,86,8,98,5]  |
  2936  |                         R = R + 2;  |      2  |  523  |     86  |  3  |  51  |  [89,71,48,86,8,98,5]  |
  2940  |                         j = j + 1;  |         |  523  |     86  |  3  |  52  |  [89,71,48,86,8,98,5]  |
  2941  |              resetPlaceHolder_2();  |         |  523  |     86  |  3  |  52  |  [89,71,48,86,8,98,5]  |
  2947  |                         R = R + 2;  |      2  |  525  |     86  |  3  |  52  |  [89,71,48,86,8,98,5]  |
  2951  |                         j = j + 1;  |         |  525  |     86  |  3  |  53  |  [89,71,48,86,8,98,5]  |
  2952  |              resetPlaceHolder_2();  |         |  525  |     86  |  3  |  53  |  [89,71,48,86,8,98,5]  |
  2958  |                         R = R + 2;  |      2  |  527  |     86  |  3  |  53  |  [89,71,48,86,8,98,5]  |
  2962  |                         j = j + 1;  |         |  527  |     86  |  3  |  54  |  [89,71,48,86,8,98,5]  |
  2963  |              resetPlaceHolder_2();  |         |  527  |     86  |  3  |  54  |  [89,71,48,86,8,98,5]  |
  2969  |                         R = R + 2;  |      2  |  529  |     86  |  3  |  54  |  [89,71,48,86,8,98,5]  |
  2973  |                         j = j + 1;  |         |  529  |     86  |  3  |  55  |  [89,71,48,86,8,98,5]  |
  2974  |              resetPlaceHolder_2();  |         |  529  |     86  |  3  |  55  |  [89,71,48,86,8,98,5]  |
  2980  |                         R = R + 2;  |      2  |  531  |     86  |  3  |  55  |  [89,71,48,86,8,98,5]  |
  2984  |                         j = j + 1;  |         |  531  |     86  |  3  |  56  |  [89,71,48,86,8,98,5]  |
  2985  |              resetPlaceHolder_2();  |         |  531  |     86  |  3  |  56  |  [89,71,48,86,8,98,5]  |
  2991  |                         R = R + 2;  |      2  |  533  |     86  |  3  |  56  |  [89,71,48,86,8,98,5]  |
  2995  |                         j = j + 1;  |         |  533  |     86  |  3  |  57  |  [89,71,48,86,8,98,5]  |
  2996  |              resetPlaceHolder_2();  |         |  533  |     86  |  3  |  57  |  [89,71,48,86,8,98,5]  |
  3002  |                         R = R + 2;  |      2  |  535  |     86  |  3  |  57  |  [89,71,48,86,8,98,5]  |
  3006  |                         j = j + 1;  |         |  535  |     86  |  3  |  58  |  [89,71,48,86,8,98,5]  |
  3007  |              resetPlaceHolder_2();  |         |  535  |     86  |  3  |  58  |  [89,71,48,86,8,98,5]  |
  3013  |                         R = R + 2;  |      2  |  537  |     86  |  3  |  58  |  [89,71,48,86,8,98,5]  |
  3017  |                         j = j + 1;  |         |  537  |     86  |  3  |  59  |  [89,71,48,86,8,98,5]  |
  3018  |              resetPlaceHolder_2();  |         |  537  |     86  |  3  |  59  |  [89,71,48,86,8,98,5]  |
  3024  |                         R = R + 2;  |      2  |  539  |     86  |  3  |  59  |  [89,71,48,86,8,98,5]  |
  3028  |                         j = j + 1;  |         |  539  |     86  |  3  |  60  |  [89,71,48,86,8,98,5]  |
  3029  |              resetPlaceHolder_2();  |         |  539  |     86  |  3  |  60  |  [89,71,48,86,8,98,5]  |
  3035  |                         R = R + 2;  |      2  |  541  |     86  |  3  |  60  |  [89,71,48,86,8,98,5]  |
  3039  |                         j = j + 1;  |         |  541  |     86  |  3  |  61  |  [89,71,48,86,8,98,5]  |
  3040  |              resetPlaceHolder_2();  |         |  541  |     86  |  3  |  61  |  [89,71,48,86,8,98,5]  |
  3046  |                         R = R + 2;  |      2  |  543  |     86  |  3  |  61  |  [89,71,48,86,8,98,5]  |
  3050  |                         j = j + 1;  |         |  543  |     86  |  3  |  62  |  [89,71,48,86,8,98,5]  |
  3051  |              resetPlaceHolder_2();  |         |  543  |     86  |  3  |  62  |  [89,71,48,86,8,98,5]  |
  3057  |                         R = R + 2;  |      2  |  545  |     86  |  3  |  62  |  [89,71,48,86,8,98,5]  |
  3061  |                         j = j + 1;  |         |  545  |     86  |  3  |  63  |  [89,71,48,86,8,98,5]  |
  3062  |              resetPlaceHolder_2();  |         |  545  |     86  |  3  |  63  |  [89,71,48,86,8,98,5]  |
  3068  |                         R = R + 2;  |      2  |  547  |     86  |  3  |  63  |  [89,71,48,86,8,98,5]  |
  3072  |                         j = j + 1;  |         |  547  |     86  |  3  |  64  |  [89,71,48,86,8,98,5]  |
  3073  |              resetPlaceHolder_2();  |         |  547  |     86  |  3  |  64  |  [89,71,48,86,8,98,5]  |
  3079  |                         R = R + 2;  |      2  |  549  |     86  |  3  |  64  |  [89,71,48,86,8,98,5]  |
  3083  |                         j = j + 1;  |         |  549  |     86  |  3  |  65  |  [89,71,48,86,8,98,5]  |
  3084  |              resetPlaceHolder_2();  |         |  549  |     86  |  3  |  65  |  [89,71,48,86,8,98,5]  |
  3090  |                         R = R + 2;  |      2  |  551  |     86  |  3  |  65  |  [89,71,48,86,8,98,5]  |
  3094  |                         j = j + 1;  |         |  551  |     86  |  3  |  66  |  [89,71,48,86,8,98,5]  |
  3095  |              resetPlaceHolder_2();  |         |  551  |     86  |  3  |  66  |  [89,71,48,86,8,98,5]  |
  3101  |                         R = R + 2;  |      2  |  553  |     86  |  3  |  66  |  [89,71,48,86,8,98,5]  |
  3105  |                         j = j + 1;  |         |  553  |     86  |  3  |  67  |  [89,71,48,86,8,98,5]  |
  3106  |              resetPlaceHolder_2();  |         |  553  |     86  |  3  |  67  |  [89,71,48,86,8,98,5]  |
  3112  |                         R = R + 2;  |      2  |  555  |     86  |  3  |  67  |  [89,71,48,86,8,98,5]  |
  3116  |                         j = j + 1;  |         |  555  |     86  |  3  |  68  |  [89,71,48,86,8,98,5]  |
  3117  |              resetPlaceHolder_2();  |         |  555  |     86  |  3  |  68  |  [89,71,48,86,8,98,5]  |
  3123  |                         R = R + 2;  |      2  |  557  |     86  |  3  |  68  |  [89,71,48,86,8,98,5]  |
  3127  |                         j = j + 1;  |         |  557  |     86  |  3  |  69  |  [89,71,48,86,8,98,5]  |
  3128  |              resetPlaceHolder_2();  |         |  557  |     86  |  3  |  69  |  [89,71,48,86,8,98,5]  |
  3134  |                         R = R + 2;  |      2  |  559  |     86  |  3  |  69  |  [89,71,48,86,8,98,5]  |
  3138  |                         j = j + 1;  |         |  559  |     86  |  3  |  70  |  [89,71,48,86,8,98,5]  |
  3139  |              resetPlaceHolder_2();  |         |  559  |     86  |  3  |  70  |  [89,71,48,86,8,98,5]  |
  3145  |                         R = R + 2;  |      2  |  561  |     86  |  3  |  70  |  [89,71,48,86,8,98,5]  |
  3149  |                         j = j + 1;  |         |  561  |     86  |  3  |  71  |  [89,71,48,86,8,98,5]  |
  3150  |              resetPlaceHolder_2();  |         |  561  |     86  |  3  |  71  |  [89,71,48,86,8,98,5]  |
  3156  |                         R = R + 2;  |      2  |  563  |     86  |  3  |  71  |  [89,71,48,86,8,98,5]  |
  3160  |                         j = j + 1;  |         |  563  |     86  |  3  |  72  |  [89,71,48,86,8,98,5]  |
  3161  |              resetPlaceHolder_2();  |         |  563  |     86  |  3  |  72  |  [89,71,48,86,8,98,5]  |
  3167  |                         R = R + 2;  |      2  |  565  |     86  |  3  |  72  |  [89,71,48,86,8,98,5]  |
  3171  |                         j = j + 1;  |         |  565  |     86  |  3  |  73  |  [89,71,48,86,8,98,5]  |
  3172  |              resetPlaceHolder_2();  |         |  565  |     86  |  3  |  73  |  [89,71,48,86,8,98,5]  |
  3178  |                         R = R + 2;  |      2  |  567  |     86  |  3  |  73  |  [89,71,48,86,8,98,5]  |
  3182  |                         j = j + 1;  |         |  567  |     86  |  3  |  74  |  [89,71,48,86,8,98,5]  |
  3183  |              resetPlaceHolder_2();  |         |  567  |     86  |  3  |  74  |  [89,71,48,86,8,98,5]  |
  3189  |                         R = R + 2;  |      2  |  569  |     86  |  3  |  74  |  [89,71,48,86,8,98,5]  |
  3193  |                         j = j + 1;  |         |  569  |     86  |  3  |  75  |  [89,71,48,86,8,98,5]  |
  3194  |              resetPlaceHolder_2();  |         |  569  |     86  |  3  |  75  |  [89,71,48,86,8,98,5]  |
  3200  |                         R = R + 2;  |      2  |  571  |     86  |  3  |  75  |  [89,71,48,86,8,98,5]  |
  3204  |                         j = j + 1;  |         |  571  |     86  |  3  |  76  |  [89,71,48,86,8,98,5]  |
  3205  |              resetPlaceHolder_2();  |         |  571  |     86  |  3  |  76  |  [89,71,48,86,8,98,5]  |
  3211  |                         R = R + 2;  |      2  |  573  |     86  |  3  |  76  |  [89,71,48,86,8,98,5]  |
  3215  |                         j = j + 1;  |         |  573  |     86  |  3  |  77  |  [89,71,48,86,8,98,5]  |
  3216  |              resetPlaceHolder_2();  |         |  573  |     86  |  3  |  77  |  [89,71,48,86,8,98,5]  |
  3222  |                         R = R + 2;  |      2  |  575  |     86  |  3  |  77  |  [89,71,48,86,8,98,5]  |
  3226  |                         j = j + 1;  |         |  575  |     86  |  3  |  78  |  [89,71,48,86,8,98,5]  |
  3227  |              resetPlaceHolder_2();  |         |  575  |     86  |  3  |  78  |  [89,71,48,86,8,98,5]  |
  3233  |                         R = R + 2;  |      2  |  577  |     86  |  3  |  78  |  [89,71,48,86,8,98,5]  |
  3237  |                         j = j + 1;  |         |  577  |     86  |  3  |  79  |  [89,71,48,86,8,98,5]  |
  3238  |              resetPlaceHolder_2();  |         |  577  |     86  |  3  |  79  |  [89,71,48,86,8,98,5]  |
  3244  |                         R = R + 2;  |      2  |  579  |     86  |  3  |  79  |  [89,71,48,86,8,98,5]  |
  3248  |                         j = j + 1;  |         |  579  |     86  |  3  |  80  |  [89,71,48,86,8,98,5]  |
  3249  |              resetPlaceHolder_2();  |         |  579  |     86  |  3  |  80  |  [89,71,48,86,8,98,5]  |
  3255  |                         R = R + 2;  |      2  |  581  |     86  |  3  |  80  |  [89,71,48,86,8,98,5]  |
  3259  |                         j = j + 1;  |         |  581  |     86  |  3  |  81  |  [89,71,48,86,8,98,5]  |
  3260  |              resetPlaceHolder_2();  |         |  581  |     86  |  3  |  81  |  [89,71,48,86,8,98,5]  |
  3266  |                         R = R + 2;  |      2  |  583  |     86  |  3  |  81  |  [89,71,48,86,8,98,5]  |
  3270  |                         j = j + 1;  |         |  583  |     86  |  3  |  82  |  [89,71,48,86,8,98,5]  |
  3271  |              resetPlaceHolder_2();  |         |  583  |     86  |  3  |  82  |  [89,71,48,86,8,98,5]  |
  3277  |                         R = R + 2;  |      2  |  585  |     86  |  3  |  82  |  [89,71,48,86,8,98,5]  |
  3281  |                         j = j + 1;  |         |  585  |     86  |  3  |  83  |  [89,71,48,86,8,98,5]  |
  3282  |              resetPlaceHolder_2();  |         |  585  |     86  |  3  |  83  |  [89,71,48,86,8,98,5]  |
  3288  |                         R = R + 2;  |      2  |  587  |     86  |  3  |  83  |  [89,71,48,86,8,98,5]  |
  3292  |                         j = j + 1;  |         |  587  |     86  |  3  |  84  |  [89,71,48,86,8,98,5]  |
  3293  |              resetPlaceHolder_2();  |         |  587  |     86  |  3  |  84  |  [89,71,48,86,8,98,5]  |
  3299  |                         R = R + 2;  |      2  |  589  |     86  |  3  |  84  |  [89,71,48,86,8,98,5]  |
  3303  |                         j = j + 1;  |         |  589  |     86  |  3  |  85  |  [89,71,48,86,8,98,5]  |
  3304  |              resetPlaceHolder_2();  |         |  589  |     86  |  3  |  85  |  [89,71,48,86,8,98,5]  |
  3310  |                         R = R + 2;  |      2  |  591  |     86  |  3  |  85  |  [89,71,48,86,8,98,5]  |
  3314  |                         j = j + 1;  |         |  591  |     86  |  3  |  86  |  [89,71,48,86,8,98,5]  |
  3315  |              resetPlaceHolder_2();  |         |  591  |     86  |  3  |  86  |  [89,71,48,86,8,98,5]  |
  3321  |                         R = R + 1;  |      1  |  592  |     86  |  3  |  86  |  [89,71,48,86,8,98,5]  |
  3325  |                         i = i + 1;  |         |  592  |     86  |  4  |  86  |  [89,71,48,86,8,98,5]  |
  3326  |              resetPlaceHolder_1();  |         |  592  |     86  |  4  |  86  |  [89,71,48,86,8,98,5]  |
  3332  |      entry = arrayRead(sorted, i);  |         |  592  |      8  |  4  |  86  |  [89,71,48,86,8,98,5]  |
  3334  |                         int j = 0;  |         |  592  |      8  |  4  |   0  |  [89,71,48,86,8,98,5]  |
  3340  |                         R = R + 2;  |      2  |  594  |      8  |  4  |   0  |  [89,71,48,86,8,98,5]  |
  3344  |                         j = j + 1;  |         |  594  |      8  |  4  |   1  |  [89,71,48,86,8,98,5]  |
  3345  |              resetPlaceHolder_2();  |         |  594  |      8  |  4  |   1  |  [89,71,48,86,8,98,5]  |
  3351  |                         R = R + 2;  |      2  |  596  |      8  |  4  |   1  |  [89,71,48,86,8,98,5]  |
  3355  |                         j = j + 1;  |         |  596  |      8  |  4  |   2  |  [89,71,48,86,8,98,5]  |
  3356  |              resetPlaceHolder_2();  |         |  596  |      8  |  4  |   2  |  [89,71,48,86,8,98,5]  |
  3362  |                         R = R + 2;  |      2  |  598  |      8  |  4  |   2  |  [89,71,48,86,8,98,5]  |
  3366  |                         j = j + 1;  |         |  598  |      8  |  4  |   3  |  [89,71,48,86,8,98,5]  |
  3367  |              resetPlaceHolder_2();  |         |  598  |      8  |  4  |   3  |  [89,71,48,86,8,98,5]  |
  3373  |                         R = R + 2;  |      2  |  600  |      8  |  4  |   3  |  [89,71,48,86,8,98,5]  |
  3377  |                         j = j + 1;  |         |  600  |      8  |  4  |   4  |  [89,71,48,86,8,98,5]  |
  3378  |              resetPlaceHolder_2();  |         |  600  |      8  |  4  |   4  |  [89,71,48,86,8,98,5]  |
  3384  |                         R = R + 2;  |      2  |  602  |      8  |  4  |   4  |  [89,71,48,86,8,98,5]  |
  3388  |                         j = j + 1;  |         |  602  |      8  |  4  |   5  |  [89,71,48,86,8,98,5]  |
  3389  |              resetPlaceHolder_2();  |         |  602  |      8  |  4  |   5  |  [89,71,48,86,8,98,5]  |
  3395  |                         R = R + 2;  |      2  |  604  |      8  |  4  |   5  |  [89,71,48,86,8,98,5]  |
  3399  |                         j = j + 1;  |         |  604  |      8  |  4  |   6  |  [89,71,48,86,8,98,5]  |
  3400  |              resetPlaceHolder_2();  |         |  604  |      8  |  4  |   6  |  [89,71,48,86,8,98,5]  |
  3406  |                         R = R + 2;  |      2  |  606  |      8  |  4  |   6  |  [89,71,48,86,8,98,5]  |
  3410  |                         j = j + 1;  |         |  606  |      8  |  4  |   7  |  [89,71,48,86,8,98,5]  |
  3411  |              resetPlaceHolder_2();  |         |  606  |      8  |  4  |   7  |  [89,71,48,86,8,98,5]  |
  3417  |                         R = R + 2;  |      2  |  608  |      8  |  4  |   7  |  [89,71,48,86,8,98,5]  |
  3421  |                         j = j + 1;  |         |  608  |      8  |  4  |   8  |  [89,71,48,86,8,98,5]  |
  3422  |              resetPlaceHolder_2();  |         |  608  |      8  |  4  |   8  |  [89,71,48,86,8,98,5]  |
  3428  |                         R = R + 1;  |      1  |  609  |      8  |  4  |   8  |  [89,71,48,86,8,98,5]  |
  3432  |                         i = i + 1;  |         |  609  |      8  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3433  |              resetPlaceHolder_1();  |         |  609  |      8  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3439  |      entry = arrayRead(sorted, i);  |         |  609  |     98  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3441  |                         int j = 0;  |         |  609  |     98  |  5  |   0  |  [89,71,48,86,8,98,5]  |
  3447  |                         R = R + 2;  |      2  |  611  |     98  |  5  |   0  |  [89,71,48,86,8,98,5]  |
  3451  |                         j = j + 1;  |         |  611  |     98  |  5  |   1  |  [89,71,48,86,8,98,5]  |
  3452  |              resetPlaceHolder_2();  |         |  611  |     98  |  5  |   1  |  [89,71,48,86,8,98,5]  |
  3458  |                         R = R + 2;  |      2  |  613  |     98  |  5  |   1  |  [89,71,48,86,8,98,5]  |
  3462  |                         j = j + 1;  |         |  613  |     98  |  5  |   2  |  [89,71,48,86,8,98,5]  |
  3463  |              resetPlaceHolder_2();  |         |  613  |     98  |  5  |   2  |  [89,71,48,86,8,98,5]  |
  3469  |                         R = R + 2;  |      2  |  615  |     98  |  5  |   2  |  [89,71,48,86,8,98,5]  |
  3473  |                         j = j + 1;  |         |  615  |     98  |  5  |   3  |  [89,71,48,86,8,98,5]  |
  3474  |              resetPlaceHolder_2();  |         |  615  |     98  |  5  |   3  |  [89,71,48,86,8,98,5]  |
  3480  |                         R = R + 2;  |      2  |  617  |     98  |  5  |   3  |  [89,71,48,86,8,98,5]  |
  3484  |                         j = j + 1;  |         |  617  |     98  |  5  |   4  |  [89,71,48,86,8,98,5]  |
  3485  |              resetPlaceHolder_2();  |         |  617  |     98  |  5  |   4  |  [89,71,48,86,8,98,5]  |
  3491  |                         R = R + 2;  |      2  |  619  |     98  |  5  |   4  |  [89,71,48,86,8,98,5]  |
  3495  |                         j = j + 1;  |         |  619  |     98  |  5  |   5  |  [89,71,48,86,8,98,5]  |
  3496  |              resetPlaceHolder_2();  |         |  619  |     98  |  5  |   5  |  [89,71,48,86,8,98,5]  |
  3502  |                         R = R + 2;  |      2  |  621  |     98  |  5  |   5  |  [89,71,48,86,8,98,5]  |
  3506  |                         j = j + 1;  |         |  621  |     98  |  5  |   6  |  [89,71,48,86,8,98,5]  |
  3507  |              resetPlaceHolder_2();  |         |  621  |     98  |  5  |   6  |  [89,71,48,86,8,98,5]  |
  3513  |                         R = R + 2;  |      2  |  623  |     98  |  5  |   6  |  [89,71,48,86,8,98,5]  |
  3517  |                         j = j + 1;  |         |  623  |     98  |  5  |   7  |  [89,71,48,86,8,98,5]  |
  3518  |              resetPlaceHolder_2();  |         |  623  |     98  |  5  |   7  |  [89,71,48,86,8,98,5]  |
  3524  |                         R = R + 2;  |      2  |  625  |     98  |  5  |   7  |  [89,71,48,86,8,98,5]  |
  3528  |                         j = j + 1;  |         |  625  |     98  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3529  |              resetPlaceHolder_2();  |         |  625  |     98  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3535  |                         R = R + 2;  |      2  |  627  |     98  |  5  |   8  |  [89,71,48,86,8,98,5]  |
  3539  |                         j = j + 1;  |         |  627  |     98  |  5  |   9  |  [89,71,48,86,8,98,5]  |
  3540  |              resetPlaceHolder_2();  |         |  627  |     98  |  5  |   9  |  [89,71,48,86,8,98,5]  |
  3546  |                         R = R + 2;  |      2  |  629  |     98  |  5  |   9  |  [89,71,48,86,8,98,5]  |
  3550  |                         j = j + 1;  |         |  629  |     98  |  5  |  10  |  [89,71,48,86,8,98,5]  |
  3551  |              resetPlaceHolder_2();  |         |  629  |     98  |  5  |  10  |  [89,71,48,86,8,98,5]  |
  3557  |                         R = R + 2;  |      2  |  631  |     98  |  5  |  10  |  [89,71,48,86,8,98,5]  |
  3561  |                         j = j + 1;  |         |  631  |     98  |  5  |  11  |  [89,71,48,86,8,98,5]  |
  3562  |              resetPlaceHolder_2();  |         |  631  |     98  |  5  |  11  |  [89,71,48,86,8,98,5]  |
  3568  |                         R = R + 2;  |      2  |  633  |     98  |  5  |  11  |  [89,71,48,86,8,98,5]  |
  3572  |                         j = j + 1;  |         |  633  |     98  |  5  |  12  |  [89,71,48,86,8,98,5]  |
  3573  |              resetPlaceHolder_2();  |         |  633  |     98  |  5  |  12  |  [89,71,48,86,8,98,5]  |
  3579  |                         R = R + 2;  |      2  |  635  |     98  |  5  |  12  |  [89,71,48,86,8,98,5]  |
  3583  |                         j = j + 1;  |         |  635  |     98  |  5  |  13  |  [89,71,48,86,8,98,5]  |
  3584  |              resetPlaceHolder_2();  |         |  635  |     98  |  5  |  13  |  [89,71,48,86,8,98,5]  |
  3590  |                         R = R + 2;  |      2  |  637  |     98  |  5  |  13  |  [89,71,48,86,8,98,5]  |
  3594  |                         j = j + 1;  |         |  637  |     98  |  5  |  14  |  [89,71,48,86,8,98,5]  |
  3595  |              resetPlaceHolder_2();  |         |  637  |     98  |  5  |  14  |  [89,71,48,86,8,98,5]  |
  3601  |                         R = R + 2;  |      2  |  639  |     98  |  5  |  14  |  [89,71,48,86,8,98,5]  |
  3605  |                         j = j + 1;  |         |  639  |     98  |  5  |  15  |  [89,71,48,86,8,98,5]  |
  3606  |              resetPlaceHolder_2();  |         |  639  |     98  |  5  |  15  |  [89,71,48,86,8,98,5]  |
  3612  |                         R = R + 2;  |      2  |  641  |     98  |  5  |  15  |  [89,71,48,86,8,98,5]  |
  3616  |                         j = j + 1;  |         |  641  |     98  |  5  |  16  |  [89,71,48,86,8,98,5]  |
  3617  |              resetPlaceHolder_2();  |         |  641  |     98  |  5  |  16  |  [89,71,48,86,8,98,5]  |
  3623  |                         R = R + 2;  |      2  |  643  |     98  |  5  |  16  |  [89,71,48,86,8,98,5]  |
  3627  |                         j = j + 1;  |         |  643  |     98  |  5  |  17  |  [89,71,48,86,8,98,5]  |
  3628  |              resetPlaceHolder_2();  |         |  643  |     98  |  5  |  17  |  [89,71,48,86,8,98,5]  |
  3634  |                         R = R + 2;  |      2  |  645  |     98  |  5  |  17  |  [89,71,48,86,8,98,5]  |
  3638  |                         j = j + 1;  |         |  645  |     98  |  5  |  18  |  [89,71,48,86,8,98,5]  |
  3639  |              resetPlaceHolder_2();  |         |  645  |     98  |  5  |  18  |  [89,71,48,86,8,98,5]  |
  3645  |                         R = R + 2;  |      2  |  647  |     98  |  5  |  18  |  [89,71,48,86,8,98,5]  |
  3649  |                         j = j + 1;  |         |  647  |     98  |  5  |  19  |  [89,71,48,86,8,98,5]  |
  3650  |              resetPlaceHolder_2();  |         |  647  |     98  |  5  |  19  |  [89,71,48,86,8,98,5]  |
  3656  |                         R = R + 2;  |      2  |  649  |     98  |  5  |  19  |  [89,71,48,86,8,98,5]  |
  3660  |                         j = j + 1;  |         |  649  |     98  |  5  |  20  |  [89,71,48,86,8,98,5]  |
  3661  |              resetPlaceHolder_2();  |         |  649  |     98  |  5  |  20  |  [89,71,48,86,8,98,5]  |
  3667  |                         R = R + 2;  |      2  |  651  |     98  |  5  |  20  |  [89,71,48,86,8,98,5]  |
  3671  |                         j = j + 1;  |         |  651  |     98  |  5  |  21  |  [89,71,48,86,8,98,5]  |
  3672  |              resetPlaceHolder_2();  |         |  651  |     98  |  5  |  21  |  [89,71,48,86,8,98,5]  |
  3678  |                         R = R + 2;  |      2  |  653  |     98  |  5  |  21  |  [89,71,48,86,8,98,5]  |
  3682  |                         j = j + 1;  |         |  653  |     98  |  5  |  22  |  [89,71,48,86,8,98,5]  |
  3683  |              resetPlaceHolder_2();  |         |  653  |     98  |  5  |  22  |  [89,71,48,86,8,98,5]  |
  3689  |                         R = R + 2;  |      2  |  655  |     98  |  5  |  22  |  [89,71,48,86,8,98,5]  |
  3693  |                         j = j + 1;  |         |  655  |     98  |  5  |  23  |  [89,71,48,86,8,98,5]  |
  3694  |              resetPlaceHolder_2();  |         |  655  |     98  |  5  |  23  |  [89,71,48,86,8,98,5]  |
  3700  |                         R = R + 2;  |      2  |  657  |     98  |  5  |  23  |  [89,71,48,86,8,98,5]  |
  3704  |                         j = j + 1;  |         |  657  |     98  |  5  |  24  |  [89,71,48,86,8,98,5]  |
  3705  |              resetPlaceHolder_2();  |         |  657  |     98  |  5  |  24  |  [89,71,48,86,8,98,5]  |
  3711  |                         R = R + 2;  |      2  |  659  |     98  |  5  |  24  |  [89,71,48,86,8,98,5]  |
  3715  |                         j = j + 1;  |         |  659  |     98  |  5  |  25  |  [89,71,48,86,8,98,5]  |
  3716  |              resetPlaceHolder_2();  |         |  659  |     98  |  5  |  25  |  [89,71,48,86,8,98,5]  |
  3722  |                         R = R + 2;  |      2  |  661  |     98  |  5  |  25  |  [89,71,48,86,8,98,5]  |
  3726  |                         j = j + 1;  |         |  661  |     98  |  5  |  26  |  [89,71,48,86,8,98,5]  |
  3727  |              resetPlaceHolder_2();  |         |  661  |     98  |  5  |  26  |  [89,71,48,86,8,98,5]  |
  3733  |                         R = R + 2;  |      2  |  663  |     98  |  5  |  26  |  [89,71,48,86,8,98,5]  |
  3737  |                         j = j + 1;  |         |  663  |     98  |  5  |  27  |  [89,71,48,86,8,98,5]  |
  3738  |              resetPlaceHolder_2();  |         |  663  |     98  |  5  |  27  |  [89,71,48,86,8,98,5]  |
  3744  |                         R = R + 2;  |      2  |  665  |     98  |  5  |  27  |  [89,71,48,86,8,98,5]  |
  3748  |                         j = j + 1;  |         |  665  |     98  |  5  |  28  |  [89,71,48,86,8,98,5]  |
  3749  |              resetPlaceHolder_2();  |         |  665  |     98  |  5  |  28  |  [89,71,48,86,8,98,5]  |
  3755  |                         R = R + 2;  |      2  |  667  |     98  |  5  |  28  |  [89,71,48,86,8,98,5]  |
  3759  |                         j = j + 1;  |         |  667  |     98  |  5  |  29  |  [89,71,48,86,8,98,5]  |
  3760  |              resetPlaceHolder_2();  |         |  667  |     98  |  5  |  29  |  [89,71,48,86,8,98,5]  |
  3766  |                         R = R + 2;  |      2  |  669  |     98  |  5  |  29  |  [89,71,48,86,8,98,5]  |
  3770  |                         j = j + 1;  |         |  669  |     98  |  5  |  30  |  [89,71,48,86,8,98,5]  |
  3771  |              resetPlaceHolder_2();  |         |  669  |     98  |  5  |  30  |  [89,71,48,86,8,98,5]  |
  3777  |                         R = R + 2;  |      2  |  671  |     98  |  5  |  30  |  [89,71,48,86,8,98,5]  |
  3781  |                         j = j + 1;  |         |  671  |     98  |  5  |  31  |  [89,71,48,86,8,98,5]  |
  3782  |              resetPlaceHolder_2();  |         |  671  |     98  |  5  |  31  |  [89,71,48,86,8,98,5]  |
  3788  |                         R = R + 2;  |      2  |  673  |     98  |  5  |  31  |  [89,71,48,86,8,98,5]  |
  3792  |                         j = j + 1;  |         |  673  |     98  |  5  |  32  |  [89,71,48,86,8,98,5]  |
  3793  |              resetPlaceHolder_2();  |         |  673  |     98  |  5  |  32  |  [89,71,48,86,8,98,5]  |
  3799  |                         R = R + 2;  |      2  |  675  |     98  |  5  |  32  |  [89,71,48,86,8,98,5]  |
  3803  |                         j = j + 1;  |         |  675  |     98  |  5  |  33  |  [89,71,48,86,8,98,5]  |
  3804  |              resetPlaceHolder_2();  |         |  675  |     98  |  5  |  33  |  [89,71,48,86,8,98,5]  |
  3810  |                         R = R + 2;  |      2  |  677  |     98  |  5  |  33  |  [89,71,48,86,8,98,5]  |
  3814  |                         j = j + 1;  |         |  677  |     98  |  5  |  34  |  [89,71,48,86,8,98,5]  |
  3815  |              resetPlaceHolder_2();  |         |  677  |     98  |  5  |  34  |  [89,71,48,86,8,98,5]  |
  3821  |                         R = R + 2;  |      2  |  679  |     98  |  5  |  34  |  [89,71,48,86,8,98,5]  |
  3825  |                         j = j + 1;  |         |  679  |     98  |  5  |  35  |  [89,71,48,86,8,98,5]  |
  3826  |              resetPlaceHolder_2();  |         |  679  |     98  |  5  |  35  |  [89,71,48,86,8,98,5]  |
  3832  |                         R = R + 2;  |      2  |  681  |     98  |  5  |  35  |  [89,71,48,86,8,98,5]  |
  3836  |                         j = j + 1;  |         |  681  |     98  |  5  |  36  |  [89,71,48,86,8,98,5]  |
  3837  |              resetPlaceHolder_2();  |         |  681  |     98  |  5  |  36  |  [89,71,48,86,8,98,5]  |
  3843  |                         R = R + 2;  |      2  |  683  |     98  |  5  |  36  |  [89,71,48,86,8,98,5]  |
  3847  |                         j = j + 1;  |         |  683  |     98  |  5  |  37  |  [89,71,48,86,8,98,5]  |
  3848  |              resetPlaceHolder_2();  |         |  683  |     98  |  5  |  37  |  [89,71,48,86,8,98,5]  |
  3854  |                         R = R + 2;  |      2  |  685  |     98  |  5  |  37  |  [89,71,48,86,8,98,5]  |
  3858  |                         j = j + 1;  |         |  685  |     98  |  5  |  38  |  [89,71,48,86,8,98,5]  |
  3859  |              resetPlaceHolder_2();  |         |  685  |     98  |  5  |  38  |  [89,71,48,86,8,98,5]  |
  3865  |                         R = R + 2;  |      2  |  687  |     98  |  5  |  38  |  [89,71,48,86,8,98,5]  |
  3869  |                         j = j + 1;  |         |  687  |     98  |  5  |  39  |  [89,71,48,86,8,98,5]  |
  3870  |              resetPlaceHolder_2();  |         |  687  |     98  |  5  |  39  |  [89,71,48,86,8,98,5]  |
  3876  |                         R = R + 2;  |      2  |  689  |     98  |  5  |  39  |  [89,71,48,86,8,98,5]  |
  3880  |                         j = j + 1;  |         |  689  |     98  |  5  |  40  |  [89,71,48,86,8,98,5]  |
  3881  |              resetPlaceHolder_2();  |         |  689  |     98  |  5  |  40  |  [89,71,48,86,8,98,5]  |
  3887  |                         R = R + 2;  |      2  |  691  |     98  |  5  |  40  |  [89,71,48,86,8,98,5]  |
  3891  |                         j = j + 1;  |         |  691  |     98  |  5  |  41  |  [89,71,48,86,8,98,5]  |
  3892  |              resetPlaceHolder_2();  |         |  691  |     98  |  5  |  41  |  [89,71,48,86,8,98,5]  |
  3898  |                         R = R + 2;  |      2  |  693  |     98  |  5  |  41  |  [89,71,48,86,8,98,5]  |
  3902  |                         j = j + 1;  |         |  693  |     98  |  5  |  42  |  [89,71,48,86,8,98,5]  |
  3903  |              resetPlaceHolder_2();  |         |  693  |     98  |  5  |  42  |  [89,71,48,86,8,98,5]  |
  3909  |                         R = R + 2;  |      2  |  695  |     98  |  5  |  42  |  [89,71,48,86,8,98,5]  |
  3913  |                         j = j + 1;  |         |  695  |     98  |  5  |  43  |  [89,71,48,86,8,98,5]  |
  3914  |              resetPlaceHolder_2();  |         |  695  |     98  |  5  |  43  |  [89,71,48,86,8,98,5]  |
  3920  |                         R = R + 2;  |      2  |  697  |     98  |  5  |  43  |  [89,71,48,86,8,98,5]  |
  3924  |                         j = j + 1;  |         |  697  |     98  |  5  |  44  |  [89,71,48,86,8,98,5]  |
  3925  |              resetPlaceHolder_2();  |         |  697  |     98  |  5  |  44  |  [89,71,48,86,8,98,5]  |
  3931  |                         R = R + 2;  |      2  |  699  |     98  |  5  |  44  |  [89,71,48,86,8,98,5]  |
  3935  |                         j = j + 1;  |         |  699  |     98  |  5  |  45  |  [89,71,48,86,8,98,5]  |
  3936  |              resetPlaceHolder_2();  |         |  699  |     98  |  5  |  45  |  [89,71,48,86,8,98,5]  |
  3942  |                         R = R + 2;  |      2  |  701  |     98  |  5  |  45  |  [89,71,48,86,8,98,5]  |
  3946  |                         j = j + 1;  |         |  701  |     98  |  5  |  46  |  [89,71,48,86,8,98,5]  |
  3947  |              resetPlaceHolder_2();  |         |  701  |     98  |  5  |  46  |  [89,71,48,86,8,98,5]  |
  3953  |                         R = R + 2;  |      2  |  703  |     98  |  5  |  46  |  [89,71,48,86,8,98,5]  |
  3957  |                         j = j + 1;  |         |  703  |     98  |  5  |  47  |  [89,71,48,86,8,98,5]  |
  3958  |              resetPlaceHolder_2();  |         |  703  |     98  |  5  |  47  |  [89,71,48,86,8,98,5]  |
  3964  |                         R = R + 2;  |      2  |  705  |     98  |  5  |  47  |  [89,71,48,86,8,98,5]  |
  3968  |                         j = j + 1;  |         |  705  |     98  |  5  |  48  |  [89,71,48,86,8,98,5]  |
  3969  |              resetPlaceHolder_2();  |         |  705  |     98  |  5  |  48  |  [89,71,48,86,8,98,5]  |
  3975  |                         R = R + 2;  |      2  |  707  |     98  |  5  |  48  |  [89,71,48,86,8,98,5]  |
  3979  |                         j = j + 1;  |         |  707  |     98  |  5  |  49  |  [89,71,48,86,8,98,5]  |
  3980  |              resetPlaceHolder_2();  |         |  707  |     98  |  5  |  49  |  [89,71,48,86,8,98,5]  |
  3986  |                         R = R + 2;  |      2  |  709  |     98  |  5  |  49  |  [89,71,48,86,8,98,5]  |
  3990  |                         j = j + 1;  |         |  709  |     98  |  5  |  50  |  [89,71,48,86,8,98,5]  |
  3991  |              resetPlaceHolder_2();  |         |  709  |     98  |  5  |  50  |  [89,71,48,86,8,98,5]  |
  3997  |                         R = R + 2;  |      2  |  711  |     98  |  5  |  50  |  [89,71,48,86,8,98,5]  |
  4001  |                         j = j + 1;  |         |  711  |     98  |  5  |  51  |  [89,71,48,86,8,98,5]  |
  4002  |              resetPlaceHolder_2();  |         |  711  |     98  |  5  |  51  |  [89,71,48,86,8,98,5]  |
  4008  |                         R = R + 2;  |      2  |  713  |     98  |  5  |  51  |  [89,71,48,86,8,98,5]  |
  4012  |                         j = j + 1;  |         |  713  |     98  |  5  |  52  |  [89,71,48,86,8,98,5]  |
  4013  |              resetPlaceHolder_2();  |         |  713  |     98  |  5  |  52  |  [89,71,48,86,8,98,5]  |
  4019  |                         R = R + 2;  |      2  |  715  |     98  |  5  |  52  |  [89,71,48,86,8,98,5]  |
  4023  |                         j = j + 1;  |         |  715  |     98  |  5  |  53  |  [89,71,48,86,8,98,5]  |
  4024  |              resetPlaceHolder_2();  |         |  715  |     98  |  5  |  53  |  [89,71,48,86,8,98,5]  |
  4030  |                         R = R + 2;  |      2  |  717  |     98  |  5  |  53  |  [89,71,48,86,8,98,5]  |
  4034  |                         j = j + 1;  |         |  717  |     98  |  5  |  54  |  [89,71,48,86,8,98,5]  |
  4035  |              resetPlaceHolder_2();  |         |  717  |     98  |  5  |  54  |  [89,71,48,86,8,98,5]  |
  4041  |                         R = R + 2;  |      2  |  719  |     98  |  5  |  54  |  [89,71,48,86,8,98,5]  |
  4045  |                         j = j + 1;  |         |  719  |     98  |  5  |  55  |  [89,71,48,86,8,98,5]  |
  4046  |              resetPlaceHolder_2();  |         |  719  |     98  |  5  |  55  |  [89,71,48,86,8,98,5]  |
  4052  |                         R = R + 2;  |      2  |  721  |     98  |  5  |  55  |  [89,71,48,86,8,98,5]  |
  4056  |                         j = j + 1;  |         |  721  |     98  |  5  |  56  |  [89,71,48,86,8,98,5]  |
  4057  |              resetPlaceHolder_2();  |         |  721  |     98  |  5  |  56  |  [89,71,48,86,8,98,5]  |
  4063  |                         R = R + 2;  |      2  |  723  |     98  |  5  |  56  |  [89,71,48,86,8,98,5]  |
  4067  |                         j = j + 1;  |         |  723  |     98  |  5  |  57  |  [89,71,48,86,8,98,5]  |
  4068  |              resetPlaceHolder_2();  |         |  723  |     98  |  5  |  57  |  [89,71,48,86,8,98,5]  |
  4074  |                         R = R + 2;  |      2  |  725  |     98  |  5  |  57  |  [89,71,48,86,8,98,5]  |
  4078  |                         j = j + 1;  |         |  725  |     98  |  5  |  58  |  [89,71,48,86,8,98,5]  |
  4079  |              resetPlaceHolder_2();  |         |  725  |     98  |  5  |  58  |  [89,71,48,86,8,98,5]  |
  4085  |                         R = R + 2;  |      2  |  727  |     98  |  5  |  58  |  [89,71,48,86,8,98,5]  |
  4089  |                         j = j + 1;  |         |  727  |     98  |  5  |  59  |  [89,71,48,86,8,98,5]  |
  4090  |              resetPlaceHolder_2();  |         |  727  |     98  |  5  |  59  |  [89,71,48,86,8,98,5]  |
  4096  |                         R = R + 2;  |      2  |  729  |     98  |  5  |  59  |  [89,71,48,86,8,98,5]  |
  4100  |                         j = j + 1;  |         |  729  |     98  |  5  |  60  |  [89,71,48,86,8,98,5]  |
  4101  |              resetPlaceHolder_2();  |         |  729  |     98  |  5  |  60  |  [89,71,48,86,8,98,5]  |
  4107  |                         R = R + 2;  |      2  |  731  |     98  |  5  |  60  |  [89,71,48,86,8,98,5]  |
  4111  |                         j = j + 1;  |         |  731  |     98  |  5  |  61  |  [89,71,48,86,8,98,5]  |
  4112  |              resetPlaceHolder_2();  |         |  731  |     98  |  5  |  61  |  [89,71,48,86,8,98,5]  |
  4118  |                         R = R + 2;  |      2  |  733  |     98  |  5  |  61  |  [89,71,48,86,8,98,5]  |
  4122  |                         j = j + 1;  |         |  733  |     98  |  5  |  62  |  [89,71,48,86,8,98,5]  |
  4123  |              resetPlaceHolder_2();  |         |  733  |     98  |  5  |  62  |  [89,71,48,86,8,98,5]  |
  4129  |                         R = R + 2;  |      2  |  735  |     98  |  5  |  62  |  [89,71,48,86,8,98,5]  |
  4133  |                         j = j + 1;  |         |  735  |     98  |  5  |  63  |  [89,71,48,86,8,98,5]  |
  4134  |              resetPlaceHolder_2();  |         |  735  |     98  |  5  |  63  |  [89,71,48,86,8,98,5]  |
  4140  |                         R = R + 2;  |      2  |  737  |     98  |  5  |  63  |  [89,71,48,86,8,98,5]  |
  4144  |                         j = j + 1;  |         |  737  |     98  |  5  |  64  |  [89,71,48,86,8,98,5]  |
  4145  |              resetPlaceHolder_2();  |         |  737  |     98  |  5  |  64  |  [89,71,48,86,8,98,5]  |
  4151  |                         R = R + 2;  |      2  |  739  |     98  |  5  |  64  |  [89,71,48,86,8,98,5]  |
  4155  |                         j = j + 1;  |         |  739  |     98  |  5  |  65  |  [89,71,48,86,8,98,5]  |
  4156  |              resetPlaceHolder_2();  |         |  739  |     98  |  5  |  65  |  [89,71,48,86,8,98,5]  |
  4162  |                         R = R + 2;  |      2  |  741  |     98  |  5  |  65  |  [89,71,48,86,8,98,5]  |
  4166  |                         j = j + 1;  |         |  741  |     98  |  5  |  66  |  [89,71,48,86,8,98,5]  |
  4167  |              resetPlaceHolder_2();  |         |  741  |     98  |  5  |  66  |  [89,71,48,86,8,98,5]  |
  4173  |                         R = R + 2;  |      2  |  743  |     98  |  5  |  66  |  [89,71,48,86,8,98,5]  |
  4177  |                         j = j + 1;  |         |  743  |     98  |  5  |  67  |  [89,71,48,86,8,98,5]  |
  4178  |              resetPlaceHolder_2();  |         |  743  |     98  |  5  |  67  |  [89,71,48,86,8,98,5]  |
  4184  |                         R = R + 2;  |      2  |  745  |     98  |  5  |  67  |  [89,71,48,86,8,98,5]  |
  4188  |                         j = j + 1;  |         |  745  |     98  |  5  |  68  |  [89,71,48,86,8,98,5]  |
  4189  |              resetPlaceHolder_2();  |         |  745  |     98  |  5  |  68  |  [89,71,48,86,8,98,5]  |
  4195  |                         R = R + 2;  |      2  |  747  |     98  |  5  |  68  |  [89,71,48,86,8,98,5]  |
  4199  |                         j = j + 1;  |         |  747  |     98  |  5  |  69  |  [89,71,48,86,8,98,5]  |
  4200  |              resetPlaceHolder_2();  |         |  747  |     98  |  5  |  69  |  [89,71,48,86,8,98,5]  |
  4206  |                         R = R + 2;  |      2  |  749  |     98  |  5  |  69  |  [89,71,48,86,8,98,5]  |
  4210  |                         j = j + 1;  |         |  749  |     98  |  5  |  70  |  [89,71,48,86,8,98,5]  |
  4211  |              resetPlaceHolder_2();  |         |  749  |     98  |  5  |  70  |  [89,71,48,86,8,98,5]  |
  4217  |                         R = R + 2;  |      2  |  751  |     98  |  5  |  70  |  [89,71,48,86,8,98,5]  |
  4221  |                         j = j + 1;  |         |  751  |     98  |  5  |  71  |  [89,71,48,86,8,98,5]  |
  4222  |              resetPlaceHolder_2();  |         |  751  |     98  |  5  |  71  |  [89,71,48,86,8,98,5]  |
  4228  |                         R = R + 2;  |      2  |  753  |     98  |  5  |  71  |  [89,71,48,86,8,98,5]  |
  4232  |                         j = j + 1;  |         |  753  |     98  |  5  |  72  |  [89,71,48,86,8,98,5]  |
  4233  |              resetPlaceHolder_2();  |         |  753  |     98  |  5  |  72  |  [89,71,48,86,8,98,5]  |
  4239  |                         R = R + 2;  |      2  |  755  |     98  |  5  |  72  |  [89,71,48,86,8,98,5]  |
  4243  |                         j = j + 1;  |         |  755  |     98  |  5  |  73  |  [89,71,48,86,8,98,5]  |
  4244  |              resetPlaceHolder_2();  |         |  755  |     98  |  5  |  73  |  [89,71,48,86,8,98,5]  |
  4250  |                         R = R + 2;  |      2  |  757  |     98  |  5  |  73  |  [89,71,48,86,8,98,5]  |
  4254  |                         j = j + 1;  |         |  757  |     98  |  5  |  74  |  [89,71,48,86,8,98,5]  |
  4255  |              resetPlaceHolder_2();  |         |  757  |     98  |  5  |  74  |  [89,71,48,86,8,98,5]  |
  4261  |                         R = R + 2;  |      2  |  759  |     98  |  5  |  74  |  [89,71,48,86,8,98,5]  |
  4265  |                         j = j + 1;  |         |  759  |     98  |  5  |  75  |  [89,71,48,86,8,98,5]  |
  4266  |              resetPlaceHolder_2();  |         |  759  |     98  |  5  |  75  |  [89,71,48,86,8,98,5]  |
  4272  |                         R = R + 2;  |      2  |  761  |     98  |  5  |  75  |  [89,71,48,86,8,98,5]  |
  4276  |                         j = j + 1;  |         |  761  |     98  |  5  |  76  |  [89,71,48,86,8,98,5]  |
  4277  |              resetPlaceHolder_2();  |         |  761  |     98  |  5  |  76  |  [89,71,48,86,8,98,5]  |
  4283  |                         R = R + 2;  |      2  |  763  |     98  |  5  |  76  |  [89,71,48,86,8,98,5]  |
  4287  |                         j = j + 1;  |         |  763  |     98  |  5  |  77  |  [89,71,48,86,8,98,5]  |
  4288  |              resetPlaceHolder_2();  |         |  763  |     98  |  5  |  77  |  [89,71,48,86,8,98,5]  |
  4294  |                         R = R + 2;  |      2  |  765  |     98  |  5  |  77  |  [89,71,48,86,8,98,5]  |
  4298  |                         j = j + 1;  |         |  765  |     98  |  5  |  78  |  [89,71,48,86,8,98,5]  |
  4299  |              resetPlaceHolder_2();  |         |  765  |     98  |  5  |  78  |  [89,71,48,86,8,98,5]  |
  4305  |                         R = R + 2;  |      2  |  767  |     98  |  5  |  78  |  [89,71,48,86,8,98,5]  |
  4309  |                         j = j + 1;  |         |  767  |     98  |  5  |  79  |  [89,71,48,86,8,98,5]  |
  4310  |              resetPlaceHolder_2();  |         |  767  |     98  |  5  |  79  |  [89,71,48,86,8,98,5]  |
  4316  |                         R = R + 2;  |      2  |  769  |     98  |  5  |  79  |  [89,71,48,86,8,98,5]  |
  4320  |                         j = j + 1;  |         |  769  |     98  |  5  |  80  |  [89,71,48,86,8,98,5]  |
  4321  |              resetPlaceHolder_2();  |         |  769  |     98  |  5  |  80  |  [89,71,48,86,8,98,5]  |
  4327  |                         R = R + 2;  |      2  |  771  |     98  |  5  |  80  |  [89,71,48,86,8,98,5]  |
  4331  |                         j = j + 1;  |         |  771  |     98  |  5  |  81  |  [89,71,48,86,8,98,5]  |
  4332  |              resetPlaceHolder_2();  |         |  771  |     98  |  5  |  81  |  [89,71,48,86,8,98,5]  |
  4338  |                         R = R + 2;  |      2  |  773  |     98  |  5  |  81  |  [89,71,48,86,8,98,5]  |
  4342  |                         j = j + 1;  |         |  773  |     98  |  5  |  82  |  [89,71,48,86,8,98,5]  |
  4343  |              resetPlaceHolder_2();  |         |  773  |     98  |  5  |  82  |  [89,71,48,86,8,98,5]  |
  4349  |                         R = R + 2;  |      2  |  775  |     98  |  5  |  82  |  [89,71,48,86,8,98,5]  |
  4353  |                         j = j + 1;  |         |  775  |     98  |  5  |  83  |  [89,71,48,86,8,98,5]  |
  4354  |              resetPlaceHolder_2();  |         |  775  |     98  |  5  |  83  |  [89,71,48,86,8,98,5]  |
  4360  |                         R = R + 2;  |      2  |  777  |     98  |  5  |  83  |  [89,71,48,86,8,98,5]  |
  4364  |                         j = j + 1;  |         |  777  |     98  |  5  |  84  |  [89,71,48,86,8,98,5]  |
  4365  |              resetPlaceHolder_2();  |         |  777  |     98  |  5  |  84  |  [89,71,48,86,8,98,5]  |
  4371  |                         R = R + 2;  |      2  |  779  |     98  |  5  |  84  |  [89,71,48,86,8,98,5]  |
  4375  |                         j = j + 1;  |         |  779  |     98  |  5  |  85  |  [89,71,48,86,8,98,5]  |
  4376  |              resetPlaceHolder_2();  |         |  779  |     98  |  5  |  85  |  [89,71,48,86,8,98,5]  |
  4382  |                         R = R + 2;  |      2  |  781  |     98  |  5  |  85  |  [89,71,48,86,8,98,5]  |
  4386  |                         j = j + 1;  |         |  781  |     98  |  5  |  86  |  [89,71,48,86,8,98,5]  |
  4387  |              resetPlaceHolder_2();  |         |  781  |     98  |  5  |  86  |  [89,71,48,86,8,98,5]  |
  4393  |                         R = R + 2;  |      2  |  783  |     98  |  5  |  86  |  [89,71,48,86,8,98,5]  |
  4397  |                         j = j + 1;  |         |  783  |     98  |  5  |  87  |  [89,71,48,86,8,98,5]  |
  4398  |              resetPlaceHolder_2();  |         |  783  |     98  |  5  |  87  |  [89,71,48,86,8,98,5]  |
  4404  |                         R = R + 2;  |      2  |  785  |     98  |  5  |  87  |  [89,71,48,86,8,98,5]  |
  4408  |                         j = j + 1;  |         |  785  |     98  |  5  |  88  |  [89,71,48,86,8,98,5]  |
  4409  |              resetPlaceHolder_2();  |         |  785  |     98  |  5  |  88  |  [89,71,48,86,8,98,5]  |
  4415  |                         R = R + 2;  |      2  |  787  |     98  |  5  |  88  |  [89,71,48,86,8,98,5]  |
  4419  |                         j = j + 1;  |         |  787  |     98  |  5  |  89  |  [89,71,48,86,8,98,5]  |
  4420  |              resetPlaceHolder_2();  |         |  787  |     98  |  5  |  89  |  [89,71,48,86,8,98,5]  |
  4426  |                         R = R + 2;  |      2  |  789  |     98  |  5  |  89  |  [89,71,48,86,8,98,5]  |
  4430  |                         j = j + 1;  |         |  789  |     98  |  5  |  90  |  [89,71,48,86,8,98,5]  |
  4431  |              resetPlaceHolder_2();  |         |  789  |     98  |  5  |  90  |  [89,71,48,86,8,98,5]  |
  4437  |                         R = R + 2;  |      2  |  791  |     98  |  5  |  90  |  [89,71,48,86,8,98,5]  |
  4441  |                         j = j + 1;  |         |  791  |     98  |  5  |  91  |  [89,71,48,86,8,98,5]  |
  4442  |              resetPlaceHolder_2();  |         |  791  |     98  |  5  |  91  |  [89,71,48,86,8,98,5]  |
  4448  |                         R = R + 2;  |      2  |  793  |     98  |  5  |  91  |  [89,71,48,86,8,98,5]  |
  4452  |                         j = j + 1;  |         |  793  |     98  |  5  |  92  |  [89,71,48,86,8,98,5]  |
  4453  |              resetPlaceHolder_2();  |         |  793  |     98  |  5  |  92  |  [89,71,48,86,8,98,5]  |
  4459  |                         R = R + 2;  |      2  |  795  |     98  |  5  |  92  |  [89,71,48,86,8,98,5]  |
  4463  |                         j = j + 1;  |         |  795  |     98  |  5  |  93  |  [89,71,48,86,8,98,5]  |
  4464  |              resetPlaceHolder_2();  |         |  795  |     98  |  5  |  93  |  [89,71,48,86,8,98,5]  |
  4470  |                         R = R + 2;  |      2  |  797  |     98  |  5  |  93  |  [89,71,48,86,8,98,5]  |
  4474  |                         j = j + 1;  |         |  797  |     98  |  5  |  94  |  [89,71,48,86,8,98,5]  |
  4475  |              resetPlaceHolder_2();  |         |  797  |     98  |  5  |  94  |  [89,71,48,86,8,98,5]  |
  4481  |                         R = R + 2;  |      2  |  799  |     98  |  5  |  94  |  [89,71,48,86,8,98,5]  |
  4485  |                         j = j + 1;  |         |  799  |     98  |  5  |  95  |  [89,71,48,86,8,98,5]  |
  4486  |              resetPlaceHolder_2();  |         |  799  |     98  |  5  |  95  |  [89,71,48,86,8,98,5]  |
  4492  |                         R = R + 2;  |      2  |  801  |     98  |  5  |  95  |  [89,71,48,86,8,98,5]  |
  4496  |                         j = j + 1;  |         |  801  |     98  |  5  |  96  |  [89,71,48,86,8,98,5]  |
  4497  |              resetPlaceHolder_2();  |         |  801  |     98  |  5  |  96  |  [89,71,48,86,8,98,5]  |
  4503  |                         R = R + 2;  |      2  |  803  |     98  |  5  |  96  |  [89,71,48,86,8,98,5]  |
  4507  |                         j = j + 1;  |         |  803  |     98  |  5  |  97  |  [89,71,48,86,8,98,5]  |
  4508  |              resetPlaceHolder_2();  |         |  803  |     98  |  5  |  97  |  [89,71,48,86,8,98,5]  |
  4514  |                         R = R + 2;  |      2  |  805  |     98  |  5  |  97  |  [89,71,48,86,8,98,5]  |
  4518  |                         j = j + 1;  |         |  805  |     98  |  5  |  98  |  [89,71,48,86,8,98,5]  |
  4519  |              resetPlaceHolder_2();  |         |  805  |     98  |  5  |  98  |  [89,71,48,86,8,98,5]  |
  4525  |                         R = R + 1;  |      1  |  806  |     98  |  5  |  98  |  [89,71,48,86,8,98,5]  |
  4529  |                         i = i + 1;  |         |  806  |     98  |  6  |  98  |  [89,71,48,86,8,98,5]  |
  4530  |              resetPlaceHolder_1();  |         |  806  |     98  |  6  |  98  |  [89,71,48,86,8,98,5]  |
  4536  |      entry = arrayRead(sorted, i);  |         |  806  |      5  |  6  |  98  |  [89,71,48,86,8,98,5]  |
  4538  |                         int j = 0;  |         |  806  |      5  |  6  |   0  |  [89,71,48,86,8,98,5]  |
  4544  |                         R = R + 2;  |      2  |  808  |      5  |  6  |   0  |  [89,71,48,86,8,98,5]  |
  4548  |                         j = j + 1;  |         |  808  |      5  |  6  |   1  |  [89,71,48,86,8,98,5]  |
  4549  |              resetPlaceHolder_2();  |         |  808  |      5  |  6  |   1  |  [89,71,48,86,8,98,5]  |
  4555  |                         R = R + 2;  |      2  |  810  |      5  |  6  |   1  |  [89,71,48,86,8,98,5]  |
  4559  |                         j = j + 1;  |         |  810  |      5  |  6  |   2  |  [89,71,48,86,8,98,5]  |
  4560  |              resetPlaceHolder_2();  |         |  810  |      5  |  6  |   2  |  [89,71,48,86,8,98,5]  |
  4566  |                         R = R + 2;  |      2  |  812  |      5  |  6  |   2  |  [89,71,48,86,8,98,5]  |
  4570  |                         j = j + 1;  |         |  812  |      5  |  6  |   3  |  [89,71,48,86,8,98,5]  |
  4571  |              resetPlaceHolder_2();  |         |  812  |      5  |  6  |   3  |  [89,71,48,86,8,98,5]  |
  4577  |                         R = R + 2;  |      2  |  814  |      5  |  6  |   3  |  [89,71,48,86,8,98,5]  |
  4581  |                         j = j + 1;  |         |  814  |      5  |  6  |   4  |  [89,71,48,86,8,98,5]  |
  4582  |              resetPlaceHolder_2();  |         |  814  |      5  |  6  |   4  |  [89,71,48,86,8,98,5]  |
  4588  |                         R = R + 2;  |      2  |  816  |      5  |  6  |   4  |  [89,71,48,86,8,98,5]  |
  4592  |                         j = j + 1;  |         |  816  |      5  |  6  |   5  |  [89,71,48,86,8,98,5]  |
  4593  |              resetPlaceHolder_2();  |         |  816  |      5  |  6  |   5  |  [89,71,48,86,8,98,5]  |
  4599  |                         R = R + 1;  |      1  |  817  |      5  |  6  |   5  |  [89,71,48,86,8,98,5]  |
  4603  |                         i = i + 1;  |         |  817  |      5  |  7  |   5  |  [89,71,48,86,8,98,5]  |
  4604  |              resetPlaceHolder_1();  |         |  817  |      5  |  7  |   5  |  [89,71,48,86,8,98,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 412 trace node indices: [1501, 2452, 1369, 1633, 1105, 3167, 1237, 2463, 2595, 1850, 1083, 1982, 481, 217, 3417, 2947, 2114, 2837, 1971, 1655, 3942, 1872, 4294, 404, 3634, 3766, 1127, 3502, 1391, 4371, 3513, 3777, 3898, 4030, 2136, 52, 184, 4151, 3046, 3689, 4415, 3821, 3612, 4349, 2562, 3744, 2356, 1545, 2169, 1479, 4492, 1347, 228, 2158, 448, 2301, 316, 3557, 4514, 261, 4008, 3788, 492, 3524, 756, 3887, 789, 4173, 591, 2782, 2650, 646, 1828, 2925, 514, 1677, 2540, 1960, 4162, 602, 3986, 3068, 3189, 1215, 877, 734, 866, 1072, 1622, 998, 2639, 2103, 2804, 1600, 3211, 4588, 74, 3406, 206, 85, 2496, 2441, 2705, 910, 3711, 778, 349, 2147, 1666, 2969, 3233, 2606, 3134, 2015, 1883, 2958, 1938, 4140, 2628, 3810, 3090, 2826, 1457, 4327, 3546, 3535, 1787, 2213, 2345, 1281, 3667, 3931, 3799, 4316, 4063, 1402, 3909, 1270, 1259, 1534, 4544, 2694, 4525, 1138, 2268, 1567, 1160, 1028, 2323, 1292, 1182, 2419, 1424, 2312, 3428, 1446, 2551, 1644, 679, 1039, 547, 96, 393, 1776, 3656, 2125, 701, 1050, 173, 3222, 129, 569, 41, 3920, 371, 503, 3755, 2749, 4184, 4195, 360, 921, 657, 3321, 558, 4448, 2408, 2793, 2617, 2529, 888, 1732, 2235, 2936, 965, 4470, 1754, 3491, 3079, 1927, 4393, 745, 4503, 4577, 4599, 4041, 2727, 1916, 2048, 2859, 4283, 3255, 3266, 2991, 3458, 118, 3590, 2716, 1226, 382, 3964, 4096, 2738, 3002, 3340, 3123, 3700, 3832, 1765, 3579, 2474, 3568, 2573, 3678, 3101, 4228, 1894, 4305, 2257, 1589, 2246, 3384, 4107, 2180, 811, 1993, 140, 1325, 1149, 1556, 943, 668, 932, 1061, 1688, 3480, 1171, 1699, 4085, 3953, 1435, 3310, 3178, 3876, 4481, 1413, 4426, 2914, 1809, 426, 162, 3395, 1905, 2037, 4052, 3975, 4566, 2202, 1798, 525, 712, 580, 855, 690, 63, 4360, 2397, 3112, 2661, 1611, 2375, 4272, 1743, 327, 954, 2518, 2386, 4437, 2092, 2224, 3722, 338, 470, 2903, 3623, 1336, 1358, 613, 2279, 1094, 3024, 2892, 3156, 2848, 2584, 3288, 4217, 2760, 250, 1839, 1949, 2870, 3447, 976, 844, 1721, 2290, 4250, 2004, 2026, 4338, 1523, 4261, 1861, 2081, 1193, 4404, 272, 3351, 899, 4074, 3645, 536, 800, 1116, 151, 1512, 2683, 1578, 3997, 833, 3865, 3733, 3601, 30, 3373, 1380, 2815, 1303, 1248, 3469, 3145, 305, 107, 239, 294, 1314, 2334, 3277, 195, 437, 2070, 767, 1710, 635, 3843, 283, 415, 624, 3244, 987, 3362, 4129, 2430, 3057, 4382, 2485, 4118, 459, 723, 4239, 822, 2507, 4206, 4019, 3013, 2672, 2881, 3299, 1009, 4555, 3854, 2059, 1490, 3200, 2191, 1204, 4459, 1468, 2980, 3035, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1028,1039,1050,1061,1072,1083,1094,1105,1116,1127,1138,1149,1160,1171,1182,1193,1204,1215,1226,1237,1248,1259,1270,1281,1292,1303,1314,1325,1336,1347,1358,1369,1380,1391,1402,1413,1424,1435,1446,1457,1468,1479,1490,1501,1512,1523,1534,1545,1556,1567,1578,1589,1600,1611,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1828,1839,1850,1861,1872,1883,1894,1905,1916,1927,1938,1949,1960,1971,1982,1993,2004,2015,2026,2037,2048,2059,2070,2081,2092,2103,2114,2125,2136,2147,2158,2169,2180,2191,2202,2213,2224,2235,2246,2257,2268,2279,2290,2301,2312,2323,2334,2345,2356,2375,2386,2397,2408,2419,2430,2441,2452,2463,2474,2485,2496,2507,2518,2529,2540,2551,2562,2573,2584,2595,2606,2617,2628,2639,2650,2661,2672,2683,2694,2705,2716,2727,2738,2749,2760,2771,2782,2793,2804,2815,2826,2837,2848,2859,2870,2881,2892,2903,2914,2925,2936,2947,2958,2969,2980,2991,3002,3013,3024,3035,3046,3057,3068,3079,3090,3101,3112,3123,3134,3145,3156,3167,3178,3189,3200,3211,3222,3233,3244,3255,3266,3277,3288,3299,3310,3321,3340,3351,3362,3373,3384,3395,3406,3417,3428,3447,3458,3469,3480,3491,3502,3513,3524,3535,3546,3557,3568,3579,3590,3601,3612,3623,3634,3645,3656,3667,3678,3689,3700,3711,3722,3733,3744,3755,3766,3777,3788,3799,3810,3821,3832,3843,3854,3865,3876,3887,3898,3909,3920,3931,3942,3953,3964,3975,3986,3997,4008,4019,4030,4041,4052,4063,4074,4085,4096,4107,4118,4129,4140,4151,4162,4173,4184,4195,4206,4217,4228,4239,4250,4261,4272,4283,4294,4305,4316,4327,4338,4349,4360,4371,4382,4393,4404,4415,4426,4437,4448,4459,4470,4481,4492,4503,4514,4525,4544,4555,4566,4577,4588,4599}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 1;  |      1  |                         0  |
  1014  |  resetPlaceHolder_1();  |         |                            |
  1028  |             R = R + 2;  |      2  |                         0  |
  1033  |  resetPlaceHolder_2();  |         |                            |
  1039  |             R = R + 2;  |      2  |                         0  |
  1044  |  resetPlaceHolder_2();  |         |                            |
  1050  |             R = R + 2;  |      2  |                         0  |
  1055  |  resetPlaceHolder_2();  |         |                            |
  1061  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_2();  |         |                            |
  1072  |             R = R + 2;  |      2  |                         0  |
  1077  |  resetPlaceHolder_2();  |         |                            |
  1083  |             R = R + 2;  |      2  |                         0  |
  1088  |  resetPlaceHolder_2();  |         |                            |
  1094  |             R = R + 2;  |      2  |                         0  |
  1099  |  resetPlaceHolder_2();  |         |                            |
  1105  |             R = R + 2;  |      2  |                         0  |
  1110  |  resetPlaceHolder_2();  |         |                            |
  1116  |             R = R + 2;  |      2  |                         0  |
  1121  |  resetPlaceHolder_2();  |         |                            |
  1127  |             R = R + 2;  |      2  |                         0  |
  1132  |  resetPlaceHolder_2();  |         |                            |
  1138  |             R = R + 2;  |      2  |                         0  |
  1143  |  resetPlaceHolder_2();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1154  |  resetPlaceHolder_2();  |         |                            |
  1160  |             R = R + 2;  |      2  |                         0  |
  1165  |  resetPlaceHolder_2();  |         |                            |
  1171  |             R = R + 2;  |      2  |                         0  |
  1176  |  resetPlaceHolder_2();  |         |                            |
  1182  |             R = R + 2;  |      2  |                         0  |
  1187  |  resetPlaceHolder_2();  |         |                            |
  1193  |             R = R + 2;  |      2  |                         0  |
  1198  |  resetPlaceHolder_2();  |         |                            |
  1204  |             R = R + 2;  |      2  |                         0  |
  1209  |  resetPlaceHolder_2();  |         |                            |
  1215  |             R = R + 2;  |      2  |                         0  |
  1220  |  resetPlaceHolder_2();  |         |                            |
  1226  |             R = R + 2;  |      2  |                         0  |
  1231  |  resetPlaceHolder_2();  |         |                            |
  1237  |             R = R + 2;  |      2  |                         0  |
  1242  |  resetPlaceHolder_2();  |         |                            |
  1248  |             R = R + 2;  |      2  |                         0  |
  1253  |  resetPlaceHolder_2();  |         |                            |
  1259  |             R = R + 2;  |      2  |                         0  |
  1264  |  resetPlaceHolder_2();  |         |                            |
  1270  |             R = R + 2;  |      2  |                         0  |
  1275  |  resetPlaceHolder_2();  |         |                            |
  1281  |             R = R + 2;  |      2  |                         0  |
  1286  |  resetPlaceHolder_2();  |         |                            |
  1292  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_2();  |         |                            |
  1303  |             R = R + 2;  |      2  |                         0  |
  1308  |  resetPlaceHolder_2();  |         |                            |
  1314  |             R = R + 2;  |      2  |                         0  |
  1319  |  resetPlaceHolder_2();  |         |                            |
  1325  |             R = R + 2;  |      2  |                         0  |
  1330  |  resetPlaceHolder_2();  |         |                            |
  1336  |             R = R + 2;  |      2  |                         0  |
  1341  |  resetPlaceHolder_2();  |         |                            |
  1347  |             R = R + 2;  |      2  |                         0  |
  1352  |  resetPlaceHolder_2();  |         |                            |
  1358  |             R = R + 2;  |      2  |                         0  |
  1363  |  resetPlaceHolder_2();  |         |                            |
  1369  |             R = R + 2;  |      2  |                         0  |
  1374  |  resetPlaceHolder_2();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1385  |  resetPlaceHolder_2();  |         |                            |
  1391  |             R = R + 2;  |      2  |                         0  |
  1396  |  resetPlaceHolder_2();  |         |                            |
  1402  |             R = R + 2;  |      2  |                         0  |
  1407  |  resetPlaceHolder_2();  |         |                            |
  1413  |             R = R + 2;  |      2  |                         0  |
  1418  |  resetPlaceHolder_2();  |         |                            |
  1424  |             R = R + 2;  |      2  |                         0  |
  1429  |  resetPlaceHolder_2();  |         |                            |
  1435  |             R = R + 2;  |      2  |                         0  |
  1440  |  resetPlaceHolder_2();  |         |                            |
  1446  |             R = R + 2;  |      2  |                         0  |
  1451  |  resetPlaceHolder_2();  |         |                            |
  1457  |             R = R + 2;  |      2  |                         0  |
  1462  |  resetPlaceHolder_2();  |         |                            |
  1468  |             R = R + 2;  |      2  |                         0  |
  1473  |  resetPlaceHolder_2();  |         |                            |
  1479  |             R = R + 2;  |      2  |                         0  |
  1484  |  resetPlaceHolder_2();  |         |                            |
  1490  |             R = R + 2;  |      2  |                         0  |
  1495  |  resetPlaceHolder_2();  |         |                            |
  1501  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_2();  |         |                            |
  1512  |             R = R + 2;  |      2  |                         0  |
  1517  |  resetPlaceHolder_2();  |         |                            |
  1523  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_2();  |         |                            |
  1534  |             R = R + 2;  |      2  |                         0  |
  1539  |  resetPlaceHolder_2();  |         |                            |
  1545  |             R = R + 2;  |      2  |                         0  |
  1550  |  resetPlaceHolder_2();  |         |                            |
  1556  |             R = R + 2;  |      2  |                         0  |
  1561  |  resetPlaceHolder_2();  |         |                            |
  1567  |             R = R + 2;  |      2  |                         0  |
  1572  |  resetPlaceHolder_2();  |         |                            |
  1578  |             R = R + 2;  |      2  |                         0  |
  1583  |  resetPlaceHolder_2();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1594  |  resetPlaceHolder_2();  |         |                            |
  1600  |             R = R + 2;  |      2  |                         0  |
  1605  |  resetPlaceHolder_2();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1616  |  resetPlaceHolder_2();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 1;  |      1  |                         0  |
  1814  |  resetPlaceHolder_1();  |         |                            |
  1828  |             R = R + 2;  |      2  |                         0  |
  1833  |  resetPlaceHolder_2();  |         |                            |
  1839  |             R = R + 2;  |      2  |                         0  |
  1844  |  resetPlaceHolder_2();  |         |                            |
  1850  |             R = R + 2;  |      2  |                         0  |
  1855  |  resetPlaceHolder_2();  |         |                            |
  1861  |             R = R + 2;  |      2  |                         0  |
  1866  |  resetPlaceHolder_2();  |         |                            |
  1872  |             R = R + 2;  |      2  |                         0  |
  1877  |  resetPlaceHolder_2();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1888  |  resetPlaceHolder_2();  |         |                            |
  1894  |             R = R + 2;  |      2  |                         0  |
  1899  |  resetPlaceHolder_2();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1910  |  resetPlaceHolder_2();  |         |                            |
  1916  |             R = R + 2;  |      2  |                         0  |
  1921  |  resetPlaceHolder_2();  |         |                            |
  1927  |             R = R + 2;  |      2  |                         0  |
  1932  |  resetPlaceHolder_2();  |         |                            |
  1938  |             R = R + 2;  |      2  |                         0  |
  1943  |  resetPlaceHolder_2();  |         |                            |
  1949  |             R = R + 2;  |      2  |                         0  |
  1954  |  resetPlaceHolder_2();  |         |                            |
  1960  |             R = R + 2;  |      2  |                         0  |
  1965  |  resetPlaceHolder_2();  |         |                            |
  1971  |             R = R + 2;  |      2  |                         0  |
  1976  |  resetPlaceHolder_2();  |         |                            |
  1982  |             R = R + 2;  |      2  |                         0  |
  1987  |  resetPlaceHolder_2();  |         |                            |
  1993  |             R = R + 2;  |      2  |                         0  |
  1998  |  resetPlaceHolder_2();  |         |                            |
  2004  |             R = R + 2;  |      2  |                         0  |
  2009  |  resetPlaceHolder_2();  |         |                            |
  2015  |             R = R + 2;  |      2  |                         0  |
  2020  |  resetPlaceHolder_2();  |         |                            |
  2026  |             R = R + 2;  |      2  |                         0  |
  2031  |  resetPlaceHolder_2();  |         |                            |
  2037  |             R = R + 2;  |      2  |                         0  |
  2042  |  resetPlaceHolder_2();  |         |                            |
  2048  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_2();  |         |                            |
  2059  |             R = R + 2;  |      2  |                         0  |
  2064  |  resetPlaceHolder_2();  |         |                            |
  2070  |             R = R + 2;  |      2  |                         0  |
  2075  |  resetPlaceHolder_2();  |         |                            |
  2081  |             R = R + 2;  |      2  |                         0  |
  2086  |  resetPlaceHolder_2();  |         |                            |
  2092  |             R = R + 2;  |      2  |                         0  |
  2097  |  resetPlaceHolder_2();  |         |                            |
  2103  |             R = R + 2;  |      2  |                         0  |
  2108  |  resetPlaceHolder_2();  |         |                            |
  2114  |             R = R + 2;  |      2  |                         0  |
  2119  |  resetPlaceHolder_2();  |         |                            |
  2125  |             R = R + 2;  |      2  |                         0  |
  2130  |  resetPlaceHolder_2();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2141  |  resetPlaceHolder_2();  |         |                            |
  2147  |             R = R + 2;  |      2  |                         0  |
  2152  |  resetPlaceHolder_2();  |         |                            |
  2158  |             R = R + 2;  |      2  |                         0  |
  2163  |  resetPlaceHolder_2();  |         |                            |
  2169  |             R = R + 2;  |      2  |                         0  |
  2174  |  resetPlaceHolder_2();  |         |                            |
  2180  |             R = R + 2;  |      2  |                         0  |
  2185  |  resetPlaceHolder_2();  |         |                            |
  2191  |             R = R + 2;  |      2  |                         0  |
  2196  |  resetPlaceHolder_2();  |         |                            |
  2202  |             R = R + 2;  |      2  |                         0  |
  2207  |  resetPlaceHolder_2();  |         |                            |
  2213  |             R = R + 2;  |      2  |                         0  |
  2218  |  resetPlaceHolder_2();  |         |                            |
  2224  |             R = R + 2;  |      2  |                         0  |
  2229  |  resetPlaceHolder_2();  |         |                            |
  2235  |             R = R + 2;  |      2  |                         0  |
  2240  |  resetPlaceHolder_2();  |         |                            |
  2246  |             R = R + 2;  |      2  |                         0  |
  2251  |  resetPlaceHolder_2();  |         |                            |
  2257  |             R = R + 2;  |      2  |                         0  |
  2262  |  resetPlaceHolder_2();  |         |                            |
  2268  |             R = R + 2;  |      2  |                         0  |
  2273  |  resetPlaceHolder_2();  |         |                            |
  2279  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_2();  |         |                            |
  2290  |             R = R + 2;  |      2  |                         0  |
  2295  |  resetPlaceHolder_2();  |         |                            |
  2301  |             R = R + 2;  |      2  |                         0  |
  2306  |  resetPlaceHolder_2();  |         |                            |
  2312  |             R = R + 2;  |      2  |                         0  |
  2317  |  resetPlaceHolder_2();  |         |                            |
  2323  |             R = R + 2;  |      2  |                         0  |
  2328  |  resetPlaceHolder_2();  |         |                            |
  2334  |             R = R + 2;  |      2  |                         0  |
  2339  |  resetPlaceHolder_2();  |         |                            |
  2345  |             R = R + 2;  |      2  |                         0  |
  2350  |  resetPlaceHolder_2();  |         |                            |
  2356  |             R = R + 1;  |      1  |                         0  |
  2361  |  resetPlaceHolder_1();  |         |                            |
  2375  |             R = R + 2;  |      2  |                         0  |
  2380  |  resetPlaceHolder_2();  |         |                            |
  2386  |             R = R + 2;  |      2  |                         0  |
  2391  |  resetPlaceHolder_2();  |         |                            |
  2397  |             R = R + 2;  |      2  |                         0  |
  2402  |  resetPlaceHolder_2();  |         |                            |
  2408  |             R = R + 2;  |      2  |                         0  |
  2413  |  resetPlaceHolder_2();  |         |                            |
  2419  |             R = R + 2;  |      2  |                         0  |
  2424  |  resetPlaceHolder_2();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2435  |  resetPlaceHolder_2();  |         |                            |
  2441  |             R = R + 2;  |      2  |                         0  |
  2446  |  resetPlaceHolder_2();  |         |                            |
  2452  |             R = R + 2;  |      2  |                         0  |
  2457  |  resetPlaceHolder_2();  |         |                            |
  2463  |             R = R + 2;  |      2  |                         0  |
  2468  |  resetPlaceHolder_2();  |         |                            |
  2474  |             R = R + 2;  |      2  |                         0  |
  2479  |  resetPlaceHolder_2();  |         |                            |
  2485  |             R = R + 2;  |      2  |                         0  |
  2490  |  resetPlaceHolder_2();  |         |                            |
  2496  |             R = R + 2;  |      2  |                         0  |
  2501  |  resetPlaceHolder_2();  |         |                            |
  2507  |             R = R + 2;  |      2  |                         0  |
  2512  |  resetPlaceHolder_2();  |         |                            |
  2518  |             R = R + 2;  |      2  |                         0  |
  2523  |  resetPlaceHolder_2();  |         |                            |
  2529  |             R = R + 2;  |      2  |                         0  |
  2534  |  resetPlaceHolder_2();  |         |                            |
  2540  |             R = R + 2;  |      2  |                         0  |
  2545  |  resetPlaceHolder_2();  |         |                            |
  2551  |             R = R + 2;  |      2  |                         0  |
  2556  |  resetPlaceHolder_2();  |         |                            |
  2562  |             R = R + 2;  |      2  |                         0  |
  2567  |  resetPlaceHolder_2();  |         |                            |
  2573  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_2();  |         |                            |
  2584  |             R = R + 2;  |      2  |                         0  |
  2589  |  resetPlaceHolder_2();  |         |                            |
  2595  |             R = R + 2;  |      2  |                         0  |
  2600  |  resetPlaceHolder_2();  |         |                            |
  2606  |             R = R + 2;  |      2  |                         0  |
  2611  |  resetPlaceHolder_2();  |         |                            |
  2617  |             R = R + 2;  |      2  |                         0  |
  2622  |  resetPlaceHolder_2();  |         |                            |
  2628  |             R = R + 2;  |      2  |                         0  |
  2633  |  resetPlaceHolder_2();  |         |                            |
  2639  |             R = R + 2;  |      2  |                         0  |
  2644  |  resetPlaceHolder_2();  |         |                            |
  2650  |             R = R + 2;  |      2  |                         0  |
  2655  |  resetPlaceHolder_2();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2666  |  resetPlaceHolder_2();  |         |                            |
  2672  |             R = R + 2;  |      2  |                         0  |
  2677  |  resetPlaceHolder_2();  |         |                            |
  2683  |             R = R + 2;  |      2  |                         0  |
  2688  |  resetPlaceHolder_2();  |         |                            |
  2694  |             R = R + 2;  |      2  |                         0  |
  2699  |  resetPlaceHolder_2();  |         |                            |
  2705  |             R = R + 2;  |      2  |                         0  |
  2710  |  resetPlaceHolder_2();  |         |                            |
  2716  |             R = R + 2;  |      2  |                         0  |
  2721  |  resetPlaceHolder_2();  |         |                            |
  2727  |             R = R + 2;  |      2  |                         0  |
  2732  |  resetPlaceHolder_2();  |         |                            |
  2738  |             R = R + 2;  |      2  |                         0  |
  2743  |  resetPlaceHolder_2();  |         |                            |
  2749  |             R = R + 2;  |      2  |                         0  |
  2754  |  resetPlaceHolder_2();  |         |                            |
  2760  |             R = R + 2;  |      2  |                         0  |
  2765  |  resetPlaceHolder_2();  |         |                            |
  2771  |             R = R + 2;  |      2  |                         0  |
  2776  |  resetPlaceHolder_2();  |         |                            |
  2782  |             R = R + 2;  |      2  |                         0  |
  2787  |  resetPlaceHolder_2();  |         |                            |
  2793  |             R = R + 2;  |      2  |                         0  |
  2798  |  resetPlaceHolder_2();  |         |                            |
  2804  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_2();  |         |                            |
  2815  |             R = R + 2;  |      2  |                         0  |
  2820  |  resetPlaceHolder_2();  |         |                            |
  2826  |             R = R + 2;  |      2  |                         0  |
  2831  |  resetPlaceHolder_2();  |         |                            |
  2837  |             R = R + 2;  |      2  |                         0  |
  2842  |  resetPlaceHolder_2();  |         |                            |
  2848  |             R = R + 2;  |      2  |                         0  |
  2853  |  resetPlaceHolder_2();  |         |                            |
  2859  |             R = R + 2;  |      2  |                         0  |
  2864  |  resetPlaceHolder_2();  |         |                            |
  2870  |             R = R + 2;  |      2  |                         0  |
  2875  |  resetPlaceHolder_2();  |         |                            |
  2881  |             R = R + 2;  |      2  |                         0  |
  2886  |  resetPlaceHolder_2();  |         |                            |
  2892  |             R = R + 2;  |      2  |                         0  |
  2897  |  resetPlaceHolder_2();  |         |                            |
  2903  |             R = R + 2;  |      2  |                         0  |
  2908  |  resetPlaceHolder_2();  |         |                            |
  2914  |             R = R + 2;  |      2  |                         0  |
  2919  |  resetPlaceHolder_2();  |         |                            |
  2925  |             R = R + 2;  |      2  |                         0  |
  2930  |  resetPlaceHolder_2();  |         |                            |
  2936  |             R = R + 2;  |      2  |                         0  |
  2941  |  resetPlaceHolder_2();  |         |                            |
  2947  |             R = R + 2;  |      2  |                         0  |
  2952  |  resetPlaceHolder_2();  |         |                            |
  2958  |             R = R + 2;  |      2  |                         0  |
  2963  |  resetPlaceHolder_2();  |         |                            |
  2969  |             R = R + 2;  |      2  |                         0  |
  2974  |  resetPlaceHolder_2();  |         |                            |
  2980  |             R = R + 2;  |      2  |                         0  |
  2985  |  resetPlaceHolder_2();  |         |                            |
  2991  |             R = R + 2;  |      2  |                         0  |
  2996  |  resetPlaceHolder_2();  |         |                            |
  3002  |             R = R + 2;  |      2  |                         0  |
  3007  |  resetPlaceHolder_2();  |         |                            |
  3013  |             R = R + 2;  |      2  |                         0  |
  3018  |  resetPlaceHolder_2();  |         |                            |
  3024  |             R = R + 2;  |      2  |                         0  |
  3029  |  resetPlaceHolder_2();  |         |                            |
  3035  |             R = R + 2;  |      2  |                         0  |
  3040  |  resetPlaceHolder_2();  |         |                            |
  3046  |             R = R + 2;  |      2  |                         0  |
  3051  |  resetPlaceHolder_2();  |         |                            |
  3057  |             R = R + 2;  |      2  |                         0  |
  3062  |  resetPlaceHolder_2();  |         |                            |
  3068  |             R = R + 2;  |      2  |                         0  |
  3073  |  resetPlaceHolder_2();  |         |                            |
  3079  |             R = R + 2;  |      2  |                         0  |
  3084  |  resetPlaceHolder_2();  |         |                            |
  3090  |             R = R + 2;  |      2  |                         0  |
  3095  |  resetPlaceHolder_2();  |         |                            |
  3101  |             R = R + 2;  |      2  |                         0  |
  3106  |  resetPlaceHolder_2();  |         |                            |
  3112  |             R = R + 2;  |      2  |                         0  |
  3117  |  resetPlaceHolder_2();  |         |                            |
  3123  |             R = R + 2;  |      2  |                         0  |
  3128  |  resetPlaceHolder_2();  |         |                            |
  3134  |             R = R + 2;  |      2  |                         0  |
  3139  |  resetPlaceHolder_2();  |         |                            |
  3145  |             R = R + 2;  |      2  |                         0  |
  3150  |  resetPlaceHolder_2();  |         |                            |
  3156  |             R = R + 2;  |      2  |                         0  |
  3161  |  resetPlaceHolder_2();  |         |                            |
  3167  |             R = R + 2;  |      2  |                         0  |
  3172  |  resetPlaceHolder_2();  |         |                            |
  3178  |             R = R + 2;  |      2  |                         0  |
  3183  |  resetPlaceHolder_2();  |         |                            |
  3189  |             R = R + 2;  |      2  |                         0  |
  3194  |  resetPlaceHolder_2();  |         |                            |
  3200  |             R = R + 2;  |      2  |                         0  |
  3205  |  resetPlaceHolder_2();  |         |                            |
  3211  |             R = R + 2;  |      2  |                         0  |
  3216  |  resetPlaceHolder_2();  |         |                            |
  3222  |             R = R + 2;  |      2  |                         0  |
  3227  |  resetPlaceHolder_2();  |         |                            |
  3233  |             R = R + 2;  |      2  |                         0  |
  3238  |  resetPlaceHolder_2();  |         |                            |
  3244  |             R = R + 2;  |      2  |                         0  |
  3249  |  resetPlaceHolder_2();  |         |                            |
  3255  |             R = R + 2;  |      2  |                         0  |
  3260  |  resetPlaceHolder_2();  |         |                            |
  3266  |             R = R + 2;  |      2  |                         0  |
  3271  |  resetPlaceHolder_2();  |         |                            |
  3277  |             R = R + 2;  |      2  |                         0  |
  3282  |  resetPlaceHolder_2();  |         |                            |
  3288  |             R = R + 2;  |      2  |                         0  |
  3293  |  resetPlaceHolder_2();  |         |                            |
  3299  |             R = R + 2;  |      2  |                         0  |
  3304  |  resetPlaceHolder_2();  |         |                            |
  3310  |             R = R + 2;  |      2  |                         0  |
  3315  |  resetPlaceHolder_2();  |         |                            |
  3321  |             R = R + 1;  |      1  |                         0  |
  3326  |  resetPlaceHolder_1();  |         |                            |
  3340  |             R = R + 2;  |      2  |                         0  |
  3345  |  resetPlaceHolder_2();  |         |                            |
  3351  |             R = R + 2;  |      2  |                         0  |
  3356  |  resetPlaceHolder_2();  |         |                            |
  3362  |             R = R + 2;  |      2  |                         0  |
  3367  |  resetPlaceHolder_2();  |         |                            |
  3373  |             R = R + 2;  |      2  |                         0  |
  3378  |  resetPlaceHolder_2();  |         |                            |
  3384  |             R = R + 2;  |      2  |                         0  |
  3389  |  resetPlaceHolder_2();  |         |                            |
  3395  |             R = R + 2;  |      2  |                         0  |
  3400  |  resetPlaceHolder_2();  |         |                            |
  3406  |             R = R + 2;  |      2  |                         0  |
  3411  |  resetPlaceHolder_2();  |         |                            |
  3417  |             R = R + 2;  |      2  |                         0  |
  3422  |  resetPlaceHolder_2();  |         |                            |
  3428  |             R = R + 1;  |      1  |                         0  |
  3433  |  resetPlaceHolder_1();  |         |                            |
  3447  |             R = R + 2;  |      2  |                         0  |
  3452  |  resetPlaceHolder_2();  |         |                            |
  3458  |             R = R + 2;  |      2  |                         0  |
  3463  |  resetPlaceHolder_2();  |         |                            |
  3469  |             R = R + 2;  |      2  |                         0  |
  3474  |  resetPlaceHolder_2();  |         |                            |
  3480  |             R = R + 2;  |      2  |                         0  |
  3485  |  resetPlaceHolder_2();  |         |                            |
  3491  |             R = R + 2;  |      2  |                         0  |
  3496  |  resetPlaceHolder_2();  |         |                            |
  3502  |             R = R + 2;  |      2  |                         0  |
  3507  |  resetPlaceHolder_2();  |         |                            |
  3513  |             R = R + 2;  |      2  |                         0  |
  3518  |  resetPlaceHolder_2();  |         |                            |
  3524  |             R = R + 2;  |      2  |                         0  |
  3529  |  resetPlaceHolder_2();  |         |                            |
  3535  |             R = R + 2;  |      2  |                         0  |
  3540  |  resetPlaceHolder_2();  |         |                            |
  3546  |             R = R + 2;  |      2  |                         0  |
  3551  |  resetPlaceHolder_2();  |         |                            |
  3557  |             R = R + 2;  |      2  |                         0  |
  3562  |  resetPlaceHolder_2();  |         |                            |
  3568  |             R = R + 2;  |      2  |                         0  |
  3573  |  resetPlaceHolder_2();  |         |                            |
  3579  |             R = R + 2;  |      2  |                         0  |
  3584  |  resetPlaceHolder_2();  |         |                            |
  3590  |             R = R + 2;  |      2  |                         0  |
  3595  |  resetPlaceHolder_2();  |         |                            |
  3601  |             R = R + 2;  |      2  |                         0  |
  3606  |  resetPlaceHolder_2();  |         |                            |
  3612  |             R = R + 2;  |      2  |                         0  |
  3617  |  resetPlaceHolder_2();  |         |                            |
  3623  |             R = R + 2;  |      2  |                         0  |
  3628  |  resetPlaceHolder_2();  |         |                            |
  3634  |             R = R + 2;  |      2  |                         0  |
  3639  |  resetPlaceHolder_2();  |         |                            |
  3645  |             R = R + 2;  |      2  |                         0  |
  3650  |  resetPlaceHolder_2();  |         |                            |
  3656  |             R = R + 2;  |      2  |                         0  |
  3661  |  resetPlaceHolder_2();  |         |                            |
  3667  |             R = R + 2;  |      2  |                         0  |
  3672  |  resetPlaceHolder_2();  |         |                            |
  3678  |             R = R + 2;  |      2  |                         0  |
  3683  |  resetPlaceHolder_2();  |         |                            |
  3689  |             R = R + 2;  |      2  |                         0  |
  3694  |  resetPlaceHolder_2();  |         |                            |
  3700  |             R = R + 2;  |      2  |                         0  |
  3705  |  resetPlaceHolder_2();  |         |                            |
  3711  |             R = R + 2;  |      2  |                         0  |
  3716  |  resetPlaceHolder_2();  |         |                            |
  3722  |             R = R + 2;  |      2  |                         0  |
  3727  |  resetPlaceHolder_2();  |         |                            |
  3733  |             R = R + 2;  |      2  |                         0  |
  3738  |  resetPlaceHolder_2();  |         |                            |
  3744  |             R = R + 2;  |      2  |                         0  |
  3749  |  resetPlaceHolder_2();  |         |                            |
  3755  |             R = R + 2;  |      2  |                         0  |
  3760  |  resetPlaceHolder_2();  |         |                            |
  3766  |             R = R + 2;  |      2  |                         0  |
  3771  |  resetPlaceHolder_2();  |         |                            |
  3777  |             R = R + 2;  |      2  |                         0  |
  3782  |  resetPlaceHolder_2();  |         |                            |
  3788  |             R = R + 2;  |      2  |                         0  |
  3793  |  resetPlaceHolder_2();  |         |                            |
  3799  |             R = R + 2;  |      2  |                         0  |
  3804  |  resetPlaceHolder_2();  |         |                            |
  3810  |             R = R + 2;  |      2  |                         0  |
  3815  |  resetPlaceHolder_2();  |         |                            |
  3821  |             R = R + 2;  |      2  |                         0  |
  3826  |  resetPlaceHolder_2();  |         |                            |
  3832  |             R = R + 2;  |      2  |                         0  |
  3837  |  resetPlaceHolder_2();  |         |                            |
  3843  |             R = R + 2;  |      2  |                         0  |
  3848  |  resetPlaceHolder_2();  |         |                            |
  3854  |             R = R + 2;  |      2  |                         0  |
  3859  |  resetPlaceHolder_2();  |         |                            |
  3865  |             R = R + 2;  |      2  |                         0  |
  3870  |  resetPlaceHolder_2();  |         |                            |
  3876  |             R = R + 2;  |      2  |                         0  |
  3881  |  resetPlaceHolder_2();  |         |                            |
  3887  |             R = R + 2;  |      2  |                         0  |
  3892  |  resetPlaceHolder_2();  |         |                            |
  3898  |             R = R + 2;  |      2  |                         0  |
  3903  |  resetPlaceHolder_2();  |         |                            |
  3909  |             R = R + 2;  |      2  |                         0  |
  3914  |  resetPlaceHolder_2();  |         |                            |
  3920  |             R = R + 2;  |      2  |                         0  |
  3925  |  resetPlaceHolder_2();  |         |                            |
  3931  |             R = R + 2;  |      2  |                         0  |
  3936  |  resetPlaceHolder_2();  |         |                            |
  3942  |             R = R + 2;  |      2  |                         0  |
  3947  |  resetPlaceHolder_2();  |         |                            |
  3953  |             R = R + 2;  |      2  |                         0  |
  3958  |  resetPlaceHolder_2();  |         |                            |
  3964  |             R = R + 2;  |      2  |                         0  |
  3969  |  resetPlaceHolder_2();  |         |                            |
  3975  |             R = R + 2;  |      2  |                         0  |
  3980  |  resetPlaceHolder_2();  |         |                            |
  3986  |             R = R + 2;  |      2  |                         0  |
  3991  |  resetPlaceHolder_2();  |         |                            |
  3997  |             R = R + 2;  |      2  |                         0  |
  4002  |  resetPlaceHolder_2();  |         |                            |
  4008  |             R = R + 2;  |      2  |                         0  |
  4013  |  resetPlaceHolder_2();  |         |                            |
  4019  |             R = R + 2;  |      2  |                         0  |
  4024  |  resetPlaceHolder_2();  |         |                            |
  4030  |             R = R + 2;  |      2  |                         0  |
  4035  |  resetPlaceHolder_2();  |         |                            |
  4041  |             R = R + 2;  |      2  |                         0  |
  4046  |  resetPlaceHolder_2();  |         |                            |
  4052  |             R = R + 2;  |      2  |                         0  |
  4057  |  resetPlaceHolder_2();  |         |                            |
  4063  |             R = R + 2;  |      2  |                         0  |
  4068  |  resetPlaceHolder_2();  |         |                            |
  4074  |             R = R + 2;  |      2  |                         0  |
  4079  |  resetPlaceHolder_2();  |         |                            |
  4085  |             R = R + 2;  |      2  |                         0  |
  4090  |  resetPlaceHolder_2();  |         |                            |
  4096  |             R = R + 2;  |      2  |                         0  |
  4101  |  resetPlaceHolder_2();  |         |                            |
  4107  |             R = R + 2;  |      2  |                         0  |
  4112  |  resetPlaceHolder_2();  |         |                            |
  4118  |             R = R + 2;  |      2  |                         0  |
  4123  |  resetPlaceHolder_2();  |         |                            |
  4129  |             R = R + 2;  |      2  |                         0  |
  4134  |  resetPlaceHolder_2();  |         |                            |
  4140  |             R = R + 2;  |      2  |                         0  |
  4145  |  resetPlaceHolder_2();  |         |                            |
  4151  |             R = R + 2;  |      2  |                         0  |
  4156  |  resetPlaceHolder_2();  |         |                            |
  4162  |             R = R + 2;  |      2  |                         0  |
  4167  |  resetPlaceHolder_2();  |         |                            |
  4173  |             R = R + 2;  |      2  |                         0  |
  4178  |  resetPlaceHolder_2();  |         |                            |
  4184  |             R = R + 2;  |      2  |                         0  |
  4189  |  resetPlaceHolder_2();  |         |                            |
  4195  |             R = R + 2;  |      2  |                         0  |
  4200  |  resetPlaceHolder_2();  |         |                            |
  4206  |             R = R + 2;  |      2  |                         0  |
  4211  |  resetPlaceHolder_2();  |         |                            |
  4217  |             R = R + 2;  |      2  |                         0  |
  4222  |  resetPlaceHolder_2();  |         |                            |
  4228  |             R = R + 2;  |      2  |                         0  |
  4233  |  resetPlaceHolder_2();  |         |                            |
  4239  |             R = R + 2;  |      2  |                         0  |
  4244  |  resetPlaceHolder_2();  |         |                            |
  4250  |             R = R + 2;  |      2  |                         0  |
  4255  |  resetPlaceHolder_2();  |         |                            |
  4261  |             R = R + 2;  |      2  |                         0  |
  4266  |  resetPlaceHolder_2();  |         |                            |
  4272  |             R = R + 2;  |      2  |                         0  |
  4277  |  resetPlaceHolder_2();  |         |                            |
  4283  |             R = R + 2;  |      2  |                         0  |
  4288  |  resetPlaceHolder_2();  |         |                            |
  4294  |             R = R + 2;  |      2  |                         0  |
  4299  |  resetPlaceHolder_2();  |         |                            |
  4305  |             R = R + 2;  |      2  |                         0  |
  4310  |  resetPlaceHolder_2();  |         |                            |
  4316  |             R = R + 2;  |      2  |                         0  |
  4321  |  resetPlaceHolder_2();  |         |                            |
  4327  |             R = R + 2;  |      2  |                         0  |
  4332  |  resetPlaceHolder_2();  |         |                            |
  4338  |             R = R + 2;  |      2  |                         0  |
  4343  |  resetPlaceHolder_2();  |         |                            |
  4349  |             R = R + 2;  |      2  |                         0  |
  4354  |  resetPlaceHolder_2();  |         |                            |
  4360  |             R = R + 2;  |      2  |                         0  |
  4365  |  resetPlaceHolder_2();  |         |                            |
  4371  |             R = R + 2;  |      2  |                         0  |
  4376  |  resetPlaceHolder_2();  |         |                            |
  4382  |             R = R + 2;  |      2  |                         0  |
  4387  |  resetPlaceHolder_2();  |         |                            |
  4393  |             R = R + 2;  |      2  |                         0  |
  4398  |  resetPlaceHolder_2();  |         |                            |
  4404  |             R = R + 2;  |      2  |                         0  |
  4409  |  resetPlaceHolder_2();  |         |                            |
  4415  |             R = R + 2;  |      2  |                         0  |
  4420  |  resetPlaceHolder_2();  |         |                            |
  4426  |             R = R + 2;  |      2  |                         0  |
  4431  |  resetPlaceHolder_2();  |         |                            |
  4437  |             R = R + 2;  |      2  |                         0  |
  4442  |  resetPlaceHolder_2();  |         |                            |
  4448  |             R = R + 2;  |      2  |                         0  |
  4453  |  resetPlaceHolder_2();  |         |                            |
  4459  |             R = R + 2;  |      2  |                         0  |
  4464  |  resetPlaceHolder_2();  |         |                            |
  4470  |             R = R + 2;  |      2  |                         0  |
  4475  |  resetPlaceHolder_2();  |         |                            |
  4481  |             R = R + 2;  |      2  |                         0  |
  4486  |  resetPlaceHolder_2();  |         |                            |
  4492  |             R = R + 2;  |      2  |                         0  |
  4497  |  resetPlaceHolder_2();  |         |                            |
  4503  |             R = R + 2;  |      2  |                         0  |
  4508  |  resetPlaceHolder_2();  |         |                            |
  4514  |             R = R + 2;  |      2  |                         0  |
  4519  |  resetPlaceHolder_2();  |         |                            |
  4525  |             R = R + 1;  |      1  |                         0  |
  4530  |  resetPlaceHolder_1();  |         |                            |
  4544  |             R = R + 2;  |      2  |                         0  |
  4549  |  resetPlaceHolder_2();  |         |                            |
  4555  |             R = R + 2;  |      2  |                         0  |
  4560  |  resetPlaceHolder_2();  |         |                            |
  4566  |             R = R + 2;  |      2  |                         0  |
  4571  |  resetPlaceHolder_2();  |         |                            |
  4577  |             R = R + 2;  |      2  |                         0  |
  4582  |  resetPlaceHolder_2();  |         |                            |
  4588  |             R = R + 2;  |      2  |                         0  |
  4593  |  resetPlaceHolder_2();  |         |                            |
  4599  |             R = R + 1;  |      1  |                         0  |
  4604  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 14:31:15,296 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:31:29,081 INFO     Done. Execution time: 13.78438687324524 seconds
2023-01-31 14:31:29,081 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `11.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1431-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1431-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.774s
user	0m30.476s
sys	0m3.174s

2023-01-31 14:31:29,082 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 14:31:29,082 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`
2023-01-31 14:31:31,447 INFO     Done. Execution time: 2.36493182182312 seconds
2023-01-31 14:31:31,448 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 14:31:31,448 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 14:31:31,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 14:31:33,733 INFO     Done. Execution time: 2.2848265171051025 seconds
2023-01-31 14:31:33,733 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 14:31:33,734 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:31:35,000 INFO     Done. Execution time: 1.2662277221679688 seconds
2023-01-31 14:31:35,000 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.258s
user	0m2.063s
sys	0m0.122s

2023-01-31 14:31:35,001 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 14:31:35,001 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-48/seeds`

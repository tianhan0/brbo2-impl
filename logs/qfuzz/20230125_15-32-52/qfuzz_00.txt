2023-01-25 16:32:20,276 INFO     Arguments:
2023-01-25 16:32:20,276 INFO     timeout	60
2023-01-25 16:32:20,276 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 16:32:20,276 INFO     samples	0
2023-01-25 16:32:20,276 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 16:32:20,276 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 16:32:20,276 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 16:32:20,276 INFO     dry	False
2023-01-25 16:32:20,276 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/qfuzz_00.txt
2023-01-25 16:32:20,276 INFO     mode	qfuzz
2023-01-25 16:32:20,276 INFO     version	master
2023-01-25 16:32:20,276 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
2023-01-25 16:32:20,276 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 16:32:20,281 INFO     Done. Execution time: 0.004448413848876953 seconds
2023-01-25 16:32:20,281 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "6bde4308800a2dc12b49740360e3e42b476885fe"`
2023-01-25 16:32:20,286 INFO     Done. Execution time: 0.004466533660888672 seconds
2023-01-25 16:32:20,286 INFO     Build a new version: "6bde4308800a2dc12b49740360e3e42b476885fe"
2023-01-25 16:32:20,286 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 16:32:31,924 INFO     Done. Execution time: 11.637584447860718 seconds
2023-01-25 16:32:31,924 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 9 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 4 s, completed Jan 25, 2023 4:32:31 PM

2023-01-25 16:32:31,929 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 16:32:31,929 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:33:37,934 INFO     Done. Execution time: 66.00528264045715 seconds
2023-01-25 16:33:37,935 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3512206503968108702/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3512206503968108702/bin -o /tmp/qfuzz3512206503968108702/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3512206503968108702/bin
Found file /tmp/qfuzz3512206503968108702/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3512206503968108702/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3512206503968108702/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3512206503968108702/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3512206503968108702/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz3512206503968108702/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 136721 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 197.00; [639.00,3602.00,3799.00]
2; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 3; 537.00; [102.00,639.00,1199.00]
3; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 1360.00; [339.00,1699.00,3602.00]
4; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 3; 197.00; [919.00,3602.00,3799.00]
8; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 503.00; [519.00,1022.00,3679.00]
10; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 3; 360.00; [639.00,999.00,3342.00]
12; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 200.00; [3019.00,3219.00,3762.00]
14; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 3; 1383.00; [99.00,2219.00,3602.00]
16; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 3; 83.00; [639.00,3799.00,3882.00]
34; /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 3; 1823.00; [19.00,2159.00,3982.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 131, 107)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 9, 189, 99, 31, 43, 15, 140, 56, 182, 184, 184, 28, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 4, 99, 110, 110, 110, 110, 110, 110, 110, 110, 110, 179, 46, 198, 159, 6, 45, 46, 115, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 126, 160, 141, 150, 44, 42, 67, 126, 124, 160, 135, 116, 68, 160, 141, 150, 44, 42, 67, 126, 124, 160, 135, 116, 68, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 98, 49, 99, 31, 43, 15, 167, 56, 150, 114, 67, 197, 199, 88, 198, 159, 172, 129, 41, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 5, 183, 198, 25, 172, 136, 100, 48, 200, 29, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 45, 38, 34, 12, 67, 197, 199, 46, 198, 159, 172, 136, 198, 48, 42, 53, 135, 156, 144, 84, 151, 11, 131, 187, 66, 147, 77, 109, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 23, 16, 62, 84, 191, 4, 31, 4, 23, 16, 62, 84, 191, 4, 4, 4, 31, 131, 62, 95, 63, 4, 4, 4, 4, 182)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 59, 4, 31, 133, 39, 78, 85, 4, 31, 133, 177, 78, 85, 8, 14, 12, 140, 63, 159, 77, 159, 5, 4, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3512206503968108702/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198,131,107]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,9,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,4,99,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,126,160,141,150]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [166,98,49,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,5,183,198,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,45]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,23,16,62,84]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,59,4,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.998s
user	0m26.050s
sys	0m1.870s

2023-01-25 16:33:37,935 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 16:33:37,935 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 16:33:43,718 INFO     Done. Execution time: 5.782627105712891 seconds
2023-01-25 16:33:43,718 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198,131,107])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,9,189,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,4,99,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,126,160,141,150])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([166,98,49,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,5,183,198,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,45])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,23,16,62,84])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,59,4,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |      text       |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [198,131,107]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [198,131,107]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [198,131,107]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [198,131,107]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [198,131,107]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [198,131,107]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [198,131,107]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    198  |  0  |    0  |  [198,131,107]  |
    24  |                     R = R + chunk;  |    198  |  198  |    198  |  0  |    0  |  [198,131,107]  |
    28  |                         i = i + 1;  |         |  198  |    198  |  1  |    0  |  [198,131,107]  |
    36  |          tag = arrayRead(text, i);  |         |  198  |    198  |  1  |  131  |  [198,131,107]  |
    40  |                         i = i + 1;  |         |  198  |    198  |  2  |  131  |  [198,131,107]  |
    43  |        chunk = arrayRead(text, i);  |         |  198  |    107  |  2  |  131  |  [198,131,107]  |
    46  |                     R = R + chunk;  |    107  |  305  |    107  |  2  |  131  |  [198,131,107]  |
    50  |                         i = i + 1;  |         |  305  |    107  |  3  |  131  |  [198,131,107]  |
    51  |              resetPlaceHolder_1();  |         |  305  |    107  |  3  |  131  |  [198,131,107]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    198  |                         0  |
    46  |         R = R + chunk;  |    107  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m5.774s
user	0m10.269s
sys	0m1.773s

2023-01-25 16:33:43,718 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:33:52,189 INFO     Done. Execution time: 8.47020411491394 seconds
2023-01-25 16:33:52,189 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1633-transparentAmortize-60s-mostPrecise/stac-raw-0125-1633-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.463s
user	0m19.408s
sys	0m2.042s

2023-01-25 16:33:52,189 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 16:33:52,189 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:34:58,416 INFO     Done. Execution time: 66.2266800403595 seconds
2023-01-25 16:34:58,416 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz6304057884959508551/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6304057884959508551/bin -o /tmp/qfuzz6304057884959508551/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6304057884959508551/bin
Found file /tmp/qfuzz6304057884959508551/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz6304057884959508551/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6304057884959508551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6304057884959508551/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6304057884959508551/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz6304057884959508551/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 54, exec speed = 153086 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m54 to 54 bits (average: 54.00 bits)
[1;90m        Exec timing : [0m153k to 153k us (average: 153k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 12.00; [313.00,639.00,3593.00,3605.00,3799.00]
2; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 5; 12.00; [313.00,639.00,3593.00,3605.00,3799.00]
4; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 5; 12.00; [639.00,1399.00,2473.00,3593.00,3605.00]
7; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 6.00; [1273.00,3253.00,3259.00,3265.00]
11; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 5; 12.00; [639.00,2773.00,3593.00,3605.00,3799.00]
12; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 5; 12.00; [1553.00,3379.00,3593.00,3605.00,3799.00]
13; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 5; 12.00; [1699.00,2673.00,3139.00,3593.00,3605.00]
20; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 5; 12.00; [313.00,2379.00,3593.00,3605.00,3799.00]
26; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 5; 6.00; [999.00,3453.00,3593.00,3599.00,3605.00]
36; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 5; 12.00; [93.00,199.00,1553.00,1565.00,2859.00]
59; /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 5; 12.00; [1293.00,1305.00,1959.00,2133.00,3979.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 152, 198, 69, 97, 12, 106, 30, 195)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 76, 9, 41, 142, 83, 4, 9, 56, 113, 19, 80, 69, 171, 47, 143, 117, 68, 83, 83, 141, 8, 83, 23, 4, 95)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 49, 99, 179, 43, 172, 6, 189, 82, 126, 49, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 45, 118, 43, 15, 197, 158, 118, 43, 15, 167, 56, 119, 12, 67, 197, 199, 46, 198, 45, 46, 193, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 5, 156, 144, 84, 5, 133, 132, 187, 66, 76, 5, 85, 108, 132, 187, 66, 147, 77, 88, 45, 137, 20, 186, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 168, 147, 77, 115, 94, 73, 160, 141, 150, 159, 172, 136, 158, 48, 88, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 166, 31, 43, 138, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(162, 162, 162, 162, 162, 162, 63, 133, 162, 162, 162, 162, 152, 84, 61, 51, 95, 75, 122, 53, 87, 117, 4, 177, 39, 119, 155, 84, 188, 188, 102, 102, 102, 102, 102, 102, 102, 102, 167, 188, 188, 188, 188, 188, 20, 92, 71, 132, 162, 53, 30, 79, 84, 145, 20, 153, 71, 95, 194, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 69, 38, 31, 43, 123, 126, 12, 67, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 124, 15, 167, 4, 20, 12, 83, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6304057884959508551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,152,198,69,97], 2, 106
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [77,76,9,41,142], 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,49,99,179], 2, 172
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,45,118], 2, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,5,156,144,84], 2, 133
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,168], 2, 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,166,31], 2, 138
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [162,162,162,162,162], 2, 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,69,38,31], 2, 123
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 2, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 2, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.219s
user	0m28.939s
sys	0m1.782s

2023-01-25 16:34:58,417 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 16:34:58,417 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 16:35:10,438 INFO     Done. Execution time: 12.02082872390747 seconds
2023-01-25 16:35:10,438 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,152,198,69,97], 2, 106)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([77,76,9,41,142], 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,49,99,179], 2, 172)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,45,118], 2, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,5,156,144,84], 2, 133)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,168], 2, 77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,166,31], 2, 138)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([162,162,162,162,162], 2, 63)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,69,38,31], 2, 123)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 2, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 2, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text         |
---------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |        106  |       |           2  |  [64,152,198,69,97]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |        106  |       |           2  |  [64,152,198,69,97]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |        106  |       |           2  |  [64,152,198,69,97]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |        106  |       |           2  |  [64,152,198,69,97]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |        106  |       |           2  |  [64,152,198,69,97]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |        106  |       |           2  |  [64,152,198,69,97]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |        106  |       |           2  |  [64,152,198,69,97]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |        106  |    0  |           2  |  [64,152,198,69,97]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |        106  |    0  |           2  |  [64,152,198,69,97]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |     64  |  0  |  0  |        106  |    0  |           2  |  [64,152,198,69,97]  |
    47  |                     R = R + chunk;  |     64  |   64  |     64  |  0  |  0  |        106  |    0  |           2  |  [64,152,198,69,97]  |
    51  |                         j = j + 1;  |         |   64  |     64  |  0  |  1  |        106  |    0  |           2  |  [64,152,198,69,97]  |
    59  |          tag = arrayRead(text, j);  |         |   64  |     64  |  0  |  1  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    63  |                         j = j + 1;  |         |   64  |     64  |  0  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    66  |        chunk = arrayRead(text, j);  |         |   64  |    198  |  0  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    69  |                     R = R + chunk;  |    198  |  262  |    198  |  0  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    73  |                         j = j + 1;  |         |  262  |    198  |  0  |  3  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    74  |              resetPlaceHolder_2();  |         |  262  |    198  |  0  |  3  |        106  |  152  |           2  |  [64,152,198,69,97]  |
    82  |          tag = arrayRead(text, j);  |         |  262  |    198  |  0  |  3  |        106  |   69  |           2  |  [64,152,198,69,97]  |
    86  |                         j = j + 1;  |         |  262  |    198  |  0  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
    89  |        chunk = arrayRead(text, j);  |         |  262  |     97  |  0  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
    92  |                     R = R + chunk;  |     97  |  359  |     97  |  0  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
    96  |                         j = j + 1;  |         |  359  |     97  |  0  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
    97  |              resetPlaceHolder_2();  |         |  359  |     97  |  0  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   106  |                         i = i + 1;  |         |  359  |     97  |  1  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   109  |                 R = R + separator;  |    106  |  465  |     97  |  1  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   110  |              resetPlaceHolder_1();  |         |  465  |     97  |  1  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   115  |                             j = 0;  |         |  465  |     97  |  1  |  0  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   118  |        chunk = arrayRead(text, j);  |         |  465  |     64  |  1  |  0  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   121  |                     R = R + chunk;  |     64  |  529  |     64  |  1  |  0  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   125  |                         j = j + 1;  |         |  529  |     64  |  1  |  1  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   133  |          tag = arrayRead(text, j);  |         |  529  |     64  |  1  |  1  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   137  |                         j = j + 1;  |         |  529  |     64  |  1  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   140  |        chunk = arrayRead(text, j);  |         |  529  |    198  |  1  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   143  |                     R = R + chunk;  |    198  |  727  |    198  |  1  |  2  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   147  |                         j = j + 1;  |         |  727  |    198  |  1  |  3  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   148  |              resetPlaceHolder_2();  |         |  727  |    198  |  1  |  3  |        106  |  152  |           2  |  [64,152,198,69,97]  |
   156  |          tag = arrayRead(text, j);  |         |  727  |    198  |  1  |  3  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   160  |                         j = j + 1;  |         |  727  |    198  |  1  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   163  |        chunk = arrayRead(text, j);  |         |  727  |     97  |  1  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   166  |                     R = R + chunk;  |     97  |  824  |     97  |  1  |  4  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   170  |                         j = j + 1;  |         |  824  |     97  |  1  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   171  |              resetPlaceHolder_2();  |         |  824  |     97  |  1  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   180  |                         i = i + 1;  |         |  824  |     97  |  2  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   183  |                 R = R + separator;  |    106  |  930  |     97  |  2  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
   184  |              resetPlaceHolder_1();  |         |  930  |     97  |  2  |  5  |        106  |   69  |           2  |  [64,152,198,69,97]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     64  |                            |
    69  |         R = R + chunk;  |    198  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     97  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    106  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     64  |                            |
   143  |         R = R + chunk;  |    198  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     97  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    106  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     64  |                         0  |
    69  |         R = R + chunk;  |    198  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     97  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    106  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     64  |                         1  |
   143  |         R = R + chunk;  |    198  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     97  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    106  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |     64  |                            |                         0  |
    69  |         R = R + chunk;  |    198  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |     97  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    106  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |     64  |                            |                         1  |
   143  |         R = R + chunk;  |    198  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |     97  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    106  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m12.012s
user	0m21.338s
sys	0m5.325s

2023-01-25 16:35:10,438 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:36:33,845 INFO     Done. Execution time: 83.40684747695923 seconds
2023-01-25 16:36:33,846 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `81.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1635-transparentAmortize-60s-mostPrecise/stac-raw-0125-1635-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m23.399s
user	3m35.339s
sys	0m14.087s

2023-01-25 16:36:33,846 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 16:36:33,846 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:37:39,995 INFO     Done. Execution time: 66.1485288143158 seconds
2023-01-25 16:37:39,995 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz5107031942218603069/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5107031942218603069/bin -o /tmp/qfuzz5107031942218603069/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5107031942218603069/bin
Found file /tmp/qfuzz5107031942218603069/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz5107031942218603069/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5107031942218603069/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5107031942218603069/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5107031942218603069/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5107031942218603069/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 63, exec speed = 157293 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m157k to 157k us (average: 157k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 12.00; [313.00,639.00,3348.00,3593.00,3605.00,3799.00]
2; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 6; 12.00; [2233.00,2245.00,2408.00,2719.00,2753.00,3679.00]
4; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 12.00; [88.00,2519.00,2559.00,3453.00,3593.00,3605.00]
10; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 6; 12.00; [313.00,879.00,1348.00,3593.00,3605.00,3799.00]
24; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 6; 11.00; [1348.00,1359.00,1759.00,2913.00,3113.00,3125.00]
45; /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 6; 12.00; [313.00,639.00,2968.00,3593.00,3605.00,3799.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 148, 56, 126, 12, 67, 197, 199, 46, 177, 4, 27, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(155, 130, 67, 20, 87, 80, 145, 67, 146, 70, 163, 149, 37, 110, 70, 163, 149, 37, 110, 65, 37, 104, 6, 62, 6, 181, 20, 194, 24, 24, 24, 85, 182, 197, 67, 20, 87, 80, 145, 48, 48, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 173, 189, 99, 43, 43, 15, 67, 131, 187, 66, 148, 77, 179, 98, 189, 170, 43, 43, 15, 159, 131, 43, 15, 67, 131, 187, 66, 148, 77, 179, 98, 189, 170, 43, 101, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 77, 127, 127, 125, 63, 172, 4, 117, 5, 5, 172, 117, 26, 4, 109, 127, 125, 63, 172, 4, 114, 5, 5, 172, 117, 31, 36, 139, 183, 5, 150, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(111, 158, 183, 164, 135, 164, 137, 120, 78, 164, 165, 179, 132, 101, 67, 164, 164, 29, 164, 94, 75, 107, 171, 146)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5107031942218603069/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 2, 15, 148
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [155,130,67,20,87], 2, 145, 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,173,189,99,43], 2, 15, 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,77,127,127,125], 2, 172, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [111,158,183,164,135], 2, 137, 120
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 2, 15, 167
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.140s
user	0m29.806s
sys	0m1.832s

2023-01-25 16:37:39,995 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 16:37:39,995 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 16:37:52,733 INFO     Done. Execution time: 12.737857580184937 seconds
2023-01-25 16:37:52,734 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 2, 15, 148)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([155,130,67,20,87], 2, 145, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,173,189,99,43], 2, 15, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,77,127,127,125], 2, 172, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([111,158,183,164,135], 2, 137, 120)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 2, 15, 167)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text         |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  148  |   15  |       |  [179,98,189,99,31]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  148  |   15  |    0  |  [179,98,189,99,31]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  148  |   15  |    0  |  [179,98,189,99,31]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    179  |  0  |  0  |  148  |   15  |    0  |  [179,98,189,99,31]  |   2  |
    55  |                     R = R + chunk;  |    179  |   179  |    179  |  0  |  0  |  148  |   15  |    0  |  [179,98,189,99,31]  |   2  |
    59  |                         j = j + 1;  |         |   179  |    179  |  0  |  1  |  148  |   15  |    0  |  [179,98,189,99,31]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   179  |    179  |  0  |  1  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    71  |                         j = j + 1;  |         |   179  |    179  |  0  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   179  |    189  |  0  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    77  |                     R = R + chunk;  |    189  |   368  |    189  |  0  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    80  |                       R = R + rep;  |    148  |   516  |    189  |  0  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    84  |                         j = j + 1;  |         |   516  |    189  |  0  |  3  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   516  |    189  |  0  |  3  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   516  |    189  |  0  |  3  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
    97  |                         j = j + 1;  |         |   516  |    189  |  0  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   516  |     31  |  0  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   103  |                     R = R + chunk;  |     31  |   547  |     31  |  0  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   106  |                       R = R + rep;  |    148  |   695  |     31  |  0  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   110  |                         j = j + 1;  |         |   695  |     31  |  0  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   695  |     31  |  0  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   120  |                         i = i + 1;  |         |   695  |     31  |  1  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   123  |                       R = R + sep;  |     15  |   710  |     31  |  1  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   710  |     31  |  1  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   129  |                             j = 0;  |         |   710  |     31  |  1  |  0  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   710  |    179  |  1  |  0  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   135  |                     R = R + chunk;  |    179  |   889  |    179  |  1  |  0  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   139  |                         j = j + 1;  |         |   889  |    179  |  1  |  1  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   889  |    179  |  1  |  1  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   151  |                         j = j + 1;  |         |   889  |    179  |  1  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   889  |    189  |  1  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   157  |                     R = R + chunk;  |    189  |  1078  |    189  |  1  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   160  |                       R = R + rep;  |    148  |  1226  |    189  |  1  |  2  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   164  |                         j = j + 1;  |         |  1226  |    189  |  1  |  3  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1226  |    189  |  1  |  3  |  148  |   15  |   98  |  [179,98,189,99,31]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1226  |    189  |  1  |  3  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   177  |                         j = j + 1;  |         |  1226  |    189  |  1  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1226  |     31  |  1  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   183  |                     R = R + chunk;  |     31  |  1257  |     31  |  1  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   186  |                       R = R + rep;  |    148  |  1405  |     31  |  1  |  4  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   190  |                         j = j + 1;  |         |  1405  |     31  |  1  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1405  |     31  |  1  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   200  |                         i = i + 1;  |         |  1405  |     31  |  2  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   203  |                       R = R + sep;  |     15  |  1420  |     31  |  2  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1420  |     31  |  2  |  5  |  148  |   15  |   99  |  [179,98,189,99,31]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |
    77  |         R = R + chunk;  |    189  |                            |
    80  |           R = R + rep;  |    148  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     31  |                            |
   106  |           R = R + rep;  |    148  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     15  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    179  |                            |
   157  |         R = R + chunk;  |    189  |                            |
   160  |           R = R + rep;  |    148  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     31  |                            |
   186  |           R = R + rep;  |    148  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     15  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |
    77  |         R = R + chunk;  |    189  |                            |
    80  |           R = R + rep;  |    148  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     31  |                            |
   106  |           R = R + rep;  |    148  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     15  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    179  |                            |
   157  |         R = R + chunk;  |    189  |                            |
   160  |           R = R + rep;  |    148  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     31  |                            |
   186  |           R = R + rep;  |    148  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     15  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                         0  |
    77  |         R = R + chunk;  |    189  |                         0  |
    80  |           R = R + rep;  |    148  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     31  |                         0  |
   106  |           R = R + rep;  |    148  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     15  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    179  |                         1  |
   157  |         R = R + chunk;  |    189  |                         1  |
   160  |           R = R + rep;  |    148  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     31  |                         1  |
   186  |           R = R + rep;  |    148  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     15  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    189  |                            |                            |                         0  |
    80  |           R = R + rep;  |    148  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |     31  |                            |                            |                         0  |
   106  |           R = R + rep;  |    148  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |     15  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         1  |
   157  |         R = R + chunk;  |    189  |                            |                            |                         1  |
   160  |           R = R + rep;  |    148  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |     31  |                            |                            |                         1  |
   186  |           R = R + rep;  |    148  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |     15  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
use R rep -> R0 = R0 + rep;
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m12.729s
user	0m23.875s
sys	0m6.116s

2023-01-25 16:37:52,734 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:42:52,223 INFO     Done. Execution time: 299.4883460998535 seconds
2023-01-25 16:42:52,223 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6198453879516976617.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7338722520552711128.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `297.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1637-transparentAmortize-60s-mostPrecise/stac-raw-0125-1637-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m59.480s
user	16m17.861s
sys	0m38.933s

2023-01-25 16:42:52,223 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 16:42:52,223 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:43:58,670 INFO     Done. Execution time: 66.44666457176208 seconds
2023-01-25 16:43:58,670 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz6587558340366878144/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6587558340366878144/bin -o /tmp/qfuzz6587558340366878144/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6587558340366878144/bin
Found file /tmp/qfuzz6587558340366878144/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz6587558340366878144/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6587558340366878144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6587558340366878144/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6587558340366878144/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz6587558340366878144/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 140765 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m140k to 140k us (average: 140k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 20.00; [635.00,1975.00,1995.00,3602.00,3795.00]
2; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 7.00; [95.00,102.00,715.00]
3; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 5; 100.00; [1995.00,2395.00,2915.00,3015.00,3602.00]
5; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 5; 193.00; [635.00,1975.00,3215.00,3602.00,3795.00]
6; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 5; 533.00; [102.00,635.00,1255.00,1995.00,3795.00]
10; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 107.00; [15.00,122.00,695.00]
12; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 3; 700.00; [15.00,715.00,3922.00]
15; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 5; 193.00; [635.00,1695.00,1975.00,3602.00,3795.00]
21; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 4; 80.00; [15.00,95.00,482.00,1955.00]
41; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 5; 600.00; [95.00,695.00,1315.00,2595.00,3662.00]
56; /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta; 5; 760.00; [195.00,955.00,2255.00,3175.00,3982.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 9, 112, 47, 158, 63, 4, 20, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(182, 65, 4, 34, 129, 112, 129, 129, 129, 129, 92, 141, 160, 4, 179, 117, 166, 129, 13, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 4, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 84, 31, 43, 115, 167, 56, 126, 12, 67, 174, 199, 63, 198, 159, 172, 40, 143, 185)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 62, 189, 99, 31, 43, 50, 52, 60, 126, 67, 36, 122, 46, 163, 133, 56, 23, 144, 125, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 160, 31, 43, 15, 167, 56, 126, 12, 67, 197, 141, 150, 44, 42, 53, 135, 156, 144, 84, 151, 155, 131, 187, 66, 147, 121, 131, 187, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 119, 150, 99, 145, 5, 139, 63, 78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 73, 11, 185, 10, 165, 112, 36, 4, 189, 164, 32, 35, 167, 12, 128, 114, 23, 81, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6587558340366878144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198,9,112,47,158]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [182,65,4,34,129]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,4,97]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,84,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,62,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,160,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,119,150,99,145]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.437s
user	0m27.585s
sys	0m1.803s

2023-01-25 16:43:58,671 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 16:43:58,671 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 16:44:08,409 INFO     Done. Execution time: 9.737830877304077 seconds
2023-01-25 16:44:08,409 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198,9,112,47,158])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([182,65,4,34,129])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,4,97])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,84,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,160,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,62,189,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,119,150,99,145])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [198,9,112,47,158]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [198,9,112,47,158]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [198,9,112,47,158]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [198,9,112,47,158]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [198,9,112,47,158]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [198,9,112,47,158]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [198,9,112,47,158]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    198  |  0  |    0  |  [198,9,112,47,158]  |
    24  |                     R = R + chunk;  |    198  |  198  |    198  |  0  |    0  |  [198,9,112,47,158]  |
    28  |                         i = i + 1;  |         |  198  |    198  |  1  |    0  |  [198,9,112,47,158]  |
    34  |        chunk = arrayRead(text, i);  |         |  198  |      9  |  1  |    0  |  [198,9,112,47,158]  |
    37  |                     R = R + chunk;  |      9  |  207  |      9  |  1  |    0  |  [198,9,112,47,158]  |
    41  |                         i = i + 1;  |         |  207  |      9  |  2  |    0  |  [198,9,112,47,158]  |
    42  |              resetPlaceHolder_1();  |         |  207  |      9  |  2  |    0  |  [198,9,112,47,158]  |
    48  |        chunk = arrayRead(text, i);  |         |  207  |    112  |  2  |    0  |  [198,9,112,47,158]  |
    51  |                     R = R + chunk;  |    112  |  319  |    112  |  2  |    0  |  [198,9,112,47,158]  |
    55  |                         i = i + 1;  |         |  319  |    112  |  3  |    0  |  [198,9,112,47,158]  |
    56  |              resetPlaceHolder_1();  |         |  319  |    112  |  3  |    0  |  [198,9,112,47,158]  |
    62  |        chunk = arrayRead(text, i);  |         |  319  |     47  |  3  |    0  |  [198,9,112,47,158]  |
    65  |                     R = R + chunk;  |     47  |  366  |     47  |  3  |    0  |  [198,9,112,47,158]  |
    69  |                         i = i + 1;  |         |  366  |     47  |  4  |    0  |  [198,9,112,47,158]  |
    70  |              resetPlaceHolder_1();  |         |  366  |     47  |  4  |    0  |  [198,9,112,47,158]  |
    76  |        chunk = arrayRead(text, i);  |         |  366  |    158  |  4  |    0  |  [198,9,112,47,158]  |
    79  |                     R = R + chunk;  |    158  |  524  |    158  |  4  |    0  |  [198,9,112,47,158]  |
    83  |                         i = i + 1;  |         |  524  |    158  |  5  |    0  |  [198,9,112,47,158]  |
    84  |              resetPlaceHolder_1();  |         |  524  |    158  |  5  |    0  |  [198,9,112,47,158]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    198  |                         0  |
    37  |         R = R + chunk;  |      9  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    112  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     47  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |    158  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m9.729s
user	0m15.439s
sys	0m3.934s

2023-01-25 16:44:08,409 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:44:17,493 INFO     Done. Execution time: 9.083234786987305 seconds
2023-01-25 16:44:17,493 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1644-transparentAmortize-60s-mostPrecise/stac-raw-0125-1644-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.074s
user	0m20.809s
sys	0m2.326s

2023-01-25 16:44:17,493 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 16:44:17,494 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:45:23,956 INFO     Done. Execution time: 66.4617052078247 seconds
2023-01-25 16:45:23,956 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz5361553106050094911/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5361553106050094911/bin -o /tmp/qfuzz5361553106050094911/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5361553106050094911/bin
Found file /tmp/qfuzz5361553106050094911/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz5361553106050094911/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5361553106050094911/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5361553106050094911/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5361553106050094911/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5361553106050094911/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 127105 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,3591.00]
2; /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,3351.00]
9; /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4; 3; 5.00; [29.00,34.00,3471.00]
20; /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16; 3; 5.00; [29.00,34.00,2531.00]
43; /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8; 3; 5.00; [29.00,34.00,1711.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8
/tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
/tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4
/tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 122, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 103, 130)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(173, 30, 18, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(167, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5361553106050094911/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 85, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 173, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 167, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 179, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.453s
user	0m26.914s
sys	0m1.750s

2023-01-25 16:45:23,956 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 16:45:23,957 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 16:45:30,392 INFO     Done. Execution time: 6.435481309890747 seconds
2023-01-25 16:45:30,393 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(85, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(173, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(167, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(179, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   85  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   85  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   85  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   85  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   85  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   85  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   85  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   85  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       86  |  1  |   85  |      2  |
    41  |                       R = R + sep;  |     85  |  86  |       86  |  1  |   85  |      2  |
    45  |             builder = builder + 1;  |         |  86  |       87  |  1  |   85  |      2  |
    48  |                         R = R + 1;  |      1  |  87  |       87  |  1  |   85  |      2  |
    52  |                         i = i + 1;  |         |  87  |       87  |  2  |   85  |      2  |
    53  |              resetPlaceHolder_1();  |         |  87  |       87  |  2  |   85  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     85  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     85  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     85  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.425s
user	0m13.152s
sys	0m1.844s

2023-01-25 16:45:30,393 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:45:46,955 INFO     Done. Execution time: 16.561679124832153 seconds
2023-01-25 16:45:46,955 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `14.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1645-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1645-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.554s
user	0m43.355s
sys	0m6.104s

2023-01-25 16:45:46,955 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 16:45:46,955 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:46:53,238 INFO     Done. Execution time: 66.28290677070618 seconds
2023-01-25 16:46:53,239 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7854552768305175118/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7854552768305175118/bin -o /tmp/qfuzz7854552768305175118/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7854552768305175118/bin
Found file /tmp/qfuzz7854552768305175118/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7854552768305175118/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7854552768305175118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7854552768305175118/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7854552768305175118/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz7854552768305175118/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 133630 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 104, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7854552768305175118/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.274s
user	0m25.001s
sys	0m1.850s

2023-01-25 16:46:53,239 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 16:46:53,239 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 16:46:59,351 INFO     Done. Execution time: 6.111326217651367 seconds
2023-01-25 16:46:59,351 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m6.103s
user	0m12.364s
sys	0m1.914s

2023-01-25 16:46:59,351 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:47:08,728 INFO     Done. Execution time: 9.377156972885132 seconds
2023-01-25 16:47:08,729 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `7.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1647-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1647-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.369s
user	0m21.065s
sys	0m2.944s

2023-01-25 16:47:08,729 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 16:47:08,729 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:48:15,294 INFO     Done. Execution time: 66.5645706653595 seconds
2023-01-25 16:48:15,294 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz4172833931118488285/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4172833931118488285/bin -o /tmp/qfuzz4172833931118488285/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4172833931118488285/bin
Found file /tmp/qfuzz4172833931118488285/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz4172833931118488285/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4172833931118488285/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4172833931118488285/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4172833931118488285/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz4172833931118488285/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 176936 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m176k to 176k us (average: 176k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
3; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
5; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
6; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
7; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
12; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
13; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
18; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
19; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
21; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
26; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
27; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
29; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
32; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
34; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
37; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
42; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
45; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
49; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
56; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:8
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:2
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 115, 5, 139, 167, 56, 126, 6, 55, 5, 20, 46, 198, 159, 172, 136, 61, 126, 6, 67, 197, 199, 46, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 131, 43, 88, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 115, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 104, 94, 161, 168, 143, 160, 11, 131, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 11, 4, 116, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 100, 100, 100, 100, 100, 100, 65, 100, 100, 100, 100, 100, 102, 46, 198, 112, 172, 159, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 42, 4, 15, 131, 4, 180, 167, 56, 126, 12, 158, 198, 159, 161, 45, 19, 117, 156)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 182, 63, 5, 86, 142, 12, 38, 69, 183, 55, 102, 4, 4, 4, 140, 82, 86, 35, 12, 156, 110, 4, 167, 140, 181, 184, 63, 102, 19, 132, 35, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 152, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 4, 63, 172, 136, 158, 48, 56, 126, 12, 67, 197, 199, 46, 4, 63, 45, 46, 4, 122)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 129, 98, 136, 165, 12, 175, 127, 127, 100, 189, 127, 89, 25, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194, 194, 194, 194, 194, 166, 140, 160, 169, 139, 22, 125, 70, 128, 70, 52, 150, 197, 5, 51, 61, 137, 194, 121, 181, 53, 132, 122, 152, 183, 152, 152, 152, 152, 152, 152, 152, 194, 172, 6, 160, 167, 139, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 79, 44, 42, 53, 135, 156, 144, 84, 151, 11, 131, 187, 169, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 98, 124, 187, 31, 43, 15, 167, 56, 151, 12, 67, 197, 199, 46, 76, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 36, 80, 66, 147, 77, 62, 119, 25, 82, 82, 82, 114, 82, 135, 94, 161, 168, 90, 100)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 98, 95, 99, 31, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 70, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 176, 120, 19, 113, 15, 156, 4, 126, 131, 112, 197, 171, 46, 38, 68, 114, 20, 184, 153, 4, 36, 111, 51, 152, 36, 108, 25, 151, 10, 4, 122, 6, 4, 48, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 150, 44, 42, 53, 135, 156, 162, 84, 151, 11, 131, 173, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 152, 189, 99, 31, 43, 15, 167, 37, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 8, 36, 4, 31, 43, 14, 62, 56, 126, 152, 113, 63, 151, 11, 131, 177, 101, 147, 20, 115, 94, 20, 190, 154, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(155, 119, 19, 6, 65)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 159, 19, 162, 66, 147, 53, 160, 94, 58, 99, 172, 85, 179, 84, 157, 183, 12, 67, 197, 46, 46, 167, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 178, 5, 171, 157, 133, 77, 163, 48, 45, 46, 117, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 109, 146, 43, 102, 167, 56, 126, 12, 67, 169, 156, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4172833931118488285/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,115]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,131,43,88,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,104,94,161,168]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,100,100,100,100]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,182,63,5,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,152,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [127,129,98,136,165]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [194,194,194,194,194]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,79,44,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [147,98,124,187,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,98,95,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,70,120]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,176,120,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,150,44,42,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,152,189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,8,36,4,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [155,119,19,6,65]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,159,19,162,66]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,178,5,171,157]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,109,146]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [92]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [133]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [120]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.555s
user	0m30.104s
sys	0m3.360s

2023-01-25 16:48:15,294 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 16:48:15,294 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 16:52:12,710 INFO     Done. Execution time: 237.41585683822632 seconds
2023-01-25 16:52:12,711 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,115])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 34 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,131,43,88,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,104,94,161,168])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,100,100,100,100])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,182,63,5,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,152,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 34 (23.53%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([127,129,98,136,165])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([194,194,194,194,194])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,79,44,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([147,98,124,187,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,98,95,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,70,120])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 34 (47.06%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,176,120,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,150,44,42,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,152,189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,8,36,4,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([155,119,19,6,65])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,159,19,162,66])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,178,5,171,157])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,109,146])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([92])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([133])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([120])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 34)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 34 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 7595):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |        sorted         |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [179,98,189,99,115]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [179,98,189,99,115]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [179,98,189,99,115]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [179,98,189,99,115]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [179,98,189,99,115]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [179,98,189,99,115]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    179  |  0  |       |  [179,98,189,99,115]  |
    24  |                         int j = 0;  |         |     0  |    179  |  0  |    0  |  [179,98,189,99,115]  |
    30  |                         R = R + 2;  |      2  |     2  |    179  |  0  |    0  |  [179,98,189,99,115]  |
    34  |                         j = j + 1;  |         |     2  |    179  |  0  |    1  |  [179,98,189,99,115]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    179  |  0  |    1  |  [179,98,189,99,115]  |
    41  |                         R = R + 2;  |      2  |     4  |    179  |  0  |    1  |  [179,98,189,99,115]  |
    45  |                         j = j + 1;  |         |     4  |    179  |  0  |    2  |  [179,98,189,99,115]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    179  |  0  |    2  |  [179,98,189,99,115]  |
    52  |                         R = R + 2;  |      2  |     6  |    179  |  0  |    2  |  [179,98,189,99,115]  |
    56  |                         j = j + 1;  |         |     6  |    179  |  0  |    3  |  [179,98,189,99,115]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    179  |  0  |    3  |  [179,98,189,99,115]  |
    63  |                         R = R + 2;  |      2  |     8  |    179  |  0  |    3  |  [179,98,189,99,115]  |
    67  |                         j = j + 1;  |         |     8  |    179  |  0  |    4  |  [179,98,189,99,115]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    179  |  0  |    4  |  [179,98,189,99,115]  |
    74  |                         R = R + 2;  |      2  |    10  |    179  |  0  |    4  |  [179,98,189,99,115]  |
    78  |                         j = j + 1;  |         |    10  |    179  |  0  |    5  |  [179,98,189,99,115]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    179  |  0  |    5  |  [179,98,189,99,115]  |
    85  |                         R = R + 2;  |      2  |    12  |    179  |  0  |    5  |  [179,98,189,99,115]  |
    89  |                         j = j + 1;  |         |    12  |    179  |  0  |    6  |  [179,98,189,99,115]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    179  |  0  |    6  |  [179,98,189,99,115]  |
    96  |                         R = R + 2;  |      2  |    14  |    179  |  0  |    6  |  [179,98,189,99,115]  |
   100  |                         j = j + 1;  |         |    14  |    179  |  0  |    7  |  [179,98,189,99,115]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    179  |  0  |    7  |  [179,98,189,99,115]  |
   107  |                         R = R + 2;  |      2  |    16  |    179  |  0  |    7  |  [179,98,189,99,115]  |
   111  |                         j = j + 1;  |         |    16  |    179  |  0  |    8  |  [179,98,189,99,115]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    179  |  0  |    8  |  [179,98,189,99,115]  |
   118  |                         R = R + 2;  |      2  |    18  |    179  |  0  |    8  |  [179,98,189,99,115]  |
   122  |                         j = j + 1;  |         |    18  |    179  |  0  |    9  |  [179,98,189,99,115]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    179  |  0  |    9  |  [179,98,189,99,115]  |
   129  |                         R = R + 2;  |      2  |    20  |    179  |  0  |    9  |  [179,98,189,99,115]  |
   133  |                         j = j + 1;  |         |    20  |    179  |  0  |   10  |  [179,98,189,99,115]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    179  |  0  |   10  |  [179,98,189,99,115]  |
   140  |                         R = R + 2;  |      2  |    22  |    179  |  0  |   10  |  [179,98,189,99,115]  |
   144  |                         j = j + 1;  |         |    22  |    179  |  0  |   11  |  [179,98,189,99,115]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    179  |  0  |   11  |  [179,98,189,99,115]  |
   151  |                         R = R + 2;  |      2  |    24  |    179  |  0  |   11  |  [179,98,189,99,115]  |
   155  |                         j = j + 1;  |         |    24  |    179  |  0  |   12  |  [179,98,189,99,115]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    179  |  0  |   12  |  [179,98,189,99,115]  |
   162  |                         R = R + 2;  |      2  |    26  |    179  |  0  |   12  |  [179,98,189,99,115]  |
   166  |                         j = j + 1;  |         |    26  |    179  |  0  |   13  |  [179,98,189,99,115]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    179  |  0  |   13  |  [179,98,189,99,115]  |
   173  |                         R = R + 2;  |      2  |    28  |    179  |  0  |   13  |  [179,98,189,99,115]  |
   177  |                         j = j + 1;  |         |    28  |    179  |  0  |   14  |  [179,98,189,99,115]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    179  |  0  |   14  |  [179,98,189,99,115]  |
   184  |                         R = R + 2;  |      2  |    30  |    179  |  0  |   14  |  [179,98,189,99,115]  |
   188  |                         j = j + 1;  |         |    30  |    179  |  0  |   15  |  [179,98,189,99,115]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    179  |  0  |   15  |  [179,98,189,99,115]  |
   195  |                         R = R + 2;  |      2  |    32  |    179  |  0  |   15  |  [179,98,189,99,115]  |
   199  |                         j = j + 1;  |         |    32  |    179  |  0  |   16  |  [179,98,189,99,115]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    179  |  0  |   16  |  [179,98,189,99,115]  |
   206  |                         R = R + 2;  |      2  |    34  |    179  |  0  |   16  |  [179,98,189,99,115]  |
   210  |                         j = j + 1;  |         |    34  |    179  |  0  |   17  |  [179,98,189,99,115]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    179  |  0  |   17  |  [179,98,189,99,115]  |
   217  |                         R = R + 2;  |      2  |    36  |    179  |  0  |   17  |  [179,98,189,99,115]  |
   221  |                         j = j + 1;  |         |    36  |    179  |  0  |   18  |  [179,98,189,99,115]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    179  |  0  |   18  |  [179,98,189,99,115]  |
   228  |                         R = R + 2;  |      2  |    38  |    179  |  0  |   18  |  [179,98,189,99,115]  |
   232  |                         j = j + 1;  |         |    38  |    179  |  0  |   19  |  [179,98,189,99,115]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    179  |  0  |   19  |  [179,98,189,99,115]  |
   239  |                         R = R + 2;  |      2  |    40  |    179  |  0  |   19  |  [179,98,189,99,115]  |
   243  |                         j = j + 1;  |         |    40  |    179  |  0  |   20  |  [179,98,189,99,115]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    179  |  0  |   20  |  [179,98,189,99,115]  |
   250  |                         R = R + 2;  |      2  |    42  |    179  |  0  |   20  |  [179,98,189,99,115]  |
   254  |                         j = j + 1;  |         |    42  |    179  |  0  |   21  |  [179,98,189,99,115]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    179  |  0  |   21  |  [179,98,189,99,115]  |
   261  |                         R = R + 2;  |      2  |    44  |    179  |  0  |   21  |  [179,98,189,99,115]  |
   265  |                         j = j + 1;  |         |    44  |    179  |  0  |   22  |  [179,98,189,99,115]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    179  |  0  |   22  |  [179,98,189,99,115]  |
   272  |                         R = R + 2;  |      2  |    46  |    179  |  0  |   22  |  [179,98,189,99,115]  |
   276  |                         j = j + 1;  |         |    46  |    179  |  0  |   23  |  [179,98,189,99,115]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    179  |  0  |   23  |  [179,98,189,99,115]  |
   283  |                         R = R + 2;  |      2  |    48  |    179  |  0  |   23  |  [179,98,189,99,115]  |
   287  |                         j = j + 1;  |         |    48  |    179  |  0  |   24  |  [179,98,189,99,115]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    179  |  0  |   24  |  [179,98,189,99,115]  |
   294  |                         R = R + 2;  |      2  |    50  |    179  |  0  |   24  |  [179,98,189,99,115]  |
   298  |                         j = j + 1;  |         |    50  |    179  |  0  |   25  |  [179,98,189,99,115]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    179  |  0  |   25  |  [179,98,189,99,115]  |
   305  |                         R = R + 2;  |      2  |    52  |    179  |  0  |   25  |  [179,98,189,99,115]  |
   309  |                         j = j + 1;  |         |    52  |    179  |  0  |   26  |  [179,98,189,99,115]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    179  |  0  |   26  |  [179,98,189,99,115]  |
   316  |                         R = R + 2;  |      2  |    54  |    179  |  0  |   26  |  [179,98,189,99,115]  |
   320  |                         j = j + 1;  |         |    54  |    179  |  0  |   27  |  [179,98,189,99,115]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    179  |  0  |   27  |  [179,98,189,99,115]  |
   327  |                         R = R + 2;  |      2  |    56  |    179  |  0  |   27  |  [179,98,189,99,115]  |
   331  |                         j = j + 1;  |         |    56  |    179  |  0  |   28  |  [179,98,189,99,115]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    179  |  0  |   28  |  [179,98,189,99,115]  |
   338  |                         R = R + 2;  |      2  |    58  |    179  |  0  |   28  |  [179,98,189,99,115]  |
   342  |                         j = j + 1;  |         |    58  |    179  |  0  |   29  |  [179,98,189,99,115]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    179  |  0  |   29  |  [179,98,189,99,115]  |
   349  |                         R = R + 2;  |      2  |    60  |    179  |  0  |   29  |  [179,98,189,99,115]  |
   353  |                         j = j + 1;  |         |    60  |    179  |  0  |   30  |  [179,98,189,99,115]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    179  |  0  |   30  |  [179,98,189,99,115]  |
   360  |                         R = R + 2;  |      2  |    62  |    179  |  0  |   30  |  [179,98,189,99,115]  |
   364  |                         j = j + 1;  |         |    62  |    179  |  0  |   31  |  [179,98,189,99,115]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    179  |  0  |   31  |  [179,98,189,99,115]  |
   371  |                         R = R + 2;  |      2  |    64  |    179  |  0  |   31  |  [179,98,189,99,115]  |
   375  |                         j = j + 1;  |         |    64  |    179  |  0  |   32  |  [179,98,189,99,115]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    179  |  0  |   32  |  [179,98,189,99,115]  |
   382  |                         R = R + 2;  |      2  |    66  |    179  |  0  |   32  |  [179,98,189,99,115]  |
   386  |                         j = j + 1;  |         |    66  |    179  |  0  |   33  |  [179,98,189,99,115]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    179  |  0  |   33  |  [179,98,189,99,115]  |
   393  |                         R = R + 2;  |      2  |    68  |    179  |  0  |   33  |  [179,98,189,99,115]  |
   397  |                         j = j + 1;  |         |    68  |    179  |  0  |   34  |  [179,98,189,99,115]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    179  |  0  |   34  |  [179,98,189,99,115]  |
   404  |                         R = R + 2;  |      2  |    70  |    179  |  0  |   34  |  [179,98,189,99,115]  |
   408  |                         j = j + 1;  |         |    70  |    179  |  0  |   35  |  [179,98,189,99,115]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    179  |  0  |   35  |  [179,98,189,99,115]  |
   415  |                         R = R + 2;  |      2  |    72  |    179  |  0  |   35  |  [179,98,189,99,115]  |
   419  |                         j = j + 1;  |         |    72  |    179  |  0  |   36  |  [179,98,189,99,115]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    179  |  0  |   36  |  [179,98,189,99,115]  |
   426  |                         R = R + 2;  |      2  |    74  |    179  |  0  |   36  |  [179,98,189,99,115]  |
   430  |                         j = j + 1;  |         |    74  |    179  |  0  |   37  |  [179,98,189,99,115]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    179  |  0  |   37  |  [179,98,189,99,115]  |
   437  |                         R = R + 2;  |      2  |    76  |    179  |  0  |   37  |  [179,98,189,99,115]  |
   441  |                         j = j + 1;  |         |    76  |    179  |  0  |   38  |  [179,98,189,99,115]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    179  |  0  |   38  |  [179,98,189,99,115]  |
   448  |                         R = R + 2;  |      2  |    78  |    179  |  0  |   38  |  [179,98,189,99,115]  |
   452  |                         j = j + 1;  |         |    78  |    179  |  0  |   39  |  [179,98,189,99,115]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    179  |  0  |   39  |  [179,98,189,99,115]  |
   459  |                         R = R + 2;  |      2  |    80  |    179  |  0  |   39  |  [179,98,189,99,115]  |
   463  |                         j = j + 1;  |         |    80  |    179  |  0  |   40  |  [179,98,189,99,115]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    179  |  0  |   40  |  [179,98,189,99,115]  |
   470  |                         R = R + 2;  |      2  |    82  |    179  |  0  |   40  |  [179,98,189,99,115]  |
   474  |                         j = j + 1;  |         |    82  |    179  |  0  |   41  |  [179,98,189,99,115]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    179  |  0  |   41  |  [179,98,189,99,115]  |
   481  |                         R = R + 2;  |      2  |    84  |    179  |  0  |   41  |  [179,98,189,99,115]  |
   485  |                         j = j + 1;  |         |    84  |    179  |  0  |   42  |  [179,98,189,99,115]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    179  |  0  |   42  |  [179,98,189,99,115]  |
   492  |                         R = R + 2;  |      2  |    86  |    179  |  0  |   42  |  [179,98,189,99,115]  |
   496  |                         j = j + 1;  |         |    86  |    179  |  0  |   43  |  [179,98,189,99,115]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    179  |  0  |   43  |  [179,98,189,99,115]  |
   503  |                         R = R + 2;  |      2  |    88  |    179  |  0  |   43  |  [179,98,189,99,115]  |
   507  |                         j = j + 1;  |         |    88  |    179  |  0  |   44  |  [179,98,189,99,115]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    179  |  0  |   44  |  [179,98,189,99,115]  |
   514  |                         R = R + 2;  |      2  |    90  |    179  |  0  |   44  |  [179,98,189,99,115]  |
   518  |                         j = j + 1;  |         |    90  |    179  |  0  |   45  |  [179,98,189,99,115]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    179  |  0  |   45  |  [179,98,189,99,115]  |
   525  |                         R = R + 2;  |      2  |    92  |    179  |  0  |   45  |  [179,98,189,99,115]  |
   529  |                         j = j + 1;  |         |    92  |    179  |  0  |   46  |  [179,98,189,99,115]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    179  |  0  |   46  |  [179,98,189,99,115]  |
   536  |                         R = R + 2;  |      2  |    94  |    179  |  0  |   46  |  [179,98,189,99,115]  |
   540  |                         j = j + 1;  |         |    94  |    179  |  0  |   47  |  [179,98,189,99,115]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    179  |  0  |   47  |  [179,98,189,99,115]  |
   547  |                         R = R + 2;  |      2  |    96  |    179  |  0  |   47  |  [179,98,189,99,115]  |
   551  |                         j = j + 1;  |         |    96  |    179  |  0  |   48  |  [179,98,189,99,115]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    179  |  0  |   48  |  [179,98,189,99,115]  |
   558  |                         R = R + 2;  |      2  |    98  |    179  |  0  |   48  |  [179,98,189,99,115]  |
   562  |                         j = j + 1;  |         |    98  |    179  |  0  |   49  |  [179,98,189,99,115]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    179  |  0  |   49  |  [179,98,189,99,115]  |
   569  |                         R = R + 2;  |      2  |   100  |    179  |  0  |   49  |  [179,98,189,99,115]  |
   573  |                         j = j + 1;  |         |   100  |    179  |  0  |   50  |  [179,98,189,99,115]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    179  |  0  |   50  |  [179,98,189,99,115]  |
   580  |                         R = R + 2;  |      2  |   102  |    179  |  0  |   50  |  [179,98,189,99,115]  |
   584  |                         j = j + 1;  |         |   102  |    179  |  0  |   51  |  [179,98,189,99,115]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    179  |  0  |   51  |  [179,98,189,99,115]  |
   591  |                         R = R + 2;  |      2  |   104  |    179  |  0  |   51  |  [179,98,189,99,115]  |
   595  |                         j = j + 1;  |         |   104  |    179  |  0  |   52  |  [179,98,189,99,115]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    179  |  0  |   52  |  [179,98,189,99,115]  |
   602  |                         R = R + 2;  |      2  |   106  |    179  |  0  |   52  |  [179,98,189,99,115]  |
   606  |                         j = j + 1;  |         |   106  |    179  |  0  |   53  |  [179,98,189,99,115]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    179  |  0  |   53  |  [179,98,189,99,115]  |
   613  |                         R = R + 2;  |      2  |   108  |    179  |  0  |   53  |  [179,98,189,99,115]  |
   617  |                         j = j + 1;  |         |   108  |    179  |  0  |   54  |  [179,98,189,99,115]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    179  |  0  |   54  |  [179,98,189,99,115]  |
   624  |                         R = R + 2;  |      2  |   110  |    179  |  0  |   54  |  [179,98,189,99,115]  |
   628  |                         j = j + 1;  |         |   110  |    179  |  0  |   55  |  [179,98,189,99,115]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    179  |  0  |   55  |  [179,98,189,99,115]  |
   635  |                         R = R + 2;  |      2  |   112  |    179  |  0  |   55  |  [179,98,189,99,115]  |
   639  |                         j = j + 1;  |         |   112  |    179  |  0  |   56  |  [179,98,189,99,115]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    179  |  0  |   56  |  [179,98,189,99,115]  |
   646  |                         R = R + 2;  |      2  |   114  |    179  |  0  |   56  |  [179,98,189,99,115]  |
   650  |                         j = j + 1;  |         |   114  |    179  |  0  |   57  |  [179,98,189,99,115]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    179  |  0  |   57  |  [179,98,189,99,115]  |
   657  |                         R = R + 2;  |      2  |   116  |    179  |  0  |   57  |  [179,98,189,99,115]  |
   661  |                         j = j + 1;  |         |   116  |    179  |  0  |   58  |  [179,98,189,99,115]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    179  |  0  |   58  |  [179,98,189,99,115]  |
   668  |                         R = R + 2;  |      2  |   118  |    179  |  0  |   58  |  [179,98,189,99,115]  |
   672  |                         j = j + 1;  |         |   118  |    179  |  0  |   59  |  [179,98,189,99,115]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    179  |  0  |   59  |  [179,98,189,99,115]  |
   679  |                         R = R + 2;  |      2  |   120  |    179  |  0  |   59  |  [179,98,189,99,115]  |
   683  |                         j = j + 1;  |         |   120  |    179  |  0  |   60  |  [179,98,189,99,115]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    179  |  0  |   60  |  [179,98,189,99,115]  |
   690  |                         R = R + 2;  |      2  |   122  |    179  |  0  |   60  |  [179,98,189,99,115]  |
   694  |                         j = j + 1;  |         |   122  |    179  |  0  |   61  |  [179,98,189,99,115]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    179  |  0  |   61  |  [179,98,189,99,115]  |
   701  |                         R = R + 2;  |      2  |   124  |    179  |  0  |   61  |  [179,98,189,99,115]  |
   705  |                         j = j + 1;  |         |   124  |    179  |  0  |   62  |  [179,98,189,99,115]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    179  |  0  |   62  |  [179,98,189,99,115]  |
   712  |                         R = R + 2;  |      2  |   126  |    179  |  0  |   62  |  [179,98,189,99,115]  |
   716  |                         j = j + 1;  |         |   126  |    179  |  0  |   63  |  [179,98,189,99,115]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    179  |  0  |   63  |  [179,98,189,99,115]  |
   723  |                         R = R + 2;  |      2  |   128  |    179  |  0  |   63  |  [179,98,189,99,115]  |
   727  |                         j = j + 1;  |         |   128  |    179  |  0  |   64  |  [179,98,189,99,115]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    179  |  0  |   64  |  [179,98,189,99,115]  |
   734  |                         R = R + 2;  |      2  |   130  |    179  |  0  |   64  |  [179,98,189,99,115]  |
   738  |                         j = j + 1;  |         |   130  |    179  |  0  |   65  |  [179,98,189,99,115]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    179  |  0  |   65  |  [179,98,189,99,115]  |
   745  |                         R = R + 2;  |      2  |   132  |    179  |  0  |   65  |  [179,98,189,99,115]  |
   749  |                         j = j + 1;  |         |   132  |    179  |  0  |   66  |  [179,98,189,99,115]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    179  |  0  |   66  |  [179,98,189,99,115]  |
   756  |                         R = R + 2;  |      2  |   134  |    179  |  0  |   66  |  [179,98,189,99,115]  |
   760  |                         j = j + 1;  |         |   134  |    179  |  0  |   67  |  [179,98,189,99,115]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    179  |  0  |   67  |  [179,98,189,99,115]  |
   767  |                         R = R + 2;  |      2  |   136  |    179  |  0  |   67  |  [179,98,189,99,115]  |
   771  |                         j = j + 1;  |         |   136  |    179  |  0  |   68  |  [179,98,189,99,115]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    179  |  0  |   68  |  [179,98,189,99,115]  |
   778  |                         R = R + 2;  |      2  |   138  |    179  |  0  |   68  |  [179,98,189,99,115]  |
   782  |                         j = j + 1;  |         |   138  |    179  |  0  |   69  |  [179,98,189,99,115]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    179  |  0  |   69  |  [179,98,189,99,115]  |
   789  |                         R = R + 2;  |      2  |   140  |    179  |  0  |   69  |  [179,98,189,99,115]  |
   793  |                         j = j + 1;  |         |   140  |    179  |  0  |   70  |  [179,98,189,99,115]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    179  |  0  |   70  |  [179,98,189,99,115]  |
   800  |                         R = R + 2;  |      2  |   142  |    179  |  0  |   70  |  [179,98,189,99,115]  |
   804  |                         j = j + 1;  |         |   142  |    179  |  0  |   71  |  [179,98,189,99,115]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    179  |  0  |   71  |  [179,98,189,99,115]  |
   811  |                         R = R + 2;  |      2  |   144  |    179  |  0  |   71  |  [179,98,189,99,115]  |
   815  |                         j = j + 1;  |         |   144  |    179  |  0  |   72  |  [179,98,189,99,115]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    179  |  0  |   72  |  [179,98,189,99,115]  |
   822  |                         R = R + 2;  |      2  |   146  |    179  |  0  |   72  |  [179,98,189,99,115]  |
   826  |                         j = j + 1;  |         |   146  |    179  |  0  |   73  |  [179,98,189,99,115]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    179  |  0  |   73  |  [179,98,189,99,115]  |
   833  |                         R = R + 2;  |      2  |   148  |    179  |  0  |   73  |  [179,98,189,99,115]  |
   837  |                         j = j + 1;  |         |   148  |    179  |  0  |   74  |  [179,98,189,99,115]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    179  |  0  |   74  |  [179,98,189,99,115]  |
   844  |                         R = R + 2;  |      2  |   150  |    179  |  0  |   74  |  [179,98,189,99,115]  |
   848  |                         j = j + 1;  |         |   150  |    179  |  0  |   75  |  [179,98,189,99,115]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    179  |  0  |   75  |  [179,98,189,99,115]  |
   855  |                         R = R + 2;  |      2  |   152  |    179  |  0  |   75  |  [179,98,189,99,115]  |
   859  |                         j = j + 1;  |         |   152  |    179  |  0  |   76  |  [179,98,189,99,115]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    179  |  0  |   76  |  [179,98,189,99,115]  |
   866  |                         R = R + 2;  |      2  |   154  |    179  |  0  |   76  |  [179,98,189,99,115]  |
   870  |                         j = j + 1;  |         |   154  |    179  |  0  |   77  |  [179,98,189,99,115]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    179  |  0  |   77  |  [179,98,189,99,115]  |
   877  |                         R = R + 2;  |      2  |   156  |    179  |  0  |   77  |  [179,98,189,99,115]  |
   881  |                         j = j + 1;  |         |   156  |    179  |  0  |   78  |  [179,98,189,99,115]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    179  |  0  |   78  |  [179,98,189,99,115]  |
   888  |                         R = R + 2;  |      2  |   158  |    179  |  0  |   78  |  [179,98,189,99,115]  |
   892  |                         j = j + 1;  |         |   158  |    179  |  0  |   79  |  [179,98,189,99,115]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    179  |  0  |   79  |  [179,98,189,99,115]  |
   899  |                         R = R + 2;  |      2  |   160  |    179  |  0  |   79  |  [179,98,189,99,115]  |
   903  |                         j = j + 1;  |         |   160  |    179  |  0  |   80  |  [179,98,189,99,115]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    179  |  0  |   80  |  [179,98,189,99,115]  |
   910  |                         R = R + 2;  |      2  |   162  |    179  |  0  |   80  |  [179,98,189,99,115]  |
   914  |                         j = j + 1;  |         |   162  |    179  |  0  |   81  |  [179,98,189,99,115]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    179  |  0  |   81  |  [179,98,189,99,115]  |
   921  |                         R = R + 2;  |      2  |   164  |    179  |  0  |   81  |  [179,98,189,99,115]  |
   925  |                         j = j + 1;  |         |   164  |    179  |  0  |   82  |  [179,98,189,99,115]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    179  |  0  |   82  |  [179,98,189,99,115]  |
   932  |                         R = R + 2;  |      2  |   166  |    179  |  0  |   82  |  [179,98,189,99,115]  |
   936  |                         j = j + 1;  |         |   166  |    179  |  0  |   83  |  [179,98,189,99,115]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    179  |  0  |   83  |  [179,98,189,99,115]  |
   943  |                         R = R + 2;  |      2  |   168  |    179  |  0  |   83  |  [179,98,189,99,115]  |
   947  |                         j = j + 1;  |         |   168  |    179  |  0  |   84  |  [179,98,189,99,115]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    179  |  0  |   84  |  [179,98,189,99,115]  |
   954  |                         R = R + 2;  |      2  |   170  |    179  |  0  |   84  |  [179,98,189,99,115]  |
   958  |                         j = j + 1;  |         |   170  |    179  |  0  |   85  |  [179,98,189,99,115]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    179  |  0  |   85  |  [179,98,189,99,115]  |
   965  |                         R = R + 2;  |      2  |   172  |    179  |  0  |   85  |  [179,98,189,99,115]  |
   969  |                         j = j + 1;  |         |   172  |    179  |  0  |   86  |  [179,98,189,99,115]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    179  |  0  |   86  |  [179,98,189,99,115]  |
   976  |                         R = R + 2;  |      2  |   174  |    179  |  0  |   86  |  [179,98,189,99,115]  |
   980  |                         j = j + 1;  |         |   174  |    179  |  0  |   87  |  [179,98,189,99,115]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    179  |  0  |   87  |  [179,98,189,99,115]  |
   987  |                         R = R + 2;  |      2  |   176  |    179  |  0  |   87  |  [179,98,189,99,115]  |
   991  |                         j = j + 1;  |         |   176  |    179  |  0  |   88  |  [179,98,189,99,115]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    179  |  0  |   88  |  [179,98,189,99,115]  |
   998  |                         R = R + 2;  |      2  |   178  |    179  |  0  |   88  |  [179,98,189,99,115]  |
  1002  |                         j = j + 1;  |         |   178  |    179  |  0  |   89  |  [179,98,189,99,115]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    179  |  0  |   89  |  [179,98,189,99,115]  |
  1009  |                         R = R + 2;  |      2  |   180  |    179  |  0  |   89  |  [179,98,189,99,115]  |
  1013  |                         j = j + 1;  |         |   180  |    179  |  0  |   90  |  [179,98,189,99,115]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    179  |  0  |   90  |  [179,98,189,99,115]  |
  1020  |                         R = R + 2;  |      2  |   182  |    179  |  0  |   90  |  [179,98,189,99,115]  |
  1024  |                         j = j + 1;  |         |   182  |    179  |  0  |   91  |  [179,98,189,99,115]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    179  |  0  |   91  |  [179,98,189,99,115]  |
  1031  |                         R = R + 2;  |      2  |   184  |    179  |  0  |   91  |  [179,98,189,99,115]  |
  1035  |                         j = j + 1;  |         |   184  |    179  |  0  |   92  |  [179,98,189,99,115]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    179  |  0  |   92  |  [179,98,189,99,115]  |
  1042  |                         R = R + 2;  |      2  |   186  |    179  |  0  |   92  |  [179,98,189,99,115]  |
  1046  |                         j = j + 1;  |         |   186  |    179  |  0  |   93  |  [179,98,189,99,115]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    179  |  0  |   93  |  [179,98,189,99,115]  |
  1053  |                         R = R + 2;  |      2  |   188  |    179  |  0  |   93  |  [179,98,189,99,115]  |
  1057  |                         j = j + 1;  |         |   188  |    179  |  0  |   94  |  [179,98,189,99,115]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    179  |  0  |   94  |  [179,98,189,99,115]  |
  1064  |                         R = R + 2;  |      2  |   190  |    179  |  0  |   94  |  [179,98,189,99,115]  |
  1068  |                         j = j + 1;  |         |   190  |    179  |  0  |   95  |  [179,98,189,99,115]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    179  |  0  |   95  |  [179,98,189,99,115]  |
  1075  |                         R = R + 2;  |      2  |   192  |    179  |  0  |   95  |  [179,98,189,99,115]  |
  1079  |                         j = j + 1;  |         |   192  |    179  |  0  |   96  |  [179,98,189,99,115]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    179  |  0  |   96  |  [179,98,189,99,115]  |
  1086  |                         R = R + 2;  |      2  |   194  |    179  |  0  |   96  |  [179,98,189,99,115]  |
  1090  |                         j = j + 1;  |         |   194  |    179  |  0  |   97  |  [179,98,189,99,115]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    179  |  0  |   97  |  [179,98,189,99,115]  |
  1097  |                         R = R + 2;  |      2  |   196  |    179  |  0  |   97  |  [179,98,189,99,115]  |
  1101  |                         j = j + 1;  |         |   196  |    179  |  0  |   98  |  [179,98,189,99,115]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    179  |  0  |   98  |  [179,98,189,99,115]  |
  1108  |                         R = R + 2;  |      2  |   198  |    179  |  0  |   98  |  [179,98,189,99,115]  |
  1112  |                         j = j + 1;  |         |   198  |    179  |  0  |   99  |  [179,98,189,99,115]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    179  |  0  |   99  |  [179,98,189,99,115]  |
  1119  |                         R = R + 2;  |      2  |   200  |    179  |  0  |   99  |  [179,98,189,99,115]  |
  1123  |                         j = j + 1;  |         |   200  |    179  |  0  |  100  |  [179,98,189,99,115]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    179  |  0  |  100  |  [179,98,189,99,115]  |
  1130  |                         R = R + 2;  |      2  |   202  |    179  |  0  |  100  |  [179,98,189,99,115]  |
  1134  |                         j = j + 1;  |         |   202  |    179  |  0  |  101  |  [179,98,189,99,115]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    179  |  0  |  101  |  [179,98,189,99,115]  |
  1141  |                         R = R + 2;  |      2  |   204  |    179  |  0  |  101  |  [179,98,189,99,115]  |
  1145  |                         j = j + 1;  |         |   204  |    179  |  0  |  102  |  [179,98,189,99,115]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    179  |  0  |  102  |  [179,98,189,99,115]  |
  1152  |                         R = R + 2;  |      2  |   206  |    179  |  0  |  102  |  [179,98,189,99,115]  |
  1156  |                         j = j + 1;  |         |   206  |    179  |  0  |  103  |  [179,98,189,99,115]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    179  |  0  |  103  |  [179,98,189,99,115]  |
  1163  |                         R = R + 2;  |      2  |   208  |    179  |  0  |  103  |  [179,98,189,99,115]  |
  1167  |                         j = j + 1;  |         |   208  |    179  |  0  |  104  |  [179,98,189,99,115]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    179  |  0  |  104  |  [179,98,189,99,115]  |
  1174  |                         R = R + 2;  |      2  |   210  |    179  |  0  |  104  |  [179,98,189,99,115]  |
  1178  |                         j = j + 1;  |         |   210  |    179  |  0  |  105  |  [179,98,189,99,115]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    179  |  0  |  105  |  [179,98,189,99,115]  |
  1185  |                         R = R + 2;  |      2  |   212  |    179  |  0  |  105  |  [179,98,189,99,115]  |
  1189  |                         j = j + 1;  |         |   212  |    179  |  0  |  106  |  [179,98,189,99,115]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    179  |  0  |  106  |  [179,98,189,99,115]  |
  1196  |                         R = R + 2;  |      2  |   214  |    179  |  0  |  106  |  [179,98,189,99,115]  |
  1200  |                         j = j + 1;  |         |   214  |    179  |  0  |  107  |  [179,98,189,99,115]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    179  |  0  |  107  |  [179,98,189,99,115]  |
  1207  |                         R = R + 2;  |      2  |   216  |    179  |  0  |  107  |  [179,98,189,99,115]  |
  1211  |                         j = j + 1;  |         |   216  |    179  |  0  |  108  |  [179,98,189,99,115]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    179  |  0  |  108  |  [179,98,189,99,115]  |
  1218  |                         R = R + 2;  |      2  |   218  |    179  |  0  |  108  |  [179,98,189,99,115]  |
  1222  |                         j = j + 1;  |         |   218  |    179  |  0  |  109  |  [179,98,189,99,115]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    179  |  0  |  109  |  [179,98,189,99,115]  |
  1229  |                         R = R + 2;  |      2  |   220  |    179  |  0  |  109  |  [179,98,189,99,115]  |
  1233  |                         j = j + 1;  |         |   220  |    179  |  0  |  110  |  [179,98,189,99,115]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    179  |  0  |  110  |  [179,98,189,99,115]  |
  1240  |                         R = R + 2;  |      2  |   222  |    179  |  0  |  110  |  [179,98,189,99,115]  |
  1244  |                         j = j + 1;  |         |   222  |    179  |  0  |  111  |  [179,98,189,99,115]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    179  |  0  |  111  |  [179,98,189,99,115]  |
  1251  |                         R = R + 2;  |      2  |   224  |    179  |  0  |  111  |  [179,98,189,99,115]  |
  1255  |                         j = j + 1;  |         |   224  |    179  |  0  |  112  |  [179,98,189,99,115]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    179  |  0  |  112  |  [179,98,189,99,115]  |
  1262  |                         R = R + 2;  |      2  |   226  |    179  |  0  |  112  |  [179,98,189,99,115]  |
  1266  |                         j = j + 1;  |         |   226  |    179  |  0  |  113  |  [179,98,189,99,115]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    179  |  0  |  113  |  [179,98,189,99,115]  |
  1273  |                         R = R + 2;  |      2  |   228  |    179  |  0  |  113  |  [179,98,189,99,115]  |
  1277  |                         j = j + 1;  |         |   228  |    179  |  0  |  114  |  [179,98,189,99,115]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    179  |  0  |  114  |  [179,98,189,99,115]  |
  1284  |                         R = R + 2;  |      2  |   230  |    179  |  0  |  114  |  [179,98,189,99,115]  |
  1288  |                         j = j + 1;  |         |   230  |    179  |  0  |  115  |  [179,98,189,99,115]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    179  |  0  |  115  |  [179,98,189,99,115]  |
  1295  |                         R = R + 2;  |      2  |   232  |    179  |  0  |  115  |  [179,98,189,99,115]  |
  1299  |                         j = j + 1;  |         |   232  |    179  |  0  |  116  |  [179,98,189,99,115]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    179  |  0  |  116  |  [179,98,189,99,115]  |
  1306  |                         R = R + 2;  |      2  |   234  |    179  |  0  |  116  |  [179,98,189,99,115]  |
  1310  |                         j = j + 1;  |         |   234  |    179  |  0  |  117  |  [179,98,189,99,115]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    179  |  0  |  117  |  [179,98,189,99,115]  |
  1317  |                         R = R + 2;  |      2  |   236  |    179  |  0  |  117  |  [179,98,189,99,115]  |
  1321  |                         j = j + 1;  |         |   236  |    179  |  0  |  118  |  [179,98,189,99,115]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    179  |  0  |  118  |  [179,98,189,99,115]  |
  1328  |                         R = R + 2;  |      2  |   238  |    179  |  0  |  118  |  [179,98,189,99,115]  |
  1332  |                         j = j + 1;  |         |   238  |    179  |  0  |  119  |  [179,98,189,99,115]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    179  |  0  |  119  |  [179,98,189,99,115]  |
  1339  |                         R = R + 2;  |      2  |   240  |    179  |  0  |  119  |  [179,98,189,99,115]  |
  1343  |                         j = j + 1;  |         |   240  |    179  |  0  |  120  |  [179,98,189,99,115]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    179  |  0  |  120  |  [179,98,189,99,115]  |
  1350  |                         R = R + 2;  |      2  |   242  |    179  |  0  |  120  |  [179,98,189,99,115]  |
  1354  |                         j = j + 1;  |         |   242  |    179  |  0  |  121  |  [179,98,189,99,115]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    179  |  0  |  121  |  [179,98,189,99,115]  |
  1361  |                         R = R + 2;  |      2  |   244  |    179  |  0  |  121  |  [179,98,189,99,115]  |
  1365  |                         j = j + 1;  |         |   244  |    179  |  0  |  122  |  [179,98,189,99,115]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    179  |  0  |  122  |  [179,98,189,99,115]  |
  1372  |                         R = R + 2;  |      2  |   246  |    179  |  0  |  122  |  [179,98,189,99,115]  |
  1376  |                         j = j + 1;  |         |   246  |    179  |  0  |  123  |  [179,98,189,99,115]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    179  |  0  |  123  |  [179,98,189,99,115]  |
  1383  |                         R = R + 2;  |      2  |   248  |    179  |  0  |  123  |  [179,98,189,99,115]  |
  1387  |                         j = j + 1;  |         |   248  |    179  |  0  |  124  |  [179,98,189,99,115]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    179  |  0  |  124  |  [179,98,189,99,115]  |
  1394  |                         R = R + 2;  |      2  |   250  |    179  |  0  |  124  |  [179,98,189,99,115]  |
  1398  |                         j = j + 1;  |         |   250  |    179  |  0  |  125  |  [179,98,189,99,115]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    179  |  0  |  125  |  [179,98,189,99,115]  |
  1405  |                         R = R + 2;  |      2  |   252  |    179  |  0  |  125  |  [179,98,189,99,115]  |
  1409  |                         j = j + 1;  |         |   252  |    179  |  0  |  126  |  [179,98,189,99,115]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    179  |  0  |  126  |  [179,98,189,99,115]  |
  1416  |                         R = R + 2;  |      2  |   254  |    179  |  0  |  126  |  [179,98,189,99,115]  |
  1420  |                         j = j + 1;  |         |   254  |    179  |  0  |  127  |  [179,98,189,99,115]  |
  1421  |              resetPlaceHolder_2();  |         |   254  |    179  |  0  |  127  |  [179,98,189,99,115]  |
  1427  |                         R = R + 2;  |      2  |   256  |    179  |  0  |  127  |  [179,98,189,99,115]  |
  1431  |                         j = j + 1;  |         |   256  |    179  |  0  |  128  |  [179,98,189,99,115]  |
  1432  |              resetPlaceHolder_2();  |         |   256  |    179  |  0  |  128  |  [179,98,189,99,115]  |
  1438  |                         R = R + 2;  |      2  |   258  |    179  |  0  |  128  |  [179,98,189,99,115]  |
  1442  |                         j = j + 1;  |         |   258  |    179  |  0  |  129  |  [179,98,189,99,115]  |
  1443  |              resetPlaceHolder_2();  |         |   258  |    179  |  0  |  129  |  [179,98,189,99,115]  |
  1449  |                         R = R + 2;  |      2  |   260  |    179  |  0  |  129  |  [179,98,189,99,115]  |
  1453  |                         j = j + 1;  |         |   260  |    179  |  0  |  130  |  [179,98,189,99,115]  |
  1454  |              resetPlaceHolder_2();  |         |   260  |    179  |  0  |  130  |  [179,98,189,99,115]  |
  1460  |                         R = R + 2;  |      2  |   262  |    179  |  0  |  130  |  [179,98,189,99,115]  |
  1464  |                         j = j + 1;  |         |   262  |    179  |  0  |  131  |  [179,98,189,99,115]  |
  1465  |              resetPlaceHolder_2();  |         |   262  |    179  |  0  |  131  |  [179,98,189,99,115]  |
  1471  |                         R = R + 2;  |      2  |   264  |    179  |  0  |  131  |  [179,98,189,99,115]  |
  1475  |                         j = j + 1;  |         |   264  |    179  |  0  |  132  |  [179,98,189,99,115]  |
  1476  |              resetPlaceHolder_2();  |         |   264  |    179  |  0  |  132  |  [179,98,189,99,115]  |
  1482  |                         R = R + 2;  |      2  |   266  |    179  |  0  |  132  |  [179,98,189,99,115]  |
  1486  |                         j = j + 1;  |         |   266  |    179  |  0  |  133  |  [179,98,189,99,115]  |
  1487  |              resetPlaceHolder_2();  |         |   266  |    179  |  0  |  133  |  [179,98,189,99,115]  |
  1493  |                         R = R + 2;  |      2  |   268  |    179  |  0  |  133  |  [179,98,189,99,115]  |
  1497  |                         j = j + 1;  |         |   268  |    179  |  0  |  134  |  [179,98,189,99,115]  |
  1498  |              resetPlaceHolder_2();  |         |   268  |    179  |  0  |  134  |  [179,98,189,99,115]  |
  1504  |                         R = R + 2;  |      2  |   270  |    179  |  0  |  134  |  [179,98,189,99,115]  |
  1508  |                         j = j + 1;  |         |   270  |    179  |  0  |  135  |  [179,98,189,99,115]  |
  1509  |              resetPlaceHolder_2();  |         |   270  |    179  |  0  |  135  |  [179,98,189,99,115]  |
  1515  |                         R = R + 2;  |      2  |   272  |    179  |  0  |  135  |  [179,98,189,99,115]  |
  1519  |                         j = j + 1;  |         |   272  |    179  |  0  |  136  |  [179,98,189,99,115]  |
  1520  |              resetPlaceHolder_2();  |         |   272  |    179  |  0  |  136  |  [179,98,189,99,115]  |
  1526  |                         R = R + 2;  |      2  |   274  |    179  |  0  |  136  |  [179,98,189,99,115]  |
  1530  |                         j = j + 1;  |         |   274  |    179  |  0  |  137  |  [179,98,189,99,115]  |
  1531  |              resetPlaceHolder_2();  |         |   274  |    179  |  0  |  137  |  [179,98,189,99,115]  |
  1537  |                         R = R + 2;  |      2  |   276  |    179  |  0  |  137  |  [179,98,189,99,115]  |
  1541  |                         j = j + 1;  |         |   276  |    179  |  0  |  138  |  [179,98,189,99,115]  |
  1542  |              resetPlaceHolder_2();  |         |   276  |    179  |  0  |  138  |  [179,98,189,99,115]  |
  1548  |                         R = R + 2;  |      2  |   278  |    179  |  0  |  138  |  [179,98,189,99,115]  |
  1552  |                         j = j + 1;  |         |   278  |    179  |  0  |  139  |  [179,98,189,99,115]  |
  1553  |              resetPlaceHolder_2();  |         |   278  |    179  |  0  |  139  |  [179,98,189,99,115]  |
  1559  |                         R = R + 2;  |      2  |   280  |    179  |  0  |  139  |  [179,98,189,99,115]  |
  1563  |                         j = j + 1;  |         |   280  |    179  |  0  |  140  |  [179,98,189,99,115]  |
  1564  |              resetPlaceHolder_2();  |         |   280  |    179  |  0  |  140  |  [179,98,189,99,115]  |
  1570  |                         R = R + 2;  |      2  |   282  |    179  |  0  |  140  |  [179,98,189,99,115]  |
  1574  |                         j = j + 1;  |         |   282  |    179  |  0  |  141  |  [179,98,189,99,115]  |
  1575  |              resetPlaceHolder_2();  |         |   282  |    179  |  0  |  141  |  [179,98,189,99,115]  |
  1581  |                         R = R + 2;  |      2  |   284  |    179  |  0  |  141  |  [179,98,189,99,115]  |
  1585  |                         j = j + 1;  |         |   284  |    179  |  0  |  142  |  [179,98,189,99,115]  |
  1586  |              resetPlaceHolder_2();  |         |   284  |    179  |  0  |  142  |  [179,98,189,99,115]  |
  1592  |                         R = R + 2;  |      2  |   286  |    179  |  0  |  142  |  [179,98,189,99,115]  |
  1596  |                         j = j + 1;  |         |   286  |    179  |  0  |  143  |  [179,98,189,99,115]  |
  1597  |              resetPlaceHolder_2();  |         |   286  |    179  |  0  |  143  |  [179,98,189,99,115]  |
  1603  |                         R = R + 2;  |      2  |   288  |    179  |  0  |  143  |  [179,98,189,99,115]  |
  1607  |                         j = j + 1;  |         |   288  |    179  |  0  |  144  |  [179,98,189,99,115]  |
  1608  |              resetPlaceHolder_2();  |         |   288  |    179  |  0  |  144  |  [179,98,189,99,115]  |
  1614  |                         R = R + 2;  |      2  |   290  |    179  |  0  |  144  |  [179,98,189,99,115]  |
  1618  |                         j = j + 1;  |         |   290  |    179  |  0  |  145  |  [179,98,189,99,115]  |
  1619  |              resetPlaceHolder_2();  |         |   290  |    179  |  0  |  145  |  [179,98,189,99,115]  |
  1625  |                         R = R + 2;  |      2  |   292  |    179  |  0  |  145  |  [179,98,189,99,115]  |
  1629  |                         j = j + 1;  |         |   292  |    179  |  0  |  146  |  [179,98,189,99,115]  |
  1630  |              resetPlaceHolder_2();  |         |   292  |    179  |  0  |  146  |  [179,98,189,99,115]  |
  1636  |                         R = R + 2;  |      2  |   294  |    179  |  0  |  146  |  [179,98,189,99,115]  |
  1640  |                         j = j + 1;  |         |   294  |    179  |  0  |  147  |  [179,98,189,99,115]  |
  1641  |              resetPlaceHolder_2();  |         |   294  |    179  |  0  |  147  |  [179,98,189,99,115]  |
  1647  |                         R = R + 2;  |      2  |   296  |    179  |  0  |  147  |  [179,98,189,99,115]  |
  1651  |                         j = j + 1;  |         |   296  |    179  |  0  |  148  |  [179,98,189,99,115]  |
  1652  |              resetPlaceHolder_2();  |         |   296  |    179  |  0  |  148  |  [179,98,189,99,115]  |
  1658  |                         R = R + 2;  |      2  |   298  |    179  |  0  |  148  |  [179,98,189,99,115]  |
  1662  |                         j = j + 1;  |         |   298  |    179  |  0  |  149  |  [179,98,189,99,115]  |
  1663  |              resetPlaceHolder_2();  |         |   298  |    179  |  0  |  149  |  [179,98,189,99,115]  |
  1669  |                         R = R + 2;  |      2  |   300  |    179  |  0  |  149  |  [179,98,189,99,115]  |
  1673  |                         j = j + 1;  |         |   300  |    179  |  0  |  150  |  [179,98,189,99,115]  |
  1674  |              resetPlaceHolder_2();  |         |   300  |    179  |  0  |  150  |  [179,98,189,99,115]  |
  1680  |                         R = R + 2;  |      2  |   302  |    179  |  0  |  150  |  [179,98,189,99,115]  |
  1684  |                         j = j + 1;  |         |   302  |    179  |  0  |  151  |  [179,98,189,99,115]  |
  1685  |              resetPlaceHolder_2();  |         |   302  |    179  |  0  |  151  |  [179,98,189,99,115]  |
  1691  |                         R = R + 2;  |      2  |   304  |    179  |  0  |  151  |  [179,98,189,99,115]  |
  1695  |                         j = j + 1;  |         |   304  |    179  |  0  |  152  |  [179,98,189,99,115]  |
  1696  |              resetPlaceHolder_2();  |         |   304  |    179  |  0  |  152  |  [179,98,189,99,115]  |
  1702  |                         R = R + 2;  |      2  |   306  |    179  |  0  |  152  |  [179,98,189,99,115]  |
  1706  |                         j = j + 1;  |         |   306  |    179  |  0  |  153  |  [179,98,189,99,115]  |
  1707  |              resetPlaceHolder_2();  |         |   306  |    179  |  0  |  153  |  [179,98,189,99,115]  |
  1713  |                         R = R + 2;  |      2  |   308  |    179  |  0  |  153  |  [179,98,189,99,115]  |
  1717  |                         j = j + 1;  |         |   308  |    179  |  0  |  154  |  [179,98,189,99,115]  |
  1718  |              resetPlaceHolder_2();  |         |   308  |    179  |  0  |  154  |  [179,98,189,99,115]  |
  1724  |                         R = R + 2;  |      2  |   310  |    179  |  0  |  154  |  [179,98,189,99,115]  |
  1728  |                         j = j + 1;  |         |   310  |    179  |  0  |  155  |  [179,98,189,99,115]  |
  1729  |              resetPlaceHolder_2();  |         |   310  |    179  |  0  |  155  |  [179,98,189,99,115]  |
  1735  |                         R = R + 2;  |      2  |   312  |    179  |  0  |  155  |  [179,98,189,99,115]  |
  1739  |                         j = j + 1;  |         |   312  |    179  |  0  |  156  |  [179,98,189,99,115]  |
  1740  |              resetPlaceHolder_2();  |         |   312  |    179  |  0  |  156  |  [179,98,189,99,115]  |
  1746  |                         R = R + 2;  |      2  |   314  |    179  |  0  |  156  |  [179,98,189,99,115]  |
  1750  |                         j = j + 1;  |         |   314  |    179  |  0  |  157  |  [179,98,189,99,115]  |
  1751  |              resetPlaceHolder_2();  |         |   314  |    179  |  0  |  157  |  [179,98,189,99,115]  |
  1757  |                         R = R + 2;  |      2  |   316  |    179  |  0  |  157  |  [179,98,189,99,115]  |
  1761  |                         j = j + 1;  |         |   316  |    179  |  0  |  158  |  [179,98,189,99,115]  |
  1762  |              resetPlaceHolder_2();  |         |   316  |    179  |  0  |  158  |  [179,98,189,99,115]  |
  1768  |                         R = R + 2;  |      2  |   318  |    179  |  0  |  158  |  [179,98,189,99,115]  |
  1772  |                         j = j + 1;  |         |   318  |    179  |  0  |  159  |  [179,98,189,99,115]  |
  1773  |              resetPlaceHolder_2();  |         |   318  |    179  |  0  |  159  |  [179,98,189,99,115]  |
  1779  |                         R = R + 2;  |      2  |   320  |    179  |  0  |  159  |  [179,98,189,99,115]  |
  1783  |                         j = j + 1;  |         |   320  |    179  |  0  |  160  |  [179,98,189,99,115]  |
  1784  |              resetPlaceHolder_2();  |         |   320  |    179  |  0  |  160  |  [179,98,189,99,115]  |
  1790  |                         R = R + 2;  |      2  |   322  |    179  |  0  |  160  |  [179,98,189,99,115]  |
  1794  |                         j = j + 1;  |         |   322  |    179  |  0  |  161  |  [179,98,189,99,115]  |
  1795  |              resetPlaceHolder_2();  |         |   322  |    179  |  0  |  161  |  [179,98,189,99,115]  |
  1801  |                         R = R + 2;  |      2  |   324  |    179  |  0  |  161  |  [179,98,189,99,115]  |
  1805  |                         j = j + 1;  |         |   324  |    179  |  0  |  162  |  [179,98,189,99,115]  |
  1806  |              resetPlaceHolder_2();  |         |   324  |    179  |  0  |  162  |  [179,98,189,99,115]  |
  1812  |                         R = R + 2;  |      2  |   326  |    179  |  0  |  162  |  [179,98,189,99,115]  |
  1816  |                         j = j + 1;  |         |   326  |    179  |  0  |  163  |  [179,98,189,99,115]  |
  1817  |              resetPlaceHolder_2();  |         |   326  |    179  |  0  |  163  |  [179,98,189,99,115]  |
  1823  |                         R = R + 2;  |      2  |   328  |    179  |  0  |  163  |  [179,98,189,99,115]  |
  1827  |                         j = j + 1;  |         |   328  |    179  |  0  |  164  |  [179,98,189,99,115]  |
  1828  |              resetPlaceHolder_2();  |         |   328  |    179  |  0  |  164  |  [179,98,189,99,115]  |
  1834  |                         R = R + 2;  |      2  |   330  |    179  |  0  |  164  |  [179,98,189,99,115]  |
  1838  |                         j = j + 1;  |         |   330  |    179  |  0  |  165  |  [179,98,189,99,115]  |
  1839  |              resetPlaceHolder_2();  |         |   330  |    179  |  0  |  165  |  [179,98,189,99,115]  |
  1845  |                         R = R + 2;  |      2  |   332  |    179  |  0  |  165  |  [179,98,189,99,115]  |
  1849  |                         j = j + 1;  |         |   332  |    179  |  0  |  166  |  [179,98,189,99,115]  |
  1850  |              resetPlaceHolder_2();  |         |   332  |    179  |  0  |  166  |  [179,98,189,99,115]  |
  1856  |                         R = R + 2;  |      2  |   334  |    179  |  0  |  166  |  [179,98,189,99,115]  |
  1860  |                         j = j + 1;  |         |   334  |    179  |  0  |  167  |  [179,98,189,99,115]  |
  1861  |              resetPlaceHolder_2();  |         |   334  |    179  |  0  |  167  |  [179,98,189,99,115]  |
  1867  |                         R = R + 2;  |      2  |   336  |    179  |  0  |  167  |  [179,98,189,99,115]  |
  1871  |                         j = j + 1;  |         |   336  |    179  |  0  |  168  |  [179,98,189,99,115]  |
  1872  |              resetPlaceHolder_2();  |         |   336  |    179  |  0  |  168  |  [179,98,189,99,115]  |
  1878  |                         R = R + 2;  |      2  |   338  |    179  |  0  |  168  |  [179,98,189,99,115]  |
  1882  |                         j = j + 1;  |         |   338  |    179  |  0  |  169  |  [179,98,189,99,115]  |
  1883  |              resetPlaceHolder_2();  |         |   338  |    179  |  0  |  169  |  [179,98,189,99,115]  |
  1889  |                         R = R + 2;  |      2  |   340  |    179  |  0  |  169  |  [179,98,189,99,115]  |
  1893  |                         j = j + 1;  |         |   340  |    179  |  0  |  170  |  [179,98,189,99,115]  |
  1894  |              resetPlaceHolder_2();  |         |   340  |    179  |  0  |  170  |  [179,98,189,99,115]  |
  1900  |                         R = R + 2;  |      2  |   342  |    179  |  0  |  170  |  [179,98,189,99,115]  |
  1904  |                         j = j + 1;  |         |   342  |    179  |  0  |  171  |  [179,98,189,99,115]  |
  1905  |              resetPlaceHolder_2();  |         |   342  |    179  |  0  |  171  |  [179,98,189,99,115]  |
  1911  |                         R = R + 2;  |      2  |   344  |    179  |  0  |  171  |  [179,98,189,99,115]  |
  1915  |                         j = j + 1;  |         |   344  |    179  |  0  |  172  |  [179,98,189,99,115]  |
  1916  |              resetPlaceHolder_2();  |         |   344  |    179  |  0  |  172  |  [179,98,189,99,115]  |
  1922  |                         R = R + 2;  |      2  |   346  |    179  |  0  |  172  |  [179,98,189,99,115]  |
  1926  |                         j = j + 1;  |         |   346  |    179  |  0  |  173  |  [179,98,189,99,115]  |
  1927  |              resetPlaceHolder_2();  |         |   346  |    179  |  0  |  173  |  [179,98,189,99,115]  |
  1933  |                         R = R + 2;  |      2  |   348  |    179  |  0  |  173  |  [179,98,189,99,115]  |
  1937  |                         j = j + 1;  |         |   348  |    179  |  0  |  174  |  [179,98,189,99,115]  |
  1938  |              resetPlaceHolder_2();  |         |   348  |    179  |  0  |  174  |  [179,98,189,99,115]  |
  1944  |                         R = R + 2;  |      2  |   350  |    179  |  0  |  174  |  [179,98,189,99,115]  |
  1948  |                         j = j + 1;  |         |   350  |    179  |  0  |  175  |  [179,98,189,99,115]  |
  1949  |              resetPlaceHolder_2();  |         |   350  |    179  |  0  |  175  |  [179,98,189,99,115]  |
  1955  |                         R = R + 2;  |      2  |   352  |    179  |  0  |  175  |  [179,98,189,99,115]  |
  1959  |                         j = j + 1;  |         |   352  |    179  |  0  |  176  |  [179,98,189,99,115]  |
  1960  |              resetPlaceHolder_2();  |         |   352  |    179  |  0  |  176  |  [179,98,189,99,115]  |
  1966  |                         R = R + 2;  |      2  |   354  |    179  |  0  |  176  |  [179,98,189,99,115]  |
  1970  |                         j = j + 1;  |         |   354  |    179  |  0  |  177  |  [179,98,189,99,115]  |
  1971  |              resetPlaceHolder_2();  |         |   354  |    179  |  0  |  177  |  [179,98,189,99,115]  |
  1977  |                         R = R + 2;  |      2  |   356  |    179  |  0  |  177  |  [179,98,189,99,115]  |
  1981  |                         j = j + 1;  |         |   356  |    179  |  0  |  178  |  [179,98,189,99,115]  |
  1982  |              resetPlaceHolder_2();  |         |   356  |    179  |  0  |  178  |  [179,98,189,99,115]  |
  1988  |                         R = R + 2;  |      2  |   358  |    179  |  0  |  178  |  [179,98,189,99,115]  |
  1992  |                         j = j + 1;  |         |   358  |    179  |  0  |  179  |  [179,98,189,99,115]  |
  1993  |              resetPlaceHolder_2();  |         |   358  |    179  |  0  |  179  |  [179,98,189,99,115]  |
  1999  |                         R = R + 1;  |      1  |   359  |    179  |  0  |  179  |  [179,98,189,99,115]  |
  2003  |                         i = i + 1;  |         |   359  |    179  |  1  |  179  |  [179,98,189,99,115]  |
  2004  |              resetPlaceHolder_1();  |         |   359  |    179  |  1  |  179  |  [179,98,189,99,115]  |
  2010  |      entry = arrayRead(sorted, i);  |         |   359  |     98  |  1  |  179  |  [179,98,189,99,115]  |
  2012  |                         int j = 0;  |         |   359  |     98  |  1  |    0  |  [179,98,189,99,115]  |
  2018  |                         R = R + 2;  |      2  |   361  |     98  |  1  |    0  |  [179,98,189,99,115]  |
  2022  |                         j = j + 1;  |         |   361  |     98  |  1  |    1  |  [179,98,189,99,115]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |     98  |  1  |    1  |  [179,98,189,99,115]  |
  2029  |                         R = R + 2;  |      2  |   363  |     98  |  1  |    1  |  [179,98,189,99,115]  |
  2033  |                         j = j + 1;  |         |   363  |     98  |  1  |    2  |  [179,98,189,99,115]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |     98  |  1  |    2  |  [179,98,189,99,115]  |
  2040  |                         R = R + 2;  |      2  |   365  |     98  |  1  |    2  |  [179,98,189,99,115]  |
  2044  |                         j = j + 1;  |         |   365  |     98  |  1  |    3  |  [179,98,189,99,115]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |     98  |  1  |    3  |  [179,98,189,99,115]  |
  2051  |                         R = R + 2;  |      2  |   367  |     98  |  1  |    3  |  [179,98,189,99,115]  |
  2055  |                         j = j + 1;  |         |   367  |     98  |  1  |    4  |  [179,98,189,99,115]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |     98  |  1  |    4  |  [179,98,189,99,115]  |
  2062  |                         R = R + 2;  |      2  |   369  |     98  |  1  |    4  |  [179,98,189,99,115]  |
  2066  |                         j = j + 1;  |         |   369  |     98  |  1  |    5  |  [179,98,189,99,115]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |     98  |  1  |    5  |  [179,98,189,99,115]  |
  2073  |                         R = R + 2;  |      2  |   371  |     98  |  1  |    5  |  [179,98,189,99,115]  |
  2077  |                         j = j + 1;  |         |   371  |     98  |  1  |    6  |  [179,98,189,99,115]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |     98  |  1  |    6  |  [179,98,189,99,115]  |
  2084  |                         R = R + 2;  |      2  |   373  |     98  |  1  |    6  |  [179,98,189,99,115]  |
  2088  |                         j = j + 1;  |         |   373  |     98  |  1  |    7  |  [179,98,189,99,115]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |     98  |  1  |    7  |  [179,98,189,99,115]  |
  2095  |                         R = R + 2;  |      2  |   375  |     98  |  1  |    7  |  [179,98,189,99,115]  |
  2099  |                         j = j + 1;  |         |   375  |     98  |  1  |    8  |  [179,98,189,99,115]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |     98  |  1  |    8  |  [179,98,189,99,115]  |
  2106  |                         R = R + 2;  |      2  |   377  |     98  |  1  |    8  |  [179,98,189,99,115]  |
  2110  |                         j = j + 1;  |         |   377  |     98  |  1  |    9  |  [179,98,189,99,115]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |     98  |  1  |    9  |  [179,98,189,99,115]  |
  2117  |                         R = R + 2;  |      2  |   379  |     98  |  1  |    9  |  [179,98,189,99,115]  |
  2121  |                         j = j + 1;  |         |   379  |     98  |  1  |   10  |  [179,98,189,99,115]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |     98  |  1  |   10  |  [179,98,189,99,115]  |
  2128  |                         R = R + 2;  |      2  |   381  |     98  |  1  |   10  |  [179,98,189,99,115]  |
  2132  |                         j = j + 1;  |         |   381  |     98  |  1  |   11  |  [179,98,189,99,115]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |     98  |  1  |   11  |  [179,98,189,99,115]  |
  2139  |                         R = R + 2;  |      2  |   383  |     98  |  1  |   11  |  [179,98,189,99,115]  |
  2143  |                         j = j + 1;  |         |   383  |     98  |  1  |   12  |  [179,98,189,99,115]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |     98  |  1  |   12  |  [179,98,189,99,115]  |
  2150  |                         R = R + 2;  |      2  |   385  |     98  |  1  |   12  |  [179,98,189,99,115]  |
  2154  |                         j = j + 1;  |         |   385  |     98  |  1  |   13  |  [179,98,189,99,115]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |     98  |  1  |   13  |  [179,98,189,99,115]  |
  2161  |                         R = R + 2;  |      2  |   387  |     98  |  1  |   13  |  [179,98,189,99,115]  |
  2165  |                         j = j + 1;  |         |   387  |     98  |  1  |   14  |  [179,98,189,99,115]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |     98  |  1  |   14  |  [179,98,189,99,115]  |
  2172  |                         R = R + 2;  |      2  |   389  |     98  |  1  |   14  |  [179,98,189,99,115]  |
  2176  |                         j = j + 1;  |         |   389  |     98  |  1  |   15  |  [179,98,189,99,115]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |     98  |  1  |   15  |  [179,98,189,99,115]  |
  2183  |                         R = R + 2;  |      2  |   391  |     98  |  1  |   15  |  [179,98,189,99,115]  |
  2187  |                         j = j + 1;  |         |   391  |     98  |  1  |   16  |  [179,98,189,99,115]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |     98  |  1  |   16  |  [179,98,189,99,115]  |
  2194  |                         R = R + 2;  |      2  |   393  |     98  |  1  |   16  |  [179,98,189,99,115]  |
  2198  |                         j = j + 1;  |         |   393  |     98  |  1  |   17  |  [179,98,189,99,115]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |     98  |  1  |   17  |  [179,98,189,99,115]  |
  2205  |                         R = R + 2;  |      2  |   395  |     98  |  1  |   17  |  [179,98,189,99,115]  |
  2209  |                         j = j + 1;  |         |   395  |     98  |  1  |   18  |  [179,98,189,99,115]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |     98  |  1  |   18  |  [179,98,189,99,115]  |
  2216  |                         R = R + 2;  |      2  |   397  |     98  |  1  |   18  |  [179,98,189,99,115]  |
  2220  |                         j = j + 1;  |         |   397  |     98  |  1  |   19  |  [179,98,189,99,115]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |     98  |  1  |   19  |  [179,98,189,99,115]  |
  2227  |                         R = R + 2;  |      2  |   399  |     98  |  1  |   19  |  [179,98,189,99,115]  |
  2231  |                         j = j + 1;  |         |   399  |     98  |  1  |   20  |  [179,98,189,99,115]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |     98  |  1  |   20  |  [179,98,189,99,115]  |
  2238  |                         R = R + 2;  |      2  |   401  |     98  |  1  |   20  |  [179,98,189,99,115]  |
  2242  |                         j = j + 1;  |         |   401  |     98  |  1  |   21  |  [179,98,189,99,115]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |     98  |  1  |   21  |  [179,98,189,99,115]  |
  2249  |                         R = R + 2;  |      2  |   403  |     98  |  1  |   21  |  [179,98,189,99,115]  |
  2253  |                         j = j + 1;  |         |   403  |     98  |  1  |   22  |  [179,98,189,99,115]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |     98  |  1  |   22  |  [179,98,189,99,115]  |
  2260  |                         R = R + 2;  |      2  |   405  |     98  |  1  |   22  |  [179,98,189,99,115]  |
  2264  |                         j = j + 1;  |         |   405  |     98  |  1  |   23  |  [179,98,189,99,115]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |     98  |  1  |   23  |  [179,98,189,99,115]  |
  2271  |                         R = R + 2;  |      2  |   407  |     98  |  1  |   23  |  [179,98,189,99,115]  |
  2275  |                         j = j + 1;  |         |   407  |     98  |  1  |   24  |  [179,98,189,99,115]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |     98  |  1  |   24  |  [179,98,189,99,115]  |
  2282  |                         R = R + 2;  |      2  |   409  |     98  |  1  |   24  |  [179,98,189,99,115]  |
  2286  |                         j = j + 1;  |         |   409  |     98  |  1  |   25  |  [179,98,189,99,115]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |     98  |  1  |   25  |  [179,98,189,99,115]  |
  2293  |                         R = R + 2;  |      2  |   411  |     98  |  1  |   25  |  [179,98,189,99,115]  |
  2297  |                         j = j + 1;  |         |   411  |     98  |  1  |   26  |  [179,98,189,99,115]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |     98  |  1  |   26  |  [179,98,189,99,115]  |
  2304  |                         R = R + 2;  |      2  |   413  |     98  |  1  |   26  |  [179,98,189,99,115]  |
  2308  |                         j = j + 1;  |         |   413  |     98  |  1  |   27  |  [179,98,189,99,115]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |     98  |  1  |   27  |  [179,98,189,99,115]  |
  2315  |                         R = R + 2;  |      2  |   415  |     98  |  1  |   27  |  [179,98,189,99,115]  |
  2319  |                         j = j + 1;  |         |   415  |     98  |  1  |   28  |  [179,98,189,99,115]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |     98  |  1  |   28  |  [179,98,189,99,115]  |
  2326  |                         R = R + 2;  |      2  |   417  |     98  |  1  |   28  |  [179,98,189,99,115]  |
  2330  |                         j = j + 1;  |         |   417  |     98  |  1  |   29  |  [179,98,189,99,115]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |     98  |  1  |   29  |  [179,98,189,99,115]  |
  2337  |                         R = R + 2;  |      2  |   419  |     98  |  1  |   29  |  [179,98,189,99,115]  |
  2341  |                         j = j + 1;  |         |   419  |     98  |  1  |   30  |  [179,98,189,99,115]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |     98  |  1  |   30  |  [179,98,189,99,115]  |
  2348  |                         R = R + 2;  |      2  |   421  |     98  |  1  |   30  |  [179,98,189,99,115]  |
  2352  |                         j = j + 1;  |         |   421  |     98  |  1  |   31  |  [179,98,189,99,115]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |     98  |  1  |   31  |  [179,98,189,99,115]  |
  2359  |                         R = R + 2;  |      2  |   423  |     98  |  1  |   31  |  [179,98,189,99,115]  |
  2363  |                         j = j + 1;  |         |   423  |     98  |  1  |   32  |  [179,98,189,99,115]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |     98  |  1  |   32  |  [179,98,189,99,115]  |
  2370  |                         R = R + 2;  |      2  |   425  |     98  |  1  |   32  |  [179,98,189,99,115]  |
  2374  |                         j = j + 1;  |         |   425  |     98  |  1  |   33  |  [179,98,189,99,115]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |     98  |  1  |   33  |  [179,98,189,99,115]  |
  2381  |                         R = R + 2;  |      2  |   427  |     98  |  1  |   33  |  [179,98,189,99,115]  |
  2385  |                         j = j + 1;  |         |   427  |     98  |  1  |   34  |  [179,98,189,99,115]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |     98  |  1  |   34  |  [179,98,189,99,115]  |
  2392  |                         R = R + 2;  |      2  |   429  |     98  |  1  |   34  |  [179,98,189,99,115]  |
  2396  |                         j = j + 1;  |         |   429  |     98  |  1  |   35  |  [179,98,189,99,115]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |     98  |  1  |   35  |  [179,98,189,99,115]  |
  2403  |                         R = R + 2;  |      2  |   431  |     98  |  1  |   35  |  [179,98,189,99,115]  |
  2407  |                         j = j + 1;  |         |   431  |     98  |  1  |   36  |  [179,98,189,99,115]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |     98  |  1  |   36  |  [179,98,189,99,115]  |
  2414  |                         R = R + 2;  |      2  |   433  |     98  |  1  |   36  |  [179,98,189,99,115]  |
  2418  |                         j = j + 1;  |         |   433  |     98  |  1  |   37  |  [179,98,189,99,115]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |     98  |  1  |   37  |  [179,98,189,99,115]  |
  2425  |                         R = R + 2;  |      2  |   435  |     98  |  1  |   37  |  [179,98,189,99,115]  |
  2429  |                         j = j + 1;  |         |   435  |     98  |  1  |   38  |  [179,98,189,99,115]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |     98  |  1  |   38  |  [179,98,189,99,115]  |
  2436  |                         R = R + 2;  |      2  |   437  |     98  |  1  |   38  |  [179,98,189,99,115]  |
  2440  |                         j = j + 1;  |         |   437  |     98  |  1  |   39  |  [179,98,189,99,115]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |     98  |  1  |   39  |  [179,98,189,99,115]  |
  2447  |                         R = R + 2;  |      2  |   439  |     98  |  1  |   39  |  [179,98,189,99,115]  |
  2451  |                         j = j + 1;  |         |   439  |     98  |  1  |   40  |  [179,98,189,99,115]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |     98  |  1  |   40  |  [179,98,189,99,115]  |
  2458  |                         R = R + 2;  |      2  |   441  |     98  |  1  |   40  |  [179,98,189,99,115]  |
  2462  |                         j = j + 1;  |         |   441  |     98  |  1  |   41  |  [179,98,189,99,115]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |     98  |  1  |   41  |  [179,98,189,99,115]  |
  2469  |                         R = R + 2;  |      2  |   443  |     98  |  1  |   41  |  [179,98,189,99,115]  |
  2473  |                         j = j + 1;  |         |   443  |     98  |  1  |   42  |  [179,98,189,99,115]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |     98  |  1  |   42  |  [179,98,189,99,115]  |
  2480  |                         R = R + 2;  |      2  |   445  |     98  |  1  |   42  |  [179,98,189,99,115]  |
  2484  |                         j = j + 1;  |         |   445  |     98  |  1  |   43  |  [179,98,189,99,115]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |     98  |  1  |   43  |  [179,98,189,99,115]  |
  2491  |                         R = R + 2;  |      2  |   447  |     98  |  1  |   43  |  [179,98,189,99,115]  |
  2495  |                         j = j + 1;  |         |   447  |     98  |  1  |   44  |  [179,98,189,99,115]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |     98  |  1  |   44  |  [179,98,189,99,115]  |
  2502  |                         R = R + 2;  |      2  |   449  |     98  |  1  |   44  |  [179,98,189,99,115]  |
  2506  |                         j = j + 1;  |         |   449  |     98  |  1  |   45  |  [179,98,189,99,115]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |     98  |  1  |   45  |  [179,98,189,99,115]  |
  2513  |                         R = R + 2;  |      2  |   451  |     98  |  1  |   45  |  [179,98,189,99,115]  |
  2517  |                         j = j + 1;  |         |   451  |     98  |  1  |   46  |  [179,98,189,99,115]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |     98  |  1  |   46  |  [179,98,189,99,115]  |
  2524  |                         R = R + 2;  |      2  |   453  |     98  |  1  |   46  |  [179,98,189,99,115]  |
  2528  |                         j = j + 1;  |         |   453  |     98  |  1  |   47  |  [179,98,189,99,115]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |     98  |  1  |   47  |  [179,98,189,99,115]  |
  2535  |                         R = R + 2;  |      2  |   455  |     98  |  1  |   47  |  [179,98,189,99,115]  |
  2539  |                         j = j + 1;  |         |   455  |     98  |  1  |   48  |  [179,98,189,99,115]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |     98  |  1  |   48  |  [179,98,189,99,115]  |
  2546  |                         R = R + 2;  |      2  |   457  |     98  |  1  |   48  |  [179,98,189,99,115]  |
  2550  |                         j = j + 1;  |         |   457  |     98  |  1  |   49  |  [179,98,189,99,115]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |     98  |  1  |   49  |  [179,98,189,99,115]  |
  2557  |                         R = R + 2;  |      2  |   459  |     98  |  1  |   49  |  [179,98,189,99,115]  |
  2561  |                         j = j + 1;  |         |   459  |     98  |  1  |   50  |  [179,98,189,99,115]  |
  2562  |              resetPlaceHolder_2();  |         |   459  |     98  |  1  |   50  |  [179,98,189,99,115]  |
  2568  |                         R = R + 2;  |      2  |   461  |     98  |  1  |   50  |  [179,98,189,99,115]  |
  2572  |                         j = j + 1;  |         |   461  |     98  |  1  |   51  |  [179,98,189,99,115]  |
  2573  |              resetPlaceHolder_2();  |         |   461  |     98  |  1  |   51  |  [179,98,189,99,115]  |
  2579  |                         R = R + 2;  |      2  |   463  |     98  |  1  |   51  |  [179,98,189,99,115]  |
  2583  |                         j = j + 1;  |         |   463  |     98  |  1  |   52  |  [179,98,189,99,115]  |
  2584  |              resetPlaceHolder_2();  |         |   463  |     98  |  1  |   52  |  [179,98,189,99,115]  |
  2590  |                         R = R + 2;  |      2  |   465  |     98  |  1  |   52  |  [179,98,189,99,115]  |
  2594  |                         j = j + 1;  |         |   465  |     98  |  1  |   53  |  [179,98,189,99,115]  |
  2595  |              resetPlaceHolder_2();  |         |   465  |     98  |  1  |   53  |  [179,98,189,99,115]  |
  2601  |                         R = R + 2;  |      2  |   467  |     98  |  1  |   53  |  [179,98,189,99,115]  |
  2605  |                         j = j + 1;  |         |   467  |     98  |  1  |   54  |  [179,98,189,99,115]  |
  2606  |              resetPlaceHolder_2();  |         |   467  |     98  |  1  |   54  |  [179,98,189,99,115]  |
  2612  |                         R = R + 2;  |      2  |   469  |     98  |  1  |   54  |  [179,98,189,99,115]  |
  2616  |                         j = j + 1;  |         |   469  |     98  |  1  |   55  |  [179,98,189,99,115]  |
  2617  |              resetPlaceHolder_2();  |         |   469  |     98  |  1  |   55  |  [179,98,189,99,115]  |
  2623  |                         R = R + 2;  |      2  |   471  |     98  |  1  |   55  |  [179,98,189,99,115]  |
  2627  |                         j = j + 1;  |         |   471  |     98  |  1  |   56  |  [179,98,189,99,115]  |
  2628  |              resetPlaceHolder_2();  |         |   471  |     98  |  1  |   56  |  [179,98,189,99,115]  |
  2634  |                         R = R + 2;  |      2  |   473  |     98  |  1  |   56  |  [179,98,189,99,115]  |
  2638  |                         j = j + 1;  |         |   473  |     98  |  1  |   57  |  [179,98,189,99,115]  |
  2639  |              resetPlaceHolder_2();  |         |   473  |     98  |  1  |   57  |  [179,98,189,99,115]  |
  2645  |                         R = R + 2;  |      2  |   475  |     98  |  1  |   57  |  [179,98,189,99,115]  |
  2649  |                         j = j + 1;  |         |   475  |     98  |  1  |   58  |  [179,98,189,99,115]  |
  2650  |              resetPlaceHolder_2();  |         |   475  |     98  |  1  |   58  |  [179,98,189,99,115]  |
  2656  |                         R = R + 2;  |      2  |   477  |     98  |  1  |   58  |  [179,98,189,99,115]  |
  2660  |                         j = j + 1;  |         |   477  |     98  |  1  |   59  |  [179,98,189,99,115]  |
  2661  |              resetPlaceHolder_2();  |         |   477  |     98  |  1  |   59  |  [179,98,189,99,115]  |
  2667  |                         R = R + 2;  |      2  |   479  |     98  |  1  |   59  |  [179,98,189,99,115]  |
  2671  |                         j = j + 1;  |         |   479  |     98  |  1  |   60  |  [179,98,189,99,115]  |
  2672  |              resetPlaceHolder_2();  |         |   479  |     98  |  1  |   60  |  [179,98,189,99,115]  |
  2678  |                         R = R + 2;  |      2  |   481  |     98  |  1  |   60  |  [179,98,189,99,115]  |
  2682  |                         j = j + 1;  |         |   481  |     98  |  1  |   61  |  [179,98,189,99,115]  |
  2683  |              resetPlaceHolder_2();  |         |   481  |     98  |  1  |   61  |  [179,98,189,99,115]  |
  2689  |                         R = R + 2;  |      2  |   483  |     98  |  1  |   61  |  [179,98,189,99,115]  |
  2693  |                         j = j + 1;  |         |   483  |     98  |  1  |   62  |  [179,98,189,99,115]  |
  2694  |              resetPlaceHolder_2();  |         |   483  |     98  |  1  |   62  |  [179,98,189,99,115]  |
  2700  |                         R = R + 2;  |      2  |   485  |     98  |  1  |   62  |  [179,98,189,99,115]  |
  2704  |                         j = j + 1;  |         |   485  |     98  |  1  |   63  |  [179,98,189,99,115]  |
  2705  |              resetPlaceHolder_2();  |         |   485  |     98  |  1  |   63  |  [179,98,189,99,115]  |
  2711  |                         R = R + 2;  |      2  |   487  |     98  |  1  |   63  |  [179,98,189,99,115]  |
  2715  |                         j = j + 1;  |         |   487  |     98  |  1  |   64  |  [179,98,189,99,115]  |
  2716  |              resetPlaceHolder_2();  |         |   487  |     98  |  1  |   64  |  [179,98,189,99,115]  |
  2722  |                         R = R + 2;  |      2  |   489  |     98  |  1  |   64  |  [179,98,189,99,115]  |
  2726  |                         j = j + 1;  |         |   489  |     98  |  1  |   65  |  [179,98,189,99,115]  |
  2727  |              resetPlaceHolder_2();  |         |   489  |     98  |  1  |   65  |  [179,98,189,99,115]  |
  2733  |                         R = R + 2;  |      2  |   491  |     98  |  1  |   65  |  [179,98,189,99,115]  |
  2737  |                         j = j + 1;  |         |   491  |     98  |  1  |   66  |  [179,98,189,99,115]  |
  2738  |              resetPlaceHolder_2();  |         |   491  |     98  |  1  |   66  |  [179,98,189,99,115]  |
  2744  |                         R = R + 2;  |      2  |   493  |     98  |  1  |   66  |  [179,98,189,99,115]  |
  2748  |                         j = j + 1;  |         |   493  |     98  |  1  |   67  |  [179,98,189,99,115]  |
  2749  |              resetPlaceHolder_2();  |         |   493  |     98  |  1  |   67  |  [179,98,189,99,115]  |
  2755  |                         R = R + 2;  |      2  |   495  |     98  |  1  |   67  |  [179,98,189,99,115]  |
  2759  |                         j = j + 1;  |         |   495  |     98  |  1  |   68  |  [179,98,189,99,115]  |
  2760  |              resetPlaceHolder_2();  |         |   495  |     98  |  1  |   68  |  [179,98,189,99,115]  |
  2766  |                         R = R + 2;  |      2  |   497  |     98  |  1  |   68  |  [179,98,189,99,115]  |
  2770  |                         j = j + 1;  |         |   497  |     98  |  1  |   69  |  [179,98,189,99,115]  |
  2771  |              resetPlaceHolder_2();  |         |   497  |     98  |  1  |   69  |  [179,98,189,99,115]  |
  2777  |                         R = R + 2;  |      2  |   499  |     98  |  1  |   69  |  [179,98,189,99,115]  |
  2781  |                         j = j + 1;  |         |   499  |     98  |  1  |   70  |  [179,98,189,99,115]  |
  2782  |              resetPlaceHolder_2();  |         |   499  |     98  |  1  |   70  |  [179,98,189,99,115]  |
  2788  |                         R = R + 2;  |      2  |   501  |     98  |  1  |   70  |  [179,98,189,99,115]  |
  2792  |                         j = j + 1;  |         |   501  |     98  |  1  |   71  |  [179,98,189,99,115]  |
  2793  |              resetPlaceHolder_2();  |         |   501  |     98  |  1  |   71  |  [179,98,189,99,115]  |
  2799  |                         R = R + 2;  |      2  |   503  |     98  |  1  |   71  |  [179,98,189,99,115]  |
  2803  |                         j = j + 1;  |         |   503  |     98  |  1  |   72  |  [179,98,189,99,115]  |
  2804  |              resetPlaceHolder_2();  |         |   503  |     98  |  1  |   72  |  [179,98,189,99,115]  |
  2810  |                         R = R + 2;  |      2  |   505  |     98  |  1  |   72  |  [179,98,189,99,115]  |
  2814  |                         j = j + 1;  |         |   505  |     98  |  1  |   73  |  [179,98,189,99,115]  |
  2815  |              resetPlaceHolder_2();  |         |   505  |     98  |  1  |   73  |  [179,98,189,99,115]  |
  2821  |                         R = R + 2;  |      2  |   507  |     98  |  1  |   73  |  [179,98,189,99,115]  |
  2825  |                         j = j + 1;  |         |   507  |     98  |  1  |   74  |  [179,98,189,99,115]  |
  2826  |              resetPlaceHolder_2();  |         |   507  |     98  |  1  |   74  |  [179,98,189,99,115]  |
  2832  |                         R = R + 2;  |      2  |   509  |     98  |  1  |   74  |  [179,98,189,99,115]  |
  2836  |                         j = j + 1;  |         |   509  |     98  |  1  |   75  |  [179,98,189,99,115]  |
  2837  |              resetPlaceHolder_2();  |         |   509  |     98  |  1  |   75  |  [179,98,189,99,115]  |
  2843  |                         R = R + 2;  |      2  |   511  |     98  |  1  |   75  |  [179,98,189,99,115]  |
  2847  |                         j = j + 1;  |         |   511  |     98  |  1  |   76  |  [179,98,189,99,115]  |
  2848  |              resetPlaceHolder_2();  |         |   511  |     98  |  1  |   76  |  [179,98,189,99,115]  |
  2854  |                         R = R + 2;  |      2  |   513  |     98  |  1  |   76  |  [179,98,189,99,115]  |
  2858  |                         j = j + 1;  |         |   513  |     98  |  1  |   77  |  [179,98,189,99,115]  |
  2859  |              resetPlaceHolder_2();  |         |   513  |     98  |  1  |   77  |  [179,98,189,99,115]  |
  2865  |                         R = R + 2;  |      2  |   515  |     98  |  1  |   77  |  [179,98,189,99,115]  |
  2869  |                         j = j + 1;  |         |   515  |     98  |  1  |   78  |  [179,98,189,99,115]  |
  2870  |              resetPlaceHolder_2();  |         |   515  |     98  |  1  |   78  |  [179,98,189,99,115]  |
  2876  |                         R = R + 2;  |      2  |   517  |     98  |  1  |   78  |  [179,98,189,99,115]  |
  2880  |                         j = j + 1;  |         |   517  |     98  |  1  |   79  |  [179,98,189,99,115]  |
  2881  |              resetPlaceHolder_2();  |         |   517  |     98  |  1  |   79  |  [179,98,189,99,115]  |
  2887  |                         R = R + 2;  |      2  |   519  |     98  |  1  |   79  |  [179,98,189,99,115]  |
  2891  |                         j = j + 1;  |         |   519  |     98  |  1  |   80  |  [179,98,189,99,115]  |
  2892  |              resetPlaceHolder_2();  |         |   519  |     98  |  1  |   80  |  [179,98,189,99,115]  |
  2898  |                         R = R + 2;  |      2  |   521  |     98  |  1  |   80  |  [179,98,189,99,115]  |
  2902  |                         j = j + 1;  |         |   521  |     98  |  1  |   81  |  [179,98,189,99,115]  |
  2903  |              resetPlaceHolder_2();  |         |   521  |     98  |  1  |   81  |  [179,98,189,99,115]  |
  2909  |                         R = R + 2;  |      2  |   523  |     98  |  1  |   81  |  [179,98,189,99,115]  |
  2913  |                         j = j + 1;  |         |   523  |     98  |  1  |   82  |  [179,98,189,99,115]  |
  2914  |              resetPlaceHolder_2();  |         |   523  |     98  |  1  |   82  |  [179,98,189,99,115]  |
  2920  |                         R = R + 2;  |      2  |   525  |     98  |  1  |   82  |  [179,98,189,99,115]  |
  2924  |                         j = j + 1;  |         |   525  |     98  |  1  |   83  |  [179,98,189,99,115]  |
  2925  |              resetPlaceHolder_2();  |         |   525  |     98  |  1  |   83  |  [179,98,189,99,115]  |
  2931  |                         R = R + 2;  |      2  |   527  |     98  |  1  |   83  |  [179,98,189,99,115]  |
  2935  |                         j = j + 1;  |         |   527  |     98  |  1  |   84  |  [179,98,189,99,115]  |
  2936  |              resetPlaceHolder_2();  |         |   527  |     98  |  1  |   84  |  [179,98,189,99,115]  |
  2942  |                         R = R + 2;  |      2  |   529  |     98  |  1  |   84  |  [179,98,189,99,115]  |
  2946  |                         j = j + 1;  |         |   529  |     98  |  1  |   85  |  [179,98,189,99,115]  |
  2947  |              resetPlaceHolder_2();  |         |   529  |     98  |  1  |   85  |  [179,98,189,99,115]  |
  2953  |                         R = R + 2;  |      2  |   531  |     98  |  1  |   85  |  [179,98,189,99,115]  |
  2957  |                         j = j + 1;  |         |   531  |     98  |  1  |   86  |  [179,98,189,99,115]  |
  2958  |              resetPlaceHolder_2();  |         |   531  |     98  |  1  |   86  |  [179,98,189,99,115]  |
  2964  |                         R = R + 2;  |      2  |   533  |     98  |  1  |   86  |  [179,98,189,99,115]  |
  2968  |                         j = j + 1;  |         |   533  |     98  |  1  |   87  |  [179,98,189,99,115]  |
  2969  |              resetPlaceHolder_2();  |         |   533  |     98  |  1  |   87  |  [179,98,189,99,115]  |
  2975  |                         R = R + 2;  |      2  |   535  |     98  |  1  |   87  |  [179,98,189,99,115]  |
  2979  |                         j = j + 1;  |         |   535  |     98  |  1  |   88  |  [179,98,189,99,115]  |
  2980  |              resetPlaceHolder_2();  |         |   535  |     98  |  1  |   88  |  [179,98,189,99,115]  |
  2986  |                         R = R + 2;  |      2  |   537  |     98  |  1  |   88  |  [179,98,189,99,115]  |
  2990  |                         j = j + 1;  |         |   537  |     98  |  1  |   89  |  [179,98,189,99,115]  |
  2991  |              resetPlaceHolder_2();  |         |   537  |     98  |  1  |   89  |  [179,98,189,99,115]  |
  2997  |                         R = R + 2;  |      2  |   539  |     98  |  1  |   89  |  [179,98,189,99,115]  |
  3001  |                         j = j + 1;  |         |   539  |     98  |  1  |   90  |  [179,98,189,99,115]  |
  3002  |              resetPlaceHolder_2();  |         |   539  |     98  |  1  |   90  |  [179,98,189,99,115]  |
  3008  |                         R = R + 2;  |      2  |   541  |     98  |  1  |   90  |  [179,98,189,99,115]  |
  3012  |                         j = j + 1;  |         |   541  |     98  |  1  |   91  |  [179,98,189,99,115]  |
  3013  |              resetPlaceHolder_2();  |         |   541  |     98  |  1  |   91  |  [179,98,189,99,115]  |
  3019  |                         R = R + 2;  |      2  |   543  |     98  |  1  |   91  |  [179,98,189,99,115]  |
  3023  |                         j = j + 1;  |         |   543  |     98  |  1  |   92  |  [179,98,189,99,115]  |
  3024  |              resetPlaceHolder_2();  |         |   543  |     98  |  1  |   92  |  [179,98,189,99,115]  |
  3030  |                         R = R + 2;  |      2  |   545  |     98  |  1  |   92  |  [179,98,189,99,115]  |
  3034  |                         j = j + 1;  |         |   545  |     98  |  1  |   93  |  [179,98,189,99,115]  |
  3035  |              resetPlaceHolder_2();  |         |   545  |     98  |  1  |   93  |  [179,98,189,99,115]  |
  3041  |                         R = R + 2;  |      2  |   547  |     98  |  1  |   93  |  [179,98,189,99,115]  |
  3045  |                         j = j + 1;  |         |   547  |     98  |  1  |   94  |  [179,98,189,99,115]  |
  3046  |              resetPlaceHolder_2();  |         |   547  |     98  |  1  |   94  |  [179,98,189,99,115]  |
  3052  |                         R = R + 2;  |      2  |   549  |     98  |  1  |   94  |  [179,98,189,99,115]  |
  3056  |                         j = j + 1;  |         |   549  |     98  |  1  |   95  |  [179,98,189,99,115]  |
  3057  |              resetPlaceHolder_2();  |         |   549  |     98  |  1  |   95  |  [179,98,189,99,115]  |
  3063  |                         R = R + 2;  |      2  |   551  |     98  |  1  |   95  |  [179,98,189,99,115]  |
  3067  |                         j = j + 1;  |         |   551  |     98  |  1  |   96  |  [179,98,189,99,115]  |
  3068  |              resetPlaceHolder_2();  |         |   551  |     98  |  1  |   96  |  [179,98,189,99,115]  |
  3074  |                         R = R + 2;  |      2  |   553  |     98  |  1  |   96  |  [179,98,189,99,115]  |
  3078  |                         j = j + 1;  |         |   553  |     98  |  1  |   97  |  [179,98,189,99,115]  |
  3079  |              resetPlaceHolder_2();  |         |   553  |     98  |  1  |   97  |  [179,98,189,99,115]  |
  3085  |                         R = R + 2;  |      2  |   555  |     98  |  1  |   97  |  [179,98,189,99,115]  |
  3089  |                         j = j + 1;  |         |   555  |     98  |  1  |   98  |  [179,98,189,99,115]  |
  3090  |              resetPlaceHolder_2();  |         |   555  |     98  |  1  |   98  |  [179,98,189,99,115]  |
  3096  |                         R = R + 1;  |      1  |   556  |     98  |  1  |   98  |  [179,98,189,99,115]  |
  3100  |                         i = i + 1;  |         |   556  |     98  |  2  |   98  |  [179,98,189,99,115]  |
  3101  |              resetPlaceHolder_1();  |         |   556  |     98  |  2  |   98  |  [179,98,189,99,115]  |
  3107  |      entry = arrayRead(sorted, i);  |         |   556  |    189  |  2  |   98  |  [179,98,189,99,115]  |
  3109  |                         int j = 0;  |         |   556  |    189  |  2  |    0  |  [179,98,189,99,115]  |
  3115  |                         R = R + 2;  |      2  |   558  |    189  |  2  |    0  |  [179,98,189,99,115]  |
  3119  |                         j = j + 1;  |         |   558  |    189  |  2  |    1  |  [179,98,189,99,115]  |
  3120  |              resetPlaceHolder_2();  |         |   558  |    189  |  2  |    1  |  [179,98,189,99,115]  |
  3126  |                         R = R + 2;  |      2  |   560  |    189  |  2  |    1  |  [179,98,189,99,115]  |
  3130  |                         j = j + 1;  |         |   560  |    189  |  2  |    2  |  [179,98,189,99,115]  |
  3131  |              resetPlaceHolder_2();  |         |   560  |    189  |  2  |    2  |  [179,98,189,99,115]  |
  3137  |                         R = R + 2;  |      2  |   562  |    189  |  2  |    2  |  [179,98,189,99,115]  |
  3141  |                         j = j + 1;  |         |   562  |    189  |  2  |    3  |  [179,98,189,99,115]  |
  3142  |              resetPlaceHolder_2();  |         |   562  |    189  |  2  |    3  |  [179,98,189,99,115]  |
  3148  |                         R = R + 2;  |      2  |   564  |    189  |  2  |    3  |  [179,98,189,99,115]  |
  3152  |                         j = j + 1;  |         |   564  |    189  |  2  |    4  |  [179,98,189,99,115]  |
  3153  |              resetPlaceHolder_2();  |         |   564  |    189  |  2  |    4  |  [179,98,189,99,115]  |
  3159  |                         R = R + 2;  |      2  |   566  |    189  |  2  |    4  |  [179,98,189,99,115]  |
  3163  |                         j = j + 1;  |         |   566  |    189  |  2  |    5  |  [179,98,189,99,115]  |
  3164  |              resetPlaceHolder_2();  |         |   566  |    189  |  2  |    5  |  [179,98,189,99,115]  |
  3170  |                         R = R + 2;  |      2  |   568  |    189  |  2  |    5  |  [179,98,189,99,115]  |
  3174  |                         j = j + 1;  |         |   568  |    189  |  2  |    6  |  [179,98,189,99,115]  |
  3175  |              resetPlaceHolder_2();  |         |   568  |    189  |  2  |    6  |  [179,98,189,99,115]  |
  3181  |                         R = R + 2;  |      2  |   570  |    189  |  2  |    6  |  [179,98,189,99,115]  |
  3185  |                         j = j + 1;  |         |   570  |    189  |  2  |    7  |  [179,98,189,99,115]  |
  3186  |              resetPlaceHolder_2();  |         |   570  |    189  |  2  |    7  |  [179,98,189,99,115]  |
  3192  |                         R = R + 2;  |      2  |   572  |    189  |  2  |    7  |  [179,98,189,99,115]  |
  3196  |                         j = j + 1;  |         |   572  |    189  |  2  |    8  |  [179,98,189,99,115]  |
  3197  |              resetPlaceHolder_2();  |         |   572  |    189  |  2  |    8  |  [179,98,189,99,115]  |
  3203  |                         R = R + 2;  |      2  |   574  |    189  |  2  |    8  |  [179,98,189,99,115]  |
  3207  |                         j = j + 1;  |         |   574  |    189  |  2  |    9  |  [179,98,189,99,115]  |
  3208  |              resetPlaceHolder_2();  |         |   574  |    189  |  2  |    9  |  [179,98,189,99,115]  |
  3214  |                         R = R + 2;  |      2  |   576  |    189  |  2  |    9  |  [179,98,189,99,115]  |
  3218  |                         j = j + 1;  |         |   576  |    189  |  2  |   10  |  [179,98,189,99,115]  |
  3219  |              resetPlaceHolder_2();  |         |   576  |    189  |  2  |   10  |  [179,98,189,99,115]  |
  3225  |                         R = R + 2;  |      2  |   578  |    189  |  2  |   10  |  [179,98,189,99,115]  |
  3229  |                         j = j + 1;  |         |   578  |    189  |  2  |   11  |  [179,98,189,99,115]  |
  3230  |              resetPlaceHolder_2();  |         |   578  |    189  |  2  |   11  |  [179,98,189,99,115]  |
  3236  |                         R = R + 2;  |      2  |   580  |    189  |  2  |   11  |  [179,98,189,99,115]  |
  3240  |                         j = j + 1;  |         |   580  |    189  |  2  |   12  |  [179,98,189,99,115]  |
  3241  |              resetPlaceHolder_2();  |         |   580  |    189  |  2  |   12  |  [179,98,189,99,115]  |
  3247  |                         R = R + 2;  |      2  |   582  |    189  |  2  |   12  |  [179,98,189,99,115]  |
  3251  |                         j = j + 1;  |         |   582  |    189  |  2  |   13  |  [179,98,189,99,115]  |
  3252  |              resetPlaceHolder_2();  |         |   582  |    189  |  2  |   13  |  [179,98,189,99,115]  |
  3258  |                         R = R + 2;  |      2  |   584  |    189  |  2  |   13  |  [179,98,189,99,115]  |
  3262  |                         j = j + 1;  |         |   584  |    189  |  2  |   14  |  [179,98,189,99,115]  |
  3263  |              resetPlaceHolder_2();  |         |   584  |    189  |  2  |   14  |  [179,98,189,99,115]  |
  3269  |                         R = R + 2;  |      2  |   586  |    189  |  2  |   14  |  [179,98,189,99,115]  |
  3273  |                         j = j + 1;  |         |   586  |    189  |  2  |   15  |  [179,98,189,99,115]  |
  3274  |              resetPlaceHolder_2();  |         |   586  |    189  |  2  |   15  |  [179,98,189,99,115]  |
  3280  |                         R = R + 2;  |      2  |   588  |    189  |  2  |   15  |  [179,98,189,99,115]  |
  3284  |                         j = j + 1;  |         |   588  |    189  |  2  |   16  |  [179,98,189,99,115]  |
  3285  |              resetPlaceHolder_2();  |         |   588  |    189  |  2  |   16  |  [179,98,189,99,115]  |
  3291  |                         R = R + 2;  |      2  |   590  |    189  |  2  |   16  |  [179,98,189,99,115]  |
  3295  |                         j = j + 1;  |         |   590  |    189  |  2  |   17  |  [179,98,189,99,115]  |
  3296  |              resetPlaceHolder_2();  |         |   590  |    189  |  2  |   17  |  [179,98,189,99,115]  |
  3302  |                         R = R + 2;  |      2  |   592  |    189  |  2  |   17  |  [179,98,189,99,115]  |
  3306  |                         j = j + 1;  |         |   592  |    189  |  2  |   18  |  [179,98,189,99,115]  |
  3307  |              resetPlaceHolder_2();  |         |   592  |    189  |  2  |   18  |  [179,98,189,99,115]  |
  3313  |                         R = R + 2;  |      2  |   594  |    189  |  2  |   18  |  [179,98,189,99,115]  |
  3317  |                         j = j + 1;  |         |   594  |    189  |  2  |   19  |  [179,98,189,99,115]  |
  3318  |              resetPlaceHolder_2();  |         |   594  |    189  |  2  |   19  |  [179,98,189,99,115]  |
  3324  |                         R = R + 2;  |      2  |   596  |    189  |  2  |   19  |  [179,98,189,99,115]  |
  3328  |                         j = j + 1;  |         |   596  |    189  |  2  |   20  |  [179,98,189,99,115]  |
  3329  |              resetPlaceHolder_2();  |         |   596  |    189  |  2  |   20  |  [179,98,189,99,115]  |
  3335  |                         R = R + 2;  |      2  |   598  |    189  |  2  |   20  |  [179,98,189,99,115]  |
  3339  |                         j = j + 1;  |         |   598  |    189  |  2  |   21  |  [179,98,189,99,115]  |
  3340  |              resetPlaceHolder_2();  |         |   598  |    189  |  2  |   21  |  [179,98,189,99,115]  |
  3346  |                         R = R + 2;  |      2  |   600  |    189  |  2  |   21  |  [179,98,189,99,115]  |
  3350  |                         j = j + 1;  |         |   600  |    189  |  2  |   22  |  [179,98,189,99,115]  |
  3351  |              resetPlaceHolder_2();  |         |   600  |    189  |  2  |   22  |  [179,98,189,99,115]  |
  3357  |                         R = R + 2;  |      2  |   602  |    189  |  2  |   22  |  [179,98,189,99,115]  |
  3361  |                         j = j + 1;  |         |   602  |    189  |  2  |   23  |  [179,98,189,99,115]  |
  3362  |              resetPlaceHolder_2();  |         |   602  |    189  |  2  |   23  |  [179,98,189,99,115]  |
  3368  |                         R = R + 2;  |      2  |   604  |    189  |  2  |   23  |  [179,98,189,99,115]  |
  3372  |                         j = j + 1;  |         |   604  |    189  |  2  |   24  |  [179,98,189,99,115]  |
  3373  |              resetPlaceHolder_2();  |         |   604  |    189  |  2  |   24  |  [179,98,189,99,115]  |
  3379  |                         R = R + 2;  |      2  |   606  |    189  |  2  |   24  |  [179,98,189,99,115]  |
  3383  |                         j = j + 1;  |         |   606  |    189  |  2  |   25  |  [179,98,189,99,115]  |
  3384  |              resetPlaceHolder_2();  |         |   606  |    189  |  2  |   25  |  [179,98,189,99,115]  |
  3390  |                         R = R + 2;  |      2  |   608  |    189  |  2  |   25  |  [179,98,189,99,115]  |
  3394  |                         j = j + 1;  |         |   608  |    189  |  2  |   26  |  [179,98,189,99,115]  |
  3395  |              resetPlaceHolder_2();  |         |   608  |    189  |  2  |   26  |  [179,98,189,99,115]  |
  3401  |                         R = R + 2;  |      2  |   610  |    189  |  2  |   26  |  [179,98,189,99,115]  |
  3405  |                         j = j + 1;  |         |   610  |    189  |  2  |   27  |  [179,98,189,99,115]  |
  3406  |              resetPlaceHolder_2();  |         |   610  |    189  |  2  |   27  |  [179,98,189,99,115]  |
  3412  |                         R = R + 2;  |      2  |   612  |    189  |  2  |   27  |  [179,98,189,99,115]  |
  3416  |                         j = j + 1;  |         |   612  |    189  |  2  |   28  |  [179,98,189,99,115]  |
  3417  |              resetPlaceHolder_2();  |         |   612  |    189  |  2  |   28  |  [179,98,189,99,115]  |
  3423  |                         R = R + 2;  |      2  |   614  |    189  |  2  |   28  |  [179,98,189,99,115]  |
  3427  |                         j = j + 1;  |         |   614  |    189  |  2  |   29  |  [179,98,189,99,115]  |
  3428  |              resetPlaceHolder_2();  |         |   614  |    189  |  2  |   29  |  [179,98,189,99,115]  |
  3434  |                         R = R + 2;  |      2  |   616  |    189  |  2  |   29  |  [179,98,189,99,115]  |
  3438  |                         j = j + 1;  |         |   616  |    189  |  2  |   30  |  [179,98,189,99,115]  |
  3439  |              resetPlaceHolder_2();  |         |   616  |    189  |  2  |   30  |  [179,98,189,99,115]  |
  3445  |                         R = R + 2;  |      2  |   618  |    189  |  2  |   30  |  [179,98,189,99,115]  |
  3449  |                         j = j + 1;  |         |   618  |    189  |  2  |   31  |  [179,98,189,99,115]  |
  3450  |              resetPlaceHolder_2();  |         |   618  |    189  |  2  |   31  |  [179,98,189,99,115]  |
  3456  |                         R = R + 2;  |      2  |   620  |    189  |  2  |   31  |  [179,98,189,99,115]  |
  3460  |                         j = j + 1;  |         |   620  |    189  |  2  |   32  |  [179,98,189,99,115]  |
  3461  |              resetPlaceHolder_2();  |         |   620  |    189  |  2  |   32  |  [179,98,189,99,115]  |
  3467  |                         R = R + 2;  |      2  |   622  |    189  |  2  |   32  |  [179,98,189,99,115]  |
  3471  |                         j = j + 1;  |         |   622  |    189  |  2  |   33  |  [179,98,189,99,115]  |
  3472  |              resetPlaceHolder_2();  |         |   622  |    189  |  2  |   33  |  [179,98,189,99,115]  |
  3478  |                         R = R + 2;  |      2  |   624  |    189  |  2  |   33  |  [179,98,189,99,115]  |
  3482  |                         j = j + 1;  |         |   624  |    189  |  2  |   34  |  [179,98,189,99,115]  |
  3483  |              resetPlaceHolder_2();  |         |   624  |    189  |  2  |   34  |  [179,98,189,99,115]  |
  3489  |                         R = R + 2;  |      2  |   626  |    189  |  2  |   34  |  [179,98,189,99,115]  |
  3493  |                         j = j + 1;  |         |   626  |    189  |  2  |   35  |  [179,98,189,99,115]  |
  3494  |              resetPlaceHolder_2();  |         |   626  |    189  |  2  |   35  |  [179,98,189,99,115]  |
  3500  |                         R = R + 2;  |      2  |   628  |    189  |  2  |   35  |  [179,98,189,99,115]  |
  3504  |                         j = j + 1;  |         |   628  |    189  |  2  |   36  |  [179,98,189,99,115]  |
  3505  |              resetPlaceHolder_2();  |         |   628  |    189  |  2  |   36  |  [179,98,189,99,115]  |
  3511  |                         R = R + 2;  |      2  |   630  |    189  |  2  |   36  |  [179,98,189,99,115]  |
  3515  |                         j = j + 1;  |         |   630  |    189  |  2  |   37  |  [179,98,189,99,115]  |
  3516  |              resetPlaceHolder_2();  |         |   630  |    189  |  2  |   37  |  [179,98,189,99,115]  |
  3522  |                         R = R + 2;  |      2  |   632  |    189  |  2  |   37  |  [179,98,189,99,115]  |
  3526  |                         j = j + 1;  |         |   632  |    189  |  2  |   38  |  [179,98,189,99,115]  |
  3527  |              resetPlaceHolder_2();  |         |   632  |    189  |  2  |   38  |  [179,98,189,99,115]  |
  3533  |                         R = R + 2;  |      2  |   634  |    189  |  2  |   38  |  [179,98,189,99,115]  |
  3537  |                         j = j + 1;  |         |   634  |    189  |  2  |   39  |  [179,98,189,99,115]  |
  3538  |              resetPlaceHolder_2();  |         |   634  |    189  |  2  |   39  |  [179,98,189,99,115]  |
  3544  |                         R = R + 2;  |      2  |   636  |    189  |  2  |   39  |  [179,98,189,99,115]  |
  3548  |                         j = j + 1;  |         |   636  |    189  |  2  |   40  |  [179,98,189,99,115]  |
  3549  |              resetPlaceHolder_2();  |         |   636  |    189  |  2  |   40  |  [179,98,189,99,115]  |
  3555  |                         R = R + 2;  |      2  |   638  |    189  |  2  |   40  |  [179,98,189,99,115]  |
  3559  |                         j = j + 1;  |         |   638  |    189  |  2  |   41  |  [179,98,189,99,115]  |
  3560  |              resetPlaceHolder_2();  |         |   638  |    189  |  2  |   41  |  [179,98,189,99,115]  |
  3566  |                         R = R + 2;  |      2  |   640  |    189  |  2  |   41  |  [179,98,189,99,115]  |
  3570  |                         j = j + 1;  |         |   640  |    189  |  2  |   42  |  [179,98,189,99,115]  |
  3571  |              resetPlaceHolder_2();  |         |   640  |    189  |  2  |   42  |  [179,98,189,99,115]  |
  3577  |                         R = R + 2;  |      2  |   642  |    189  |  2  |   42  |  [179,98,189,99,115]  |
  3581  |                         j = j + 1;  |         |   642  |    189  |  2  |   43  |  [179,98,189,99,115]  |
  3582  |              resetPlaceHolder_2();  |         |   642  |    189  |  2  |   43  |  [179,98,189,99,115]  |
  3588  |                         R = R + 2;  |      2  |   644  |    189  |  2  |   43  |  [179,98,189,99,115]  |
  3592  |                         j = j + 1;  |         |   644  |    189  |  2  |   44  |  [179,98,189,99,115]  |
  3593  |              resetPlaceHolder_2();  |         |   644  |    189  |  2  |   44  |  [179,98,189,99,115]  |
  3599  |                         R = R + 2;  |      2  |   646  |    189  |  2  |   44  |  [179,98,189,99,115]  |
  3603  |                         j = j + 1;  |         |   646  |    189  |  2  |   45  |  [179,98,189,99,115]  |
  3604  |              resetPlaceHolder_2();  |         |   646  |    189  |  2  |   45  |  [179,98,189,99,115]  |
  3610  |                         R = R + 2;  |      2  |   648  |    189  |  2  |   45  |  [179,98,189,99,115]  |
  3614  |                         j = j + 1;  |         |   648  |    189  |  2  |   46  |  [179,98,189,99,115]  |
  3615  |              resetPlaceHolder_2();  |         |   648  |    189  |  2  |   46  |  [179,98,189,99,115]  |
  3621  |                         R = R + 2;  |      2  |   650  |    189  |  2  |   46  |  [179,98,189,99,115]  |
  3625  |                         j = j + 1;  |         |   650  |    189  |  2  |   47  |  [179,98,189,99,115]  |
  3626  |              resetPlaceHolder_2();  |         |   650  |    189  |  2  |   47  |  [179,98,189,99,115]  |
  3632  |                         R = R + 2;  |      2  |   652  |    189  |  2  |   47  |  [179,98,189,99,115]  |
  3636  |                         j = j + 1;  |         |   652  |    189  |  2  |   48  |  [179,98,189,99,115]  |
  3637  |              resetPlaceHolder_2();  |         |   652  |    189  |  2  |   48  |  [179,98,189,99,115]  |
  3643  |                         R = R + 2;  |      2  |   654  |    189  |  2  |   48  |  [179,98,189,99,115]  |
  3647  |                         j = j + 1;  |         |   654  |    189  |  2  |   49  |  [179,98,189,99,115]  |
  3648  |              resetPlaceHolder_2();  |         |   654  |    189  |  2  |   49  |  [179,98,189,99,115]  |
  3654  |                         R = R + 2;  |      2  |   656  |    189  |  2  |   49  |  [179,98,189,99,115]  |
  3658  |                         j = j + 1;  |         |   656  |    189  |  2  |   50  |  [179,98,189,99,115]  |
  3659  |              resetPlaceHolder_2();  |         |   656  |    189  |  2  |   50  |  [179,98,189,99,115]  |
  3665  |                         R = R + 2;  |      2  |   658  |    189  |  2  |   50  |  [179,98,189,99,115]  |
  3669  |                         j = j + 1;  |         |   658  |    189  |  2  |   51  |  [179,98,189,99,115]  |
  3670  |              resetPlaceHolder_2();  |         |   658  |    189  |  2  |   51  |  [179,98,189,99,115]  |
  3676  |                         R = R + 2;  |      2  |   660  |    189  |  2  |   51  |  [179,98,189,99,115]  |
  3680  |                         j = j + 1;  |         |   660  |    189  |  2  |   52  |  [179,98,189,99,115]  |
  3681  |              resetPlaceHolder_2();  |         |   660  |    189  |  2  |   52  |  [179,98,189,99,115]  |
  3687  |                         R = R + 2;  |      2  |   662  |    189  |  2  |   52  |  [179,98,189,99,115]  |
  3691  |                         j = j + 1;  |         |   662  |    189  |  2  |   53  |  [179,98,189,99,115]  |
  3692  |              resetPlaceHolder_2();  |         |   662  |    189  |  2  |   53  |  [179,98,189,99,115]  |
  3698  |                         R = R + 2;  |      2  |   664  |    189  |  2  |   53  |  [179,98,189,99,115]  |
  3702  |                         j = j + 1;  |         |   664  |    189  |  2  |   54  |  [179,98,189,99,115]  |
  3703  |              resetPlaceHolder_2();  |         |   664  |    189  |  2  |   54  |  [179,98,189,99,115]  |
  3709  |                         R = R + 2;  |      2  |   666  |    189  |  2  |   54  |  [179,98,189,99,115]  |
  3713  |                         j = j + 1;  |         |   666  |    189  |  2  |   55  |  [179,98,189,99,115]  |
  3714  |              resetPlaceHolder_2();  |         |   666  |    189  |  2  |   55  |  [179,98,189,99,115]  |
  3720  |                         R = R + 2;  |      2  |   668  |    189  |  2  |   55  |  [179,98,189,99,115]  |
  3724  |                         j = j + 1;  |         |   668  |    189  |  2  |   56  |  [179,98,189,99,115]  |
  3725  |              resetPlaceHolder_2();  |         |   668  |    189  |  2  |   56  |  [179,98,189,99,115]  |
  3731  |                         R = R + 2;  |      2  |   670  |    189  |  2  |   56  |  [179,98,189,99,115]  |
  3735  |                         j = j + 1;  |         |   670  |    189  |  2  |   57  |  [179,98,189,99,115]  |
  3736  |              resetPlaceHolder_2();  |         |   670  |    189  |  2  |   57  |  [179,98,189,99,115]  |
  3742  |                         R = R + 2;  |      2  |   672  |    189  |  2  |   57  |  [179,98,189,99,115]  |
  3746  |                         j = j + 1;  |         |   672  |    189  |  2  |   58  |  [179,98,189,99,115]  |
  3747  |              resetPlaceHolder_2();  |         |   672  |    189  |  2  |   58  |  [179,98,189,99,115]  |
  3753  |                         R = R + 2;  |      2  |   674  |    189  |  2  |   58  |  [179,98,189,99,115]  |
  3757  |                         j = j + 1;  |         |   674  |    189  |  2  |   59  |  [179,98,189,99,115]  |
  3758  |              resetPlaceHolder_2();  |         |   674  |    189  |  2  |   59  |  [179,98,189,99,115]  |
  3764  |                         R = R + 2;  |      2  |   676  |    189  |  2  |   59  |  [179,98,189,99,115]  |
  3768  |                         j = j + 1;  |         |   676  |    189  |  2  |   60  |  [179,98,189,99,115]  |
  3769  |              resetPlaceHolder_2();  |         |   676  |    189  |  2  |   60  |  [179,98,189,99,115]  |
  3775  |                         R = R + 2;  |      2  |   678  |    189  |  2  |   60  |  [179,98,189,99,115]  |
  3779  |                         j = j + 1;  |         |   678  |    189  |  2  |   61  |  [179,98,189,99,115]  |
  3780  |              resetPlaceHolder_2();  |         |   678  |    189  |  2  |   61  |  [179,98,189,99,115]  |
  3786  |                         R = R + 2;  |      2  |   680  |    189  |  2  |   61  |  [179,98,189,99,115]  |
  3790  |                         j = j + 1;  |         |   680  |    189  |  2  |   62  |  [179,98,189,99,115]  |
  3791  |              resetPlaceHolder_2();  |         |   680  |    189  |  2  |   62  |  [179,98,189,99,115]  |
  3797  |                         R = R + 2;  |      2  |   682  |    189  |  2  |   62  |  [179,98,189,99,115]  |
  3801  |                         j = j + 1;  |         |   682  |    189  |  2  |   63  |  [179,98,189,99,115]  |
  3802  |              resetPlaceHolder_2();  |         |   682  |    189  |  2  |   63  |  [179,98,189,99,115]  |
  3808  |                         R = R + 2;  |      2  |   684  |    189  |  2  |   63  |  [179,98,189,99,115]  |
  3812  |                         j = j + 1;  |         |   684  |    189  |  2  |   64  |  [179,98,189,99,115]  |
  3813  |              resetPlaceHolder_2();  |         |   684  |    189  |  2  |   64  |  [179,98,189,99,115]  |
  3819  |                         R = R + 2;  |      2  |   686  |    189  |  2  |   64  |  [179,98,189,99,115]  |
  3823  |                         j = j + 1;  |         |   686  |    189  |  2  |   65  |  [179,98,189,99,115]  |
  3824  |              resetPlaceHolder_2();  |         |   686  |    189  |  2  |   65  |  [179,98,189,99,115]  |
  3830  |                         R = R + 2;  |      2  |   688  |    189  |  2  |   65  |  [179,98,189,99,115]  |
  3834  |                         j = j + 1;  |         |   688  |    189  |  2  |   66  |  [179,98,189,99,115]  |
  3835  |              resetPlaceHolder_2();  |         |   688  |    189  |  2  |   66  |  [179,98,189,99,115]  |
  3841  |                         R = R + 2;  |      2  |   690  |    189  |  2  |   66  |  [179,98,189,99,115]  |
  3845  |                         j = j + 1;  |         |   690  |    189  |  2  |   67  |  [179,98,189,99,115]  |
  3846  |              resetPlaceHolder_2();  |         |   690  |    189  |  2  |   67  |  [179,98,189,99,115]  |
  3852  |                         R = R + 2;  |      2  |   692  |    189  |  2  |   67  |  [179,98,189,99,115]  |
  3856  |                         j = j + 1;  |         |   692  |    189  |  2  |   68  |  [179,98,189,99,115]  |
  3857  |              resetPlaceHolder_2();  |         |   692  |    189  |  2  |   68  |  [179,98,189,99,115]  |
  3863  |                         R = R + 2;  |      2  |   694  |    189  |  2  |   68  |  [179,98,189,99,115]  |
  3867  |                         j = j + 1;  |         |   694  |    189  |  2  |   69  |  [179,98,189,99,115]  |
  3868  |              resetPlaceHolder_2();  |         |   694  |    189  |  2  |   69  |  [179,98,189,99,115]  |
  3874  |                         R = R + 2;  |      2  |   696  |    189  |  2  |   69  |  [179,98,189,99,115]  |
  3878  |                         j = j + 1;  |         |   696  |    189  |  2  |   70  |  [179,98,189,99,115]  |
  3879  |              resetPlaceHolder_2();  |         |   696  |    189  |  2  |   70  |  [179,98,189,99,115]  |
  3885  |                         R = R + 2;  |      2  |   698  |    189  |  2  |   70  |  [179,98,189,99,115]  |
  3889  |                         j = j + 1;  |         |   698  |    189  |  2  |   71  |  [179,98,189,99,115]  |
  3890  |              resetPlaceHolder_2();  |         |   698  |    189  |  2  |   71  |  [179,98,189,99,115]  |
  3896  |                         R = R + 2;  |      2  |   700  |    189  |  2  |   71  |  [179,98,189,99,115]  |
  3900  |                         j = j + 1;  |         |   700  |    189  |  2  |   72  |  [179,98,189,99,115]  |
  3901  |              resetPlaceHolder_2();  |         |   700  |    189  |  2  |   72  |  [179,98,189,99,115]  |
  3907  |                         R = R + 2;  |      2  |   702  |    189  |  2  |   72  |  [179,98,189,99,115]  |
  3911  |                         j = j + 1;  |         |   702  |    189  |  2  |   73  |  [179,98,189,99,115]  |
  3912  |              resetPlaceHolder_2();  |         |   702  |    189  |  2  |   73  |  [179,98,189,99,115]  |
  3918  |                         R = R + 2;  |      2  |   704  |    189  |  2  |   73  |  [179,98,189,99,115]  |
  3922  |                         j = j + 1;  |         |   704  |    189  |  2  |   74  |  [179,98,189,99,115]  |
  3923  |              resetPlaceHolder_2();  |         |   704  |    189  |  2  |   74  |  [179,98,189,99,115]  |
  3929  |                         R = R + 2;  |      2  |   706  |    189  |  2  |   74  |  [179,98,189,99,115]  |
  3933  |                         j = j + 1;  |         |   706  |    189  |  2  |   75  |  [179,98,189,99,115]  |
  3934  |              resetPlaceHolder_2();  |         |   706  |    189  |  2  |   75  |  [179,98,189,99,115]  |
  3940  |                         R = R + 2;  |      2  |   708  |    189  |  2  |   75  |  [179,98,189,99,115]  |
  3944  |                         j = j + 1;  |         |   708  |    189  |  2  |   76  |  [179,98,189,99,115]  |
  3945  |              resetPlaceHolder_2();  |         |   708  |    189  |  2  |   76  |  [179,98,189,99,115]  |
  3951  |                         R = R + 2;  |      2  |   710  |    189  |  2  |   76  |  [179,98,189,99,115]  |
  3955  |                         j = j + 1;  |         |   710  |    189  |  2  |   77  |  [179,98,189,99,115]  |
  3956  |              resetPlaceHolder_2();  |         |   710  |    189  |  2  |   77  |  [179,98,189,99,115]  |
  3962  |                         R = R + 2;  |      2  |   712  |    189  |  2  |   77  |  [179,98,189,99,115]  |
  3966  |                         j = j + 1;  |         |   712  |    189  |  2  |   78  |  [179,98,189,99,115]  |
  3967  |              resetPlaceHolder_2();  |         |   712  |    189  |  2  |   78  |  [179,98,189,99,115]  |
  3973  |                         R = R + 2;  |      2  |   714  |    189  |  2  |   78  |  [179,98,189,99,115]  |
  3977  |                         j = j + 1;  |         |   714  |    189  |  2  |   79  |  [179,98,189,99,115]  |
  3978  |              resetPlaceHolder_2();  |         |   714  |    189  |  2  |   79  |  [179,98,189,99,115]  |
  3984  |                         R = R + 2;  |      2  |   716  |    189  |  2  |   79  |  [179,98,189,99,115]  |
  3988  |                         j = j + 1;  |         |   716  |    189  |  2  |   80  |  [179,98,189,99,115]  |
  3989  |              resetPlaceHolder_2();  |         |   716  |    189  |  2  |   80  |  [179,98,189,99,115]  |
  3995  |                         R = R + 2;  |      2  |   718  |    189  |  2  |   80  |  [179,98,189,99,115]  |
  3999  |                         j = j + 1;  |         |   718  |    189  |  2  |   81  |  [179,98,189,99,115]  |
  4000  |              resetPlaceHolder_2();  |         |   718  |    189  |  2  |   81  |  [179,98,189,99,115]  |
  4006  |                         R = R + 2;  |      2  |   720  |    189  |  2  |   81  |  [179,98,189,99,115]  |
  4010  |                         j = j + 1;  |         |   720  |    189  |  2  |   82  |  [179,98,189,99,115]  |
  4011  |              resetPlaceHolder_2();  |         |   720  |    189  |  2  |   82  |  [179,98,189,99,115]  |
  4017  |                         R = R + 2;  |      2  |   722  |    189  |  2  |   82  |  [179,98,189,99,115]  |
  4021  |                         j = j + 1;  |         |   722  |    189  |  2  |   83  |  [179,98,189,99,115]  |
  4022  |              resetPlaceHolder_2();  |         |   722  |    189  |  2  |   83  |  [179,98,189,99,115]  |
  4028  |                         R = R + 2;  |      2  |   724  |    189  |  2  |   83  |  [179,98,189,99,115]  |
  4032  |                         j = j + 1;  |         |   724  |    189  |  2  |   84  |  [179,98,189,99,115]  |
  4033  |              resetPlaceHolder_2();  |         |   724  |    189  |  2  |   84  |  [179,98,189,99,115]  |
  4039  |                         R = R + 2;  |      2  |   726  |    189  |  2  |   84  |  [179,98,189,99,115]  |
  4043  |                         j = j + 1;  |         |   726  |    189  |  2  |   85  |  [179,98,189,99,115]  |
  4044  |              resetPlaceHolder_2();  |         |   726  |    189  |  2  |   85  |  [179,98,189,99,115]  |
  4050  |                         R = R + 2;  |      2  |   728  |    189  |  2  |   85  |  [179,98,189,99,115]  |
  4054  |                         j = j + 1;  |         |   728  |    189  |  2  |   86  |  [179,98,189,99,115]  |
  4055  |              resetPlaceHolder_2();  |         |   728  |    189  |  2  |   86  |  [179,98,189,99,115]  |
  4061  |                         R = R + 2;  |      2  |   730  |    189  |  2  |   86  |  [179,98,189,99,115]  |
  4065  |                         j = j + 1;  |         |   730  |    189  |  2  |   87  |  [179,98,189,99,115]  |
  4066  |              resetPlaceHolder_2();  |         |   730  |    189  |  2  |   87  |  [179,98,189,99,115]  |
  4072  |                         R = R + 2;  |      2  |   732  |    189  |  2  |   87  |  [179,98,189,99,115]  |
  4076  |                         j = j + 1;  |         |   732  |    189  |  2  |   88  |  [179,98,189,99,115]  |
  4077  |              resetPlaceHolder_2();  |         |   732  |    189  |  2  |   88  |  [179,98,189,99,115]  |
  4083  |                         R = R + 2;  |      2  |   734  |    189  |  2  |   88  |  [179,98,189,99,115]  |
  4087  |                         j = j + 1;  |         |   734  |    189  |  2  |   89  |  [179,98,189,99,115]  |
  4088  |              resetPlaceHolder_2();  |         |   734  |    189  |  2  |   89  |  [179,98,189,99,115]  |
  4094  |                         R = R + 2;  |      2  |   736  |    189  |  2  |   89  |  [179,98,189,99,115]  |
  4098  |                         j = j + 1;  |         |   736  |    189  |  2  |   90  |  [179,98,189,99,115]  |
  4099  |              resetPlaceHolder_2();  |         |   736  |    189  |  2  |   90  |  [179,98,189,99,115]  |
  4105  |                         R = R + 2;  |      2  |   738  |    189  |  2  |   90  |  [179,98,189,99,115]  |
  4109  |                         j = j + 1;  |         |   738  |    189  |  2  |   91  |  [179,98,189,99,115]  |
  4110  |              resetPlaceHolder_2();  |         |   738  |    189  |  2  |   91  |  [179,98,189,99,115]  |
  4116  |                         R = R + 2;  |      2  |   740  |    189  |  2  |   91  |  [179,98,189,99,115]  |
  4120  |                         j = j + 1;  |         |   740  |    189  |  2  |   92  |  [179,98,189,99,115]  |
  4121  |              resetPlaceHolder_2();  |         |   740  |    189  |  2  |   92  |  [179,98,189,99,115]  |
  4127  |                         R = R + 2;  |      2  |   742  |    189  |  2  |   92  |  [179,98,189,99,115]  |
  4131  |                         j = j + 1;  |         |   742  |    189  |  2  |   93  |  [179,98,189,99,115]  |
  4132  |              resetPlaceHolder_2();  |         |   742  |    189  |  2  |   93  |  [179,98,189,99,115]  |
  4138  |                         R = R + 2;  |      2  |   744  |    189  |  2  |   93  |  [179,98,189,99,115]  |
  4142  |                         j = j + 1;  |         |   744  |    189  |  2  |   94  |  [179,98,189,99,115]  |
  4143  |              resetPlaceHolder_2();  |         |   744  |    189  |  2  |   94  |  [179,98,189,99,115]  |
  4149  |                         R = R + 2;  |      2  |   746  |    189  |  2  |   94  |  [179,98,189,99,115]  |
  4153  |                         j = j + 1;  |         |   746  |    189  |  2  |   95  |  [179,98,189,99,115]  |
  4154  |              resetPlaceHolder_2();  |         |   746  |    189  |  2  |   95  |  [179,98,189,99,115]  |
  4160  |                         R = R + 2;  |      2  |   748  |    189  |  2  |   95  |  [179,98,189,99,115]  |
  4164  |                         j = j + 1;  |         |   748  |    189  |  2  |   96  |  [179,98,189,99,115]  |
  4165  |              resetPlaceHolder_2();  |         |   748  |    189  |  2  |   96  |  [179,98,189,99,115]  |
  4171  |                         R = R + 2;  |      2  |   750  |    189  |  2  |   96  |  [179,98,189,99,115]  |
  4175  |                         j = j + 1;  |         |   750  |    189  |  2  |   97  |  [179,98,189,99,115]  |
  4176  |              resetPlaceHolder_2();  |         |   750  |    189  |  2  |   97  |  [179,98,189,99,115]  |
  4182  |                         R = R + 2;  |      2  |   752  |    189  |  2  |   97  |  [179,98,189,99,115]  |
  4186  |                         j = j + 1;  |         |   752  |    189  |  2  |   98  |  [179,98,189,99,115]  |
  4187  |              resetPlaceHolder_2();  |         |   752  |    189  |  2  |   98  |  [179,98,189,99,115]  |
  4193  |                         R = R + 2;  |      2  |   754  |    189  |  2  |   98  |  [179,98,189,99,115]  |
  4197  |                         j = j + 1;  |         |   754  |    189  |  2  |   99  |  [179,98,189,99,115]  |
  4198  |              resetPlaceHolder_2();  |         |   754  |    189  |  2  |   99  |  [179,98,189,99,115]  |
  4204  |                         R = R + 2;  |      2  |   756  |    189  |  2  |   99  |  [179,98,189,99,115]  |
  4208  |                         j = j + 1;  |         |   756  |    189  |  2  |  100  |  [179,98,189,99,115]  |
  4209  |              resetPlaceHolder_2();  |         |   756  |    189  |  2  |  100  |  [179,98,189,99,115]  |
  4215  |                         R = R + 2;  |      2  |   758  |    189  |  2  |  100  |  [179,98,189,99,115]  |
  4219  |                         j = j + 1;  |         |   758  |    189  |  2  |  101  |  [179,98,189,99,115]  |
  4220  |              resetPlaceHolder_2();  |         |   758  |    189  |  2  |  101  |  [179,98,189,99,115]  |
  4226  |                         R = R + 2;  |      2  |   760  |    189  |  2  |  101  |  [179,98,189,99,115]  |
  4230  |                         j = j + 1;  |         |   760  |    189  |  2  |  102  |  [179,98,189,99,115]  |
  4231  |              resetPlaceHolder_2();  |         |   760  |    189  |  2  |  102  |  [179,98,189,99,115]  |
  4237  |                         R = R + 2;  |      2  |   762  |    189  |  2  |  102  |  [179,98,189,99,115]  |
  4241  |                         j = j + 1;  |         |   762  |    189  |  2  |  103  |  [179,98,189,99,115]  |
  4242  |              resetPlaceHolder_2();  |         |   762  |    189  |  2  |  103  |  [179,98,189,99,115]  |
  4248  |                         R = R + 2;  |      2  |   764  |    189  |  2  |  103  |  [179,98,189,99,115]  |
  4252  |                         j = j + 1;  |         |   764  |    189  |  2  |  104  |  [179,98,189,99,115]  |
  4253  |              resetPlaceHolder_2();  |         |   764  |    189  |  2  |  104  |  [179,98,189,99,115]  |
  4259  |                         R = R + 2;  |      2  |   766  |    189  |  2  |  104  |  [179,98,189,99,115]  |
  4263  |                         j = j + 1;  |         |   766  |    189  |  2  |  105  |  [179,98,189,99,115]  |
  4264  |              resetPlaceHolder_2();  |         |   766  |    189  |  2  |  105  |  [179,98,189,99,115]  |
  4270  |                         R = R + 2;  |      2  |   768  |    189  |  2  |  105  |  [179,98,189,99,115]  |
  4274  |                         j = j + 1;  |         |   768  |    189  |  2  |  106  |  [179,98,189,99,115]  |
  4275  |              resetPlaceHolder_2();  |         |   768  |    189  |  2  |  106  |  [179,98,189,99,115]  |
  4281  |                         R = R + 2;  |      2  |   770  |    189  |  2  |  106  |  [179,98,189,99,115]  |
  4285  |                         j = j + 1;  |         |   770  |    189  |  2  |  107  |  [179,98,189,99,115]  |
  4286  |              resetPlaceHolder_2();  |         |   770  |    189  |  2  |  107  |  [179,98,189,99,115]  |
  4292  |                         R = R + 2;  |      2  |   772  |    189  |  2  |  107  |  [179,98,189,99,115]  |
  4296  |                         j = j + 1;  |         |   772  |    189  |  2  |  108  |  [179,98,189,99,115]  |
  4297  |              resetPlaceHolder_2();  |         |   772  |    189  |  2  |  108  |  [179,98,189,99,115]  |
  4303  |                         R = R + 2;  |      2  |   774  |    189  |  2  |  108  |  [179,98,189,99,115]  |
  4307  |                         j = j + 1;  |         |   774  |    189  |  2  |  109  |  [179,98,189,99,115]  |
  4308  |              resetPlaceHolder_2();  |         |   774  |    189  |  2  |  109  |  [179,98,189,99,115]  |
  4314  |                         R = R + 2;  |      2  |   776  |    189  |  2  |  109  |  [179,98,189,99,115]  |
  4318  |                         j = j + 1;  |         |   776  |    189  |  2  |  110  |  [179,98,189,99,115]  |
  4319  |              resetPlaceHolder_2();  |         |   776  |    189  |  2  |  110  |  [179,98,189,99,115]  |
  4325  |                         R = R + 2;  |      2  |   778  |    189  |  2  |  110  |  [179,98,189,99,115]  |
  4329  |                         j = j + 1;  |         |   778  |    189  |  2  |  111  |  [179,98,189,99,115]  |
  4330  |              resetPlaceHolder_2();  |         |   778  |    189  |  2  |  111  |  [179,98,189,99,115]  |
  4336  |                         R = R + 2;  |      2  |   780  |    189  |  2  |  111  |  [179,98,189,99,115]  |
  4340  |                         j = j + 1;  |         |   780  |    189  |  2  |  112  |  [179,98,189,99,115]  |
  4341  |              resetPlaceHolder_2();  |         |   780  |    189  |  2  |  112  |  [179,98,189,99,115]  |
  4347  |                         R = R + 2;  |      2  |   782  |    189  |  2  |  112  |  [179,98,189,99,115]  |
  4351  |                         j = j + 1;  |         |   782  |    189  |  2  |  113  |  [179,98,189,99,115]  |
  4352  |              resetPlaceHolder_2();  |         |   782  |    189  |  2  |  113  |  [179,98,189,99,115]  |
  4358  |                         R = R + 2;  |      2  |   784  |    189  |  2  |  113  |  [179,98,189,99,115]  |
  4362  |                         j = j + 1;  |         |   784  |    189  |  2  |  114  |  [179,98,189,99,115]  |
  4363  |              resetPlaceHolder_2();  |         |   784  |    189  |  2  |  114  |  [179,98,189,99,115]  |
  4369  |                         R = R + 2;  |      2  |   786  |    189  |  2  |  114  |  [179,98,189,99,115]  |
  4373  |                         j = j + 1;  |         |   786  |    189  |  2  |  115  |  [179,98,189,99,115]  |
  4374  |              resetPlaceHolder_2();  |         |   786  |    189  |  2  |  115  |  [179,98,189,99,115]  |
  4380  |                         R = R + 2;  |      2  |   788  |    189  |  2  |  115  |  [179,98,189,99,115]  |
  4384  |                         j = j + 1;  |         |   788  |    189  |  2  |  116  |  [179,98,189,99,115]  |
  4385  |              resetPlaceHolder_2();  |         |   788  |    189  |  2  |  116  |  [179,98,189,99,115]  |
  4391  |                         R = R + 2;  |      2  |   790  |    189  |  2  |  116  |  [179,98,189,99,115]  |
  4395  |                         j = j + 1;  |         |   790  |    189  |  2  |  117  |  [179,98,189,99,115]  |
  4396  |              resetPlaceHolder_2();  |         |   790  |    189  |  2  |  117  |  [179,98,189,99,115]  |
  4402  |                         R = R + 2;  |      2  |   792  |    189  |  2  |  117  |  [179,98,189,99,115]  |
  4406  |                         j = j + 1;  |         |   792  |    189  |  2  |  118  |  [179,98,189,99,115]  |
  4407  |              resetPlaceHolder_2();  |         |   792  |    189  |  2  |  118  |  [179,98,189,99,115]  |
  4413  |                         R = R + 2;  |      2  |   794  |    189  |  2  |  118  |  [179,98,189,99,115]  |
  4417  |                         j = j + 1;  |         |   794  |    189  |  2  |  119  |  [179,98,189,99,115]  |
  4418  |              resetPlaceHolder_2();  |         |   794  |    189  |  2  |  119  |  [179,98,189,99,115]  |
  4424  |                         R = R + 2;  |      2  |   796  |    189  |  2  |  119  |  [179,98,189,99,115]  |
  4428  |                         j = j + 1;  |         |   796  |    189  |  2  |  120  |  [179,98,189,99,115]  |
  4429  |              resetPlaceHolder_2();  |         |   796  |    189  |  2  |  120  |  [179,98,189,99,115]  |
  4435  |                         R = R + 2;  |      2  |   798  |    189  |  2  |  120  |  [179,98,189,99,115]  |
  4439  |                         j = j + 1;  |         |   798  |    189  |  2  |  121  |  [179,98,189,99,115]  |
  4440  |              resetPlaceHolder_2();  |         |   798  |    189  |  2  |  121  |  [179,98,189,99,115]  |
  4446  |                         R = R + 2;  |      2  |   800  |    189  |  2  |  121  |  [179,98,189,99,115]  |
  4450  |                         j = j + 1;  |         |   800  |    189  |  2  |  122  |  [179,98,189,99,115]  |
  4451  |              resetPlaceHolder_2();  |         |   800  |    189  |  2  |  122  |  [179,98,189,99,115]  |
  4457  |                         R = R + 2;  |      2  |   802  |    189  |  2  |  122  |  [179,98,189,99,115]  |
  4461  |                         j = j + 1;  |         |   802  |    189  |  2  |  123  |  [179,98,189,99,115]  |
  4462  |              resetPlaceHolder_2();  |         |   802  |    189  |  2  |  123  |  [179,98,189,99,115]  |
  4468  |                         R = R + 2;  |      2  |   804  |    189  |  2  |  123  |  [179,98,189,99,115]  |
  4472  |                         j = j + 1;  |         |   804  |    189  |  2  |  124  |  [179,98,189,99,115]  |
  4473  |              resetPlaceHolder_2();  |         |   804  |    189  |  2  |  124  |  [179,98,189,99,115]  |
  4479  |                         R = R + 2;  |      2  |   806  |    189  |  2  |  124  |  [179,98,189,99,115]  |
  4483  |                         j = j + 1;  |         |   806  |    189  |  2  |  125  |  [179,98,189,99,115]  |
  4484  |              resetPlaceHolder_2();  |         |   806  |    189  |  2  |  125  |  [179,98,189,99,115]  |
  4490  |                         R = R + 2;  |      2  |   808  |    189  |  2  |  125  |  [179,98,189,99,115]  |
  4494  |                         j = j + 1;  |         |   808  |    189  |  2  |  126  |  [179,98,189,99,115]  |
  4495  |              resetPlaceHolder_2();  |         |   808  |    189  |  2  |  126  |  [179,98,189,99,115]  |
  4501  |                         R = R + 2;  |      2  |   810  |    189  |  2  |  126  |  [179,98,189,99,115]  |
  4505  |                         j = j + 1;  |         |   810  |    189  |  2  |  127  |  [179,98,189,99,115]  |
  4506  |              resetPlaceHolder_2();  |         |   810  |    189  |  2  |  127  |  [179,98,189,99,115]  |
  4512  |                         R = R + 2;  |      2  |   812  |    189  |  2  |  127  |  [179,98,189,99,115]  |
  4516  |                         j = j + 1;  |         |   812  |    189  |  2  |  128  |  [179,98,189,99,115]  |
  4517  |              resetPlaceHolder_2();  |         |   812  |    189  |  2  |  128  |  [179,98,189,99,115]  |
  4523  |                         R = R + 2;  |      2  |   814  |    189  |  2  |  128  |  [179,98,189,99,115]  |
  4527  |                         j = j + 1;  |         |   814  |    189  |  2  |  129  |  [179,98,189,99,115]  |
  4528  |              resetPlaceHolder_2();  |         |   814  |    189  |  2  |  129  |  [179,98,189,99,115]  |
  4534  |                         R = R + 2;  |      2  |   816  |    189  |  2  |  129  |  [179,98,189,99,115]  |
  4538  |                         j = j + 1;  |         |   816  |    189  |  2  |  130  |  [179,98,189,99,115]  |
  4539  |              resetPlaceHolder_2();  |         |   816  |    189  |  2  |  130  |  [179,98,189,99,115]  |
  4545  |                         R = R + 2;  |      2  |   818  |    189  |  2  |  130  |  [179,98,189,99,115]  |
  4549  |                         j = j + 1;  |         |   818  |    189  |  2  |  131  |  [179,98,189,99,115]  |
  4550  |              resetPlaceHolder_2();  |         |   818  |    189  |  2  |  131  |  [179,98,189,99,115]  |
  4556  |                         R = R + 2;  |      2  |   820  |    189  |  2  |  131  |  [179,98,189,99,115]  |
  4560  |                         j = j + 1;  |         |   820  |    189  |  2  |  132  |  [179,98,189,99,115]  |
  4561  |              resetPlaceHolder_2();  |         |   820  |    189  |  2  |  132  |  [179,98,189,99,115]  |
  4567  |                         R = R + 2;  |      2  |   822  |    189  |  2  |  132  |  [179,98,189,99,115]  |
  4571  |                         j = j + 1;  |         |   822  |    189  |  2  |  133  |  [179,98,189,99,115]  |
  4572  |              resetPlaceHolder_2();  |         |   822  |    189  |  2  |  133  |  [179,98,189,99,115]  |
  4578  |                         R = R + 2;  |      2  |   824  |    189  |  2  |  133  |  [179,98,189,99,115]  |
  4582  |                         j = j + 1;  |         |   824  |    189  |  2  |  134  |  [179,98,189,99,115]  |
  4583  |              resetPlaceHolder_2();  |         |   824  |    189  |  2  |  134  |  [179,98,189,99,115]  |
  4589  |                         R = R + 2;  |      2  |   826  |    189  |  2  |  134  |  [179,98,189,99,115]  |
  4593  |                         j = j + 1;  |         |   826  |    189  |  2  |  135  |  [179,98,189,99,115]  |
  4594  |              resetPlaceHolder_2();  |         |   826  |    189  |  2  |  135  |  [179,98,189,99,115]  |
  4600  |                         R = R + 2;  |      2  |   828  |    189  |  2  |  135  |  [179,98,189,99,115]  |
  4604  |                         j = j + 1;  |         |   828  |    189  |  2  |  136  |  [179,98,189,99,115]  |
  4605  |              resetPlaceHolder_2();  |         |   828  |    189  |  2  |  136  |  [179,98,189,99,115]  |
  4611  |                         R = R + 2;  |      2  |   830  |    189  |  2  |  136  |  [179,98,189,99,115]  |
  4615  |                         j = j + 1;  |         |   830  |    189  |  2  |  137  |  [179,98,189,99,115]  |
  4616  |              resetPlaceHolder_2();  |         |   830  |    189  |  2  |  137  |  [179,98,189,99,115]  |
  4622  |                         R = R + 2;  |      2  |   832  |    189  |  2  |  137  |  [179,98,189,99,115]  |
  4626  |                         j = j + 1;  |         |   832  |    189  |  2  |  138  |  [179,98,189,99,115]  |
  4627  |              resetPlaceHolder_2();  |         |   832  |    189  |  2  |  138  |  [179,98,189,99,115]  |
  4633  |                         R = R + 2;  |      2  |   834  |    189  |  2  |  138  |  [179,98,189,99,115]  |
  4637  |                         j = j + 1;  |         |   834  |    189  |  2  |  139  |  [179,98,189,99,115]  |
  4638  |              resetPlaceHolder_2();  |         |   834  |    189  |  2  |  139  |  [179,98,189,99,115]  |
  4644  |                         R = R + 2;  |      2  |   836  |    189  |  2  |  139  |  [179,98,189,99,115]  |
  4648  |                         j = j + 1;  |         |   836  |    189  |  2  |  140  |  [179,98,189,99,115]  |
  4649  |              resetPlaceHolder_2();  |         |   836  |    189  |  2  |  140  |  [179,98,189,99,115]  |
  4655  |                         R = R + 2;  |      2  |   838  |    189  |  2  |  140  |  [179,98,189,99,115]  |
  4659  |                         j = j + 1;  |         |   838  |    189  |  2  |  141  |  [179,98,189,99,115]  |
  4660  |              resetPlaceHolder_2();  |         |   838  |    189  |  2  |  141  |  [179,98,189,99,115]  |
  4666  |                         R = R + 2;  |      2  |   840  |    189  |  2  |  141  |  [179,98,189,99,115]  |
  4670  |                         j = j + 1;  |         |   840  |    189  |  2  |  142  |  [179,98,189,99,115]  |
  4671  |              resetPlaceHolder_2();  |         |   840  |    189  |  2  |  142  |  [179,98,189,99,115]  |
  4677  |                         R = R + 2;  |      2  |   842  |    189  |  2  |  142  |  [179,98,189,99,115]  |
  4681  |                         j = j + 1;  |         |   842  |    189  |  2  |  143  |  [179,98,189,99,115]  |
  4682  |              resetPlaceHolder_2();  |         |   842  |    189  |  2  |  143  |  [179,98,189,99,115]  |
  4688  |                         R = R + 2;  |      2  |   844  |    189  |  2  |  143  |  [179,98,189,99,115]  |
  4692  |                         j = j + 1;  |         |   844  |    189  |  2  |  144  |  [179,98,189,99,115]  |
  4693  |              resetPlaceHolder_2();  |         |   844  |    189  |  2  |  144  |  [179,98,189,99,115]  |
  4699  |                         R = R + 2;  |      2  |   846  |    189  |  2  |  144  |  [179,98,189,99,115]  |
  4703  |                         j = j + 1;  |         |   846  |    189  |  2  |  145  |  [179,98,189,99,115]  |
  4704  |              resetPlaceHolder_2();  |         |   846  |    189  |  2  |  145  |  [179,98,189,99,115]  |
  4710  |                         R = R + 2;  |      2  |   848  |    189  |  2  |  145  |  [179,98,189,99,115]  |
  4714  |                         j = j + 1;  |         |   848  |    189  |  2  |  146  |  [179,98,189,99,115]  |
  4715  |              resetPlaceHolder_2();  |         |   848  |    189  |  2  |  146  |  [179,98,189,99,115]  |
  4721  |                         R = R + 2;  |      2  |   850  |    189  |  2  |  146  |  [179,98,189,99,115]  |
  4725  |                         j = j + 1;  |         |   850  |    189  |  2  |  147  |  [179,98,189,99,115]  |
  4726  |              resetPlaceHolder_2();  |         |   850  |    189  |  2  |  147  |  [179,98,189,99,115]  |
  4732  |                         R = R + 2;  |      2  |   852  |    189  |  2  |  147  |  [179,98,189,99,115]  |
  4736  |                         j = j + 1;  |         |   852  |    189  |  2  |  148  |  [179,98,189,99,115]  |
  4737  |              resetPlaceHolder_2();  |         |   852  |    189  |  2  |  148  |  [179,98,189,99,115]  |
  4743  |                         R = R + 2;  |      2  |   854  |    189  |  2  |  148  |  [179,98,189,99,115]  |
  4747  |                         j = j + 1;  |         |   854  |    189  |  2  |  149  |  [179,98,189,99,115]  |
  4748  |              resetPlaceHolder_2();  |         |   854  |    189  |  2  |  149  |  [179,98,189,99,115]  |
  4754  |                         R = R + 2;  |      2  |   856  |    189  |  2  |  149  |  [179,98,189,99,115]  |
  4758  |                         j = j + 1;  |         |   856  |    189  |  2  |  150  |  [179,98,189,99,115]  |
  4759  |              resetPlaceHolder_2();  |         |   856  |    189  |  2  |  150  |  [179,98,189,99,115]  |
  4765  |                         R = R + 2;  |      2  |   858  |    189  |  2  |  150  |  [179,98,189,99,115]  |
  4769  |                         j = j + 1;  |         |   858  |    189  |  2  |  151  |  [179,98,189,99,115]  |
  4770  |              resetPlaceHolder_2();  |         |   858  |    189  |  2  |  151  |  [179,98,189,99,115]  |
  4776  |                         R = R + 2;  |      2  |   860  |    189  |  2  |  151  |  [179,98,189,99,115]  |
  4780  |                         j = j + 1;  |         |   860  |    189  |  2  |  152  |  [179,98,189,99,115]  |
  4781  |              resetPlaceHolder_2();  |         |   860  |    189  |  2  |  152  |  [179,98,189,99,115]  |
  4787  |                         R = R + 2;  |      2  |   862  |    189  |  2  |  152  |  [179,98,189,99,115]  |
  4791  |                         j = j + 1;  |         |   862  |    189  |  2  |  153  |  [179,98,189,99,115]  |
  4792  |              resetPlaceHolder_2();  |         |   862  |    189  |  2  |  153  |  [179,98,189,99,115]  |
  4798  |                         R = R + 2;  |      2  |   864  |    189  |  2  |  153  |  [179,98,189,99,115]  |
  4802  |                         j = j + 1;  |         |   864  |    189  |  2  |  154  |  [179,98,189,99,115]  |
  4803  |              resetPlaceHolder_2();  |         |   864  |    189  |  2  |  154  |  [179,98,189,99,115]  |
  4809  |                         R = R + 2;  |      2  |   866  |    189  |  2  |  154  |  [179,98,189,99,115]  |
  4813  |                         j = j + 1;  |         |   866  |    189  |  2  |  155  |  [179,98,189,99,115]  |
  4814  |              resetPlaceHolder_2();  |         |   866  |    189  |  2  |  155  |  [179,98,189,99,115]  |
  4820  |                         R = R + 2;  |      2  |   868  |    189  |  2  |  155  |  [179,98,189,99,115]  |
  4824  |                         j = j + 1;  |         |   868  |    189  |  2  |  156  |  [179,98,189,99,115]  |
  4825  |              resetPlaceHolder_2();  |         |   868  |    189  |  2  |  156  |  [179,98,189,99,115]  |
  4831  |                         R = R + 2;  |      2  |   870  |    189  |  2  |  156  |  [179,98,189,99,115]  |
  4835  |                         j = j + 1;  |         |   870  |    189  |  2  |  157  |  [179,98,189,99,115]  |
  4836  |              resetPlaceHolder_2();  |         |   870  |    189  |  2  |  157  |  [179,98,189,99,115]  |
  4842  |                         R = R + 2;  |      2  |   872  |    189  |  2  |  157  |  [179,98,189,99,115]  |
  4846  |                         j = j + 1;  |         |   872  |    189  |  2  |  158  |  [179,98,189,99,115]  |
  4847  |              resetPlaceHolder_2();  |         |   872  |    189  |  2  |  158  |  [179,98,189,99,115]  |
  4853  |                         R = R + 2;  |      2  |   874  |    189  |  2  |  158  |  [179,98,189,99,115]  |
  4857  |                         j = j + 1;  |         |   874  |    189  |  2  |  159  |  [179,98,189,99,115]  |
  4858  |              resetPlaceHolder_2();  |         |   874  |    189  |  2  |  159  |  [179,98,189,99,115]  |
  4864  |                         R = R + 2;  |      2  |   876  |    189  |  2  |  159  |  [179,98,189,99,115]  |
  4868  |                         j = j + 1;  |         |   876  |    189  |  2  |  160  |  [179,98,189,99,115]  |
  4869  |              resetPlaceHolder_2();  |         |   876  |    189  |  2  |  160  |  [179,98,189,99,115]  |
  4875  |                         R = R + 2;  |      2  |   878  |    189  |  2  |  160  |  [179,98,189,99,115]  |
  4879  |                         j = j + 1;  |         |   878  |    189  |  2  |  161  |  [179,98,189,99,115]  |
  4880  |              resetPlaceHolder_2();  |         |   878  |    189  |  2  |  161  |  [179,98,189,99,115]  |
  4886  |                         R = R + 2;  |      2  |   880  |    189  |  2  |  161  |  [179,98,189,99,115]  |
  4890  |                         j = j + 1;  |         |   880  |    189  |  2  |  162  |  [179,98,189,99,115]  |
  4891  |              resetPlaceHolder_2();  |         |   880  |    189  |  2  |  162  |  [179,98,189,99,115]  |
  4897  |                         R = R + 2;  |      2  |   882  |    189  |  2  |  162  |  [179,98,189,99,115]  |
  4901  |                         j = j + 1;  |         |   882  |    189  |  2  |  163  |  [179,98,189,99,115]  |
  4902  |              resetPlaceHolder_2();  |         |   882  |    189  |  2  |  163  |  [179,98,189,99,115]  |
  4908  |                         R = R + 2;  |      2  |   884  |    189  |  2  |  163  |  [179,98,189,99,115]  |
  4912  |                         j = j + 1;  |         |   884  |    189  |  2  |  164  |  [179,98,189,99,115]  |
  4913  |              resetPlaceHolder_2();  |         |   884  |    189  |  2  |  164  |  [179,98,189,99,115]  |
  4919  |                         R = R + 2;  |      2  |   886  |    189  |  2  |  164  |  [179,98,189,99,115]  |
  4923  |                         j = j + 1;  |         |   886  |    189  |  2  |  165  |  [179,98,189,99,115]  |
  4924  |              resetPlaceHolder_2();  |         |   886  |    189  |  2  |  165  |  [179,98,189,99,115]  |
  4930  |                         R = R + 2;  |      2  |   888  |    189  |  2  |  165  |  [179,98,189,99,115]  |
  4934  |                         j = j + 1;  |         |   888  |    189  |  2  |  166  |  [179,98,189,99,115]  |
  4935  |              resetPlaceHolder_2();  |         |   888  |    189  |  2  |  166  |  [179,98,189,99,115]  |
  4941  |                         R = R + 2;  |      2  |   890  |    189  |  2  |  166  |  [179,98,189,99,115]  |
  4945  |                         j = j + 1;  |         |   890  |    189  |  2  |  167  |  [179,98,189,99,115]  |
  4946  |              resetPlaceHolder_2();  |         |   890  |    189  |  2  |  167  |  [179,98,189,99,115]  |
  4952  |                         R = R + 2;  |      2  |   892  |    189  |  2  |  167  |  [179,98,189,99,115]  |
  4956  |                         j = j + 1;  |         |   892  |    189  |  2  |  168  |  [179,98,189,99,115]  |
  4957  |              resetPlaceHolder_2();  |         |   892  |    189  |  2  |  168  |  [179,98,189,99,115]  |
  4963  |                         R = R + 2;  |      2  |   894  |    189  |  2  |  168  |  [179,98,189,99,115]  |
  4967  |                         j = j + 1;  |         |   894  |    189  |  2  |  169  |  [179,98,189,99,115]  |
  4968  |              resetPlaceHolder_2();  |         |   894  |    189  |  2  |  169  |  [179,98,189,99,115]  |
  4974  |                         R = R + 2;  |      2  |   896  |    189  |  2  |  169  |  [179,98,189,99,115]  |
  4978  |                         j = j + 1;  |         |   896  |    189  |  2  |  170  |  [179,98,189,99,115]  |
  4979  |              resetPlaceHolder_2();  |         |   896  |    189  |  2  |  170  |  [179,98,189,99,115]  |
  4985  |                         R = R + 2;  |      2  |   898  |    189  |  2  |  170  |  [179,98,189,99,115]  |
  4989  |                         j = j + 1;  |         |   898  |    189  |  2  |  171  |  [179,98,189,99,115]  |
  4990  |              resetPlaceHolder_2();  |         |   898  |    189  |  2  |  171  |  [179,98,189,99,115]  |
  4996  |                         R = R + 2;  |      2  |   900  |    189  |  2  |  171  |  [179,98,189,99,115]  |
  5000  |                         j = j + 1;  |         |   900  |    189  |  2  |  172  |  [179,98,189,99,115]  |
  5001  |              resetPlaceHolder_2();  |         |   900  |    189  |  2  |  172  |  [179,98,189,99,115]  |
  5007  |                         R = R + 2;  |      2  |   902  |    189  |  2  |  172  |  [179,98,189,99,115]  |
  5011  |                         j = j + 1;  |         |   902  |    189  |  2  |  173  |  [179,98,189,99,115]  |
  5012  |              resetPlaceHolder_2();  |         |   902  |    189  |  2  |  173  |  [179,98,189,99,115]  |
  5018  |                         R = R + 2;  |      2  |   904  |    189  |  2  |  173  |  [179,98,189,99,115]  |
  5022  |                         j = j + 1;  |         |   904  |    189  |  2  |  174  |  [179,98,189,99,115]  |
  5023  |              resetPlaceHolder_2();  |         |   904  |    189  |  2  |  174  |  [179,98,189,99,115]  |
  5029  |                         R = R + 2;  |      2  |   906  |    189  |  2  |  174  |  [179,98,189,99,115]  |
  5033  |                         j = j + 1;  |         |   906  |    189  |  2  |  175  |  [179,98,189,99,115]  |
  5034  |              resetPlaceHolder_2();  |         |   906  |    189  |  2  |  175  |  [179,98,189,99,115]  |
  5040  |                         R = R + 2;  |      2  |   908  |    189  |  2  |  175  |  [179,98,189,99,115]  |
  5044  |                         j = j + 1;  |         |   908  |    189  |  2  |  176  |  [179,98,189,99,115]  |
  5045  |              resetPlaceHolder_2();  |         |   908  |    189  |  2  |  176  |  [179,98,189,99,115]  |
  5051  |                         R = R + 2;  |      2  |   910  |    189  |  2  |  176  |  [179,98,189,99,115]  |
  5055  |                         j = j + 1;  |         |   910  |    189  |  2  |  177  |  [179,98,189,99,115]  |
  5056  |              resetPlaceHolder_2();  |         |   910  |    189  |  2  |  177  |  [179,98,189,99,115]  |
  5062  |                         R = R + 2;  |      2  |   912  |    189  |  2  |  177  |  [179,98,189,99,115]  |
  5066  |                         j = j + 1;  |         |   912  |    189  |  2  |  178  |  [179,98,189,99,115]  |
  5067  |              resetPlaceHolder_2();  |         |   912  |    189  |  2  |  178  |  [179,98,189,99,115]  |
  5073  |                         R = R + 2;  |      2  |   914  |    189  |  2  |  178  |  [179,98,189,99,115]  |
  5077  |                         j = j + 1;  |         |   914  |    189  |  2  |  179  |  [179,98,189,99,115]  |
  5078  |              resetPlaceHolder_2();  |         |   914  |    189  |  2  |  179  |  [179,98,189,99,115]  |
  5084  |                         R = R + 2;  |      2  |   916  |    189  |  2  |  179  |  [179,98,189,99,115]  |
  5088  |                         j = j + 1;  |         |   916  |    189  |  2  |  180  |  [179,98,189,99,115]  |
  5089  |              resetPlaceHolder_2();  |         |   916  |    189  |  2  |  180  |  [179,98,189,99,115]  |
  5095  |                         R = R + 2;  |      2  |   918  |    189  |  2  |  180  |  [179,98,189,99,115]  |
  5099  |                         j = j + 1;  |         |   918  |    189  |  2  |  181  |  [179,98,189,99,115]  |
  5100  |              resetPlaceHolder_2();  |         |   918  |    189  |  2  |  181  |  [179,98,189,99,115]  |
  5106  |                         R = R + 2;  |      2  |   920  |    189  |  2  |  181  |  [179,98,189,99,115]  |
  5110  |                         j = j + 1;  |         |   920  |    189  |  2  |  182  |  [179,98,189,99,115]  |
  5111  |              resetPlaceHolder_2();  |         |   920  |    189  |  2  |  182  |  [179,98,189,99,115]  |
  5117  |                         R = R + 2;  |      2  |   922  |    189  |  2  |  182  |  [179,98,189,99,115]  |
  5121  |                         j = j + 1;  |         |   922  |    189  |  2  |  183  |  [179,98,189,99,115]  |
  5122  |              resetPlaceHolder_2();  |         |   922  |    189  |  2  |  183  |  [179,98,189,99,115]  |
  5128  |                         R = R + 2;  |      2  |   924  |    189  |  2  |  183  |  [179,98,189,99,115]  |
  5132  |                         j = j + 1;  |         |   924  |    189  |  2  |  184  |  [179,98,189,99,115]  |
  5133  |              resetPlaceHolder_2();  |         |   924  |    189  |  2  |  184  |  [179,98,189,99,115]  |
  5139  |                         R = R + 2;  |      2  |   926  |    189  |  2  |  184  |  [179,98,189,99,115]  |
  5143  |                         j = j + 1;  |         |   926  |    189  |  2  |  185  |  [179,98,189,99,115]  |
  5144  |              resetPlaceHolder_2();  |         |   926  |    189  |  2  |  185  |  [179,98,189,99,115]  |
  5150  |                         R = R + 2;  |      2  |   928  |    189  |  2  |  185  |  [179,98,189,99,115]  |
  5154  |                         j = j + 1;  |         |   928  |    189  |  2  |  186  |  [179,98,189,99,115]  |
  5155  |              resetPlaceHolder_2();  |         |   928  |    189  |  2  |  186  |  [179,98,189,99,115]  |
  5161  |                         R = R + 2;  |      2  |   930  |    189  |  2  |  186  |  [179,98,189,99,115]  |
  5165  |                         j = j + 1;  |         |   930  |    189  |  2  |  187  |  [179,98,189,99,115]  |
  5166  |              resetPlaceHolder_2();  |         |   930  |    189  |  2  |  187  |  [179,98,189,99,115]  |
  5172  |                         R = R + 2;  |      2  |   932  |    189  |  2  |  187  |  [179,98,189,99,115]  |
  5176  |                         j = j + 1;  |         |   932  |    189  |  2  |  188  |  [179,98,189,99,115]  |
  5177  |              resetPlaceHolder_2();  |         |   932  |    189  |  2  |  188  |  [179,98,189,99,115]  |
  5183  |                         R = R + 2;  |      2  |   934  |    189  |  2  |  188  |  [179,98,189,99,115]  |
  5187  |                         j = j + 1;  |         |   934  |    189  |  2  |  189  |  [179,98,189,99,115]  |
  5188  |              resetPlaceHolder_2();  |         |   934  |    189  |  2  |  189  |  [179,98,189,99,115]  |
  5194  |                         R = R + 1;  |      1  |   935  |    189  |  2  |  189  |  [179,98,189,99,115]  |
  5198  |                         i = i + 1;  |         |   935  |    189  |  3  |  189  |  [179,98,189,99,115]  |
  5199  |              resetPlaceHolder_1();  |         |   935  |    189  |  3  |  189  |  [179,98,189,99,115]  |
  5205  |      entry = arrayRead(sorted, i);  |         |   935  |     99  |  3  |  189  |  [179,98,189,99,115]  |
  5207  |                         int j = 0;  |         |   935  |     99  |  3  |    0  |  [179,98,189,99,115]  |
  5213  |                         R = R + 2;  |      2  |   937  |     99  |  3  |    0  |  [179,98,189,99,115]  |
  5217  |                         j = j + 1;  |         |   937  |     99  |  3  |    1  |  [179,98,189,99,115]  |
  5218  |              resetPlaceHolder_2();  |         |   937  |     99  |  3  |    1  |  [179,98,189,99,115]  |
  5224  |                         R = R + 2;  |      2  |   939  |     99  |  3  |    1  |  [179,98,189,99,115]  |
  5228  |                         j = j + 1;  |         |   939  |     99  |  3  |    2  |  [179,98,189,99,115]  |
  5229  |              resetPlaceHolder_2();  |         |   939  |     99  |  3  |    2  |  [179,98,189,99,115]  |
  5235  |                         R = R + 2;  |      2  |   941  |     99  |  3  |    2  |  [179,98,189,99,115]  |
  5239  |                         j = j + 1;  |         |   941  |     99  |  3  |    3  |  [179,98,189,99,115]  |
  5240  |              resetPlaceHolder_2();  |         |   941  |     99  |  3  |    3  |  [179,98,189,99,115]  |
  5246  |                         R = R + 2;  |      2  |   943  |     99  |  3  |    3  |  [179,98,189,99,115]  |
  5250  |                         j = j + 1;  |         |   943  |     99  |  3  |    4  |  [179,98,189,99,115]  |
  5251  |              resetPlaceHolder_2();  |         |   943  |     99  |  3  |    4  |  [179,98,189,99,115]  |
  5257  |                         R = R + 2;  |      2  |   945  |     99  |  3  |    4  |  [179,98,189,99,115]  |
  5261  |                         j = j + 1;  |         |   945  |     99  |  3  |    5  |  [179,98,189,99,115]  |
  5262  |              resetPlaceHolder_2();  |         |   945  |     99  |  3  |    5  |  [179,98,189,99,115]  |
  5268  |                         R = R + 2;  |      2  |   947  |     99  |  3  |    5  |  [179,98,189,99,115]  |
  5272  |                         j = j + 1;  |         |   947  |     99  |  3  |    6  |  [179,98,189,99,115]  |
  5273  |              resetPlaceHolder_2();  |         |   947  |     99  |  3  |    6  |  [179,98,189,99,115]  |
  5279  |                         R = R + 2;  |      2  |   949  |     99  |  3  |    6  |  [179,98,189,99,115]  |
  5283  |                         j = j + 1;  |         |   949  |     99  |  3  |    7  |  [179,98,189,99,115]  |
  5284  |              resetPlaceHolder_2();  |         |   949  |     99  |  3  |    7  |  [179,98,189,99,115]  |
  5290  |                         R = R + 2;  |      2  |   951  |     99  |  3  |    7  |  [179,98,189,99,115]  |
  5294  |                         j = j + 1;  |         |   951  |     99  |  3  |    8  |  [179,98,189,99,115]  |
  5295  |              resetPlaceHolder_2();  |         |   951  |     99  |  3  |    8  |  [179,98,189,99,115]  |
  5301  |                         R = R + 2;  |      2  |   953  |     99  |  3  |    8  |  [179,98,189,99,115]  |
  5305  |                         j = j + 1;  |         |   953  |     99  |  3  |    9  |  [179,98,189,99,115]  |
  5306  |              resetPlaceHolder_2();  |         |   953  |     99  |  3  |    9  |  [179,98,189,99,115]  |
  5312  |                         R = R + 2;  |      2  |   955  |     99  |  3  |    9  |  [179,98,189,99,115]  |
  5316  |                         j = j + 1;  |         |   955  |     99  |  3  |   10  |  [179,98,189,99,115]  |
  5317  |              resetPlaceHolder_2();  |         |   955  |     99  |  3  |   10  |  [179,98,189,99,115]  |
  5323  |                         R = R + 2;  |      2  |   957  |     99  |  3  |   10  |  [179,98,189,99,115]  |
  5327  |                         j = j + 1;  |         |   957  |     99  |  3  |   11  |  [179,98,189,99,115]  |
  5328  |              resetPlaceHolder_2();  |         |   957  |     99  |  3  |   11  |  [179,98,189,99,115]  |
  5334  |                         R = R + 2;  |      2  |   959  |     99  |  3  |   11  |  [179,98,189,99,115]  |
  5338  |                         j = j + 1;  |         |   959  |     99  |  3  |   12  |  [179,98,189,99,115]  |
  5339  |              resetPlaceHolder_2();  |         |   959  |     99  |  3  |   12  |  [179,98,189,99,115]  |
  5345  |                         R = R + 2;  |      2  |   961  |     99  |  3  |   12  |  [179,98,189,99,115]  |
  5349  |                         j = j + 1;  |         |   961  |     99  |  3  |   13  |  [179,98,189,99,115]  |
  5350  |              resetPlaceHolder_2();  |         |   961  |     99  |  3  |   13  |  [179,98,189,99,115]  |
  5356  |                         R = R + 2;  |      2  |   963  |     99  |  3  |   13  |  [179,98,189,99,115]  |
  5360  |                         j = j + 1;  |         |   963  |     99  |  3  |   14  |  [179,98,189,99,115]  |
  5361  |              resetPlaceHolder_2();  |         |   963  |     99  |  3  |   14  |  [179,98,189,99,115]  |
  5367  |                         R = R + 2;  |      2  |   965  |     99  |  3  |   14  |  [179,98,189,99,115]  |
  5371  |                         j = j + 1;  |         |   965  |     99  |  3  |   15  |  [179,98,189,99,115]  |
  5372  |              resetPlaceHolder_2();  |         |   965  |     99  |  3  |   15  |  [179,98,189,99,115]  |
  5378  |                         R = R + 2;  |      2  |   967  |     99  |  3  |   15  |  [179,98,189,99,115]  |
  5382  |                         j = j + 1;  |         |   967  |     99  |  3  |   16  |  [179,98,189,99,115]  |
  5383  |              resetPlaceHolder_2();  |         |   967  |     99  |  3  |   16  |  [179,98,189,99,115]  |
  5389  |                         R = R + 2;  |      2  |   969  |     99  |  3  |   16  |  [179,98,189,99,115]  |
  5393  |                         j = j + 1;  |         |   969  |     99  |  3  |   17  |  [179,98,189,99,115]  |
  5394  |              resetPlaceHolder_2();  |         |   969  |     99  |  3  |   17  |  [179,98,189,99,115]  |
  5400  |                         R = R + 2;  |      2  |   971  |     99  |  3  |   17  |  [179,98,189,99,115]  |
  5404  |                         j = j + 1;  |         |   971  |     99  |  3  |   18  |  [179,98,189,99,115]  |
  5405  |              resetPlaceHolder_2();  |         |   971  |     99  |  3  |   18  |  [179,98,189,99,115]  |
  5411  |                         R = R + 2;  |      2  |   973  |     99  |  3  |   18  |  [179,98,189,99,115]  |
  5415  |                         j = j + 1;  |         |   973  |     99  |  3  |   19  |  [179,98,189,99,115]  |
  5416  |              resetPlaceHolder_2();  |         |   973  |     99  |  3  |   19  |  [179,98,189,99,115]  |
  5422  |                         R = R + 2;  |      2  |   975  |     99  |  3  |   19  |  [179,98,189,99,115]  |
  5426  |                         j = j + 1;  |         |   975  |     99  |  3  |   20  |  [179,98,189,99,115]  |
  5427  |              resetPlaceHolder_2();  |         |   975  |     99  |  3  |   20  |  [179,98,189,99,115]  |
  5433  |                         R = R + 2;  |      2  |   977  |     99  |  3  |   20  |  [179,98,189,99,115]  |
  5437  |                         j = j + 1;  |         |   977  |     99  |  3  |   21  |  [179,98,189,99,115]  |
  5438  |              resetPlaceHolder_2();  |         |   977  |     99  |  3  |   21  |  [179,98,189,99,115]  |
  5444  |                         R = R + 2;  |      2  |   979  |     99  |  3  |   21  |  [179,98,189,99,115]  |
  5448  |                         j = j + 1;  |         |   979  |     99  |  3  |   22  |  [179,98,189,99,115]  |
  5449  |              resetPlaceHolder_2();  |         |   979  |     99  |  3  |   22  |  [179,98,189,99,115]  |
  5455  |                         R = R + 2;  |      2  |   981  |     99  |  3  |   22  |  [179,98,189,99,115]  |
  5459  |                         j = j + 1;  |         |   981  |     99  |  3  |   23  |  [179,98,189,99,115]  |
  5460  |              resetPlaceHolder_2();  |         |   981  |     99  |  3  |   23  |  [179,98,189,99,115]  |
  5466  |                         R = R + 2;  |      2  |   983  |     99  |  3  |   23  |  [179,98,189,99,115]  |
  5470  |                         j = j + 1;  |         |   983  |     99  |  3  |   24  |  [179,98,189,99,115]  |
  5471  |              resetPlaceHolder_2();  |         |   983  |     99  |  3  |   24  |  [179,98,189,99,115]  |
  5477  |                         R = R + 2;  |      2  |   985  |     99  |  3  |   24  |  [179,98,189,99,115]  |
  5481  |                         j = j + 1;  |         |   985  |     99  |  3  |   25  |  [179,98,189,99,115]  |
  5482  |              resetPlaceHolder_2();  |         |   985  |     99  |  3  |   25  |  [179,98,189,99,115]  |
  5488  |                         R = R + 2;  |      2  |   987  |     99  |  3  |   25  |  [179,98,189,99,115]  |
  5492  |                         j = j + 1;  |         |   987  |     99  |  3  |   26  |  [179,98,189,99,115]  |
  5493  |              resetPlaceHolder_2();  |         |   987  |     99  |  3  |   26  |  [179,98,189,99,115]  |
  5499  |                         R = R + 2;  |      2  |   989  |     99  |  3  |   26  |  [179,98,189,99,115]  |
  5503  |                         j = j + 1;  |         |   989  |     99  |  3  |   27  |  [179,98,189,99,115]  |
  5504  |              resetPlaceHolder_2();  |         |   989  |     99  |  3  |   27  |  [179,98,189,99,115]  |
  5510  |                         R = R + 2;  |      2  |   991  |     99  |  3  |   27  |  [179,98,189,99,115]  |
  5514  |                         j = j + 1;  |         |   991  |     99  |  3  |   28  |  [179,98,189,99,115]  |
  5515  |              resetPlaceHolder_2();  |         |   991  |     99  |  3  |   28  |  [179,98,189,99,115]  |
  5521  |                         R = R + 2;  |      2  |   993  |     99  |  3  |   28  |  [179,98,189,99,115]  |
  5525  |                         j = j + 1;  |         |   993  |     99  |  3  |   29  |  [179,98,189,99,115]  |
  5526  |              resetPlaceHolder_2();  |         |   993  |     99  |  3  |   29  |  [179,98,189,99,115]  |
  5532  |                         R = R + 2;  |      2  |   995  |     99  |  3  |   29  |  [179,98,189,99,115]  |
  5536  |                         j = j + 1;  |         |   995  |     99  |  3  |   30  |  [179,98,189,99,115]  |
  5537  |              resetPlaceHolder_2();  |         |   995  |     99  |  3  |   30  |  [179,98,189,99,115]  |
  5543  |                         R = R + 2;  |      2  |   997  |     99  |  3  |   30  |  [179,98,189,99,115]  |
  5547  |                         j = j + 1;  |         |   997  |     99  |  3  |   31  |  [179,98,189,99,115]  |
  5548  |              resetPlaceHolder_2();  |         |   997  |     99  |  3  |   31  |  [179,98,189,99,115]  |
  5554  |                         R = R + 2;  |      2  |   999  |     99  |  3  |   31  |  [179,98,189,99,115]  |
  5558  |                         j = j + 1;  |         |   999  |     99  |  3  |   32  |  [179,98,189,99,115]  |
  5559  |              resetPlaceHolder_2();  |         |   999  |     99  |  3  |   32  |  [179,98,189,99,115]  |
  5565  |                         R = R + 2;  |      2  |  1001  |     99  |  3  |   32  |  [179,98,189,99,115]  |
  5569  |                         j = j + 1;  |         |  1001  |     99  |  3  |   33  |  [179,98,189,99,115]  |
  5570  |              resetPlaceHolder_2();  |         |  1001  |     99  |  3  |   33  |  [179,98,189,99,115]  |
  5576  |                         R = R + 2;  |      2  |  1003  |     99  |  3  |   33  |  [179,98,189,99,115]  |
  5580  |                         j = j + 1;  |         |  1003  |     99  |  3  |   34  |  [179,98,189,99,115]  |
  5581  |              resetPlaceHolder_2();  |         |  1003  |     99  |  3  |   34  |  [179,98,189,99,115]  |
  5587  |                         R = R + 2;  |      2  |  1005  |     99  |  3  |   34  |  [179,98,189,99,115]  |
  5591  |                         j = j + 1;  |         |  1005  |     99  |  3  |   35  |  [179,98,189,99,115]  |
  5592  |              resetPlaceHolder_2();  |         |  1005  |     99  |  3  |   35  |  [179,98,189,99,115]  |
  5598  |                         R = R + 2;  |      2  |  1007  |     99  |  3  |   35  |  [179,98,189,99,115]  |
  5602  |                         j = j + 1;  |         |  1007  |     99  |  3  |   36  |  [179,98,189,99,115]  |
  5603  |              resetPlaceHolder_2();  |         |  1007  |     99  |  3  |   36  |  [179,98,189,99,115]  |
  5609  |                         R = R + 2;  |      2  |  1009  |     99  |  3  |   36  |  [179,98,189,99,115]  |
  5613  |                         j = j + 1;  |         |  1009  |     99  |  3  |   37  |  [179,98,189,99,115]  |
  5614  |              resetPlaceHolder_2();  |         |  1009  |     99  |  3  |   37  |  [179,98,189,99,115]  |
  5620  |                         R = R + 2;  |      2  |  1011  |     99  |  3  |   37  |  [179,98,189,99,115]  |
  5624  |                         j = j + 1;  |         |  1011  |     99  |  3  |   38  |  [179,98,189,99,115]  |
  5625  |              resetPlaceHolder_2();  |         |  1011  |     99  |  3  |   38  |  [179,98,189,99,115]  |
  5631  |                         R = R + 2;  |      2  |  1013  |     99  |  3  |   38  |  [179,98,189,99,115]  |
  5635  |                         j = j + 1;  |         |  1013  |     99  |  3  |   39  |  [179,98,189,99,115]  |
  5636  |              resetPlaceHolder_2();  |         |  1013  |     99  |  3  |   39  |  [179,98,189,99,115]  |
  5642  |                         R = R + 2;  |      2  |  1015  |     99  |  3  |   39  |  [179,98,189,99,115]  |
  5646  |                         j = j + 1;  |         |  1015  |     99  |  3  |   40  |  [179,98,189,99,115]  |
  5647  |              resetPlaceHolder_2();  |         |  1015  |     99  |  3  |   40  |  [179,98,189,99,115]  |
  5653  |                         R = R + 2;  |      2  |  1017  |     99  |  3  |   40  |  [179,98,189,99,115]  |
  5657  |                         j = j + 1;  |         |  1017  |     99  |  3  |   41  |  [179,98,189,99,115]  |
  5658  |              resetPlaceHolder_2();  |         |  1017  |     99  |  3  |   41  |  [179,98,189,99,115]  |
  5664  |                         R = R + 2;  |      2  |  1019  |     99  |  3  |   41  |  [179,98,189,99,115]  |
  5668  |                         j = j + 1;  |         |  1019  |     99  |  3  |   42  |  [179,98,189,99,115]  |
  5669  |              resetPlaceHolder_2();  |         |  1019  |     99  |  3  |   42  |  [179,98,189,99,115]  |
  5675  |                         R = R + 2;  |      2  |  1021  |     99  |  3  |   42  |  [179,98,189,99,115]  |
  5679  |                         j = j + 1;  |         |  1021  |     99  |  3  |   43  |  [179,98,189,99,115]  |
  5680  |              resetPlaceHolder_2();  |         |  1021  |     99  |  3  |   43  |  [179,98,189,99,115]  |
  5686  |                         R = R + 2;  |      2  |  1023  |     99  |  3  |   43  |  [179,98,189,99,115]  |
  5690  |                         j = j + 1;  |         |  1023  |     99  |  3  |   44  |  [179,98,189,99,115]  |
  5691  |              resetPlaceHolder_2();  |         |  1023  |     99  |  3  |   44  |  [179,98,189,99,115]  |
  5697  |                         R = R + 2;  |      2  |  1025  |     99  |  3  |   44  |  [179,98,189,99,115]  |
  5701  |                         j = j + 1;  |         |  1025  |     99  |  3  |   45  |  [179,98,189,99,115]  |
  5702  |              resetPlaceHolder_2();  |         |  1025  |     99  |  3  |   45  |  [179,98,189,99,115]  |
  5708  |                         R = R + 2;  |      2  |  1027  |     99  |  3  |   45  |  [179,98,189,99,115]  |
  5712  |                         j = j + 1;  |         |  1027  |     99  |  3  |   46  |  [179,98,189,99,115]  |
  5713  |              resetPlaceHolder_2();  |         |  1027  |     99  |  3  |   46  |  [179,98,189,99,115]  |
  5719  |                         R = R + 2;  |      2  |  1029  |     99  |  3  |   46  |  [179,98,189,99,115]  |
  5723  |                         j = j + 1;  |         |  1029  |     99  |  3  |   47  |  [179,98,189,99,115]  |
  5724  |              resetPlaceHolder_2();  |         |  1029  |     99  |  3  |   47  |  [179,98,189,99,115]  |
  5730  |                         R = R + 2;  |      2  |  1031  |     99  |  3  |   47  |  [179,98,189,99,115]  |
  5734  |                         j = j + 1;  |         |  1031  |     99  |  3  |   48  |  [179,98,189,99,115]  |
  5735  |              resetPlaceHolder_2();  |         |  1031  |     99  |  3  |   48  |  [179,98,189,99,115]  |
  5741  |                         R = R + 2;  |      2  |  1033  |     99  |  3  |   48  |  [179,98,189,99,115]  |
  5745  |                         j = j + 1;  |         |  1033  |     99  |  3  |   49  |  [179,98,189,99,115]  |
  5746  |              resetPlaceHolder_2();  |         |  1033  |     99  |  3  |   49  |  [179,98,189,99,115]  |
  5752  |                         R = R + 2;  |      2  |  1035  |     99  |  3  |   49  |  [179,98,189,99,115]  |
  5756  |                         j = j + 1;  |         |  1035  |     99  |  3  |   50  |  [179,98,189,99,115]  |
  5757  |              resetPlaceHolder_2();  |         |  1035  |     99  |  3  |   50  |  [179,98,189,99,115]  |
  5763  |                         R = R + 2;  |      2  |  1037  |     99  |  3  |   50  |  [179,98,189,99,115]  |
  5767  |                         j = j + 1;  |         |  1037  |     99  |  3  |   51  |  [179,98,189,99,115]  |
  5768  |              resetPlaceHolder_2();  |         |  1037  |     99  |  3  |   51  |  [179,98,189,99,115]  |
  5774  |                         R = R + 2;  |      2  |  1039  |     99  |  3  |   51  |  [179,98,189,99,115]  |
  5778  |                         j = j + 1;  |         |  1039  |     99  |  3  |   52  |  [179,98,189,99,115]  |
  5779  |              resetPlaceHolder_2();  |         |  1039  |     99  |  3  |   52  |  [179,98,189,99,115]  |
  5785  |                         R = R + 2;  |      2  |  1041  |     99  |  3  |   52  |  [179,98,189,99,115]  |
  5789  |                         j = j + 1;  |         |  1041  |     99  |  3  |   53  |  [179,98,189,99,115]  |
  5790  |              resetPlaceHolder_2();  |         |  1041  |     99  |  3  |   53  |  [179,98,189,99,115]  |
  5796  |                         R = R + 2;  |      2  |  1043  |     99  |  3  |   53  |  [179,98,189,99,115]  |
  5800  |                         j = j + 1;  |         |  1043  |     99  |  3  |   54  |  [179,98,189,99,115]  |
  5801  |              resetPlaceHolder_2();  |         |  1043  |     99  |  3  |   54  |  [179,98,189,99,115]  |
  5807  |                         R = R + 2;  |      2  |  1045  |     99  |  3  |   54  |  [179,98,189,99,115]  |
  5811  |                         j = j + 1;  |         |  1045  |     99  |  3  |   55  |  [179,98,189,99,115]  |
  5812  |              resetPlaceHolder_2();  |         |  1045  |     99  |  3  |   55  |  [179,98,189,99,115]  |
  5818  |                         R = R + 2;  |      2  |  1047  |     99  |  3  |   55  |  [179,98,189,99,115]  |
  5822  |                         j = j + 1;  |         |  1047  |     99  |  3  |   56  |  [179,98,189,99,115]  |
  5823  |              resetPlaceHolder_2();  |         |  1047  |     99  |  3  |   56  |  [179,98,189,99,115]  |
  5829  |                         R = R + 2;  |      2  |  1049  |     99  |  3  |   56  |  [179,98,189,99,115]  |
  5833  |                         j = j + 1;  |         |  1049  |     99  |  3  |   57  |  [179,98,189,99,115]  |
  5834  |              resetPlaceHolder_2();  |         |  1049  |     99  |  3  |   57  |  [179,98,189,99,115]  |
  5840  |                         R = R + 2;  |      2  |  1051  |     99  |  3  |   57  |  [179,98,189,99,115]  |
  5844  |                         j = j + 1;  |         |  1051  |     99  |  3  |   58  |  [179,98,189,99,115]  |
  5845  |              resetPlaceHolder_2();  |         |  1051  |     99  |  3  |   58  |  [179,98,189,99,115]  |
  5851  |                         R = R + 2;  |      2  |  1053  |     99  |  3  |   58  |  [179,98,189,99,115]  |
  5855  |                         j = j + 1;  |         |  1053  |     99  |  3  |   59  |  [179,98,189,99,115]  |
  5856  |              resetPlaceHolder_2();  |         |  1053  |     99  |  3  |   59  |  [179,98,189,99,115]  |
  5862  |                         R = R + 2;  |      2  |  1055  |     99  |  3  |   59  |  [179,98,189,99,115]  |
  5866  |                         j = j + 1;  |         |  1055  |     99  |  3  |   60  |  [179,98,189,99,115]  |
  5867  |              resetPlaceHolder_2();  |         |  1055  |     99  |  3  |   60  |  [179,98,189,99,115]  |
  5873  |                         R = R + 2;  |      2  |  1057  |     99  |  3  |   60  |  [179,98,189,99,115]  |
  5877  |                         j = j + 1;  |         |  1057  |     99  |  3  |   61  |  [179,98,189,99,115]  |
  5878  |              resetPlaceHolder_2();  |         |  1057  |     99  |  3  |   61  |  [179,98,189,99,115]  |
  5884  |                         R = R + 2;  |      2  |  1059  |     99  |  3  |   61  |  [179,98,189,99,115]  |
  5888  |                         j = j + 1;  |         |  1059  |     99  |  3  |   62  |  [179,98,189,99,115]  |
  5889  |              resetPlaceHolder_2();  |         |  1059  |     99  |  3  |   62  |  [179,98,189,99,115]  |
  5895  |                         R = R + 2;  |      2  |  1061  |     99  |  3  |   62  |  [179,98,189,99,115]  |
  5899  |                         j = j + 1;  |         |  1061  |     99  |  3  |   63  |  [179,98,189,99,115]  |
  5900  |              resetPlaceHolder_2();  |         |  1061  |     99  |  3  |   63  |  [179,98,189,99,115]  |
  5906  |                         R = R + 2;  |      2  |  1063  |     99  |  3  |   63  |  [179,98,189,99,115]  |
  5910  |                         j = j + 1;  |         |  1063  |     99  |  3  |   64  |  [179,98,189,99,115]  |
  5911  |              resetPlaceHolder_2();  |         |  1063  |     99  |  3  |   64  |  [179,98,189,99,115]  |
  5917  |                         R = R + 2;  |      2  |  1065  |     99  |  3  |   64  |  [179,98,189,99,115]  |
  5921  |                         j = j + 1;  |         |  1065  |     99  |  3  |   65  |  [179,98,189,99,115]  |
  5922  |              resetPlaceHolder_2();  |         |  1065  |     99  |  3  |   65  |  [179,98,189,99,115]  |
  5928  |                         R = R + 2;  |      2  |  1067  |     99  |  3  |   65  |  [179,98,189,99,115]  |
  5932  |                         j = j + 1;  |         |  1067  |     99  |  3  |   66  |  [179,98,189,99,115]  |
  5933  |              resetPlaceHolder_2();  |         |  1067  |     99  |  3  |   66  |  [179,98,189,99,115]  |
  5939  |                         R = R + 2;  |      2  |  1069  |     99  |  3  |   66  |  [179,98,189,99,115]  |
  5943  |                         j = j + 1;  |         |  1069  |     99  |  3  |   67  |  [179,98,189,99,115]  |
  5944  |              resetPlaceHolder_2();  |         |  1069  |     99  |  3  |   67  |  [179,98,189,99,115]  |
  5950  |                         R = R + 2;  |      2  |  1071  |     99  |  3  |   67  |  [179,98,189,99,115]  |
  5954  |                         j = j + 1;  |         |  1071  |     99  |  3  |   68  |  [179,98,189,99,115]  |
  5955  |              resetPlaceHolder_2();  |         |  1071  |     99  |  3  |   68  |  [179,98,189,99,115]  |
  5961  |                         R = R + 2;  |      2  |  1073  |     99  |  3  |   68  |  [179,98,189,99,115]  |
  5965  |                         j = j + 1;  |         |  1073  |     99  |  3  |   69  |  [179,98,189,99,115]  |
  5966  |              resetPlaceHolder_2();  |         |  1073  |     99  |  3  |   69  |  [179,98,189,99,115]  |
  5972  |                         R = R + 2;  |      2  |  1075  |     99  |  3  |   69  |  [179,98,189,99,115]  |
  5976  |                         j = j + 1;  |         |  1075  |     99  |  3  |   70  |  [179,98,189,99,115]  |
  5977  |              resetPlaceHolder_2();  |         |  1075  |     99  |  3  |   70  |  [179,98,189,99,115]  |
  5983  |                         R = R + 2;  |      2  |  1077  |     99  |  3  |   70  |  [179,98,189,99,115]  |
  5987  |                         j = j + 1;  |         |  1077  |     99  |  3  |   71  |  [179,98,189,99,115]  |
  5988  |              resetPlaceHolder_2();  |         |  1077  |     99  |  3  |   71  |  [179,98,189,99,115]  |
  5994  |                         R = R + 2;  |      2  |  1079  |     99  |  3  |   71  |  [179,98,189,99,115]  |
  5998  |                         j = j + 1;  |         |  1079  |     99  |  3  |   72  |  [179,98,189,99,115]  |
  5999  |              resetPlaceHolder_2();  |         |  1079  |     99  |  3  |   72  |  [179,98,189,99,115]  |
  6005  |                         R = R + 2;  |      2  |  1081  |     99  |  3  |   72  |  [179,98,189,99,115]  |
  6009  |                         j = j + 1;  |         |  1081  |     99  |  3  |   73  |  [179,98,189,99,115]  |
  6010  |              resetPlaceHolder_2();  |         |  1081  |     99  |  3  |   73  |  [179,98,189,99,115]  |
  6016  |                         R = R + 2;  |      2  |  1083  |     99  |  3  |   73  |  [179,98,189,99,115]  |
  6020  |                         j = j + 1;  |         |  1083  |     99  |  3  |   74  |  [179,98,189,99,115]  |
  6021  |              resetPlaceHolder_2();  |         |  1083  |     99  |  3  |   74  |  [179,98,189,99,115]  |
  6027  |                         R = R + 2;  |      2  |  1085  |     99  |  3  |   74  |  [179,98,189,99,115]  |
  6031  |                         j = j + 1;  |         |  1085  |     99  |  3  |   75  |  [179,98,189,99,115]  |
  6032  |              resetPlaceHolder_2();  |         |  1085  |     99  |  3  |   75  |  [179,98,189,99,115]  |
  6038  |                         R = R + 2;  |      2  |  1087  |     99  |  3  |   75  |  [179,98,189,99,115]  |
  6042  |                         j = j + 1;  |         |  1087  |     99  |  3  |   76  |  [179,98,189,99,115]  |
  6043  |              resetPlaceHolder_2();  |         |  1087  |     99  |  3  |   76  |  [179,98,189,99,115]  |
  6049  |                         R = R + 2;  |      2  |  1089  |     99  |  3  |   76  |  [179,98,189,99,115]  |
  6053  |                         j = j + 1;  |         |  1089  |     99  |  3  |   77  |  [179,98,189,99,115]  |
  6054  |              resetPlaceHolder_2();  |         |  1089  |     99  |  3  |   77  |  [179,98,189,99,115]  |
  6060  |                         R = R + 2;  |      2  |  1091  |     99  |  3  |   77  |  [179,98,189,99,115]  |
  6064  |                         j = j + 1;  |         |  1091  |     99  |  3  |   78  |  [179,98,189,99,115]  |
  6065  |              resetPlaceHolder_2();  |         |  1091  |     99  |  3  |   78  |  [179,98,189,99,115]  |
  6071  |                         R = R + 2;  |      2  |  1093  |     99  |  3  |   78  |  [179,98,189,99,115]  |
  6075  |                         j = j + 1;  |         |  1093  |     99  |  3  |   79  |  [179,98,189,99,115]  |
  6076  |              resetPlaceHolder_2();  |         |  1093  |     99  |  3  |   79  |  [179,98,189,99,115]  |
  6082  |                         R = R + 2;  |      2  |  1095  |     99  |  3  |   79  |  [179,98,189,99,115]  |
  6086  |                         j = j + 1;  |         |  1095  |     99  |  3  |   80  |  [179,98,189,99,115]  |
  6087  |              resetPlaceHolder_2();  |         |  1095  |     99  |  3  |   80  |  [179,98,189,99,115]  |
  6093  |                         R = R + 2;  |      2  |  1097  |     99  |  3  |   80  |  [179,98,189,99,115]  |
  6097  |                         j = j + 1;  |         |  1097  |     99  |  3  |   81  |  [179,98,189,99,115]  |
  6098  |              resetPlaceHolder_2();  |         |  1097  |     99  |  3  |   81  |  [179,98,189,99,115]  |
  6104  |                         R = R + 2;  |      2  |  1099  |     99  |  3  |   81  |  [179,98,189,99,115]  |
  6108  |                         j = j + 1;  |         |  1099  |     99  |  3  |   82  |  [179,98,189,99,115]  |
  6109  |              resetPlaceHolder_2();  |         |  1099  |     99  |  3  |   82  |  [179,98,189,99,115]  |
  6115  |                         R = R + 2;  |      2  |  1101  |     99  |  3  |   82  |  [179,98,189,99,115]  |
  6119  |                         j = j + 1;  |         |  1101  |     99  |  3  |   83  |  [179,98,189,99,115]  |
  6120  |              resetPlaceHolder_2();  |         |  1101  |     99  |  3  |   83  |  [179,98,189,99,115]  |
  6126  |                         R = R + 2;  |      2  |  1103  |     99  |  3  |   83  |  [179,98,189,99,115]  |
  6130  |                         j = j + 1;  |         |  1103  |     99  |  3  |   84  |  [179,98,189,99,115]  |
  6131  |              resetPlaceHolder_2();  |         |  1103  |     99  |  3  |   84  |  [179,98,189,99,115]  |
  6137  |                         R = R + 2;  |      2  |  1105  |     99  |  3  |   84  |  [179,98,189,99,115]  |
  6141  |                         j = j + 1;  |         |  1105  |     99  |  3  |   85  |  [179,98,189,99,115]  |
  6142  |              resetPlaceHolder_2();  |         |  1105  |     99  |  3  |   85  |  [179,98,189,99,115]  |
  6148  |                         R = R + 2;  |      2  |  1107  |     99  |  3  |   85  |  [179,98,189,99,115]  |
  6152  |                         j = j + 1;  |         |  1107  |     99  |  3  |   86  |  [179,98,189,99,115]  |
  6153  |              resetPlaceHolder_2();  |         |  1107  |     99  |  3  |   86  |  [179,98,189,99,115]  |
  6159  |                         R = R + 2;  |      2  |  1109  |     99  |  3  |   86  |  [179,98,189,99,115]  |
  6163  |                         j = j + 1;  |         |  1109  |     99  |  3  |   87  |  [179,98,189,99,115]  |
  6164  |              resetPlaceHolder_2();  |         |  1109  |     99  |  3  |   87  |  [179,98,189,99,115]  |
  6170  |                         R = R + 2;  |      2  |  1111  |     99  |  3  |   87  |  [179,98,189,99,115]  |
  6174  |                         j = j + 1;  |         |  1111  |     99  |  3  |   88  |  [179,98,189,99,115]  |
  6175  |              resetPlaceHolder_2();  |         |  1111  |     99  |  3  |   88  |  [179,98,189,99,115]  |
  6181  |                         R = R + 2;  |      2  |  1113  |     99  |  3  |   88  |  [179,98,189,99,115]  |
  6185  |                         j = j + 1;  |         |  1113  |     99  |  3  |   89  |  [179,98,189,99,115]  |
  6186  |              resetPlaceHolder_2();  |         |  1113  |     99  |  3  |   89  |  [179,98,189,99,115]  |
  6192  |                         R = R + 2;  |      2  |  1115  |     99  |  3  |   89  |  [179,98,189,99,115]  |
  6196  |                         j = j + 1;  |         |  1115  |     99  |  3  |   90  |  [179,98,189,99,115]  |
  6197  |              resetPlaceHolder_2();  |         |  1115  |     99  |  3  |   90  |  [179,98,189,99,115]  |
  6203  |                         R = R + 2;  |      2  |  1117  |     99  |  3  |   90  |  [179,98,189,99,115]  |
  6207  |                         j = j + 1;  |         |  1117  |     99  |  3  |   91  |  [179,98,189,99,115]  |
  6208  |              resetPlaceHolder_2();  |         |  1117  |     99  |  3  |   91  |  [179,98,189,99,115]  |
  6214  |                         R = R + 2;  |      2  |  1119  |     99  |  3  |   91  |  [179,98,189,99,115]  |
  6218  |                         j = j + 1;  |         |  1119  |     99  |  3  |   92  |  [179,98,189,99,115]  |
  6219  |              resetPlaceHolder_2();  |         |  1119  |     99  |  3  |   92  |  [179,98,189,99,115]  |
  6225  |                         R = R + 2;  |      2  |  1121  |     99  |  3  |   92  |  [179,98,189,99,115]  |
  6229  |                         j = j + 1;  |         |  1121  |     99  |  3  |   93  |  [179,98,189,99,115]  |
  6230  |              resetPlaceHolder_2();  |         |  1121  |     99  |  3  |   93  |  [179,98,189,99,115]  |
  6236  |                         R = R + 2;  |      2  |  1123  |     99  |  3  |   93  |  [179,98,189,99,115]  |
  6240  |                         j = j + 1;  |         |  1123  |     99  |  3  |   94  |  [179,98,189,99,115]  |
  6241  |              resetPlaceHolder_2();  |         |  1123  |     99  |  3  |   94  |  [179,98,189,99,115]  |
  6247  |                         R = R + 2;  |      2  |  1125  |     99  |  3  |   94  |  [179,98,189,99,115]  |
  6251  |                         j = j + 1;  |         |  1125  |     99  |  3  |   95  |  [179,98,189,99,115]  |
  6252  |              resetPlaceHolder_2();  |         |  1125  |     99  |  3  |   95  |  [179,98,189,99,115]  |
  6258  |                         R = R + 2;  |      2  |  1127  |     99  |  3  |   95  |  [179,98,189,99,115]  |
  6262  |                         j = j + 1;  |         |  1127  |     99  |  3  |   96  |  [179,98,189,99,115]  |
  6263  |              resetPlaceHolder_2();  |         |  1127  |     99  |  3  |   96  |  [179,98,189,99,115]  |
  6269  |                         R = R + 2;  |      2  |  1129  |     99  |  3  |   96  |  [179,98,189,99,115]  |
  6273  |                         j = j + 1;  |         |  1129  |     99  |  3  |   97  |  [179,98,189,99,115]  |
  6274  |              resetPlaceHolder_2();  |         |  1129  |     99  |  3  |   97  |  [179,98,189,99,115]  |
  6280  |                         R = R + 2;  |      2  |  1131  |     99  |  3  |   97  |  [179,98,189,99,115]  |
  6284  |                         j = j + 1;  |         |  1131  |     99  |  3  |   98  |  [179,98,189,99,115]  |
  6285  |              resetPlaceHolder_2();  |         |  1131  |     99  |  3  |   98  |  [179,98,189,99,115]  |
  6291  |                         R = R + 2;  |      2  |  1133  |     99  |  3  |   98  |  [179,98,189,99,115]  |
  6295  |                         j = j + 1;  |         |  1133  |     99  |  3  |   99  |  [179,98,189,99,115]  |
  6296  |              resetPlaceHolder_2();  |         |  1133  |     99  |  3  |   99  |  [179,98,189,99,115]  |
  6302  |                         R = R + 1;  |      1  |  1134  |     99  |  3  |   99  |  [179,98,189,99,115]  |
  6306  |                         i = i + 1;  |         |  1134  |     99  |  4  |   99  |  [179,98,189,99,115]  |
  6307  |              resetPlaceHolder_1();  |         |  1134  |     99  |  4  |   99  |  [179,98,189,99,115]  |
  6313  |      entry = arrayRead(sorted, i);  |         |  1134  |    115  |  4  |   99  |  [179,98,189,99,115]  |
  6315  |                         int j = 0;  |         |  1134  |    115  |  4  |    0  |  [179,98,189,99,115]  |
  6321  |                         R = R + 2;  |      2  |  1136  |    115  |  4  |    0  |  [179,98,189,99,115]  |
  6325  |                         j = j + 1;  |         |  1136  |    115  |  4  |    1  |  [179,98,189,99,115]  |
  6326  |              resetPlaceHolder_2();  |         |  1136  |    115  |  4  |    1  |  [179,98,189,99,115]  |
  6332  |                         R = R + 2;  |      2  |  1138  |    115  |  4  |    1  |  [179,98,189,99,115]  |
  6336  |                         j = j + 1;  |         |  1138  |    115  |  4  |    2  |  [179,98,189,99,115]  |
  6337  |              resetPlaceHolder_2();  |         |  1138  |    115  |  4  |    2  |  [179,98,189,99,115]  |
  6343  |                         R = R + 2;  |      2  |  1140  |    115  |  4  |    2  |  [179,98,189,99,115]  |
  6347  |                         j = j + 1;  |         |  1140  |    115  |  4  |    3  |  [179,98,189,99,115]  |
  6348  |              resetPlaceHolder_2();  |         |  1140  |    115  |  4  |    3  |  [179,98,189,99,115]  |
  6354  |                         R = R + 2;  |      2  |  1142  |    115  |  4  |    3  |  [179,98,189,99,115]  |
  6358  |                         j = j + 1;  |         |  1142  |    115  |  4  |    4  |  [179,98,189,99,115]  |
  6359  |              resetPlaceHolder_2();  |         |  1142  |    115  |  4  |    4  |  [179,98,189,99,115]  |
  6365  |                         R = R + 2;  |      2  |  1144  |    115  |  4  |    4  |  [179,98,189,99,115]  |
  6369  |                         j = j + 1;  |         |  1144  |    115  |  4  |    5  |  [179,98,189,99,115]  |
  6370  |              resetPlaceHolder_2();  |         |  1144  |    115  |  4  |    5  |  [179,98,189,99,115]  |
  6376  |                         R = R + 2;  |      2  |  1146  |    115  |  4  |    5  |  [179,98,189,99,115]  |
  6380  |                         j = j + 1;  |         |  1146  |    115  |  4  |    6  |  [179,98,189,99,115]  |
  6381  |              resetPlaceHolder_2();  |         |  1146  |    115  |  4  |    6  |  [179,98,189,99,115]  |
  6387  |                         R = R + 2;  |      2  |  1148  |    115  |  4  |    6  |  [179,98,189,99,115]  |
  6391  |                         j = j + 1;  |         |  1148  |    115  |  4  |    7  |  [179,98,189,99,115]  |
  6392  |              resetPlaceHolder_2();  |         |  1148  |    115  |  4  |    7  |  [179,98,189,99,115]  |
  6398  |                         R = R + 2;  |      2  |  1150  |    115  |  4  |    7  |  [179,98,189,99,115]  |
  6402  |                         j = j + 1;  |         |  1150  |    115  |  4  |    8  |  [179,98,189,99,115]  |
  6403  |              resetPlaceHolder_2();  |         |  1150  |    115  |  4  |    8  |  [179,98,189,99,115]  |
  6409  |                         R = R + 2;  |      2  |  1152  |    115  |  4  |    8  |  [179,98,189,99,115]  |
  6413  |                         j = j + 1;  |         |  1152  |    115  |  4  |    9  |  [179,98,189,99,115]  |
  6414  |              resetPlaceHolder_2();  |         |  1152  |    115  |  4  |    9  |  [179,98,189,99,115]  |
  6420  |                         R = R + 2;  |      2  |  1154  |    115  |  4  |    9  |  [179,98,189,99,115]  |
  6424  |                         j = j + 1;  |         |  1154  |    115  |  4  |   10  |  [179,98,189,99,115]  |
  6425  |              resetPlaceHolder_2();  |         |  1154  |    115  |  4  |   10  |  [179,98,189,99,115]  |
  6431  |                         R = R + 2;  |      2  |  1156  |    115  |  4  |   10  |  [179,98,189,99,115]  |
  6435  |                         j = j + 1;  |         |  1156  |    115  |  4  |   11  |  [179,98,189,99,115]  |
  6436  |              resetPlaceHolder_2();  |         |  1156  |    115  |  4  |   11  |  [179,98,189,99,115]  |
  6442  |                         R = R + 2;  |      2  |  1158  |    115  |  4  |   11  |  [179,98,189,99,115]  |
  6446  |                         j = j + 1;  |         |  1158  |    115  |  4  |   12  |  [179,98,189,99,115]  |
  6447  |              resetPlaceHolder_2();  |         |  1158  |    115  |  4  |   12  |  [179,98,189,99,115]  |
  6453  |                         R = R + 2;  |      2  |  1160  |    115  |  4  |   12  |  [179,98,189,99,115]  |
  6457  |                         j = j + 1;  |         |  1160  |    115  |  4  |   13  |  [179,98,189,99,115]  |
  6458  |              resetPlaceHolder_2();  |         |  1160  |    115  |  4  |   13  |  [179,98,189,99,115]  |
  6464  |                         R = R + 2;  |      2  |  1162  |    115  |  4  |   13  |  [179,98,189,99,115]  |
  6468  |                         j = j + 1;  |         |  1162  |    115  |  4  |   14  |  [179,98,189,99,115]  |
  6469  |              resetPlaceHolder_2();  |         |  1162  |    115  |  4  |   14  |  [179,98,189,99,115]  |
  6475  |                         R = R + 2;  |      2  |  1164  |    115  |  4  |   14  |  [179,98,189,99,115]  |
  6479  |                         j = j + 1;  |         |  1164  |    115  |  4  |   15  |  [179,98,189,99,115]  |
  6480  |              resetPlaceHolder_2();  |         |  1164  |    115  |  4  |   15  |  [179,98,189,99,115]  |
  6486  |                         R = R + 2;  |      2  |  1166  |    115  |  4  |   15  |  [179,98,189,99,115]  |
  6490  |                         j = j + 1;  |         |  1166  |    115  |  4  |   16  |  [179,98,189,99,115]  |
  6491  |              resetPlaceHolder_2();  |         |  1166  |    115  |  4  |   16  |  [179,98,189,99,115]  |
  6497  |                         R = R + 2;  |      2  |  1168  |    115  |  4  |   16  |  [179,98,189,99,115]  |
  6501  |                         j = j + 1;  |         |  1168  |    115  |  4  |   17  |  [179,98,189,99,115]  |
  6502  |              resetPlaceHolder_2();  |         |  1168  |    115  |  4  |   17  |  [179,98,189,99,115]  |
  6508  |                         R = R + 2;  |      2  |  1170  |    115  |  4  |   17  |  [179,98,189,99,115]  |
  6512  |                         j = j + 1;  |         |  1170  |    115  |  4  |   18  |  [179,98,189,99,115]  |
  6513  |              resetPlaceHolder_2();  |         |  1170  |    115  |  4  |   18  |  [179,98,189,99,115]  |
  6519  |                         R = R + 2;  |      2  |  1172  |    115  |  4  |   18  |  [179,98,189,99,115]  |
  6523  |                         j = j + 1;  |         |  1172  |    115  |  4  |   19  |  [179,98,189,99,115]  |
  6524  |              resetPlaceHolder_2();  |         |  1172  |    115  |  4  |   19  |  [179,98,189,99,115]  |
  6530  |                         R = R + 2;  |      2  |  1174  |    115  |  4  |   19  |  [179,98,189,99,115]  |
  6534  |                         j = j + 1;  |         |  1174  |    115  |  4  |   20  |  [179,98,189,99,115]  |
  6535  |              resetPlaceHolder_2();  |         |  1174  |    115  |  4  |   20  |  [179,98,189,99,115]  |
  6541  |                         R = R + 2;  |      2  |  1176  |    115  |  4  |   20  |  [179,98,189,99,115]  |
  6545  |                         j = j + 1;  |         |  1176  |    115  |  4  |   21  |  [179,98,189,99,115]  |
  6546  |              resetPlaceHolder_2();  |         |  1176  |    115  |  4  |   21  |  [179,98,189,99,115]  |
  6552  |                         R = R + 2;  |      2  |  1178  |    115  |  4  |   21  |  [179,98,189,99,115]  |
  6556  |                         j = j + 1;  |         |  1178  |    115  |  4  |   22  |  [179,98,189,99,115]  |
  6557  |              resetPlaceHolder_2();  |         |  1178  |    115  |  4  |   22  |  [179,98,189,99,115]  |
  6563  |                         R = R + 2;  |      2  |  1180  |    115  |  4  |   22  |  [179,98,189,99,115]  |
  6567  |                         j = j + 1;  |         |  1180  |    115  |  4  |   23  |  [179,98,189,99,115]  |
  6568  |              resetPlaceHolder_2();  |         |  1180  |    115  |  4  |   23  |  [179,98,189,99,115]  |
  6574  |                         R = R + 2;  |      2  |  1182  |    115  |  4  |   23  |  [179,98,189,99,115]  |
  6578  |                         j = j + 1;  |         |  1182  |    115  |  4  |   24  |  [179,98,189,99,115]  |
  6579  |              resetPlaceHolder_2();  |         |  1182  |    115  |  4  |   24  |  [179,98,189,99,115]  |
  6585  |                         R = R + 2;  |      2  |  1184  |    115  |  4  |   24  |  [179,98,189,99,115]  |
  6589  |                         j = j + 1;  |         |  1184  |    115  |  4  |   25  |  [179,98,189,99,115]  |
  6590  |              resetPlaceHolder_2();  |         |  1184  |    115  |  4  |   25  |  [179,98,189,99,115]  |
  6596  |                         R = R + 2;  |      2  |  1186  |    115  |  4  |   25  |  [179,98,189,99,115]  |
  6600  |                         j = j + 1;  |         |  1186  |    115  |  4  |   26  |  [179,98,189,99,115]  |
  6601  |              resetPlaceHolder_2();  |         |  1186  |    115  |  4  |   26  |  [179,98,189,99,115]  |
  6607  |                         R = R + 2;  |      2  |  1188  |    115  |  4  |   26  |  [179,98,189,99,115]  |
  6611  |                         j = j + 1;  |         |  1188  |    115  |  4  |   27  |  [179,98,189,99,115]  |
  6612  |              resetPlaceHolder_2();  |         |  1188  |    115  |  4  |   27  |  [179,98,189,99,115]  |
  6618  |                         R = R + 2;  |      2  |  1190  |    115  |  4  |   27  |  [179,98,189,99,115]  |
  6622  |                         j = j + 1;  |         |  1190  |    115  |  4  |   28  |  [179,98,189,99,115]  |
  6623  |              resetPlaceHolder_2();  |         |  1190  |    115  |  4  |   28  |  [179,98,189,99,115]  |
  6629  |                         R = R + 2;  |      2  |  1192  |    115  |  4  |   28  |  [179,98,189,99,115]  |
  6633  |                         j = j + 1;  |         |  1192  |    115  |  4  |   29  |  [179,98,189,99,115]  |
  6634  |              resetPlaceHolder_2();  |         |  1192  |    115  |  4  |   29  |  [179,98,189,99,115]  |
  6640  |                         R = R + 2;  |      2  |  1194  |    115  |  4  |   29  |  [179,98,189,99,115]  |
  6644  |                         j = j + 1;  |         |  1194  |    115  |  4  |   30  |  [179,98,189,99,115]  |
  6645  |              resetPlaceHolder_2();  |         |  1194  |    115  |  4  |   30  |  [179,98,189,99,115]  |
  6651  |                         R = R + 2;  |      2  |  1196  |    115  |  4  |   30  |  [179,98,189,99,115]  |
  6655  |                         j = j + 1;  |         |  1196  |    115  |  4  |   31  |  [179,98,189,99,115]  |
  6656  |              resetPlaceHolder_2();  |         |  1196  |    115  |  4  |   31  |  [179,98,189,99,115]  |
  6662  |                         R = R + 2;  |      2  |  1198  |    115  |  4  |   31  |  [179,98,189,99,115]  |
  6666  |                         j = j + 1;  |         |  1198  |    115  |  4  |   32  |  [179,98,189,99,115]  |
  6667  |              resetPlaceHolder_2();  |         |  1198  |    115  |  4  |   32  |  [179,98,189,99,115]  |
  6673  |                         R = R + 2;  |      2  |  1200  |    115  |  4  |   32  |  [179,98,189,99,115]  |
  6677  |                         j = j + 1;  |         |  1200  |    115  |  4  |   33  |  [179,98,189,99,115]  |
  6678  |              resetPlaceHolder_2();  |         |  1200  |    115  |  4  |   33  |  [179,98,189,99,115]  |
  6684  |                         R = R + 2;  |      2  |  1202  |    115  |  4  |   33  |  [179,98,189,99,115]  |
  6688  |                         j = j + 1;  |         |  1202  |    115  |  4  |   34  |  [179,98,189,99,115]  |
  6689  |              resetPlaceHolder_2();  |         |  1202  |    115  |  4  |   34  |  [179,98,189,99,115]  |
  6695  |                         R = R + 2;  |      2  |  1204  |    115  |  4  |   34  |  [179,98,189,99,115]  |
  6699  |                         j = j + 1;  |         |  1204  |    115  |  4  |   35  |  [179,98,189,99,115]  |
  6700  |              resetPlaceHolder_2();  |         |  1204  |    115  |  4  |   35  |  [179,98,189,99,115]  |
  6706  |                         R = R + 2;  |      2  |  1206  |    115  |  4  |   35  |  [179,98,189,99,115]  |
  6710  |                         j = j + 1;  |         |  1206  |    115  |  4  |   36  |  [179,98,189,99,115]  |
  6711  |              resetPlaceHolder_2();  |         |  1206  |    115  |  4  |   36  |  [179,98,189,99,115]  |
  6717  |                         R = R + 2;  |      2  |  1208  |    115  |  4  |   36  |  [179,98,189,99,115]  |
  6721  |                         j = j + 1;  |         |  1208  |    115  |  4  |   37  |  [179,98,189,99,115]  |
  6722  |              resetPlaceHolder_2();  |         |  1208  |    115  |  4  |   37  |  [179,98,189,99,115]  |
  6728  |                         R = R + 2;  |      2  |  1210  |    115  |  4  |   37  |  [179,98,189,99,115]  |
  6732  |                         j = j + 1;  |         |  1210  |    115  |  4  |   38  |  [179,98,189,99,115]  |
  6733  |              resetPlaceHolder_2();  |         |  1210  |    115  |  4  |   38  |  [179,98,189,99,115]  |
  6739  |                         R = R + 2;  |      2  |  1212  |    115  |  4  |   38  |  [179,98,189,99,115]  |
  6743  |                         j = j + 1;  |         |  1212  |    115  |  4  |   39  |  [179,98,189,99,115]  |
  6744  |              resetPlaceHolder_2();  |         |  1212  |    115  |  4  |   39  |  [179,98,189,99,115]  |
  6750  |                         R = R + 2;  |      2  |  1214  |    115  |  4  |   39  |  [179,98,189,99,115]  |
  6754  |                         j = j + 1;  |         |  1214  |    115  |  4  |   40  |  [179,98,189,99,115]  |
  6755  |              resetPlaceHolder_2();  |         |  1214  |    115  |  4  |   40  |  [179,98,189,99,115]  |
  6761  |                         R = R + 2;  |      2  |  1216  |    115  |  4  |   40  |  [179,98,189,99,115]  |
  6765  |                         j = j + 1;  |         |  1216  |    115  |  4  |   41  |  [179,98,189,99,115]  |
  6766  |              resetPlaceHolder_2();  |         |  1216  |    115  |  4  |   41  |  [179,98,189,99,115]  |
  6772  |                         R = R + 2;  |      2  |  1218  |    115  |  4  |   41  |  [179,98,189,99,115]  |
  6776  |                         j = j + 1;  |         |  1218  |    115  |  4  |   42  |  [179,98,189,99,115]  |
  6777  |              resetPlaceHolder_2();  |         |  1218  |    115  |  4  |   42  |  [179,98,189,99,115]  |
  6783  |                         R = R + 2;  |      2  |  1220  |    115  |  4  |   42  |  [179,98,189,99,115]  |
  6787  |                         j = j + 1;  |         |  1220  |    115  |  4  |   43  |  [179,98,189,99,115]  |
  6788  |              resetPlaceHolder_2();  |         |  1220  |    115  |  4  |   43  |  [179,98,189,99,115]  |
  6794  |                         R = R + 2;  |      2  |  1222  |    115  |  4  |   43  |  [179,98,189,99,115]  |
  6798  |                         j = j + 1;  |         |  1222  |    115  |  4  |   44  |  [179,98,189,99,115]  |
  6799  |              resetPlaceHolder_2();  |         |  1222  |    115  |  4  |   44  |  [179,98,189,99,115]  |
  6805  |                         R = R + 2;  |      2  |  1224  |    115  |  4  |   44  |  [179,98,189,99,115]  |
  6809  |                         j = j + 1;  |         |  1224  |    115  |  4  |   45  |  [179,98,189,99,115]  |
  6810  |              resetPlaceHolder_2();  |         |  1224  |    115  |  4  |   45  |  [179,98,189,99,115]  |
  6816  |                         R = R + 2;  |      2  |  1226  |    115  |  4  |   45  |  [179,98,189,99,115]  |
  6820  |                         j = j + 1;  |         |  1226  |    115  |  4  |   46  |  [179,98,189,99,115]  |
  6821  |              resetPlaceHolder_2();  |         |  1226  |    115  |  4  |   46  |  [179,98,189,99,115]  |
  6827  |                         R = R + 2;  |      2  |  1228  |    115  |  4  |   46  |  [179,98,189,99,115]  |
  6831  |                         j = j + 1;  |         |  1228  |    115  |  4  |   47  |  [179,98,189,99,115]  |
  6832  |              resetPlaceHolder_2();  |         |  1228  |    115  |  4  |   47  |  [179,98,189,99,115]  |
  6838  |                         R = R + 2;  |      2  |  1230  |    115  |  4  |   47  |  [179,98,189,99,115]  |
  6842  |                         j = j + 1;  |         |  1230  |    115  |  4  |   48  |  [179,98,189,99,115]  |
  6843  |              resetPlaceHolder_2();  |         |  1230  |    115  |  4  |   48  |  [179,98,189,99,115]  |
  6849  |                         R = R + 2;  |      2  |  1232  |    115  |  4  |   48  |  [179,98,189,99,115]  |
  6853  |                         j = j + 1;  |         |  1232  |    115  |  4  |   49  |  [179,98,189,99,115]  |
  6854  |              resetPlaceHolder_2();  |         |  1232  |    115  |  4  |   49  |  [179,98,189,99,115]  |
  6860  |                         R = R + 2;  |      2  |  1234  |    115  |  4  |   49  |  [179,98,189,99,115]  |
  6864  |                         j = j + 1;  |         |  1234  |    115  |  4  |   50  |  [179,98,189,99,115]  |
  6865  |              resetPlaceHolder_2();  |         |  1234  |    115  |  4  |   50  |  [179,98,189,99,115]  |
  6871  |                         R = R + 2;  |      2  |  1236  |    115  |  4  |   50  |  [179,98,189,99,115]  |
  6875  |                         j = j + 1;  |         |  1236  |    115  |  4  |   51  |  [179,98,189,99,115]  |
  6876  |              resetPlaceHolder_2();  |         |  1236  |    115  |  4  |   51  |  [179,98,189,99,115]  |
  6882  |                         R = R + 2;  |      2  |  1238  |    115  |  4  |   51  |  [179,98,189,99,115]  |
  6886  |                         j = j + 1;  |         |  1238  |    115  |  4  |   52  |  [179,98,189,99,115]  |
  6887  |              resetPlaceHolder_2();  |         |  1238  |    115  |  4  |   52  |  [179,98,189,99,115]  |
  6893  |                         R = R + 2;  |      2  |  1240  |    115  |  4  |   52  |  [179,98,189,99,115]  |
  6897  |                         j = j + 1;  |         |  1240  |    115  |  4  |   53  |  [179,98,189,99,115]  |
  6898  |              resetPlaceHolder_2();  |         |  1240  |    115  |  4  |   53  |  [179,98,189,99,115]  |
  6904  |                         R = R + 2;  |      2  |  1242  |    115  |  4  |   53  |  [179,98,189,99,115]  |
  6908  |                         j = j + 1;  |         |  1242  |    115  |  4  |   54  |  [179,98,189,99,115]  |
  6909  |              resetPlaceHolder_2();  |         |  1242  |    115  |  4  |   54  |  [179,98,189,99,115]  |
  6915  |                         R = R + 2;  |      2  |  1244  |    115  |  4  |   54  |  [179,98,189,99,115]  |
  6919  |                         j = j + 1;  |         |  1244  |    115  |  4  |   55  |  [179,98,189,99,115]  |
  6920  |              resetPlaceHolder_2();  |         |  1244  |    115  |  4  |   55  |  [179,98,189,99,115]  |
  6926  |                         R = R + 2;  |      2  |  1246  |    115  |  4  |   55  |  [179,98,189,99,115]  |
  6930  |                         j = j + 1;  |         |  1246  |    115  |  4  |   56  |  [179,98,189,99,115]  |
  6931  |              resetPlaceHolder_2();  |         |  1246  |    115  |  4  |   56  |  [179,98,189,99,115]  |
  6937  |                         R = R + 2;  |      2  |  1248  |    115  |  4  |   56  |  [179,98,189,99,115]  |
  6941  |                         j = j + 1;  |         |  1248  |    115  |  4  |   57  |  [179,98,189,99,115]  |
  6942  |              resetPlaceHolder_2();  |         |  1248  |    115  |  4  |   57  |  [179,98,189,99,115]  |
  6948  |                         R = R + 2;  |      2  |  1250  |    115  |  4  |   57  |  [179,98,189,99,115]  |
  6952  |                         j = j + 1;  |         |  1250  |    115  |  4  |   58  |  [179,98,189,99,115]  |
  6953  |              resetPlaceHolder_2();  |         |  1250  |    115  |  4  |   58  |  [179,98,189,99,115]  |
  6959  |                         R = R + 2;  |      2  |  1252  |    115  |  4  |   58  |  [179,98,189,99,115]  |
  6963  |                         j = j + 1;  |         |  1252  |    115  |  4  |   59  |  [179,98,189,99,115]  |
  6964  |              resetPlaceHolder_2();  |         |  1252  |    115  |  4  |   59  |  [179,98,189,99,115]  |
  6970  |                         R = R + 2;  |      2  |  1254  |    115  |  4  |   59  |  [179,98,189,99,115]  |
  6974  |                         j = j + 1;  |         |  1254  |    115  |  4  |   60  |  [179,98,189,99,115]  |
  6975  |              resetPlaceHolder_2();  |         |  1254  |    115  |  4  |   60  |  [179,98,189,99,115]  |
  6981  |                         R = R + 2;  |      2  |  1256  |    115  |  4  |   60  |  [179,98,189,99,115]  |
  6985  |                         j = j + 1;  |         |  1256  |    115  |  4  |   61  |  [179,98,189,99,115]  |
  6986  |              resetPlaceHolder_2();  |         |  1256  |    115  |  4  |   61  |  [179,98,189,99,115]  |
  6992  |                         R = R + 2;  |      2  |  1258  |    115  |  4  |   61  |  [179,98,189,99,115]  |
  6996  |                         j = j + 1;  |         |  1258  |    115  |  4  |   62  |  [179,98,189,99,115]  |
  6997  |              resetPlaceHolder_2();  |         |  1258  |    115  |  4  |   62  |  [179,98,189,99,115]  |
  7003  |                         R = R + 2;  |      2  |  1260  |    115  |  4  |   62  |  [179,98,189,99,115]  |
  7007  |                         j = j + 1;  |         |  1260  |    115  |  4  |   63  |  [179,98,189,99,115]  |
  7008  |              resetPlaceHolder_2();  |         |  1260  |    115  |  4  |   63  |  [179,98,189,99,115]  |
  7014  |                         R = R + 2;  |      2  |  1262  |    115  |  4  |   63  |  [179,98,189,99,115]  |
  7018  |                         j = j + 1;  |         |  1262  |    115  |  4  |   64  |  [179,98,189,99,115]  |
  7019  |              resetPlaceHolder_2();  |         |  1262  |    115  |  4  |   64  |  [179,98,189,99,115]  |
  7025  |                         R = R + 2;  |      2  |  1264  |    115  |  4  |   64  |  [179,98,189,99,115]  |
  7029  |                         j = j + 1;  |         |  1264  |    115  |  4  |   65  |  [179,98,189,99,115]  |
  7030  |              resetPlaceHolder_2();  |         |  1264  |    115  |  4  |   65  |  [179,98,189,99,115]  |
  7036  |                         R = R + 2;  |      2  |  1266  |    115  |  4  |   65  |  [179,98,189,99,115]  |
  7040  |                         j = j + 1;  |         |  1266  |    115  |  4  |   66  |  [179,98,189,99,115]  |
  7041  |              resetPlaceHolder_2();  |         |  1266  |    115  |  4  |   66  |  [179,98,189,99,115]  |
  7047  |                         R = R + 2;  |      2  |  1268  |    115  |  4  |   66  |  [179,98,189,99,115]  |
  7051  |                         j = j + 1;  |         |  1268  |    115  |  4  |   67  |  [179,98,189,99,115]  |
  7052  |              resetPlaceHolder_2();  |         |  1268  |    115  |  4  |   67  |  [179,98,189,99,115]  |
  7058  |                         R = R + 2;  |      2  |  1270  |    115  |  4  |   67  |  [179,98,189,99,115]  |
  7062  |                         j = j + 1;  |         |  1270  |    115  |  4  |   68  |  [179,98,189,99,115]  |
  7063  |              resetPlaceHolder_2();  |         |  1270  |    115  |  4  |   68  |  [179,98,189,99,115]  |
  7069  |                         R = R + 2;  |      2  |  1272  |    115  |  4  |   68  |  [179,98,189,99,115]  |
  7073  |                         j = j + 1;  |         |  1272  |    115  |  4  |   69  |  [179,98,189,99,115]  |
  7074  |              resetPlaceHolder_2();  |         |  1272  |    115  |  4  |   69  |  [179,98,189,99,115]  |
  7080  |                         R = R + 2;  |      2  |  1274  |    115  |  4  |   69  |  [179,98,189,99,115]  |
  7084  |                         j = j + 1;  |         |  1274  |    115  |  4  |   70  |  [179,98,189,99,115]  |
  7085  |              resetPlaceHolder_2();  |         |  1274  |    115  |  4  |   70  |  [179,98,189,99,115]  |
  7091  |                         R = R + 2;  |      2  |  1276  |    115  |  4  |   70  |  [179,98,189,99,115]  |
  7095  |                         j = j + 1;  |         |  1276  |    115  |  4  |   71  |  [179,98,189,99,115]  |
  7096  |              resetPlaceHolder_2();  |         |  1276  |    115  |  4  |   71  |  [179,98,189,99,115]  |
  7102  |                         R = R + 2;  |      2  |  1278  |    115  |  4  |   71  |  [179,98,189,99,115]  |
  7106  |                         j = j + 1;  |         |  1278  |    115  |  4  |   72  |  [179,98,189,99,115]  |
  7107  |              resetPlaceHolder_2();  |         |  1278  |    115  |  4  |   72  |  [179,98,189,99,115]  |
  7113  |                         R = R + 2;  |      2  |  1280  |    115  |  4  |   72  |  [179,98,189,99,115]  |
  7117  |                         j = j + 1;  |         |  1280  |    115  |  4  |   73  |  [179,98,189,99,115]  |
  7118  |              resetPlaceHolder_2();  |         |  1280  |    115  |  4  |   73  |  [179,98,189,99,115]  |
  7124  |                         R = R + 2;  |      2  |  1282  |    115  |  4  |   73  |  [179,98,189,99,115]  |
  7128  |                         j = j + 1;  |         |  1282  |    115  |  4  |   74  |  [179,98,189,99,115]  |
  7129  |              resetPlaceHolder_2();  |         |  1282  |    115  |  4  |   74  |  [179,98,189,99,115]  |
  7135  |                         R = R + 2;  |      2  |  1284  |    115  |  4  |   74  |  [179,98,189,99,115]  |
  7139  |                         j = j + 1;  |         |  1284  |    115  |  4  |   75  |  [179,98,189,99,115]  |
  7140  |              resetPlaceHolder_2();  |         |  1284  |    115  |  4  |   75  |  [179,98,189,99,115]  |
  7146  |                         R = R + 2;  |      2  |  1286  |    115  |  4  |   75  |  [179,98,189,99,115]  |
  7150  |                         j = j + 1;  |         |  1286  |    115  |  4  |   76  |  [179,98,189,99,115]  |
  7151  |              resetPlaceHolder_2();  |         |  1286  |    115  |  4  |   76  |  [179,98,189,99,115]  |
  7157  |                         R = R + 2;  |      2  |  1288  |    115  |  4  |   76  |  [179,98,189,99,115]  |
  7161  |                         j = j + 1;  |         |  1288  |    115  |  4  |   77  |  [179,98,189,99,115]  |
  7162  |              resetPlaceHolder_2();  |         |  1288  |    115  |  4  |   77  |  [179,98,189,99,115]  |
  7168  |                         R = R + 2;  |      2  |  1290  |    115  |  4  |   77  |  [179,98,189,99,115]  |
  7172  |                         j = j + 1;  |         |  1290  |    115  |  4  |   78  |  [179,98,189,99,115]  |
  7173  |              resetPlaceHolder_2();  |         |  1290  |    115  |  4  |   78  |  [179,98,189,99,115]  |
  7179  |                         R = R + 2;  |      2  |  1292  |    115  |  4  |   78  |  [179,98,189,99,115]  |
  7183  |                         j = j + 1;  |         |  1292  |    115  |  4  |   79  |  [179,98,189,99,115]  |
  7184  |              resetPlaceHolder_2();  |         |  1292  |    115  |  4  |   79  |  [179,98,189,99,115]  |
  7190  |                         R = R + 2;  |      2  |  1294  |    115  |  4  |   79  |  [179,98,189,99,115]  |
  7194  |                         j = j + 1;  |         |  1294  |    115  |  4  |   80  |  [179,98,189,99,115]  |
  7195  |              resetPlaceHolder_2();  |         |  1294  |    115  |  4  |   80  |  [179,98,189,99,115]  |
  7201  |                         R = R + 2;  |      2  |  1296  |    115  |  4  |   80  |  [179,98,189,99,115]  |
  7205  |                         j = j + 1;  |         |  1296  |    115  |  4  |   81  |  [179,98,189,99,115]  |
  7206  |              resetPlaceHolder_2();  |         |  1296  |    115  |  4  |   81  |  [179,98,189,99,115]  |
  7212  |                         R = R + 2;  |      2  |  1298  |    115  |  4  |   81  |  [179,98,189,99,115]  |
  7216  |                         j = j + 1;  |         |  1298  |    115  |  4  |   82  |  [179,98,189,99,115]  |
  7217  |              resetPlaceHolder_2();  |         |  1298  |    115  |  4  |   82  |  [179,98,189,99,115]  |
  7223  |                         R = R + 2;  |      2  |  1300  |    115  |  4  |   82  |  [179,98,189,99,115]  |
  7227  |                         j = j + 1;  |         |  1300  |    115  |  4  |   83  |  [179,98,189,99,115]  |
  7228  |              resetPlaceHolder_2();  |         |  1300  |    115  |  4  |   83  |  [179,98,189,99,115]  |
  7234  |                         R = R + 2;  |      2  |  1302  |    115  |  4  |   83  |  [179,98,189,99,115]  |
  7238  |                         j = j + 1;  |         |  1302  |    115  |  4  |   84  |  [179,98,189,99,115]  |
  7239  |              resetPlaceHolder_2();  |         |  1302  |    115  |  4  |   84  |  [179,98,189,99,115]  |
  7245  |                         R = R + 2;  |      2  |  1304  |    115  |  4  |   84  |  [179,98,189,99,115]  |
  7249  |                         j = j + 1;  |         |  1304  |    115  |  4  |   85  |  [179,98,189,99,115]  |
  7250  |              resetPlaceHolder_2();  |         |  1304  |    115  |  4  |   85  |  [179,98,189,99,115]  |
  7256  |                         R = R + 2;  |      2  |  1306  |    115  |  4  |   85  |  [179,98,189,99,115]  |
  7260  |                         j = j + 1;  |         |  1306  |    115  |  4  |   86  |  [179,98,189,99,115]  |
  7261  |              resetPlaceHolder_2();  |         |  1306  |    115  |  4  |   86  |  [179,98,189,99,115]  |
  7267  |                         R = R + 2;  |      2  |  1308  |    115  |  4  |   86  |  [179,98,189,99,115]  |
  7271  |                         j = j + 1;  |         |  1308  |    115  |  4  |   87  |  [179,98,189,99,115]  |
  7272  |              resetPlaceHolder_2();  |         |  1308  |    115  |  4  |   87  |  [179,98,189,99,115]  |
  7278  |                         R = R + 2;  |      2  |  1310  |    115  |  4  |   87  |  [179,98,189,99,115]  |
  7282  |                         j = j + 1;  |         |  1310  |    115  |  4  |   88  |  [179,98,189,99,115]  |
  7283  |              resetPlaceHolder_2();  |         |  1310  |    115  |  4  |   88  |  [179,98,189,99,115]  |
  7289  |                         R = R + 2;  |      2  |  1312  |    115  |  4  |   88  |  [179,98,189,99,115]  |
  7293  |                         j = j + 1;  |         |  1312  |    115  |  4  |   89  |  [179,98,189,99,115]  |
  7294  |              resetPlaceHolder_2();  |         |  1312  |    115  |  4  |   89  |  [179,98,189,99,115]  |
  7300  |                         R = R + 2;  |      2  |  1314  |    115  |  4  |   89  |  [179,98,189,99,115]  |
  7304  |                         j = j + 1;  |         |  1314  |    115  |  4  |   90  |  [179,98,189,99,115]  |
  7305  |              resetPlaceHolder_2();  |         |  1314  |    115  |  4  |   90  |  [179,98,189,99,115]  |
  7311  |                         R = R + 2;  |      2  |  1316  |    115  |  4  |   90  |  [179,98,189,99,115]  |
  7315  |                         j = j + 1;  |         |  1316  |    115  |  4  |   91  |  [179,98,189,99,115]  |
  7316  |              resetPlaceHolder_2();  |         |  1316  |    115  |  4  |   91  |  [179,98,189,99,115]  |
  7322  |                         R = R + 2;  |      2  |  1318  |    115  |  4  |   91  |  [179,98,189,99,115]  |
  7326  |                         j = j + 1;  |         |  1318  |    115  |  4  |   92  |  [179,98,189,99,115]  |
  7327  |              resetPlaceHolder_2();  |         |  1318  |    115  |  4  |   92  |  [179,98,189,99,115]  |
  7333  |                         R = R + 2;  |      2  |  1320  |    115  |  4  |   92  |  [179,98,189,99,115]  |
  7337  |                         j = j + 1;  |         |  1320  |    115  |  4  |   93  |  [179,98,189,99,115]  |
  7338  |              resetPlaceHolder_2();  |         |  1320  |    115  |  4  |   93  |  [179,98,189,99,115]  |
  7344  |                         R = R + 2;  |      2  |  1322  |    115  |  4  |   93  |  [179,98,189,99,115]  |
  7348  |                         j = j + 1;  |         |  1322  |    115  |  4  |   94  |  [179,98,189,99,115]  |
  7349  |              resetPlaceHolder_2();  |         |  1322  |    115  |  4  |   94  |  [179,98,189,99,115]  |
  7355  |                         R = R + 2;  |      2  |  1324  |    115  |  4  |   94  |  [179,98,189,99,115]  |
  7359  |                         j = j + 1;  |         |  1324  |    115  |  4  |   95  |  [179,98,189,99,115]  |
  7360  |              resetPlaceHolder_2();  |         |  1324  |    115  |  4  |   95  |  [179,98,189,99,115]  |
  7366  |                         R = R + 2;  |      2  |  1326  |    115  |  4  |   95  |  [179,98,189,99,115]  |
  7370  |                         j = j + 1;  |         |  1326  |    115  |  4  |   96  |  [179,98,189,99,115]  |
  7371  |              resetPlaceHolder_2();  |         |  1326  |    115  |  4  |   96  |  [179,98,189,99,115]  |
  7377  |                         R = R + 2;  |      2  |  1328  |    115  |  4  |   96  |  [179,98,189,99,115]  |
  7381  |                         j = j + 1;  |         |  1328  |    115  |  4  |   97  |  [179,98,189,99,115]  |
  7382  |              resetPlaceHolder_2();  |         |  1328  |    115  |  4  |   97  |  [179,98,189,99,115]  |
  7388  |                         R = R + 2;  |      2  |  1330  |    115  |  4  |   97  |  [179,98,189,99,115]  |
  7392  |                         j = j + 1;  |         |  1330  |    115  |  4  |   98  |  [179,98,189,99,115]  |
  7393  |              resetPlaceHolder_2();  |         |  1330  |    115  |  4  |   98  |  [179,98,189,99,115]  |
  7399  |                         R = R + 2;  |      2  |  1332  |    115  |  4  |   98  |  [179,98,189,99,115]  |
  7403  |                         j = j + 1;  |         |  1332  |    115  |  4  |   99  |  [179,98,189,99,115]  |
  7404  |              resetPlaceHolder_2();  |         |  1332  |    115  |  4  |   99  |  [179,98,189,99,115]  |
  7410  |                         R = R + 2;  |      2  |  1334  |    115  |  4  |   99  |  [179,98,189,99,115]  |
  7414  |                         j = j + 1;  |         |  1334  |    115  |  4  |  100  |  [179,98,189,99,115]  |
  7415  |              resetPlaceHolder_2();  |         |  1334  |    115  |  4  |  100  |  [179,98,189,99,115]  |
  7421  |                         R = R + 2;  |      2  |  1336  |    115  |  4  |  100  |  [179,98,189,99,115]  |
  7425  |                         j = j + 1;  |         |  1336  |    115  |  4  |  101  |  [179,98,189,99,115]  |
  7426  |              resetPlaceHolder_2();  |         |  1336  |    115  |  4  |  101  |  [179,98,189,99,115]  |
  7432  |                         R = R + 2;  |      2  |  1338  |    115  |  4  |  101  |  [179,98,189,99,115]  |
  7436  |                         j = j + 1;  |         |  1338  |    115  |  4  |  102  |  [179,98,189,99,115]  |
  7437  |              resetPlaceHolder_2();  |         |  1338  |    115  |  4  |  102  |  [179,98,189,99,115]  |
  7443  |                         R = R + 2;  |      2  |  1340  |    115  |  4  |  102  |  [179,98,189,99,115]  |
  7447  |                         j = j + 1;  |         |  1340  |    115  |  4  |  103  |  [179,98,189,99,115]  |
  7448  |              resetPlaceHolder_2();  |         |  1340  |    115  |  4  |  103  |  [179,98,189,99,115]  |
  7454  |                         R = R + 2;  |      2  |  1342  |    115  |  4  |  103  |  [179,98,189,99,115]  |
  7458  |                         j = j + 1;  |         |  1342  |    115  |  4  |  104  |  [179,98,189,99,115]  |
  7459  |              resetPlaceHolder_2();  |         |  1342  |    115  |  4  |  104  |  [179,98,189,99,115]  |
  7465  |                         R = R + 2;  |      2  |  1344  |    115  |  4  |  104  |  [179,98,189,99,115]  |
  7469  |                         j = j + 1;  |         |  1344  |    115  |  4  |  105  |  [179,98,189,99,115]  |
  7470  |              resetPlaceHolder_2();  |         |  1344  |    115  |  4  |  105  |  [179,98,189,99,115]  |
  7476  |                         R = R + 2;  |      2  |  1346  |    115  |  4  |  105  |  [179,98,189,99,115]  |
  7480  |                         j = j + 1;  |         |  1346  |    115  |  4  |  106  |  [179,98,189,99,115]  |
  7481  |              resetPlaceHolder_2();  |         |  1346  |    115  |  4  |  106  |  [179,98,189,99,115]  |
  7487  |                         R = R + 2;  |      2  |  1348  |    115  |  4  |  106  |  [179,98,189,99,115]  |
  7491  |                         j = j + 1;  |         |  1348  |    115  |  4  |  107  |  [179,98,189,99,115]  |
  7492  |              resetPlaceHolder_2();  |         |  1348  |    115  |  4  |  107  |  [179,98,189,99,115]  |
  7498  |                         R = R + 2;  |      2  |  1350  |    115  |  4  |  107  |  [179,98,189,99,115]  |
  7502  |                         j = j + 1;  |         |  1350  |    115  |  4  |  108  |  [179,98,189,99,115]  |
  7503  |              resetPlaceHolder_2();  |         |  1350  |    115  |  4  |  108  |  [179,98,189,99,115]  |
  7509  |                         R = R + 2;  |      2  |  1352  |    115  |  4  |  108  |  [179,98,189,99,115]  |
  7513  |                         j = j + 1;  |         |  1352  |    115  |  4  |  109  |  [179,98,189,99,115]  |
  7514  |              resetPlaceHolder_2();  |         |  1352  |    115  |  4  |  109  |  [179,98,189,99,115]  |
  7520  |                         R = R + 2;  |      2  |  1354  |    115  |  4  |  109  |  [179,98,189,99,115]  |
  7524  |                         j = j + 1;  |         |  1354  |    115  |  4  |  110  |  [179,98,189,99,115]  |
  7525  |              resetPlaceHolder_2();  |         |  1354  |    115  |  4  |  110  |  [179,98,189,99,115]  |
  7531  |                         R = R + 2;  |      2  |  1356  |    115  |  4  |  110  |  [179,98,189,99,115]  |
  7535  |                         j = j + 1;  |         |  1356  |    115  |  4  |  111  |  [179,98,189,99,115]  |
  7536  |              resetPlaceHolder_2();  |         |  1356  |    115  |  4  |  111  |  [179,98,189,99,115]  |
  7542  |                         R = R + 2;  |      2  |  1358  |    115  |  4  |  111  |  [179,98,189,99,115]  |
  7546  |                         j = j + 1;  |         |  1358  |    115  |  4  |  112  |  [179,98,189,99,115]  |
  7547  |              resetPlaceHolder_2();  |         |  1358  |    115  |  4  |  112  |  [179,98,189,99,115]  |
  7553  |                         R = R + 2;  |      2  |  1360  |    115  |  4  |  112  |  [179,98,189,99,115]  |
  7557  |                         j = j + 1;  |         |  1360  |    115  |  4  |  113  |  [179,98,189,99,115]  |
  7558  |              resetPlaceHolder_2();  |         |  1360  |    115  |  4  |  113  |  [179,98,189,99,115]  |
  7564  |                         R = R + 2;  |      2  |  1362  |    115  |  4  |  113  |  [179,98,189,99,115]  |
  7568  |                         j = j + 1;  |         |  1362  |    115  |  4  |  114  |  [179,98,189,99,115]  |
  7569  |              resetPlaceHolder_2();  |         |  1362  |    115  |  4  |  114  |  [179,98,189,99,115]  |
  7575  |                         R = R + 2;  |      2  |  1364  |    115  |  4  |  114  |  [179,98,189,99,115]  |
  7579  |                         j = j + 1;  |         |  1364  |    115  |  4  |  115  |  [179,98,189,99,115]  |
  7580  |              resetPlaceHolder_2();  |         |  1364  |    115  |  4  |  115  |  [179,98,189,99,115]  |
  7586  |                         R = R + 1;  |      1  |  1365  |    115  |  4  |  115  |  [179,98,189,99,115]  |
  7590  |                         i = i + 1;  |         |  1365  |    115  |  5  |  115  |  [179,98,189,99,115]  |
  7591  |              resetPlaceHolder_1();  |         |  1365  |    115  |  5  |  115  |  [179,98,189,99,115]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 2744, 1823, 3008, 6530, 1559, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 5224, 2282, 4215, 2854, 6214, 4479, 4105, 4633, 5565, 5906, 1735, 1867, 1999, 5257, 1988, 5161, 3313, 5708, 4435, 3577, 6640, 4941, 404, 3335, 1196, 7168, 1746, 6236, 2216, 3236, 2348, 2491, 2227, 6904, 5301, 1724, 4963, 6291, 1482, 7311, 52, 4743, 6552, 184, 2667, 2755, 3148, 5150, 3280, 6662, 6332, 6519, 5279, 6071, 1922, 6049, 2403, 5521, 7124, 4358, 4622, 5323, 4270, 6365, 5851, 7047, 5829, 4952, 228, 3951, 448, 316, 7509, 261, 3258, 5433, 492, 756, 789, 5084, 7564, 4578, 4072, 591, 7300, 7245, 1911, 4600, 2469, 4820, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 4798, 1581, 2777, 4556, 6717, 2073, 602, 2964, 7036, 4842, 877, 734, 866, 3808, 1119, 1394, 4996, 5246, 1526, 3676, 6772, 998, 2799, 1405, 3588, 2392, 74, 2205, 206, 6860, 5961, 4853, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 3995, 5117, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 1163, 1900, 910, 6343, 2601, 2733, 2249, 6247, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 2414, 4160, 6926, 3269, 6629, 5983, 7432, 3137, 4776, 4402, 6060, 4732, 3445, 6728, 3731, 1350, 3467, 1592, 5609, 7421, 4512, 4974, 5345, 4248, 1328, 2359, 1064, 1856, 1878, 4930, 3632, 6148, 1493, 3775, 7091, 1361, 5818, 4721, 5620, 1075, 4545, 5213, 2172, 1207, 3643, 6541, 1889, 3555, 4457, 679, 547, 96, 393, 5576, 3654, 701, 6827, 3126, 2304, 6805, 7014, 6475, 7069, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2766, 4259, 41, 3074, 7333, 371, 503, 2370, 2634, 6409, 2788, 1086, 4644, 3225, 2546, 1779, 360, 4567, 6486, 4765, 921, 657, 558, 7476, 1515, 2645, 6038, 7289, 3841, 5840, 1185, 888, 6497, 2909, 6192, 965, 1251, 4919, 4380, 1680, 4116, 6203, 1273, 1548, 745, 5928, 5095, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7487, 7223, 4677, 2568, 118, 5752, 3599, 2161, 1669, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 6302, 7465, 2557, 2425, 3302, 6016, 3170, 6585, 4369, 2084, 3764, 4699, 5631, 1933, 1603, 6321, 1801, 3500, 5972, 3456, 811, 5367, 1471, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4897, 4985, 3192, 7575, 5466, 1460, 943, 5007, 668, 932, 6376, 6574, 2051, 3423, 6783, 2139, 3687, 3159, 6816, 2931, 2535, 7366, 6027, 5139, 6838, 3522, 5587, 426, 162, 6225, 4886, 2271, 5785, 4292, 7190, 7102, 6170, 4688, 5763, 7454, 5807, 6115, 4336, 2942, 2513, 1845, 525, 712, 580, 855, 690, 63, 6453, 7058, 4864, 4490, 3214, 327, 5499, 1647, 4534, 954, 2678, 2821, 4754, 3786, 6596, 7586, 5018, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 6280, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 6093, 7443, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 3412, 6159, 1130, 1218, 3041, 5106, 4875, 5062, 5675, 1141, 1702, 613, 4611, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 7498, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 1966, 6970, 1834, 3533, 976, 6137, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4710, 3709, 6607, 4666, 7344, 6893, 4468, 6618, 3368, 6354, 3085, 2447, 4182, 3181, 7256, 3324, 5532, 6181, 5040, 7399, 3896, 7157, 2183, 272, 899, 7520, 2095, 4446, 5128, 2315, 6871, 7080, 2623, 5194, 7135, 536, 1614, 800, 3379, 151, 5051, 4039, 7542, 7355, 3511, 3291, 3907, 5796, 833, 4809, 1097, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 4787, 5884, 5477, 1757, 3203, 305, 107, 239, 294, 4303, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 6258, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 6269, 415, 624, 2502, 987, 2810, 1977, 6750, 1152, 2898, 1537, 459, 3489, 723, 822, 4831, 6082, 7025, 5774, 6104, 1713, 6126, 4501, 3918, 3753, 5172, 4655, 7553, 5029, 5073, 7531, 1944, 5312, 1009, 3096, 2887, 5183, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 4908, 3052, 5664, 1449, 1812, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 2744, 1823, 3008, 6530, 1559, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 5224, 2282, 4215, 2854, 6214, 4479, 4105, 4633, 5565, 5906, 1735, 1867, 1999, 5257, 1988, 5161, 3313, 5708, 4435, 3577, 6640, 4941, 404, 3335, 1196, 7168, 1746, 6236, 2216, 3236, 2348, 2491, 2227, 6904, 5301, 1724, 4963, 6291, 1482, 7311, 52, 4743, 6552, 184, 2667, 2755, 3148, 5150, 3280, 6662, 6332, 6519, 5279, 6071, 1922, 6049, 2403, 5521, 7124, 4358, 4622, 5323, 4270, 6365, 5851, 7047, 5829, 4952, 228, 3951, 448, 316, 7509, 261, 3258, 5433, 492, 756, 789, 5084, 7564, 4578, 4072, 591, 7300, 7245, 1911, 4600, 2469, 4820, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 4798, 1581, 2777, 4556, 6717, 2073, 602, 2964, 7036, 4842, 877, 734, 866, 3808, 1119, 1394, 4996, 5246, 1526, 3676, 6772, 998, 2799, 1405, 3588, 2392, 74, 2205, 206, 6860, 5961, 4853, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 3995, 5117, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 1163, 1900, 910, 6343, 2601, 2733, 2249, 6247, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 2414, 4160, 6926, 3269, 6629, 5983, 7432, 3137, 4776, 4402, 6060, 4732, 3445, 6728, 3731, 1350, 3467, 1592, 5609, 7421, 4512, 4974, 5345, 4248, 1328, 2359, 1064, 1856, 1878, 4930, 3632, 6148, 1493, 3775, 7091, 1361, 5818, 4721, 5620, 1075, 4545, 5213, 2172, 1207, 3643, 6541, 1889, 3555, 4457, 679, 547, 96, 393, 5576, 3654, 701, 6827, 3126, 2304, 6805, 7014, 6475, 7069, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2766, 4259, 41, 3074, 7333, 371, 503, 2370, 2634, 6409, 2788, 1086, 4644, 3225, 2546, 1779, 360, 4567, 6486, 4765, 921, 657, 558, 7476, 1515, 2645, 6038, 7289, 3841, 5840, 1185, 888, 6497, 2909, 6192, 965, 1251, 4919, 4380, 1680, 4116, 6203, 1273, 1548, 745, 5928, 5095, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7487, 7223, 4677, 2568, 118, 5752, 3599, 2161, 1669, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 6302, 7465, 2557, 2425, 3302, 6016, 3170, 6585, 4369, 2084, 3764, 4699, 5631, 1933, 1603, 6321, 1801, 3500, 5972, 3456, 811, 5367, 1471, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4897, 4985, 3192, 7575, 5466, 1460, 943, 5007, 668, 932, 6376, 6574, 2051, 3423, 6783, 2139, 3687, 3159, 6816, 2931, 2535, 7366, 6027, 5139, 6838, 3522, 5587, 426, 162, 6225, 4886, 2271, 5785, 4292, 7190, 7102, 6170, 4688, 5763, 7454, 5807, 6115, 4336, 2942, 2513, 1845, 525, 712, 580, 855, 690, 63, 6453, 7058, 4864, 4490, 3214, 327, 5499, 1647, 4534, 954, 2678, 2821, 4754, 3786, 6596, 7586, 5018, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 6280, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 6093, 7443, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 3412, 6159, 1130, 1218, 3041, 5106, 4875, 5062, 5675, 1141, 1702, 613, 4611, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 7498, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 1966, 6970, 1834, 3533, 976, 6137, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4710, 3709, 6607, 4666, 7344, 6893, 4468, 6618, 3368, 6354, 3085, 2447, 4182, 3181, 7256, 3324, 5532, 6181, 5040, 7399, 3896, 7157, 2183, 272, 899, 7520, 2095, 4446, 5128, 2315, 6871, 7080, 2623, 5194, 7135, 536, 1614, 800, 3379, 151, 5051, 4039, 7542, 7355, 3511, 3291, 3907, 5796, 833, 4809, 1097, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 4787, 5884, 5477, 1757, 3203, 305, 107, 239, 294, 4303, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 6258, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 6269, 415, 624, 2502, 987, 2810, 1977, 6750, 1152, 2898, 1537, 459, 3489, 723, 822, 4831, 6082, 7025, 5774, 6104, 1713, 6126, 4501, 3918, 3753, 5172, 4655, 7553, 5029, 5073, 7531, 1944, 5312, 1009, 3096, 2887, 5183, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 4908, 3052, 5664, 1449, 1812, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 2744, 1823, 3008, 6530, 1559, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 5224, 2282, 4215, 2854, 6214, 4479, 4105, 4633, 5565, 5906, 1735, 1867, 1999, 5257, 1988, 5161, 3313, 5708, 4435, 3577, 6640, 4941, 404, 3335, 1196, 7168, 1746, 6236, 2216, 3236, 2348, 2491, 2227, 6904, 5301, 1724, 4963, 6291, 1482, 7311, 52, 4743, 6552, 184, 2667, 2755, 3148, 5150, 3280, 6662, 6332, 6519, 5279, 6071, 1922, 6049, 2403, 5521, 7124, 4358, 4622, 5323, 4270, 6365, 5851, 7047, 5829, 4952, 228, 3951, 448, 316, 7509, 261, 3258, 5433, 492, 756, 789, 5084, 7564, 4578, 4072, 591, 7300, 7245, 1911, 4600, 2469, 4820, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 4798, 1581, 2777, 4556, 6717, 2073, 602, 2964, 7036, 4842, 877, 734, 866, 3808, 1119, 1394, 4996, 5246, 1526, 3676, 6772, 998, 2799, 1405, 3588, 2392, 74, 2205, 206, 6860, 5961, 4853, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 3995, 5117, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 1163, 1900, 910, 6343, 2601, 2733, 2249, 6247, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 2414, 4160, 6926, 3269, 6629, 5983, 7432, 3137, 4776, 4402, 6060, 4732, 3445, 6728, 3731, 1350, 3467, 1592, 5609, 7421, 4512, 4974, 5345, 4248, 1328, 2359, 1064, 1856, 1878, 4930, 3632, 6148, 1493, 3775, 7091, 1361, 5818, 4721, 5620, 1075, 4545, 5213, 2172, 1207, 3643, 6541, 1889, 3555, 4457, 679, 547, 96, 393, 5576, 3654, 701, 6827, 3126, 2304, 6805, 7014, 6475, 7069, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2766, 4259, 41, 3074, 7333, 371, 503, 2370, 2634, 6409, 2788, 1086, 4644, 3225, 2546, 1779, 360, 4567, 6486, 4765, 921, 657, 558, 7476, 1515, 2645, 6038, 7289, 3841, 5840, 1185, 888, 6497, 2909, 6192, 965, 1251, 4919, 4380, 1680, 4116, 6203, 1273, 1548, 745, 5928, 5095, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7487, 7223, 4677, 2568, 118, 5752, 3599, 2161, 1669, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 6302, 7465, 2557, 2425, 3302, 6016, 3170, 6585, 4369, 2084, 3764, 4699, 5631, 1933, 1603, 6321, 1801, 3500, 5972, 3456, 811, 5367, 1471, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4897, 4985, 3192, 7575, 5466, 1460, 943, 5007, 668, 932, 6376, 6574, 2051, 3423, 6783, 2139, 3687, 3159, 6816, 2931, 2535, 7366, 6027, 5139, 6838, 3522, 5587, 426, 162, 6225, 4886, 2271, 5785, 4292, 7190, 7102, 6170, 4688, 5763, 7454, 5807, 6115, 4336, 2942, 2513, 1845, 525, 712, 580, 855, 690, 63, 6453, 7058, 4864, 4490, 3214, 327, 5499, 1647, 4534, 954, 2678, 2821, 4754, 3786, 6596, 7586, 5018, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 6280, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 6093, 7443, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 3412, 6159, 1130, 1218, 3041, 5106, 4875, 5062, 5675, 1141, 1702, 613, 4611, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 7498, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 1966, 6970, 1834, 3533, 976, 6137, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4710, 3709, 6607, 4666, 7344, 6893, 4468, 6618, 3368, 6354, 3085, 2447, 4182, 3181, 7256, 3324, 5532, 6181, 5040, 7399, 3896, 7157, 2183, 272, 899, 7520, 2095, 4446, 5128, 2315, 6871, 7080, 2623, 5194, 7135, 536, 1614, 800, 3379, 151, 5051, 4039, 7542, 7355, 3511, 3291, 3907, 5796, 833, 4809, 1097, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 4787, 5884, 5477, 1757, 3203, 305, 107, 239, 294, 4303, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 6258, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 6269, 415, 624, 2502, 987, 2810, 1977, 6750, 1152, 2898, 1537, 459, 3489, 723, 822, 4831, 6082, 7025, 5774, 6104, 1713, 6126, 4501, 3918, 3753, 5172, 4655, 7553, 5029, 5073, 7531, 1944, 5312, 1009, 3096, 2887, 5183, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 4908, 3052, 5664, 1449, 1812, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1922,1933,1944,1955,1966,1977,1988,1999,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3115,3126,3137,3148,3159,3170,3181,3192,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3764,3775,3786,3797,3808,3819,3830,3841,3852,3863,3874,3885,3896,3907,3918,3929,3940,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4083,4094,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4347,4358,4369,4380,4391,4402,4413,4424,4435,4446,4457,4468,4479,4490,4501,4512,4523,4534,4545,4556,4567,4578,4589,4600,4611,4622,4633,4644,4655,4666,4677,4688,4699,4710,4721,4732,4743,4754,4765,4776,4787,4798,4809,4820,4831,4842,4853,4864,4875,4886,4897,4908,4919,4930,4941,4952,4963,4974,4985,4996,5007,5018,5029,5040,5051,5062,5073,5084,5095,5106,5117,5128,5139,5150,5161,5172,5183,5194,5213,5224,5235,5246,5257,5268,5279,5290,5301,5312,5323,5334,5345,5356,5367,5378,5389,5400,5411,5422,5433,5444,5455,5466,5477,5488,5499,5510,5521,5532,5543,5554,5565,5576,5587,5598,5609,5620,5631,5642,5653,5664,5675,5686,5697,5708,5719,5730,5741,5752,5763,5774,5785,5796,5807,5818,5829,5840,5851,5862,5873,5884,5895,5906,5917,5928,5939,5950,5961,5972,5983,5994,6005,6016,6027,6038,6049,6060,6071,6082,6093,6104,6115,6126,6137,6148,6159,6170,6181,6192,6203,6214,6225,6236,6247,6258,6269,6280,6291,6302,6321,6332,6343,6354,6365,6376,6387,6398,6409,6420,6431,6442,6453,6464,6475,6486,6497,6508,6519,6530,6541,6552,6563,6574,6585,6596,6607,6618,6629,6640,6651,6662,6673,6684,6695,6706,6717,6728,6739,6750,6761,6772,6783,6794,6805,6816,6827,6838,6849,6860,6871,6882,6893,6904,6915,6926,6937,6948,6959,6970,6981,6992,7003,7014,7025,7036,7047,7058,7069,7080,7091,7102,7113,7124,7135,7146,7157,7168,7179,7190,7201,7212,7223,7234,7245,7256,7267,7278,7289,7300,7311,7322,7333,7344,7355,7366,7377,7388,7399,7410,7421,7432,7443,7454,7465,7476,7487,7498,7509,7520,7531,7542,7553,7564,7575,7586}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 2;  |      2  |                         0  |
  1916  |  resetPlaceHolder_2();  |         |                            |
  1922  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_2();  |         |                            |
  1933  |             R = R + 2;  |      2  |                         0  |
  1938  |  resetPlaceHolder_2();  |         |                            |
  1944  |             R = R + 2;  |      2  |                         0  |
  1949  |  resetPlaceHolder_2();  |         |                            |
  1955  |             R = R + 2;  |      2  |                         0  |
  1960  |  resetPlaceHolder_2();  |         |                            |
  1966  |             R = R + 2;  |      2  |                         0  |
  1971  |  resetPlaceHolder_2();  |         |                            |
  1977  |             R = R + 2;  |      2  |                         0  |
  1982  |  resetPlaceHolder_2();  |         |                            |
  1988  |             R = R + 2;  |      2  |                         0  |
  1993  |  resetPlaceHolder_2();  |         |                            |
  1999  |             R = R + 1;  |      1  |                         0  |
  2004  |  resetPlaceHolder_1();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 1;  |      1  |                         0  |
  3101  |  resetPlaceHolder_1();  |         |                            |
  3115  |             R = R + 2;  |      2  |                         0  |
  3120  |  resetPlaceHolder_2();  |         |                            |
  3126  |             R = R + 2;  |      2  |                         0  |
  3131  |  resetPlaceHolder_2();  |         |                            |
  3137  |             R = R + 2;  |      2  |                         0  |
  3142  |  resetPlaceHolder_2();  |         |                            |
  3148  |             R = R + 2;  |      2  |                         0  |
  3153  |  resetPlaceHolder_2();  |         |                            |
  3159  |             R = R + 2;  |      2  |                         0  |
  3164  |  resetPlaceHolder_2();  |         |                            |
  3170  |             R = R + 2;  |      2  |                         0  |
  3175  |  resetPlaceHolder_2();  |         |                            |
  3181  |             R = R + 2;  |      2  |                         0  |
  3186  |  resetPlaceHolder_2();  |         |                            |
  3192  |             R = R + 2;  |      2  |                         0  |
  3197  |  resetPlaceHolder_2();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3758  |  resetPlaceHolder_2();  |         |                            |
  3764  |             R = R + 2;  |      2  |                         0  |
  3769  |  resetPlaceHolder_2();  |         |                            |
  3775  |             R = R + 2;  |      2  |                         0  |
  3780  |  resetPlaceHolder_2();  |         |                            |
  3786  |             R = R + 2;  |      2  |                         0  |
  3791  |  resetPlaceHolder_2();  |         |                            |
  3797  |             R = R + 2;  |      2  |                         0  |
  3802  |  resetPlaceHolder_2();  |         |                            |
  3808  |             R = R + 2;  |      2  |                         0  |
  3813  |  resetPlaceHolder_2();  |         |                            |
  3819  |             R = R + 2;  |      2  |                         0  |
  3824  |  resetPlaceHolder_2();  |         |                            |
  3830  |             R = R + 2;  |      2  |                         0  |
  3835  |  resetPlaceHolder_2();  |         |                            |
  3841  |             R = R + 2;  |      2  |                         0  |
  3846  |  resetPlaceHolder_2();  |         |                            |
  3852  |             R = R + 2;  |      2  |                         0  |
  3857  |  resetPlaceHolder_2();  |         |                            |
  3863  |             R = R + 2;  |      2  |                         0  |
  3868  |  resetPlaceHolder_2();  |         |                            |
  3874  |             R = R + 2;  |      2  |                         0  |
  3879  |  resetPlaceHolder_2();  |         |                            |
  3885  |             R = R + 2;  |      2  |                         0  |
  3890  |  resetPlaceHolder_2();  |         |                            |
  3896  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_2();  |         |                            |
  3907  |             R = R + 2;  |      2  |                         0  |
  3912  |  resetPlaceHolder_2();  |         |                            |
  3918  |             R = R + 2;  |      2  |                         0  |
  3923  |  resetPlaceHolder_2();  |         |                            |
  3929  |             R = R + 2;  |      2  |                         0  |
  3934  |  resetPlaceHolder_2();  |         |                            |
  3940  |             R = R + 2;  |      2  |                         0  |
  3945  |  resetPlaceHolder_2();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 2;  |      2  |                         0  |
  4077  |  resetPlaceHolder_2();  |         |                            |
  4083  |             R = R + 2;  |      2  |                         0  |
  4088  |  resetPlaceHolder_2();  |         |                            |
  4094  |             R = R + 2;  |      2  |                         0  |
  4099  |  resetPlaceHolder_2();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 2;  |      2  |                         0  |
  4341  |  resetPlaceHolder_2();  |         |                            |
  4347  |             R = R + 2;  |      2  |                         0  |
  4352  |  resetPlaceHolder_2();  |         |                            |
  4358  |             R = R + 2;  |      2  |                         0  |
  4363  |  resetPlaceHolder_2();  |         |                            |
  4369  |             R = R + 2;  |      2  |                         0  |
  4374  |  resetPlaceHolder_2();  |         |                            |
  4380  |             R = R + 2;  |      2  |                         0  |
  4385  |  resetPlaceHolder_2();  |         |                            |
  4391  |             R = R + 2;  |      2  |                         0  |
  4396  |  resetPlaceHolder_2();  |         |                            |
  4402  |             R = R + 2;  |      2  |                         0  |
  4407  |  resetPlaceHolder_2();  |         |                            |
  4413  |             R = R + 2;  |      2  |                         0  |
  4418  |  resetPlaceHolder_2();  |         |                            |
  4424  |             R = R + 2;  |      2  |                         0  |
  4429  |  resetPlaceHolder_2();  |         |                            |
  4435  |             R = R + 2;  |      2  |                         0  |
  4440  |  resetPlaceHolder_2();  |         |                            |
  4446  |             R = R + 2;  |      2  |                         0  |
  4451  |  resetPlaceHolder_2();  |         |                            |
  4457  |             R = R + 2;  |      2  |                         0  |
  4462  |  resetPlaceHolder_2();  |         |                            |
  4468  |             R = R + 2;  |      2  |                         0  |
  4473  |  resetPlaceHolder_2();  |         |                            |
  4479  |             R = R + 2;  |      2  |                         0  |
  4484  |  resetPlaceHolder_2();  |         |                            |
  4490  |             R = R + 2;  |      2  |                         0  |
  4495  |  resetPlaceHolder_2();  |         |                            |
  4501  |             R = R + 2;  |      2  |                         0  |
  4506  |  resetPlaceHolder_2();  |         |                            |
  4512  |             R = R + 2;  |      2  |                         0  |
  4517  |  resetPlaceHolder_2();  |         |                            |
  4523  |             R = R + 2;  |      2  |                         0  |
  4528  |  resetPlaceHolder_2();  |         |                            |
  4534  |             R = R + 2;  |      2  |                         0  |
  4539  |  resetPlaceHolder_2();  |         |                            |
  4545  |             R = R + 2;  |      2  |                         0  |
  4550  |  resetPlaceHolder_2();  |         |                            |
  4556  |             R = R + 2;  |      2  |                         0  |
  4561  |  resetPlaceHolder_2();  |         |                            |
  4567  |             R = R + 2;  |      2  |                         0  |
  4572  |  resetPlaceHolder_2();  |         |                            |
  4578  |             R = R + 2;  |      2  |                         0  |
  4583  |  resetPlaceHolder_2();  |         |                            |
  4589  |             R = R + 2;  |      2  |                         0  |
  4594  |  resetPlaceHolder_2();  |         |                            |
  4600  |             R = R + 2;  |      2  |                         0  |
  4605  |  resetPlaceHolder_2();  |         |                            |
  4611  |             R = R + 2;  |      2  |                         0  |
  4616  |  resetPlaceHolder_2();  |         |                            |
  4622  |             R = R + 2;  |      2  |                         0  |
  4627  |  resetPlaceHolder_2();  |         |                            |
  4633  |             R = R + 2;  |      2  |                         0  |
  4638  |  resetPlaceHolder_2();  |         |                            |
  4644  |             R = R + 2;  |      2  |                         0  |
  4649  |  resetPlaceHolder_2();  |         |                            |
  4655  |             R = R + 2;  |      2  |                         0  |
  4660  |  resetPlaceHolder_2();  |         |                            |
  4666  |             R = R + 2;  |      2  |                         0  |
  4671  |  resetPlaceHolder_2();  |         |                            |
  4677  |             R = R + 2;  |      2  |                         0  |
  4682  |  resetPlaceHolder_2();  |         |                            |
  4688  |             R = R + 2;  |      2  |                         0  |
  4693  |  resetPlaceHolder_2();  |         |                            |
  4699  |             R = R + 2;  |      2  |                         0  |
  4704  |  resetPlaceHolder_2();  |         |                            |
  4710  |             R = R + 2;  |      2  |                         0  |
  4715  |  resetPlaceHolder_2();  |         |                            |
  4721  |             R = R + 2;  |      2  |                         0  |
  4726  |  resetPlaceHolder_2();  |         |                            |
  4732  |             R = R + 2;  |      2  |                         0  |
  4737  |  resetPlaceHolder_2();  |         |                            |
  4743  |             R = R + 2;  |      2  |                         0  |
  4748  |  resetPlaceHolder_2();  |         |                            |
  4754  |             R = R + 2;  |      2  |                         0  |
  4759  |  resetPlaceHolder_2();  |         |                            |
  4765  |             R = R + 2;  |      2  |                         0  |
  4770  |  resetPlaceHolder_2();  |         |                            |
  4776  |             R = R + 2;  |      2  |                         0  |
  4781  |  resetPlaceHolder_2();  |         |                            |
  4787  |             R = R + 2;  |      2  |                         0  |
  4792  |  resetPlaceHolder_2();  |         |                            |
  4798  |             R = R + 2;  |      2  |                         0  |
  4803  |  resetPlaceHolder_2();  |         |                            |
  4809  |             R = R + 2;  |      2  |                         0  |
  4814  |  resetPlaceHolder_2();  |         |                            |
  4820  |             R = R + 2;  |      2  |                         0  |
  4825  |  resetPlaceHolder_2();  |         |                            |
  4831  |             R = R + 2;  |      2  |                         0  |
  4836  |  resetPlaceHolder_2();  |         |                            |
  4842  |             R = R + 2;  |      2  |                         0  |
  4847  |  resetPlaceHolder_2();  |         |                            |
  4853  |             R = R + 2;  |      2  |                         0  |
  4858  |  resetPlaceHolder_2();  |         |                            |
  4864  |             R = R + 2;  |      2  |                         0  |
  4869  |  resetPlaceHolder_2();  |         |                            |
  4875  |             R = R + 2;  |      2  |                         0  |
  4880  |  resetPlaceHolder_2();  |         |                            |
  4886  |             R = R + 2;  |      2  |                         0  |
  4891  |  resetPlaceHolder_2();  |         |                            |
  4897  |             R = R + 2;  |      2  |                         0  |
  4902  |  resetPlaceHolder_2();  |         |                            |
  4908  |             R = R + 2;  |      2  |                         0  |
  4913  |  resetPlaceHolder_2();  |         |                            |
  4919  |             R = R + 2;  |      2  |                         0  |
  4924  |  resetPlaceHolder_2();  |         |                            |
  4930  |             R = R + 2;  |      2  |                         0  |
  4935  |  resetPlaceHolder_2();  |         |                            |
  4941  |             R = R + 2;  |      2  |                         0  |
  4946  |  resetPlaceHolder_2();  |         |                            |
  4952  |             R = R + 2;  |      2  |                         0  |
  4957  |  resetPlaceHolder_2();  |         |                            |
  4963  |             R = R + 2;  |      2  |                         0  |
  4968  |  resetPlaceHolder_2();  |         |                            |
  4974  |             R = R + 2;  |      2  |                         0  |
  4979  |  resetPlaceHolder_2();  |         |                            |
  4985  |             R = R + 2;  |      2  |                         0  |
  4990  |  resetPlaceHolder_2();  |         |                            |
  4996  |             R = R + 2;  |      2  |                         0  |
  5001  |  resetPlaceHolder_2();  |         |                            |
  5007  |             R = R + 2;  |      2  |                         0  |
  5012  |  resetPlaceHolder_2();  |         |                            |
  5018  |             R = R + 2;  |      2  |                         0  |
  5023  |  resetPlaceHolder_2();  |         |                            |
  5029  |             R = R + 2;  |      2  |                         0  |
  5034  |  resetPlaceHolder_2();  |         |                            |
  5040  |             R = R + 2;  |      2  |                         0  |
  5045  |  resetPlaceHolder_2();  |         |                            |
  5051  |             R = R + 2;  |      2  |                         0  |
  5056  |  resetPlaceHolder_2();  |         |                            |
  5062  |             R = R + 2;  |      2  |                         0  |
  5067  |  resetPlaceHolder_2();  |         |                            |
  5073  |             R = R + 2;  |      2  |                         0  |
  5078  |  resetPlaceHolder_2();  |         |                            |
  5084  |             R = R + 2;  |      2  |                         0  |
  5089  |  resetPlaceHolder_2();  |         |                            |
  5095  |             R = R + 2;  |      2  |                         0  |
  5100  |  resetPlaceHolder_2();  |         |                            |
  5106  |             R = R + 2;  |      2  |                         0  |
  5111  |  resetPlaceHolder_2();  |         |                            |
  5117  |             R = R + 2;  |      2  |                         0  |
  5122  |  resetPlaceHolder_2();  |         |                            |
  5128  |             R = R + 2;  |      2  |                         0  |
  5133  |  resetPlaceHolder_2();  |         |                            |
  5139  |             R = R + 2;  |      2  |                         0  |
  5144  |  resetPlaceHolder_2();  |         |                            |
  5150  |             R = R + 2;  |      2  |                         0  |
  5155  |  resetPlaceHolder_2();  |         |                            |
  5161  |             R = R + 2;  |      2  |                         0  |
  5166  |  resetPlaceHolder_2();  |         |                            |
  5172  |             R = R + 2;  |      2  |                         0  |
  5177  |  resetPlaceHolder_2();  |         |                            |
  5183  |             R = R + 2;  |      2  |                         0  |
  5188  |  resetPlaceHolder_2();  |         |                            |
  5194  |             R = R + 1;  |      1  |                         0  |
  5199  |  resetPlaceHolder_1();  |         |                            |
  5213  |             R = R + 2;  |      2  |                         0  |
  5218  |  resetPlaceHolder_2();  |         |                            |
  5224  |             R = R + 2;  |      2  |                         0  |
  5229  |  resetPlaceHolder_2();  |         |                            |
  5235  |             R = R + 2;  |      2  |                         0  |
  5240  |  resetPlaceHolder_2();  |         |                            |
  5246  |             R = R + 2;  |      2  |                         0  |
  5251  |  resetPlaceHolder_2();  |         |                            |
  5257  |             R = R + 2;  |      2  |                         0  |
  5262  |  resetPlaceHolder_2();  |         |                            |
  5268  |             R = R + 2;  |      2  |                         0  |
  5273  |  resetPlaceHolder_2();  |         |                            |
  5279  |             R = R + 2;  |      2  |                         0  |
  5284  |  resetPlaceHolder_2();  |         |                            |
  5290  |             R = R + 2;  |      2  |                         0  |
  5295  |  resetPlaceHolder_2();  |         |                            |
  5301  |             R = R + 2;  |      2  |                         0  |
  5306  |  resetPlaceHolder_2();  |         |                            |
  5312  |             R = R + 2;  |      2  |                         0  |
  5317  |  resetPlaceHolder_2();  |         |                            |
  5323  |             R = R + 2;  |      2  |                         0  |
  5328  |  resetPlaceHolder_2();  |         |                            |
  5334  |             R = R + 2;  |      2  |                         0  |
  5339  |  resetPlaceHolder_2();  |         |                            |
  5345  |             R = R + 2;  |      2  |                         0  |
  5350  |  resetPlaceHolder_2();  |         |                            |
  5356  |             R = R + 2;  |      2  |                         0  |
  5361  |  resetPlaceHolder_2();  |         |                            |
  5367  |             R = R + 2;  |      2  |                         0  |
  5372  |  resetPlaceHolder_2();  |         |                            |
  5378  |             R = R + 2;  |      2  |                         0  |
  5383  |  resetPlaceHolder_2();  |         |                            |
  5389  |             R = R + 2;  |      2  |                         0  |
  5394  |  resetPlaceHolder_2();  |         |                            |
  5400  |             R = R + 2;  |      2  |                         0  |
  5405  |  resetPlaceHolder_2();  |         |                            |
  5411  |             R = R + 2;  |      2  |                         0  |
  5416  |  resetPlaceHolder_2();  |         |                            |
  5422  |             R = R + 2;  |      2  |                         0  |
  5427  |  resetPlaceHolder_2();  |         |                            |
  5433  |             R = R + 2;  |      2  |                         0  |
  5438  |  resetPlaceHolder_2();  |         |                            |
  5444  |             R = R + 2;  |      2  |                         0  |
  5449  |  resetPlaceHolder_2();  |         |                            |
  5455  |             R = R + 2;  |      2  |                         0  |
  5460  |  resetPlaceHolder_2();  |         |                            |
  5466  |             R = R + 2;  |      2  |                         0  |
  5471  |  resetPlaceHolder_2();  |         |                            |
  5477  |             R = R + 2;  |      2  |                         0  |
  5482  |  resetPlaceHolder_2();  |         |                            |
  5488  |             R = R + 2;  |      2  |                         0  |
  5493  |  resetPlaceHolder_2();  |         |                            |
  5499  |             R = R + 2;  |      2  |                         0  |
  5504  |  resetPlaceHolder_2();  |         |                            |
  5510  |             R = R + 2;  |      2  |                         0  |
  5515  |  resetPlaceHolder_2();  |         |                            |
  5521  |             R = R + 2;  |      2  |                         0  |
  5526  |  resetPlaceHolder_2();  |         |                            |
  5532  |             R = R + 2;  |      2  |                         0  |
  5537  |  resetPlaceHolder_2();  |         |                            |
  5543  |             R = R + 2;  |      2  |                         0  |
  5548  |  resetPlaceHolder_2();  |         |                            |
  5554  |             R = R + 2;  |      2  |                         0  |
  5559  |  resetPlaceHolder_2();  |         |                            |
  5565  |             R = R + 2;  |      2  |                         0  |
  5570  |  resetPlaceHolder_2();  |         |                            |
  5576  |             R = R + 2;  |      2  |                         0  |
  5581  |  resetPlaceHolder_2();  |         |                            |
  5587  |             R = R + 2;  |      2  |                         0  |
  5592  |  resetPlaceHolder_2();  |         |                            |
  5598  |             R = R + 2;  |      2  |                         0  |
  5603  |  resetPlaceHolder_2();  |         |                            |
  5609  |             R = R + 2;  |      2  |                         0  |
  5614  |  resetPlaceHolder_2();  |         |                            |
  5620  |             R = R + 2;  |      2  |                         0  |
  5625  |  resetPlaceHolder_2();  |         |                            |
  5631  |             R = R + 2;  |      2  |                         0  |
  5636  |  resetPlaceHolder_2();  |         |                            |
  5642  |             R = R + 2;  |      2  |                         0  |
  5647  |  resetPlaceHolder_2();  |         |                            |
  5653  |             R = R + 2;  |      2  |                         0  |
  5658  |  resetPlaceHolder_2();  |         |                            |
  5664  |             R = R + 2;  |      2  |                         0  |
  5669  |  resetPlaceHolder_2();  |         |                            |
  5675  |             R = R + 2;  |      2  |                         0  |
  5680  |  resetPlaceHolder_2();  |         |                            |
  5686  |             R = R + 2;  |      2  |                         0  |
  5691  |  resetPlaceHolder_2();  |         |                            |
  5697  |             R = R + 2;  |      2  |                         0  |
  5702  |  resetPlaceHolder_2();  |         |                            |
  5708  |             R = R + 2;  |      2  |                         0  |
  5713  |  resetPlaceHolder_2();  |         |                            |
  5719  |             R = R + 2;  |      2  |                         0  |
  5724  |  resetPlaceHolder_2();  |         |                            |
  5730  |             R = R + 2;  |      2  |                         0  |
  5735  |  resetPlaceHolder_2();  |         |                            |
  5741  |             R = R + 2;  |      2  |                         0  |
  5746  |  resetPlaceHolder_2();  |         |                            |
  5752  |             R = R + 2;  |      2  |                         0  |
  5757  |  resetPlaceHolder_2();  |         |                            |
  5763  |             R = R + 2;  |      2  |                         0  |
  5768  |  resetPlaceHolder_2();  |         |                            |
  5774  |             R = R + 2;  |      2  |                         0  |
  5779  |  resetPlaceHolder_2();  |         |                            |
  5785  |             R = R + 2;  |      2  |                         0  |
  5790  |  resetPlaceHolder_2();  |         |                            |
  5796  |             R = R + 2;  |      2  |                         0  |
  5801  |  resetPlaceHolder_2();  |         |                            |
  5807  |             R = R + 2;  |      2  |                         0  |
  5812  |  resetPlaceHolder_2();  |         |                            |
  5818  |             R = R + 2;  |      2  |                         0  |
  5823  |  resetPlaceHolder_2();  |         |                            |
  5829  |             R = R + 2;  |      2  |                         0  |
  5834  |  resetPlaceHolder_2();  |         |                            |
  5840  |             R = R + 2;  |      2  |                         0  |
  5845  |  resetPlaceHolder_2();  |         |                            |
  5851  |             R = R + 2;  |      2  |                         0  |
  5856  |  resetPlaceHolder_2();  |         |                            |
  5862  |             R = R + 2;  |      2  |                         0  |
  5867  |  resetPlaceHolder_2();  |         |                            |
  5873  |             R = R + 2;  |      2  |                         0  |
  5878  |  resetPlaceHolder_2();  |         |                            |
  5884  |             R = R + 2;  |      2  |                         0  |
  5889  |  resetPlaceHolder_2();  |         |                            |
  5895  |             R = R + 2;  |      2  |                         0  |
  5900  |  resetPlaceHolder_2();  |         |                            |
  5906  |             R = R + 2;  |      2  |                         0  |
  5911  |  resetPlaceHolder_2();  |         |                            |
  5917  |             R = R + 2;  |      2  |                         0  |
  5922  |  resetPlaceHolder_2();  |         |                            |
  5928  |             R = R + 2;  |      2  |                         0  |
  5933  |  resetPlaceHolder_2();  |         |                            |
  5939  |             R = R + 2;  |      2  |                         0  |
  5944  |  resetPlaceHolder_2();  |         |                            |
  5950  |             R = R + 2;  |      2  |                         0  |
  5955  |  resetPlaceHolder_2();  |         |                            |
  5961  |             R = R + 2;  |      2  |                         0  |
  5966  |  resetPlaceHolder_2();  |         |                            |
  5972  |             R = R + 2;  |      2  |                         0  |
  5977  |  resetPlaceHolder_2();  |         |                            |
  5983  |             R = R + 2;  |      2  |                         0  |
  5988  |  resetPlaceHolder_2();  |         |                            |
  5994  |             R = R + 2;  |      2  |                         0  |
  5999  |  resetPlaceHolder_2();  |         |                            |
  6005  |             R = R + 2;  |      2  |                         0  |
  6010  |  resetPlaceHolder_2();  |         |                            |
  6016  |             R = R + 2;  |      2  |                         0  |
  6021  |  resetPlaceHolder_2();  |         |                            |
  6027  |             R = R + 2;  |      2  |                         0  |
  6032  |  resetPlaceHolder_2();  |         |                            |
  6038  |             R = R + 2;  |      2  |                         0  |
  6043  |  resetPlaceHolder_2();  |         |                            |
  6049  |             R = R + 2;  |      2  |                         0  |
  6054  |  resetPlaceHolder_2();  |         |                            |
  6060  |             R = R + 2;  |      2  |                         0  |
  6065  |  resetPlaceHolder_2();  |         |                            |
  6071  |             R = R + 2;  |      2  |                         0  |
  6076  |  resetPlaceHolder_2();  |         |                            |
  6082  |             R = R + 2;  |      2  |                         0  |
  6087  |  resetPlaceHolder_2();  |         |                            |
  6093  |             R = R + 2;  |      2  |                         0  |
  6098  |  resetPlaceHolder_2();  |         |                            |
  6104  |             R = R + 2;  |      2  |                         0  |
  6109  |  resetPlaceHolder_2();  |         |                            |
  6115  |             R = R + 2;  |      2  |                         0  |
  6120  |  resetPlaceHolder_2();  |         |                            |
  6126  |             R = R + 2;  |      2  |                         0  |
  6131  |  resetPlaceHolder_2();  |         |                            |
  6137  |             R = R + 2;  |      2  |                         0  |
  6142  |  resetPlaceHolder_2();  |         |                            |
  6148  |             R = R + 2;  |      2  |                         0  |
  6153  |  resetPlaceHolder_2();  |         |                            |
  6159  |             R = R + 2;  |      2  |                         0  |
  6164  |  resetPlaceHolder_2();  |         |                            |
  6170  |             R = R + 2;  |      2  |                         0  |
  6175  |  resetPlaceHolder_2();  |         |                            |
  6181  |             R = R + 2;  |      2  |                         0  |
  6186  |  resetPlaceHolder_2();  |         |                            |
  6192  |             R = R + 2;  |      2  |                         0  |
  6197  |  resetPlaceHolder_2();  |         |                            |
  6203  |             R = R + 2;  |      2  |                         0  |
  6208  |  resetPlaceHolder_2();  |         |                            |
  6214  |             R = R + 2;  |      2  |                         0  |
  6219  |  resetPlaceHolder_2();  |         |                            |
  6225  |             R = R + 2;  |      2  |                         0  |
  6230  |  resetPlaceHolder_2();  |         |                            |
  6236  |             R = R + 2;  |      2  |                         0  |
  6241  |  resetPlaceHolder_2();  |         |                            |
  6247  |             R = R + 2;  |      2  |                         0  |
  6252  |  resetPlaceHolder_2();  |         |                            |
  6258  |             R = R + 2;  |      2  |                         0  |
  6263  |  resetPlaceHolder_2();  |         |                            |
  6269  |             R = R + 2;  |      2  |                         0  |
  6274  |  resetPlaceHolder_2();  |         |                            |
  6280  |             R = R + 2;  |      2  |                         0  |
  6285  |  resetPlaceHolder_2();  |         |                            |
  6291  |             R = R + 2;  |      2  |                         0  |
  6296  |  resetPlaceHolder_2();  |         |                            |
  6302  |             R = R + 1;  |      1  |                         0  |
  6307  |  resetPlaceHolder_1();  |         |                            |
  6321  |             R = R + 2;  |      2  |                         0  |
  6326  |  resetPlaceHolder_2();  |         |                            |
  6332  |             R = R + 2;  |      2  |                         0  |
  6337  |  resetPlaceHolder_2();  |         |                            |
  6343  |             R = R + 2;  |      2  |                         0  |
  6348  |  resetPlaceHolder_2();  |         |                            |
  6354  |             R = R + 2;  |      2  |                         0  |
  6359  |  resetPlaceHolder_2();  |         |                            |
  6365  |             R = R + 2;  |      2  |                         0  |
  6370  |  resetPlaceHolder_2();  |         |                            |
  6376  |             R = R + 2;  |      2  |                         0  |
  6381  |  resetPlaceHolder_2();  |         |                            |
  6387  |             R = R + 2;  |      2  |                         0  |
  6392  |  resetPlaceHolder_2();  |         |                            |
  6398  |             R = R + 2;  |      2  |                         0  |
  6403  |  resetPlaceHolder_2();  |         |                            |
  6409  |             R = R + 2;  |      2  |                         0  |
  6414  |  resetPlaceHolder_2();  |         |                            |
  6420  |             R = R + 2;  |      2  |                         0  |
  6425  |  resetPlaceHolder_2();  |         |                            |
  6431  |             R = R + 2;  |      2  |                         0  |
  6436  |  resetPlaceHolder_2();  |         |                            |
  6442  |             R = R + 2;  |      2  |                         0  |
  6447  |  resetPlaceHolder_2();  |         |                            |
  6453  |             R = R + 2;  |      2  |                         0  |
  6458  |  resetPlaceHolder_2();  |         |                            |
  6464  |             R = R + 2;  |      2  |                         0  |
  6469  |  resetPlaceHolder_2();  |         |                            |
  6475  |             R = R + 2;  |      2  |                         0  |
  6480  |  resetPlaceHolder_2();  |         |                            |
  6486  |             R = R + 2;  |      2  |                         0  |
  6491  |  resetPlaceHolder_2();  |         |                            |
  6497  |             R = R + 2;  |      2  |                         0  |
  6502  |  resetPlaceHolder_2();  |         |                            |
  6508  |             R = R + 2;  |      2  |                         0  |
  6513  |  resetPlaceHolder_2();  |         |                            |
  6519  |             R = R + 2;  |      2  |                         0  |
  6524  |  resetPlaceHolder_2();  |         |                            |
  6530  |             R = R + 2;  |      2  |                         0  |
  6535  |  resetPlaceHolder_2();  |         |                            |
  6541  |             R = R + 2;  |      2  |                         0  |
  6546  |  resetPlaceHolder_2();  |         |                            |
  6552  |             R = R + 2;  |      2  |                         0  |
  6557  |  resetPlaceHolder_2();  |         |                            |
  6563  |             R = R + 2;  |      2  |                         0  |
  6568  |  resetPlaceHolder_2();  |         |                            |
  6574  |             R = R + 2;  |      2  |                         0  |
  6579  |  resetPlaceHolder_2();  |         |                            |
  6585  |             R = R + 2;  |      2  |                         0  |
  6590  |  resetPlaceHolder_2();  |         |                            |
  6596  |             R = R + 2;  |      2  |                         0  |
  6601  |  resetPlaceHolder_2();  |         |                            |
  6607  |             R = R + 2;  |      2  |                         0  |
  6612  |  resetPlaceHolder_2();  |         |                            |
  6618  |             R = R + 2;  |      2  |                         0  |
  6623  |  resetPlaceHolder_2();  |         |                            |
  6629  |             R = R + 2;  |      2  |                         0  |
  6634  |  resetPlaceHolder_2();  |         |                            |
  6640  |             R = R + 2;  |      2  |                         0  |
  6645  |  resetPlaceHolder_2();  |         |                            |
  6651  |             R = R + 2;  |      2  |                         0  |
  6656  |  resetPlaceHolder_2();  |         |                            |
  6662  |             R = R + 2;  |      2  |                         0  |
  6667  |  resetPlaceHolder_2();  |         |                            |
  6673  |             R = R + 2;  |      2  |                         0  |
  6678  |  resetPlaceHolder_2();  |         |                            |
  6684  |             R = R + 2;  |      2  |                         0  |
  6689  |  resetPlaceHolder_2();  |         |                            |
  6695  |             R = R + 2;  |      2  |                         0  |
  6700  |  resetPlaceHolder_2();  |         |                            |
  6706  |             R = R + 2;  |      2  |                         0  |
  6711  |  resetPlaceHolder_2();  |         |                            |
  6717  |             R = R + 2;  |      2  |                         0  |
  6722  |  resetPlaceHolder_2();  |         |                            |
  6728  |             R = R + 2;  |      2  |                         0  |
  6733  |  resetPlaceHolder_2();  |         |                            |
  6739  |             R = R + 2;  |      2  |                         0  |
  6744  |  resetPlaceHolder_2();  |         |                            |
  6750  |             R = R + 2;  |      2  |                         0  |
  6755  |  resetPlaceHolder_2();  |         |                            |
  6761  |             R = R + 2;  |      2  |                         0  |
  6766  |  resetPlaceHolder_2();  |         |                            |
  6772  |             R = R + 2;  |      2  |                         0  |
  6777  |  resetPlaceHolder_2();  |         |                            |
  6783  |             R = R + 2;  |      2  |                         0  |
  6788  |  resetPlaceHolder_2();  |         |                            |
  6794  |             R = R + 2;  |      2  |                         0  |
  6799  |  resetPlaceHolder_2();  |         |                            |
  6805  |             R = R + 2;  |      2  |                         0  |
  6810  |  resetPlaceHolder_2();  |         |                            |
  6816  |             R = R + 2;  |      2  |                         0  |
  6821  |  resetPlaceHolder_2();  |         |                            |
  6827  |             R = R + 2;  |      2  |                         0  |
  6832  |  resetPlaceHolder_2();  |         |                            |
  6838  |             R = R + 2;  |      2  |                         0  |
  6843  |  resetPlaceHolder_2();  |         |                            |
  6849  |             R = R + 2;  |      2  |                         0  |
  6854  |  resetPlaceHolder_2();  |         |                            |
  6860  |             R = R + 2;  |      2  |                         0  |
  6865  |  resetPlaceHolder_2();  |         |                            |
  6871  |             R = R + 2;  |      2  |                         0  |
  6876  |  resetPlaceHolder_2();  |         |                            |
  6882  |             R = R + 2;  |      2  |                         0  |
  6887  |  resetPlaceHolder_2();  |         |                            |
  6893  |             R = R + 2;  |      2  |                         0  |
  6898  |  resetPlaceHolder_2();  |         |                            |
  6904  |             R = R + 2;  |      2  |                         0  |
  6909  |  resetPlaceHolder_2();  |         |                            |
  6915  |             R = R + 2;  |      2  |                         0  |
  6920  |  resetPlaceHolder_2();  |         |                            |
  6926  |             R = R + 2;  |      2  |                         0  |
  6931  |  resetPlaceHolder_2();  |         |                            |
  6937  |             R = R + 2;  |      2  |                         0  |
  6942  |  resetPlaceHolder_2();  |         |                            |
  6948  |             R = R + 2;  |      2  |                         0  |
  6953  |  resetPlaceHolder_2();  |         |                            |
  6959  |             R = R + 2;  |      2  |                         0  |
  6964  |  resetPlaceHolder_2();  |         |                            |
  6970  |             R = R + 2;  |      2  |                         0  |
  6975  |  resetPlaceHolder_2();  |         |                            |
  6981  |             R = R + 2;  |      2  |                         0  |
  6986  |  resetPlaceHolder_2();  |         |                            |
  6992  |             R = R + 2;  |      2  |                         0  |
  6997  |  resetPlaceHolder_2();  |         |                            |
  7003  |             R = R + 2;  |      2  |                         0  |
  7008  |  resetPlaceHolder_2();  |         |                            |
  7014  |             R = R + 2;  |      2  |                         0  |
  7019  |  resetPlaceHolder_2();  |         |                            |
  7025  |             R = R + 2;  |      2  |                         0  |
  7030  |  resetPlaceHolder_2();  |         |                            |
  7036  |             R = R + 2;  |      2  |                         0  |
  7041  |  resetPlaceHolder_2();  |         |                            |
  7047  |             R = R + 2;  |      2  |                         0  |
  7052  |  resetPlaceHolder_2();  |         |                            |
  7058  |             R = R + 2;  |      2  |                         0  |
  7063  |  resetPlaceHolder_2();  |         |                            |
  7069  |             R = R + 2;  |      2  |                         0  |
  7074  |  resetPlaceHolder_2();  |         |                            |
  7080  |             R = R + 2;  |      2  |                         0  |
  7085  |  resetPlaceHolder_2();  |         |                            |
  7091  |             R = R + 2;  |      2  |                         0  |
  7096  |  resetPlaceHolder_2();  |         |                            |
  7102  |             R = R + 2;  |      2  |                         0  |
  7107  |  resetPlaceHolder_2();  |         |                            |
  7113  |             R = R + 2;  |      2  |                         0  |
  7118  |  resetPlaceHolder_2();  |         |                            |
  7124  |             R = R + 2;  |      2  |                         0  |
  7129  |  resetPlaceHolder_2();  |         |                            |
  7135  |             R = R + 2;  |      2  |                         0  |
  7140  |  resetPlaceHolder_2();  |         |                            |
  7146  |             R = R + 2;  |      2  |                         0  |
  7151  |  resetPlaceHolder_2();  |         |                            |
  7157  |             R = R + 2;  |      2  |                         0  |
  7162  |  resetPlaceHolder_2();  |         |                            |
  7168  |             R = R + 2;  |      2  |                         0  |
  7173  |  resetPlaceHolder_2();  |         |                            |
  7179  |             R = R + 2;  |      2  |                         0  |
  7184  |  resetPlaceHolder_2();  |         |                            |
  7190  |             R = R + 2;  |      2  |                         0  |
  7195  |  resetPlaceHolder_2();  |         |                            |
  7201  |             R = R + 2;  |      2  |                         0  |
  7206  |  resetPlaceHolder_2();  |         |                            |
  7212  |             R = R + 2;  |      2  |                         0  |
  7217  |  resetPlaceHolder_2();  |         |                            |
  7223  |             R = R + 2;  |      2  |                         0  |
  7228  |  resetPlaceHolder_2();  |         |                            |
  7234  |             R = R + 2;  |      2  |                         0  |
  7239  |  resetPlaceHolder_2();  |         |                            |
  7245  |             R = R + 2;  |      2  |                         0  |
  7250  |  resetPlaceHolder_2();  |         |                            |
  7256  |             R = R + 2;  |      2  |                         0  |
  7261  |  resetPlaceHolder_2();  |         |                            |
  7267  |             R = R + 2;  |      2  |                         0  |
  7272  |  resetPlaceHolder_2();  |         |                            |
  7278  |             R = R + 2;  |      2  |                         0  |
  7283  |  resetPlaceHolder_2();  |         |                            |
  7289  |             R = R + 2;  |      2  |                         0  |
  7294  |  resetPlaceHolder_2();  |         |                            |
  7300  |             R = R + 2;  |      2  |                         0  |
  7305  |  resetPlaceHolder_2();  |         |                            |
  7311  |             R = R + 2;  |      2  |                         0  |
  7316  |  resetPlaceHolder_2();  |         |                            |
  7322  |             R = R + 2;  |      2  |                         0  |
  7327  |  resetPlaceHolder_2();  |         |                            |
  7333  |             R = R + 2;  |      2  |                         0  |
  7338  |  resetPlaceHolder_2();  |         |                            |
  7344  |             R = R + 2;  |      2  |                         0  |
  7349  |  resetPlaceHolder_2();  |         |                            |
  7355  |             R = R + 2;  |      2  |                         0  |
  7360  |  resetPlaceHolder_2();  |         |                            |
  7366  |             R = R + 2;  |      2  |                         0  |
  7371  |  resetPlaceHolder_2();  |         |                            |
  7377  |             R = R + 2;  |      2  |                         0  |
  7382  |  resetPlaceHolder_2();  |         |                            |
  7388  |             R = R + 2;  |      2  |                         0  |
  7393  |  resetPlaceHolder_2();  |         |                            |
  7399  |             R = R + 2;  |      2  |                         0  |
  7404  |  resetPlaceHolder_2();  |         |                            |
  7410  |             R = R + 2;  |      2  |                         0  |
  7415  |  resetPlaceHolder_2();  |         |                            |
  7421  |             R = R + 2;  |      2  |                         0  |
  7426  |  resetPlaceHolder_2();  |         |                            |
  7432  |             R = R + 2;  |      2  |                         0  |
  7437  |  resetPlaceHolder_2();  |         |                            |
  7443  |             R = R + 2;  |      2  |                         0  |
  7448  |  resetPlaceHolder_2();  |         |                            |
  7454  |             R = R + 2;  |      2  |                         0  |
  7459  |  resetPlaceHolder_2();  |         |                            |
  7465  |             R = R + 2;  |      2  |                         0  |
  7470  |  resetPlaceHolder_2();  |         |                            |
  7476  |             R = R + 2;  |      2  |                         0  |
  7481  |  resetPlaceHolder_2();  |         |                            |
  7487  |             R = R + 2;  |      2  |                         0  |
  7492  |  resetPlaceHolder_2();  |         |                            |
  7498  |             R = R + 2;  |      2  |                         0  |
  7503  |  resetPlaceHolder_2();  |         |                            |
  7509  |             R = R + 2;  |      2  |                         0  |
  7514  |  resetPlaceHolder_2();  |         |                            |
  7520  |             R = R + 2;  |      2  |                         0  |
  7525  |  resetPlaceHolder_2();  |         |                            |
  7531  |             R = R + 2;  |      2  |                         0  |
  7536  |  resetPlaceHolder_2();  |         |                            |
  7542  |             R = R + 2;  |      2  |                         0  |
  7547  |  resetPlaceHolder_2();  |         |                            |
  7553  |             R = R + 2;  |      2  |                         0  |
  7558  |  resetPlaceHolder_2();  |         |                            |
  7564  |             R = R + 2;  |      2  |                         0  |
  7569  |  resetPlaceHolder_2();  |         |                            |
  7575  |             R = R + 2;  |      2  |                         0  |
  7580  |  resetPlaceHolder_2();  |         |                            |
  7586  |             R = R + 1;  |      1  |                         0  |
  7591  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	3m57.407s
user	4m27.238s
sys	0m2.268s

2023-01-25 16:52:12,712 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:52:24,901 INFO     Done. Execution time: 12.188430786132812 seconds
2023-01-25 16:52:24,901 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1652-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1652-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.181s
user	0m26.969s
sys	0m2.654s

2023-01-25 16:52:24,901 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 16:52:24,902 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:52:26,908 INFO     Done. Execution time: 2.0058701038360596 seconds
2023-01-25 16:52:26,908 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.997s
user	0m3.890s
sys	0m0.146s

2023-01-25 16:52:26,908 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 16:52:26,908 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 16:52:28,816 INFO     Done. Execution time: 1.9075019359588623 seconds
2023-01-25 16:52:28,816 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.899s
user	0m3.423s
sys	0m0.174s

2023-01-25 16:52:28,816 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:52:29,890 INFO     Done. Execution time: 1.0731170177459717 seconds
2023-01-25 16:52:29,890 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.066s
user	0m1.752s
sys	0m0.146s

2023-01-25 16:52:29,890 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 16:52:29,890 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:53:35,737 INFO     Done. Execution time: 65.84608554840088 seconds
2023-01-25 16:53:35,737 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz8510399584571596010/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8510399584571596010/bin -o /tmp/qfuzz8510399584571596010/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8510399584571596010/bin
Found file /tmp/qfuzz8510399584571596010/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz8510399584571596010/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8510399584571596010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8510399584571596010/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8510399584571596010/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz8510399584571596010/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 132417 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [80.00]
2; /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [53.00]
3; /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 176, 191, 184, 126, 12, 146, 96, 70, 156, 153, 80, 156, 183, 94, 151, 11, 131, 143, 49, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(66, 4, 4, 4, 35, 6, 185, 74, 71, 11, 34, 190, 72, 186, 125, 32, 166, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8510399584571596010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [98,189,176,191,184]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,35,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [98,189,99,31,43]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.838s
user	0m24.517s
sys	0m1.721s

2023-01-25 16:53:35,737 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 16:53:35,737 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 16:53:38,629 INFO     Done. Execution time: 2.8914663791656494 seconds
2023-01-25 16:53:38,629 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [98,189,176,191,184])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,35,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [98,189,99,31,43])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex        |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [98,189,176,191,184]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [98,189,176,191,184]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [98,189,176,191,184]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [98,189,176,191,184]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [98,189,176,191,184]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [98,189,176,191,184]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [98,189,176,191,184]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [98,189,176,191,184]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [98,189,176,191,184]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [98,189,176,191,184]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     189  |  1  |         1  |        2  |    1  |      1  |  [98,189,176,191,184]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     189  |  1  |         1  |        2  |    2  |      1  |  [98,189,176,191,184]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     189  |  2  |         1  |        2  |    2  |      1  |  [98,189,176,191,184]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     189  |  2  |         1  |        2  |    2  |      1  |  [98,189,176,191,184]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.883s
user	0m5.964s
sys	0m0.304s

2023-01-25 16:53:38,629 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:53:40,900 INFO     Done. Execution time: 2.2704477310180664 seconds
2023-01-25 16:53:40,900 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1653-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1653-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.263s
user	0m4.041s
sys	0m0.214s

2023-01-25 16:53:40,900 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 16:53:40,901 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:54:46,967 INFO     Done. Execution time: 66.06600666046143 seconds
2023-01-25 16:54:46,967 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz7746860706775815044/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7746860706775815044/bin -o /tmp/qfuzz7746860706775815044/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7746860706775815044/bin
Found file /tmp/qfuzz7746860706775815044/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz7746860706775815044/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7746860706775815044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7746860706775815044/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7746860706775815044/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz7746860706775815044/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 135374 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7746860706775815044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7746860706775815044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7746860706775815044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 179, 2, 189
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.058s
user	0m25.144s
sys	0m1.655s

2023-01-25 16:54:46,967 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 16:54:46,968 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 16:54:49,861 INFO     Done. Execution time: 2.893428087234497 seconds
2023-01-25 16:54:49,862 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(179, 2, 189)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            179  |  189  |                     2  |
    32  |     return;  |         |  0  |            179  |  189  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.885s
user	0m5.798s
sys	0m0.290s

2023-01-25 16:54:49,862 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:54:52,033 INFO     Done. Execution time: 2.1711461544036865 seconds
2023-01-25 16:54:52,033 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1654-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1654-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.164s
user	0m3.969s
sys	0m0.206s

2023-01-25 16:54:52,033 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 16:54:52,034 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:55:57,982 INFO     Done. Execution time: 65.9485216140747 seconds
2023-01-25 16:55:57,982 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz3714322986929559520/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3714322986929559520/bin -o /tmp/qfuzz3714322986929559520/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3714322986929559520/bin
Found file /tmp/qfuzz3714322986929559520/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz3714322986929559520/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3714322986929559520/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3714322986929559520/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3714322986929559520/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz3714322986929559520/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 132537 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 29, 35, 35, 157, 5, 5, 16, 158, 155, 62, 91, 189, 64, 32, 35, 112, 7, 128, 4, 4, 197, 20, 173, 152, 138, 40, 35, 168, 16, 158, 155, 155, 155)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3714322986929559520/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.940s
user	0m25.352s
sys	0m1.727s

2023-01-25 16:55:57,983 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 16:55:57,983 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 16:56:04,582 INFO     Done. Execution time: 6.59888219833374 seconds
2023-01-25 16:56:04,582 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m6.588s
user	0m11.241s
sys	0m2.014s

2023-01-25 16:56:04,582 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:56:13,196 INFO     Done. Execution time: 8.614006042480469 seconds
2023-01-25 16:56:13,197 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1656-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1656-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.605s
user	0m19.335s
sys	0m2.605s

2023-01-25 16:56:13,197 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 16:56:13,197 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:57:19,787 INFO     Done. Execution time: 66.59004378318787 seconds
2023-01-25 16:57:19,788 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6241132986459701597/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6241132986459701597/bin -o /tmp/qfuzz6241132986459701597/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6241132986459701597/bin
Found file /tmp/qfuzz6241132986459701597/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6241132986459701597/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6241132986459701597/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6241132986459701597/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6241132986459701597/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz6241132986459701597/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 134913 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 20.00; [635.00,1975.00,1995.00,3606.00,3795.00]
2; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 4; 11.00; [1215.00,1915.00,1926.00,3495.00]
3; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 5; 109.00; [155.00,515.00,766.00,875.00,3995.00]
5; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 5; 409.00; [15.00,755.00,1206.00,1615.00,2355.00]
9; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 5; 231.00; [575.00,806.00,1295.00,1815.00,3975.00]
11; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 5; 80.00; [635.00,1975.00,2055.00,3606.00,3795.00]
20; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 5; 640.00; [106.00,935.00,1895.00,3215.00,3855.00]
33; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 5; 720.00; [115.00,835.00,1706.00,2655.00,3995.00]
47; /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 5; 149.00; [235.00,1455.00,2635.00,3606.00,3755.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 72, 11, 131, 187, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 199, 41, 132, 5, 10, 94, 99, 71, 33, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 160, 94, 192, 46, 26, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 102, 31, 43, 15, 165, 63, 126, 12, 123, 197, 199, 46, 198, 159, 172, 9, 176, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 64, 28, 90, 198, 4, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 37, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 7, 25, 43, 199, 43, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 51, 199, 15, 4, 160, 4, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 95, 174, 95, 60, 95, 103, 60, 186, 95, 95, 95, 95, 95, 72, 96, 95, 95, 66, 54, 74, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6241132986459701597/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,72,11,131,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [84,199,41,132,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,160,94,192,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,102,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,64,28,90,198]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,37,117,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,7,25,43,199]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,95,174,95,60]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.582s
user	0m28.102s
sys	0m1.767s

2023-01-25 16:57:19,788 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 16:57:19,788 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 16:57:27,945 INFO     Done. Execution time: 8.157039642333984 seconds
2023-01-25 16:57:27,946 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,72,11,131,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([84,199,41,132,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,160,94,192,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,102,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,64,28,90,198])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,37,117,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,7,25,43,199])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,95,174,95,60])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff          |  i  |  lhsBuilder  |  rhsBuilder  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [179,72,11,131,187]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [179,72,11,131,187]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [179,72,11,131,187]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [179,72,11,131,187]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [179,72,11,131,187]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [179,72,11,131,187]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [179,72,11,131,187]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [179,72,11,131,187]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    179  |  [179,72,11,131,187]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    179  |  179  |    179  |  [179,72,11,131,187]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  179  |    179  |  [179,72,11,131,187]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  179  |    179  |  [179,72,11,131,187]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  179  |     72  |  [179,72,11,131,187]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     72  |  251  |     72  |  [179,72,11,131,187]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  251  |     72  |  [179,72,11,131,187]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  251  |     72  |  [179,72,11,131,187]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  251  |     11  |  [179,72,11,131,187]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     11  |  262  |     11  |  [179,72,11,131,187]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  262  |     11  |  [179,72,11,131,187]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  262  |     11  |  [179,72,11,131,187]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  262  |    131  |  [179,72,11,131,187]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    131  |  393  |    131  |  [179,72,11,131,187]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  393  |    131  |  [179,72,11,131,187]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  393  |    131  |  [179,72,11,131,187]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  393  |    187  |  [179,72,11,131,187]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    187  |  580  |    187  |  [179,72,11,131,187]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  580  |    187  |  [179,72,11,131,187]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  580  |    187  |  [179,72,11,131,187]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    179  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     72  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     11  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    131  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    187  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m8.148s
user	0m12.635s
sys	0m3.279s

2023-01-25 16:57:27,946 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:57:35,936 INFO     Done. Execution time: 7.989831447601318 seconds
2023-01-25 16:57:35,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1657-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1657-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.981s
user	0m17.767s
sys	0m2.221s

2023-01-25 16:57:35,936 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 16:57:35,936 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 16:58:42,330 INFO     Done. Execution time: 66.39299440383911 seconds
2023-01-25 16:58:42,330 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz1527484897661688712/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1527484897661688712/bin -o /tmp/qfuzz1527484897661688712/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1527484897661688712/bin
Found file /tmp/qfuzz1527484897661688712/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz1527484897661688712/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1527484897661688712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1527484897661688712/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1527484897661688712/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1527484897661688712/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 141870 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m141k to 141k us (average: 141k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 20.00; [308.00,635.00,868.00,1975.00,1995.00,3604.00,3795.00]
2; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 7; 31.00; [2048.00,2675.00,2795.00,2868.00,3604.00,3635.00,3835.00]
4; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 7; 60.00; [308.00,635.00,868.00,1995.00,2055.00,3355.00,3604.00]
5; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 147.00; [635.00,868.00,1088.00,1235.00,1995.00,3604.00,3795.00]
7; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 7; 213.00; [248.00,1135.00,1348.00,1975.00,2535.00,3355.00,3604.00]
8; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 240.00; [308.00,635.00,875.00,1995.00,2835.00,3348.00,3604.00]
10; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 6; 4.00; [2384.00,2388.00,2535.00,2755.00,2975.00,3988.00]
13; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 7; 20.00; [308.00,868.00,1815.00,1975.00,1995.00,3604.00,3795.00]
19; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 5; 7.00; [988.00,2508.00,2515.00,3175.00,3224.00]
53; /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta; 7; 331.00; [135.00,1204.00,1535.00,1895.00,2695.00,3188.00,3928.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 94, 76, 6, 134, 196, 159, 122, 86, 167, 4, 196, 159, 136, 87)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 125, 158, 125, 125, 125, 49, 67, 164, 125, 125, 125)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 90, 43, 15, 167, 56, 126, 12, 18, 18, 18, 57, 151, 11, 131, 187, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(118, 137, 148, 137, 126, 199, 119, 117, 35, 46, 115, 52, 4, 33, 20, 5, 5, 20, 22, 161, 180, 62, 141, 161, 9, 131, 21, 111)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 141, 99, 31, 43, 15, 167, 56, 126, 12, 129, 197, 199, 46, 198, 15, 159, 172, 136, 158, 48, 45, 46, 80, 144, 55, 151, 11, 131, 187, 161, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 167, 56, 126, 12, 67, 197, 199, 127, 12, 67, 197, 199, 46, 198, 159, 172, 136, 159, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 61, 189, 99, 31, 43, 54, 136, 56, 126, 12, 67, 197, 199, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 102, 167, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 173, 46, 198, 159, 172, 136, 158, 48, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 41, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 139, 181, 191, 133, 102, 143, 111, 57, 52, 176, 45, 46, 106, 197)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1527484897661688712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,94,76,6,134], 196, 159
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,125,158,125,125], 125, 49
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,90], 43, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [118,137,148,137,126], 199, 119
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,141,99,31,43], 15, 167
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,167,56,126], 12, 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,61,189,99,31], 43, 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,102,167,99,31], 43, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,139,181,191,133], 102, 143
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 43, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.385s
user	0m30.040s
sys	0m1.978s

2023-01-25 16:58:42,330 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 16:58:42,330 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 16:58:53,048 INFO     Done. Execution time: 10.718055486679077 seconds
2023-01-25 16:58:53,049 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,94,76,6,134], 196, 159)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,125,158,125,125], 125, 49)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,90], 43, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([118,137,148,137,126], 199, 119)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,141,99,31,43], 15, 167)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,167,56,126], 12, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,61,189,99,31], 43, 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,139,181,191,133], 102, 143)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 43, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,102,167,99,31], 43, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                            
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |       tokens       |  years  |
----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     159  |  [59,94,76,6,134]  |    196  |
    26  |                      // int R = 0;  |         |     0  |         |     |     159  |  [59,94,76,6,134]  |    196  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     159  |  [59,94,76,6,134]  |    196  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     159  |  [59,94,76,6,134]  |    196  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     159  |  [59,94,76,6,134]  |    196  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     159  |  [59,94,76,6,134]  |    196  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |     59  |  0  |     159  |  [59,94,76,6,134]  |    196  |
    41  |                     R = R + chunk;  |     59  |    59  |     59  |  0  |     159  |  [59,94,76,6,134]  |    196  |
    44  |                     R = R + years;  |    196  |   255  |     59  |  0  |     159  |  [59,94,76,6,134]  |    196  |
    47  |                    R = R + months;  |    159  |   414  |     59  |  0  |     159  |  [59,94,76,6,134]  |    196  |
    51  |                         i = i + 1;  |         |   414  |     59  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    52  |              resetPlaceHolder_1();  |         |   414  |     59  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    58  |      chunk = arrayRead(tokens, i);  |         |   414  |     94  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    61  |                     R = R + chunk;  |     94  |   508  |     94  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    64  |                     R = R + years;  |    196  |   704  |     94  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    67  |                    R = R + months;  |    159  |   863  |     94  |  1  |     159  |  [59,94,76,6,134]  |    196  |
    71  |                         i = i + 1;  |         |   863  |     94  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    72  |              resetPlaceHolder_1();  |         |   863  |     94  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    78  |      chunk = arrayRead(tokens, i);  |         |   863  |     76  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    81  |                     R = R + chunk;  |     76  |   939  |     76  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    84  |                     R = R + years;  |    196  |  1135  |     76  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    87  |                    R = R + months;  |    159  |  1294  |     76  |  2  |     159  |  [59,94,76,6,134]  |    196  |
    91  |                         i = i + 1;  |         |  1294  |     76  |  3  |     159  |  [59,94,76,6,134]  |    196  |
    92  |              resetPlaceHolder_1();  |         |  1294  |     76  |  3  |     159  |  [59,94,76,6,134]  |    196  |
    98  |      chunk = arrayRead(tokens, i);  |         |  1294  |      6  |  3  |     159  |  [59,94,76,6,134]  |    196  |
   101  |                     R = R + chunk;  |      6  |  1300  |      6  |  3  |     159  |  [59,94,76,6,134]  |    196  |
   104  |                     R = R + years;  |    196  |  1496  |      6  |  3  |     159  |  [59,94,76,6,134]  |    196  |
   107  |                    R = R + months;  |    159  |  1655  |      6  |  3  |     159  |  [59,94,76,6,134]  |    196  |
   111  |                         i = i + 1;  |         |  1655  |      6  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   112  |              resetPlaceHolder_1();  |         |  1655  |      6  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1655  |    134  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   121  |                     R = R + chunk;  |    134  |  1789  |    134  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   124  |                     R = R + years;  |    196  |  1985  |    134  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   127  |                    R = R + months;  |    159  |  2144  |    134  |  4  |     159  |  [59,94,76,6,134]  |    196  |
   131  |                         i = i + 1;  |         |  2144  |    134  |  5  |     159  |  [59,94,76,6,134]  |    196  |
   132  |              resetPlaceHolder_1();  |         |  2144  |    134  |  5  |     159  |  [59,94,76,6,134]  |    196  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     59  |                            |
    44  |         R = R + years;  |    196  |                         0  |
    47  |        R = R + months;  |    159  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     94  |                            |
    64  |         R = R + years;  |    196  |                         1  |
    67  |        R = R + months;  |    159  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     76  |                            |
    84  |         R = R + years;  |    196  |                         2  |
    87  |        R = R + months;  |    159  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      6  |                            |
   104  |         R = R + years;  |    196  |                         3  |
   107  |        R = R + months;  |    159  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    134  |                            |
   124  |         R = R + years;  |    196  |                         4  |
   127  |        R = R + months;  |    159  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     59  |                            |
    44  |         R = R + years;  |    196  |                            |
    47  |        R = R + months;  |    159  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     94  |                            |
    64  |         R = R + years;  |    196  |                            |
    67  |        R = R + months;  |    159  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     76  |                            |
    84  |         R = R + years;  |    196  |                            |
    87  |        R = R + months;  |    159  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      6  |                            |
   104  |         R = R + years;  |    196  |                            |
   107  |        R = R + months;  |    159  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    134  |                            |
   124  |         R = R + years;  |    196  |                            |
   127  |        R = R + months;  |    159  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     59  |                            |                            |                         0  |
    44  |         R = R + years;  |    196  |                         0  |                            |                            |
    47  |        R = R + months;  |    159  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     94  |                            |                            |                         0  |
    64  |         R = R + years;  |    196  |                         1  |                            |                            |
    67  |        R = R + months;  |    159  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     76  |                            |                            |                         0  |
    84  |         R = R + years;  |    196  |                         2  |                            |                            |
    87  |        R = R + months;  |    159  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   104  |         R = R + years;  |    196  |                         3  |                            |                            |
   107  |        R = R + months;  |    159  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    134  |                            |                            |                         0  |
   124  |         R = R + years;  |    196  |                         4  |                            |                            |
   127  |        R = R + months;  |    159  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R years -> R0 = R0 + years;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m10.708s
user	0m19.178s
sys	0m4.594s

2023-01-25 16:58:53,049 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 16:59:57,221 INFO     Done. Execution time: 64.17179036140442 seconds
2023-01-25 16:59:57,221 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `62.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1658-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1658-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m4.164s
user	3m19.255s
sys	0m19.012s

2023-01-25 16:59:57,221 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 16:59:57,221 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:01:03,653 INFO     Done. Execution time: 66.43121123313904 seconds
2023-01-25 17:01:03,653 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz3183426453433885485/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3183426453433885485/bin -o /tmp/qfuzz3183426453433885485/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3183426453433885485/bin
Found file /tmp/qfuzz3183426453433885485/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz3183426453433885485/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3183426453433885485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3183426453433885485/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3183426453433885485/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz3183426453433885485/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 152753 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m152k to 152k us (average: 152k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 10, 35, 107, 10, 167, 90, 48, 168, 80, 12, 173, 35, 32, 35, 167, 12, 128, 4, 63, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3183426453433885485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.423s
user	0m28.244s
sys	0m2.058s

2023-01-25 17:01:03,653 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 17:01:03,653 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 17:01:10,754 INFO     Done. Execution time: 7.100566387176514 seconds
2023-01-25 17:01:10,754 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m7.090s
user	0m13.018s
sys	0m1.725s

2023-01-25 17:01:10,754 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:01:19,892 INFO     Done. Execution time: 9.13731050491333 seconds
2023-01-25 17:01:19,892 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1701-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1701-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.128s
user	0m19.816s
sys	0m2.620s

2023-01-25 17:01:19,893 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 17:01:19,893 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:02:26,333 INFO     Done. Execution time: 66.44029974937439 seconds
2023-01-25 17:02:26,333 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz1256840914928901614/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1256840914928901614/bin -o /tmp/qfuzz1256840914928901614/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1256840914928901614/bin
Found file /tmp/qfuzz1256840914928901614/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz1256840914928901614/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1256840914928901614/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1256840914928901614/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1256840914928901614/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1256840914928901614/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 142153 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m142k to 142k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 1.00; [28.00,32.00,35.50,37.00,628.00,1968.00,1988.00,3588.00,3788.00]
2; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,1268.00,2528.00]
3; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 9; 1.00; [28.00,32.00,35.50,37.00,108.00,1248.00,1268.00,2008.00,3608.00]
5; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 7; 1.00; [28.00,32.00,35.50,37.00,308.00,668.00,3588.00]
7; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 9; 1.00; [28.00,32.00,35.50,37.00,1508.00,1988.00,2668.00,3588.00,3788.00]
33; /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 7; 1.00; [8.00,28.00,32.00,35.50,37.00,768.00,1188.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 75, 189, 99, 133, 43, 75, 184, 23, 126, 12, 67, 156, 199, 46, 199, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 33, 15, 33, 33, 33, 33, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 100, 63, 62, 180, 8, 180, 30, 165, 32, 28, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 63, 5, 126, 187, 33, 11, 135, 189, 68, 16, 127, 5, 5, 32, 35, 167, 12, 31, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1256840914928901614/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,75,189,99,133]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,33,15,33,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,100,63,62,180]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,63,5,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.429s
user	0m28.336s
sys	0m2.109s

2023-01-25 17:02:26,334 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 17:02:26,334 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 17:02:29,187 INFO     Done. Execution time: 2.8533804416656494 seconds
2023-01-25 17:02:29,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,33,15,33,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,100,63,62,180])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,75,189,99,133])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,63,5,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 11):
                                                        
 Index  |   Commands   |  Costs  |  R  |  baseMessage  |
--------------------------------------------------------
     2  |  int R = 0;  |         |  0  |         [59]  |
    10  |     return;  |         |  0  |         [59]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m2.844s
user	0m5.851s
sys	0m0.292s

2023-01-25 17:02:29,188 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:02:31,272 INFO     Done. Execution time: 2.0844063758850098 seconds
2023-01-25 17:02:31,273 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((R < (8 + (8 * baseMessage))) || (R == (8 + (8 * baseMessage))));
    mostPreciseBound((R < (3 + (6 * baseMessage))) || (R == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    R = R + 1;
    R = R + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      R = R + 1;
      R = R + 1;
      R = R + 1;
      R = R + chunk;
      R = R + 1;
      R = R + 1;
      R = R + 1;
      i = i + 1;
    }
    R = R + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((R < (8 + (8 * baseMessage))) || (R == (8 + (8 * baseMessage))));
    mostPreciseBound((R < (3 + (6 * baseMessage))) || (R == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    R = R + 1;
    R = R + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      R = R + 1;
      R = R + 1;
      R = R + 1;
      R = R + chunk;
      R = R + 1;
      R = R + 1;
      R = R + 1;
      i = i + 1;
    }
    R = R + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ 3 (* 6 baseMessage))) (= R (+ 3 (* 6 baseMessage))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1702-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1702-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.077s
user	0m3.865s
sys	0m0.222s

2023-01-25 17:02:31,273 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 17:02:31,273 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:03:37,325 INFO     Done. Execution time: 66.05170702934265 seconds
2023-01-25 17:03:37,325 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz1771118724956979886/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1771118724956979886/bin -o /tmp/qfuzz1771118724956979886/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1771118724956979886/bin
Found file /tmp/qfuzz1771118724956979886/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz1771118724956979886/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1771118724956979886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1771118724956979886/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1771118724956979886/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1771118724956979886/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 143805 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
10; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
18; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
20; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
23; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
24; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
26; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
28; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
40; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
54; /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 42, 53, 135, 156, 144, 84, 195, 63, 102, 5, 16, 147, 77, 115, 147, 147, 135, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 98, 189, 99, 31, 43, 197, 199, 46, 200, 159, 172, 136, 158, 79, 21, 46, 198, 159, 172, 136, 158, 57, 141, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 197, 199, 87, 31, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 12, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 59, 53, 127, 24, 165, 14, 59, 16, 127, 37, 5, 144, 59, 53, 127, 156, 34, 5, 89, 53, 4, 85, 34, 200, 190, 31, 44, 68, 34, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 98, 189, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 96, 136, 158, 48, 45, 148, 116, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 4, 134, 70, 18, 4, 171, 37, 4, 21, 70, 4, 179, 78, 43, 4, 4, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 150, 127, 161, 11, 167, 56, 47, 169, 71, 187, 66)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(182, 98, 61, 8, 98, 102, 102, 120, 98, 61, 43, 159, 191, 123, 158, 78, 183, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 120, 120, 120, 77, 149, 121, 68, 73, 39, 122, 194, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1771118724956979886/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 190
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 182
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 198
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 179
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.043s
user	0m26.856s
sys	0m2.457s

2023-01-25 17:03:37,325 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 17:03:37,326 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 17:03:44,443 INFO     Done. Execution time: 7.117505073547363 seconds
2023-01-25 17:03:44,444 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(125)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(190)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(18)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(182)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(63)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(198)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(179)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 14)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1496):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |         70  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |         70  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |         70  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         70  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         70  |              |
    16  |        int className_ = className;  |         |    0  |            0  |         70  |          70  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |         70  |          69  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         70  |          69  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |         70  |          69  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |         70  |          69  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |         70  |          68  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         70  |          68  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |         70  |          68  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |         70  |          68  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |         70  |          67  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         70  |          67  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |         70  |          67  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |         70  |          67  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |         70  |          66  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         70  |          66  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |         70  |          66  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |         70  |          66  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |         70  |          65  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         70  |          65  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |         70  |          65  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |         70  |          65  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |         70  |          64  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         70  |          64  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |         70  |          64  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |         70  |          64  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |         70  |          63  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         70  |          63  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |         70  |          63  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |         70  |          63  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |         70  |          62  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         70  |          62  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |         70  |          62  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |         70  |          62  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |         70  |          61  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         70  |          61  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |         70  |          61  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |         70  |          61  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |         70  |          60  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         70  |          60  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |         70  |          60  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |         70  |          60  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |         70  |          59  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         70  |          59  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |         70  |          59  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |         70  |          59  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |         70  |          58  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         70  |          58  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |         70  |          58  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |         70  |          58  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |         70  |          57  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         70  |          57  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |         70  |          57  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |         70  |          57  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |         70  |          56  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         70  |          56  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |         70  |          56  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |         70  |          56  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |         70  |          55  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         70  |          55  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |         70  |          55  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |         70  |          55  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |         70  |          54  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         70  |          54  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |         70  |          54  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |         70  |          54  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |         70  |          53  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         70  |          53  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |         70  |          53  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |         70  |          53  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |         70  |          52  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         70  |          52  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |         70  |          52  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |         70  |          52  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |         70  |          51  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         70  |          51  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |         70  |          51  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |         70  |          51  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |         70  |          50  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         70  |          50  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |         70  |          50  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |         70  |          50  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |         70  |          49  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         70  |          49  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |         70  |          49  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |         70  |          49  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |         70  |          48  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         70  |          48  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |         70  |          48  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |         70  |          48  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |         70  |          47  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         70  |          47  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |         70  |          47  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |         70  |          47  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |         70  |          46  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         70  |          46  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |         70  |          46  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |         70  |          46  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |         70  |          45  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         70  |          45  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |         70  |          45  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |         70  |          45  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |         70  |          44  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         70  |          44  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |         70  |          44  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |         70  |          44  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |         70  |          43  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         70  |          43  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |         70  |          43  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |         70  |          43  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |         70  |          42  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         70  |          42  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |         70  |          42  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |         70  |          42  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |         70  |          41  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         70  |          41  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |         70  |          41  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |         70  |          41  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |         70  |          40  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         70  |          40  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |         70  |          40  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |         70  |          40  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |         70  |          39  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         70  |          39  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |         70  |          39  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |         70  |          39  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |         70  |          38  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         70  |          38  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |         70  |          38  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |         70  |          38  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |         70  |          37  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         70  |          37  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |         70  |          37  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |         70  |          37  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |         70  |          36  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         70  |          36  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |         70  |          36  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |         70  |          36  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |         70  |          35  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         70  |          35  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |         70  |          35  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |         70  |          35  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |         70  |          34  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         70  |          34  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |         70  |          34  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |         70  |          34  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |         70  |          33  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         70  |          33  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |         70  |          33  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |         70  |          33  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |         70  |          32  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         70  |          32  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |         70  |          32  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |         70  |          32  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |         70  |          31  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         70  |          31  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |         70  |          31  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |         70  |          31  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |         70  |          30  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         70  |          30  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |         70  |          30  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |         70  |          30  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |         70  |          29  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         70  |          29  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |         70  |          29  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |         70  |          29  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |         70  |          28  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         70  |          28  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |         70  |          28  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |         70  |          28  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |         70  |          27  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         70  |          27  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |         70  |          27  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |         70  |          27  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |         70  |          26  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         70  |          26  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |         70  |          26  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |         70  |          26  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |         70  |          25  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         70  |          25  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |         70  |          25  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |         70  |          25  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |         70  |          24  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         70  |          24  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |         70  |          24  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |         70  |          24  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |         70  |          23  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         70  |          23  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |         70  |          23  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |         70  |          23  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |         70  |          22  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         70  |          22  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |         70  |          22  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |         70  |          22  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |         70  |          21  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         70  |          21  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |         70  |          21  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |         70  |          21  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |         70  |          20  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         70  |          20  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |         70  |          20  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |         70  |          20  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |         70  |          19  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         70  |          19  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |         70  |          19  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |         70  |          19  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |         70  |          18  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         70  |          18  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |         70  |          18  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |         70  |          18  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |         70  |          17  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         70  |          17  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |         70  |          17  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |         70  |          17  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |         70  |          16  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         70  |          16  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |         70  |          16  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |         70  |          16  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |         70  |          15  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         70  |          15  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |         70  |          15  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |         70  |          15  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |         70  |          14  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         70  |          14  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |         70  |          14  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |         70  |          14  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |         70  |          13  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         70  |          13  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |         70  |          13  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |         70  |          13  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |         70  |          12  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         70  |          12  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |         70  |          12  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |         70  |          12  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |         70  |          11  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         70  |          11  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |         70  |          11  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |         70  |          11  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |         70  |          10  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         70  |          10  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |         70  |          10  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |         70  |          10  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |         70  |           9  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         70  |           9  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |         70  |           9  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |         70  |           9  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |         70  |           8  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         70  |           8  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |         70  |           8  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |         70  |           8  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |         70  |           7  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         70  |           7  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |         70  |           7  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |         70  |           7  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |         70  |           6  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |         70  |           6  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |         70  |           6  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |         70  |           6  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |         70  |           5  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |         70  |           5  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |         70  |           5  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |         70  |           5  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |         70  |           4  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |         70  |           4  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |         70  |           4  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |         70  |           4  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |         70  |           3  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |         70  |           3  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |         70  |           3  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |         70  |           3  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |         70  |           2  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |         70  |           2  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |         70  |           2  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |         70  |           2  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |         70  |           1  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |         70  |           1  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |         70  |           1  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |         70  |           1  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |         70  |           0  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |         70  |           0  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |         70  |           0  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |         70  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 1443, 1401, 1422, 120, 1275, 1233, 288, 1359, 1254, 372, 1191, 57, 78, 834, 981, 687, 1338, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 393, 1002, 792, 1086, 1170, 750, 204, 498, 1107, 1464, 540, 477, 1149, 330, 1044, 267, 162, 939, 855, 414, 1317, 1023, 1485, 876, 99, 771, 813, 351, 246, 1212, 36, 1380, 183, 603, 918, 897, 960, 1065, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {1002}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {1023}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {1044}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {1065}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {1086}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {1107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {1128}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {1149}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {1170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {1191}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {1212}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {1233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {1254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {1275}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {1296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {1317}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {1338}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {1359}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {1380}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {1401}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {1422}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {1443}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {1464}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {1485}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 62: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 63: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 64: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 65: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 66: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 67: {960}
INFO  brbo.backend2.learning.SegmentClustering - Segment 68: {981}
INFO  brbo.backend2.learning.SegmentClustering - Segment 69: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(1024, 352, 730, 247, 142, 814, 898, 709, 436, 37, 184, 751, 1087, 289, 1465, 646, 121, 877, 793, 1255, 1423, 625, 583, 1402, 1360, 1234, 499, 1150, 1297, 1192, 457, 1318, 205, 541, 856, 562, 772, 919, 604, 1339, 520, 1381, 1171, 1213, 1066, 394, 226, 1003, 310, 331, 688, 1108, 1276, 961, 58, 667, 478, 1444, 1045, 835, 373, 268, 79, 415, 1129, 163, 982, 940, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m7.110s
user	0m14.649s
sys	0m2.038s

2023-01-25 17:03:44,444 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:03:52,816 INFO     Done. Execution time: 8.371325969696045 seconds
2023-01-25 17:03:52,816 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1703-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1703-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.363s
user	0m18.160s
sys	0m2.473s

2023-01-25 17:03:52,816 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 17:03:52,816 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:04:59,138 INFO     Done. Execution time: 66.32190346717834 seconds
2023-01-25 17:04:59,138 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz5824401345902375483/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5824401345902375483/bin -o /tmp/qfuzz5824401345902375483/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5824401345902375483/bin
Found file /tmp/qfuzz5824401345902375483/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz5824401345902375483/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5824401345902375483/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5824401345902375483/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5824401345902375483/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5824401345902375483/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 124354 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 35, 35, 161, 5, 188, 192, 66, 50, 150, 173, 123, 51, 35, 167, 12, 4, 122, 12, 128, 116, 23, 121, 128, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5824401345902375483/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.313s
user	0m25.642s
sys	0m1.785s

2023-01-25 17:04:59,139 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 17:04:59,139 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 17:05:06,413 INFO     Done. Execution time: 7.274055480957031 seconds
2023-01-25 17:05:06,413 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m7.264s
user	0m13.961s
sys	0m2.362s

2023-01-25 17:05:06,413 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:05:14,706 INFO     Done. Execution time: 8.292436838150024 seconds
2023-01-25 17:05:14,706 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1705-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1705-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.285s
user	0m18.783s
sys	0m2.409s

2023-01-25 17:05:14,707 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 17:05:14,707 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:06:20,939 INFO     Done. Execution time: 66.23254108428955 seconds
2023-01-25 17:06:20,940 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz7840010312325262747/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7840010312325262747/bin -o /tmp/qfuzz7840010312325262747/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7840010312325262747/bin
Found file /tmp/qfuzz7840010312325262747/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz7840010312325262747/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7840010312325262747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7840010312325262747/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7840010312325262747/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz7840010312325262747/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 132914 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
2; /tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 56, 172, 121, 146, 146, 146, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7840010312325262747/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.224s
user	0m25.339s
sys	0m1.708s

2023-01-25 17:06:20,940 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 17:06:20,940 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 17:06:25,311 INFO     Done. Execution time: 4.37111234664917 seconds
2023-01-25 17:06:25,312 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.363s
user	0m7.277s
sys	0m0.959s

2023-01-25 17:06:25,312 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:06:32,344 INFO     Done. Execution time: 7.031934499740601 seconds
2023-01-25 17:06:32,344 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1706-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1706-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.024s
user	0m15.257s
sys	0m2.032s

2023-01-25 17:06:32,345 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 17:06:32,345 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:07:38,546 INFO     Done. Execution time: 66.20065784454346 seconds
2023-01-25 17:07:38,546 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz1995800267468913894/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1995800267468913894/bin -o /tmp/qfuzz1995800267468913894/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1995800267468913894/bin
Found file /tmp/qfuzz1995800267468913894/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz1995800267468913894/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1995800267468913894/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1995800267468913894/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1995800267468913894/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1995800267468913894/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 121502 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1995800267468913894/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.192s
user	0m24.870s
sys	0m1.700s

2023-01-25 17:07:38,546 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 17:07:38,546 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 17:07:43,971 INFO     Done. Execution time: 5.424202919006348 seconds
2023-01-25 17:07:43,971 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.415s
user	0m9.586s
sys	0m1.938s

2023-01-25 17:07:43,971 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:07:52,207 INFO     Done. Execution time: 8.235506772994995 seconds
2023-01-25 17:07:52,207 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1707-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1707-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.227s
user	0m17.885s
sys	0m2.428s

2023-01-25 17:07:52,208 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 17:07:52,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:08:58,191 INFO     Done. Execution time: 65.98311042785645 seconds
2023-01-25 17:08:58,191 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz7435250629977417806/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7435250629977417806/bin -o /tmp/qfuzz7435250629977417806/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7435250629977417806/bin
Found file /tmp/qfuzz7435250629977417806/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz7435250629977417806/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7435250629977417806/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7435250629977417806/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7435250629977417806/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz7435250629977417806/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 132618 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 134, 111, 99, 132, 56, 73, 149, 192, 7, 85, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7435250629977417806/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.975s
user	0m24.744s
sys	0m1.780s

2023-01-25 17:08:58,191 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 17:08:58,192 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 17:09:05,135 INFO     Done. Execution time: 6.943337440490723 seconds
2023-01-25 17:09:05,135 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m6.933s
user	0m12.278s
sys	0m1.801s

2023-01-25 17:09:05,135 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:09:13,830 INFO     Done. Execution time: 8.694055318832397 seconds
2023-01-25 17:09:13,830 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1709-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1709-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.685s
user	0m18.604s
sys	0m2.570s

2023-01-25 17:09:13,830 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 17:09:13,830 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:10:20,305 INFO     Done. Execution time: 66.47494983673096 seconds
2023-01-25 17:10:20,306 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz8863756004321851066/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8863756004321851066/bin -o /tmp/qfuzz8863756004321851066/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8863756004321851066/bin
Found file /tmp/qfuzz8863756004321851066/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz8863756004321851066/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8863756004321851066/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8863756004321851066/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8863756004321851066/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz8863756004321851066/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 125138 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [34.00]
2; /tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 151, 4, 35, 15, 89, 150, 130, 108, 193, 28, 132, 85, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8863756004321851066/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.465s
user	0m25.222s
sys	0m1.735s

2023-01-25 17:10:20,306 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 17:10:20,306 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 17:10:23,408 INFO     Done. Execution time: 3.1017487049102783 seconds
2023-01-25 17:10:23,408 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.093s
user	0m6.243s
sys	0m0.376s

2023-01-25 17:10:23,409 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:10:25,889 INFO     Done. Execution time: 2.479820489883423 seconds
2023-01-25 17:10:25,889 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1710-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1710-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.471s
user	0m4.516s
sys	0m0.282s

2023-01-25 17:10:25,889 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 17:10:25,889 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:11:32,108 INFO     Done. Execution time: 66.21871566772461 seconds
2023-01-25 17:11:32,108 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz5168772594819160159/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5168772594819160159/bin -o /tmp/qfuzz5168772594819160159/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5168772594819160159/bin
Found file /tmp/qfuzz5168772594819160159/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz5168772594819160159/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5168772594819160159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5168772594819160159/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5168772594819160159/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5168772594819160159/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 129268 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 108, 143, 198, 125, 196, 42, 42, 42, 42, 42, 42, 42, 42, 42, 181, 159)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5168772594819160159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.211s
user	0m24.908s
sys	0m1.745s

2023-01-25 17:11:32,108 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 17:11:32,109 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 17:11:39,106 INFO     Done. Execution time: 6.997270107269287 seconds
2023-01-25 17:11:39,106 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.989s
user	0m12.628s
sys	0m2.636s

2023-01-25 17:11:39,107 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:11:50,513 INFO     Done. Execution time: 11.406212091445923 seconds
2023-01-25 17:11:50,513 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1711-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1711-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.398s
user	0m30.823s
sys	0m4.147s

2023-01-25 17:11:50,513 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 17:11:50,513 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:12:56,447 INFO     Done. Execution time: 65.93376278877258 seconds
2023-01-25 17:12:56,448 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4010168494753557360/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4010168494753557360/bin -o /tmp/qfuzz4010168494753557360/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4010168494753557360/bin
Found file /tmp/qfuzz4010168494753557360/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4010168494753557360/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4010168494753557360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4010168494753557360/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4010168494753557360/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz4010168494753557360/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 130094 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 172, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4010168494753557360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.926s
user	0m24.274s
sys	0m1.777s

2023-01-25 17:12:56,448 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 17:12:56,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 17:13:02,143 INFO     Done. Execution time: 5.695027589797974 seconds
2023-01-25 17:13:02,144 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.687s
user	0m10.787s
sys	0m1.759s

2023-01-25 17:13:02,144 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:13:10,715 INFO     Done. Execution time: 8.570992708206177 seconds
2023-01-25 17:13:10,716 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1713-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1713-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.561s
user	0m18.460s
sys	0m2.430s

2023-01-25 17:13:10,716 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 17:13:10,716 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:14:16,879 INFO     Done. Execution time: 66.16274547576904 seconds
2023-01-25 17:14:16,879 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz1087164897051094171/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1087164897051094171/bin -o /tmp/qfuzz1087164897051094171/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1087164897051094171/bin
Found file /tmp/qfuzz1087164897051094171/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz1087164897051094171/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1087164897051094171/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1087164897051094171/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1087164897051094171/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1087164897051094171/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 130581 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1087164897051094171/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.154s
user	0m25.072s
sys	0m1.748s

2023-01-25 17:14:16,880 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 17:14:16,880 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 17:14:21,320 INFO     Done. Execution time: 4.439504623413086 seconds
2023-01-25 17:14:21,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.432s
user	0m7.664s
sys	0m1.023s

2023-01-25 17:14:21,320 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:14:28,280 INFO     Done. Execution time: 6.959548234939575 seconds
2023-01-25 17:14:28,280 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1714-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1714-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.951s
user	0m15.317s
sys	0m2.050s

2023-01-25 17:14:28,280 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 17:14:28,281 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:15:34,381 INFO     Done. Execution time: 66.10072612762451 seconds
2023-01-25 17:15:34,382 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz5958758070145173199/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5958758070145173199/bin -o /tmp/qfuzz5958758070145173199/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5958758070145173199/bin
Found file /tmp/qfuzz5958758070145173199/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz5958758070145173199/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5958758070145173199/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5958758070145173199/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5958758070145173199/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5958758070145173199/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 125396 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [49.00]
2; /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta; 2; 2.00; [41.00,43.00]
5; /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 2; 8.00; [35.00,43.00]
6; /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 196, 131, 187, 66, 147, 77, 115, 49, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 132, 197, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 196, 97, 193, 33, 36, 33, 79, 10, 33, 187, 11, 4, 43, 181, 189, 10, 33, 147, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 29, 33, 166, 11, 4, 33, 145, 72, 66, 13, 63, 171, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5958758070145173199/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [98,196,131,187,66]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [132,197,119]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [196,97,193,33,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [98,189,99,31,43]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.093s
user	0m24.982s
sys	0m1.647s

2023-01-25 17:15:34,382 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 17:15:34,382 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 17:15:38,953 INFO     Done. Execution time: 4.571150779724121 seconds
2023-01-25 17:15:38,954 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [98,196,131,187,66])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [132,197,119])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [98,189,99,31,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [196,97,193,33,36])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 73):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [98,196,131,187,66]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [98,196,131,187,66]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [98,196,131,187,66]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [98,196,131,187,66]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [98,196,131,187,66]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [98,196,131,187,66]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [98,196,131,187,66]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      98  |  [98,196,131,187,66]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |      98  |  [98,196,131,187,66]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |      98  |  [98,196,131,187,66]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |     196  |  [98,196,131,187,66]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |     196  |  [98,196,131,187,66]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |     196  |  [98,196,131,187,66]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |     196  |  [98,196,131,187,66]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |     196  |  [98,196,131,187,66]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m4.562s
user	0m8.467s
sys	0m1.208s

2023-01-25 17:15:38,954 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:16:03,332 INFO     Done. Execution time: 24.377924919128418 seconds
2023-01-25 17:16:03,332 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun choices () Int)
(declare-fun str () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> choices 0))
(assert (> str 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 choices))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 choices))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    15)  (define-fun str () Int    9)  (define-fun choices () Int    15)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `22.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1715-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1715-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m24.370s
user	0m47.366s
sys	0m3.537s

2023-01-25 17:16:03,333 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 17:16:03,333 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:17:09,728 INFO     Done. Execution time: 66.39515495300293 seconds
2023-01-25 17:17:09,728 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz2285752879614971248/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2285752879614971248/bin -o /tmp/qfuzz2285752879614971248/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2285752879614971248/bin
Found file /tmp/qfuzz2285752879614971248/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz2285752879614971248/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2285752879614971248/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2285752879614971248/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2285752879614971248/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz2285752879614971248/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 126605 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2285752879614971248/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2285752879614971248/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2285752879614971248/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 43, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.386s
user	0m26.021s
sys	0m1.575s

2023-01-25 17:17:09,729 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 17:17:09,729 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 17:17:12,711 INFO     Done. Execution time: 2.981846809387207 seconds
2023-01-25 17:17:12,711 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 43, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |        array         |  endIndex  |  startIndex  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [179,98,189,99,31]  |         2  |          43  |
    48  |     return;  |         |  0  |  [179,98,189,99,31]  |         2  |          43  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.974s
user	0m5.892s
sys	0m0.300s

2023-01-25 17:17:12,711 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:17:15,029 INFO     Done. Execution time: 2.3175508975982666 seconds
2023-01-25 17:17:15,029 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1717-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1717-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.310s
user	0m4.105s
sys	0m0.231s

2023-01-25 17:17:15,029 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 17:17:15,029 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:18:21,367 INFO     Done. Execution time: 66.33733367919922 seconds
2023-01-25 17:18:21,367 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz3046440098489313072/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3046440098489313072/bin -o /tmp/qfuzz3046440098489313072/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3046440098489313072/bin
Found file /tmp/qfuzz3046440098489313072/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz3046440098489313072/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3046440098489313072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3046440098489313072/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3046440098489313072/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz3046440098489313072/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 142486 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m142k to 142k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 20.00; [32.00,631.00,1971.00,1991.00,3601.00,3791.00]
2; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 6; 79.00; [32.00,111.00,311.00,1011.00,1831.00,3601.00]
3; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 6; 90.00; [32.00,1281.00,1371.00,1491.00,2091.00,3031.00]
5; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 6; 140.00; [32.00,631.00,771.00,1971.00,3221.00,3791.00]
7; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 6; 150.00; [32.00,251.00,1151.00,1301.00,2631.00,3991.00]
9; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 6; 190.00; [32.00,1131.00,2531.00,2851.00,3601.00,3791.00]
11; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 6; 280.00; [32.00,501.00,1131.00,2631.00,2911.00,3751.00]
13; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 6; 20.00; [32.00,851.00,1971.00,1991.00,3601.00,3791.00]
14; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 6; 439.00; [32.00,471.00,1181.00,2071.00,2691.00,3231.00]
36; /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta; 6; 600.00; [32.00,1091.00,1691.00,2411.00,3181.00,3831.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(158, 120, 84, 191, 54, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 23, 134, 161, 103, 177, 177, 177, 113, 17, 101, 117, 191, 160, 177, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 42, 51, 187, 156, 144, 84, 151, 11, 131, 187, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 145, 187, 56, 131, 110, 19, 139, 4, 131, 46, 120, 72, 4, 63, 186, 45, 86, 29, 115, 60, 162, 168, 106, 42, 136, 34, 37, 161, 68, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 142, 189, 56, 126, 12, 67, 197, 199, 160, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 57, 12, 199, 131, 141, 25, 25, 25, 25, 25, 130, 25, 25, 25, 178, 195, 25, 25, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 98, 189, 38, 31, 166, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 146, 172, 136, 36, 38, 91, 46, 144, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 68, 74, 104, 151, 119, 26, 151, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 50, 5, 15, 91, 41, 92, 67, 165, 147, 77, 115, 94, 161, 13, 55, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3046440098489313072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [158,120,84,191,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,23,134,161,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,145,187,56,131]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,142,189,56,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,57,12,199,131]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,98,189,38,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,68,74,104,151]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,50,5,15,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.329s
user	0m27.191s
sys	0m1.779s

2023-01-25 17:18:21,367 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 17:18:21,368 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 17:18:30,078 INFO     Done. Execution time: 8.710723638534546 seconds
2023-01-25 17:18:30,079 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([158,120,84,191,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,23,134,161,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,145,187,56,131])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,142,189,56,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,57,12,199,131])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,98,189,38,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,50,5,15,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([63,68,74,104,151])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [158,120,84,191,54]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [158,120,84,191,54]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [158,120,84,191,54]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [158,120,84,191,54]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [158,120,84,191,54]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [158,120,84,191,54]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    158  |  0  |  [158,120,84,191,54]  |
    22  |                     R = R + chunk;  |    158  |  158  |    158  |  0  |  [158,120,84,191,54]  |
    26  |                         i = i + 1;  |         |  158  |    158  |  1  |  [158,120,84,191,54]  |
    32  |                         R = R + 1;  |      1  |  159  |    158  |  1  |  [158,120,84,191,54]  |
    35  |     chunk = arrayRead(objects, i);  |         |  159  |    120  |  1  |  [158,120,84,191,54]  |
    38  |                     R = R + chunk;  |    120  |  279  |    120  |  1  |  [158,120,84,191,54]  |
    42  |                         i = i + 1;  |         |  279  |    120  |  2  |  [158,120,84,191,54]  |
    43  |              resetPlaceHolder_1();  |         |  279  |    120  |  2  |  [158,120,84,191,54]  |
    49  |                         R = R + 1;  |      1  |  280  |    120  |  2  |  [158,120,84,191,54]  |
    52  |     chunk = arrayRead(objects, i);  |         |  280  |     84  |  2  |  [158,120,84,191,54]  |
    55  |                     R = R + chunk;  |     84  |  364  |     84  |  2  |  [158,120,84,191,54]  |
    59  |                         i = i + 1;  |         |  364  |     84  |  3  |  [158,120,84,191,54]  |
    60  |              resetPlaceHolder_1();  |         |  364  |     84  |  3  |  [158,120,84,191,54]  |
    66  |                         R = R + 1;  |      1  |  365  |     84  |  3  |  [158,120,84,191,54]  |
    69  |     chunk = arrayRead(objects, i);  |         |  365  |    191  |  3  |  [158,120,84,191,54]  |
    72  |                     R = R + chunk;  |    191  |  556  |    191  |  3  |  [158,120,84,191,54]  |
    76  |                         i = i + 1;  |         |  556  |    191  |  4  |  [158,120,84,191,54]  |
    77  |              resetPlaceHolder_1();  |         |  556  |    191  |  4  |  [158,120,84,191,54]  |
    83  |                         R = R + 1;  |      1  |  557  |    191  |  4  |  [158,120,84,191,54]  |
    86  |     chunk = arrayRead(objects, i);  |         |  557  |     54  |  4  |  [158,120,84,191,54]  |
    89  |                     R = R + chunk;  |     54  |  611  |     54  |  4  |  [158,120,84,191,54]  |
    93  |                         i = i + 1;  |         |  611  |     54  |  5  |  [158,120,84,191,54]  |
    94  |              resetPlaceHolder_1();  |         |  611  |     54  |  5  |  [158,120,84,191,54]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    158  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    120  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     84  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |    191  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     54  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    158  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |    120  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     84  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |    191  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     54  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m8.702s
user	0m15.373s
sys	0m3.982s

2023-01-25 17:18:30,079 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:18:43,621 INFO     Done. Execution time: 13.54221224784851 seconds
2023-01-25 17:18:43,621 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `11.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1718-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1718-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.535s
user	0m38.847s
sys	0m4.605s

2023-01-25 17:18:43,622 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 17:18:43,622 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:19:49,593 INFO     Done. Execution time: 65.97148442268372 seconds
2023-01-25 17:19:49,594 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz2400564662668032159/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2400564662668032159/bin -o /tmp/qfuzz2400564662668032159/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2400564662668032159/bin
Found file /tmp/qfuzz2400564662668032159/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz2400564662668032159/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2400564662668032159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2400564662668032159/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2400564662668032159/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz2400564662668032159/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 120681 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 20.00; [631.00,872.00,1971.00,1991.00,3601.00,3791.00]
2; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 6; 220.00; [101.00,771.00,1631.00,1851.00,2292.00,3531.00]
3; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 210.00; [91.00,872.00,1271.00,1611.00,3391.00,3601.00]
7; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 4; 381.00; [1151.00,2731.00,3112.00,3621.00]
10; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 6; 240.00; [311.00,631.00,871.00,3031.00,3352.00,3601.00]
12; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 5; 60.00; [1931.00,1991.00,2371.50,3221.00,3791.00]
15; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 6; 320.00; [111.00,431.00,941.00,1351.00,1691.00,2652.00]
23; /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 6; 481.00; [91.00,631.00,1112.00,1971.00,2651.00,3601.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 132, 4, 31, 55, 15, 167, 56, 126, 84, 179, 32, 161, 5, 131, 159, 172, 136, 40, 105, 122, 45, 66, 118)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 5, 21, 84, 67, 132, 35, 100, 136, 17, 98, 189, 186, 130, 43, 81, 167, 5, 51, 12, 146, 170, 143, 168, 133, 146, 94, 161, 133, 130, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 96, 189, 99, 118, 118, 162, 44, 42, 53, 135, 30, 144, 84, 45, 45, 145, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 151, 31, 43, 15, 167, 119, 84, 136, 136, 136, 128, 136, 156, 151, 20, 33, 187, 66, 156, 164, 158, 131, 133, 107, 143, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 57, 136, 136, 136, 155, 115, 136, 136, 136, 78, 123, 149, 5, 45, 92, 4, 114, 9, 188, 188, 188, 188, 188, 188, 188, 188, 91, 188, 93, 162, 71, 192, 136, 143, 76, 16, 8, 75, 166, 117, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 80, 63, 4, 169, 43, 92, 4, 177, 44, 42, 180, 43, 186, 95, 95, 7, 37, 198, 172, 136, 158, 48, 45, 38, 117, 179, 78, 63, 126, 48, 45, 188, 117, 94)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 176, 38, 92, 81, 114, 108, 85, 42, 98, 44, 65, 16, 116, 63, 191, 107, 134, 77)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2400564662668032159/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,132,4,31], 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,5,21,84,67], 132
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,96,189,99,118], 118
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,151,31,43,15], 167
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [180,57,136,136,136], 155
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,80,63,4,169], 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,176,38,92,81], 114
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 43
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.964s
user	0m27.358s
sys	0m1.677s

2023-01-25 17:19:49,594 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 17:19:49,594 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 17:19:59,078 INFO     Done. Execution time: 9.483704805374146 seconds
2023-01-25 17:19:59,078 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,132,4,31], 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,96,189,99,118], 118)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,151,31,43,15], 167)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,5,21,84,67], 132)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([180,57,136,136,136], 155)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,80,63,4,169], 43)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,176,38,92,81], 114)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 43)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects       |  separator  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [179,98,132,4,31]  |         55  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [179,98,132,4,31]  |         55  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [179,98,132,4,31]  |         55  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [179,98,132,4,31]  |         55  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [179,98,132,4,31]  |         55  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [179,98,132,4,31]  |         55  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    179  |  0  |  [179,98,132,4,31]  |         55  |
    22  |                     R = R + chunk;  |    179  |  179  |    179  |  0  |  [179,98,132,4,31]  |         55  |
    26  |                         i = i + 1;  |         |  179  |    179  |  1  |  [179,98,132,4,31]  |         55  |
    32  |                 R = R + separator;  |     55  |  234  |    179  |  1  |  [179,98,132,4,31]  |         55  |
    35  |     chunk = arrayRead(objects, i);  |         |  234  |     98  |  1  |  [179,98,132,4,31]  |         55  |
    38  |                     R = R + chunk;  |     98  |  332  |     98  |  1  |  [179,98,132,4,31]  |         55  |
    42  |                         i = i + 1;  |         |  332  |     98  |  2  |  [179,98,132,4,31]  |         55  |
    43  |              resetPlaceHolder_1();  |         |  332  |     98  |  2  |  [179,98,132,4,31]  |         55  |
    49  |                 R = R + separator;  |     55  |  387  |     98  |  2  |  [179,98,132,4,31]  |         55  |
    52  |     chunk = arrayRead(objects, i);  |         |  387  |    132  |  2  |  [179,98,132,4,31]  |         55  |
    55  |                     R = R + chunk;  |    132  |  519  |    132  |  2  |  [179,98,132,4,31]  |         55  |
    59  |                         i = i + 1;  |         |  519  |    132  |  3  |  [179,98,132,4,31]  |         55  |
    60  |              resetPlaceHolder_1();  |         |  519  |    132  |  3  |  [179,98,132,4,31]  |         55  |
    66  |                 R = R + separator;  |     55  |  574  |    132  |  3  |  [179,98,132,4,31]  |         55  |
    69  |     chunk = arrayRead(objects, i);  |         |  574  |      4  |  3  |  [179,98,132,4,31]  |         55  |
    72  |                     R = R + chunk;  |      4  |  578  |      4  |  3  |  [179,98,132,4,31]  |         55  |
    76  |                         i = i + 1;  |         |  578  |      4  |  4  |  [179,98,132,4,31]  |         55  |
    77  |              resetPlaceHolder_1();  |         |  578  |      4  |  4  |  [179,98,132,4,31]  |         55  |
    83  |                 R = R + separator;  |     55  |  633  |      4  |  4  |  [179,98,132,4,31]  |         55  |
    86  |     chunk = arrayRead(objects, i);  |         |  633  |     31  |  4  |  [179,98,132,4,31]  |         55  |
    89  |                     R = R + chunk;  |     31  |  664  |     31  |  4  |  [179,98,132,4,31]  |         55  |
    93  |                         i = i + 1;  |         |  664  |     31  |  5  |  [179,98,132,4,31]  |         55  |
    94  |              resetPlaceHolder_1();  |         |  664  |     31  |  5  |  [179,98,132,4,31]  |         55  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    179  |                            |
    32  |     R = R + separator;  |     55  |                         0  |
    38  |         R = R + chunk;  |     98  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     55  |                         1  |
    55  |         R = R + chunk;  |    132  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     55  |                         2  |
    72  |         R = R + chunk;  |      4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     55  |                         3  |
    89  |         R = R + chunk;  |     31  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    179  |                            |                         0  |
    32  |     R = R + separator;  |     55  |                         0  |                            |
    38  |         R = R + chunk;  |     98  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     55  |                         1  |                            |
    55  |         R = R + chunk;  |    132  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     55  |                         2  |                            |
    72  |         R = R + chunk;  |      4  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     55  |                         3  |                            |
    89  |         R = R + chunk;  |     31  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m9.475s
user	0m16.190s
sys	0m3.713s

2023-01-25 17:19:59,078 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:20:08,343 INFO     Done. Execution time: 9.264817237854004 seconds
2023-01-25 17:20:08,344 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1720-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1720-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.257s
user	0m19.742s
sys	0m2.037s

2023-01-25 17:20:08,344 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 17:20:08,344 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:21:14,692 INFO     Done. Execution time: 66.34737634658813 seconds
2023-01-25 17:21:14,692 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz3184222372103612282/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3184222372103612282/bin -o /tmp/qfuzz3184222372103612282/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3184222372103612282/bin
Found file /tmp/qfuzz3184222372103612282/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz3184222372103612282/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3184222372103612282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3184222372103612282/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3184222372103612282/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz3184222372103612282/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 124807 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 194.00; [308.00,3604.00,3798.00]
2; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta; 3; 1254.00; [308.00,2544.00,3798.00]
4; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 194.00; [3348.00,3604.00,3798.00]
5; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 1110.00; [544.00,2498.00,3608.00]
6; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 3; 1570.00; [118.00,1688.00,3604.00]
10; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 3; 10.00; [1204.00,1988.00,1998.00]
55; /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 3; 1616.00; [98.00,1988.00,3604.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 4, 5, 14, 8, 99, 20, 160, 141, 150, 196, 144, 53, 187, 156, 83, 154, 115, 94, 53, 117, 156, 144, 146, 156, 94, 161, 168, 38, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 99, 99, 99, 99, 99, 99, 99, 146, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 116, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 132, 5, 135, 156, 144, 84, 102, 11, 131, 17, 107, 197, 199, 46, 198, 159, 34, 153, 158, 48, 45, 125, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 191, 124, 124, 124, 124, 180, 69, 61, 127)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 19, 189, 99, 160, 5, 167, 56, 126, 12, 66, 147, 77, 115, 94, 161, 168, 143, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 12, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 79, 91, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3184222372103612282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,4,5,14], 8, 99, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,99,99,99,99], 99, 99, 99
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,132,5,135,156], 144, 84, 102
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,191,124,124,124], 124, 180, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,19,189,99,160], 5, 167, 56
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,12,189,99,31], 43, 15, 167
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 43, 15, 167
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.338s
user	0m27.163s
sys	0m1.868s

2023-01-25 17:21:14,692 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 17:21:14,692 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 17:21:21,747 INFO     Done. Execution time: 7.053849697113037 seconds
2023-01-25 17:21:21,747 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,4,5,14], 8, 99, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,99,99,99,99], 99, 99, 99)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,132,5,135,156], 144, 84, 102)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,191,124,124,124], 124, 180, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,19,189,99,160], 5, 167, 56)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,12,189,99,31], 43, 15, 167)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 43, 15, 167)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |       text        |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   20  |           99  |             8  |  [179,98,4,5,14]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   20  |           99  |             8  |  [179,98,4,5,14]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   20  |           99  |             8  |  [179,98,4,5,14]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   20  |           99  |             8  |  [179,98,4,5,14]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   20  |           99  |             8  |  [179,98,4,5,14]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    179  |  0  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    51  |                     R = R + chunk;  |    179  |  179  |    179  |  0  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    54  |               R = R + replacement;  |     99  |  278  |    179  |  0  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  278  |     98  |  0  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    63  |                         i = i + 2;  |         |  278  |     98  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    64  |              resetPlaceHolder_1();  |         |  278  |     98  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    72  |        chunk = arrayRead(text, i);  |         |  278  |      4  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    75  |                     R = R + chunk;  |      4  |  282  |      4  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    78  |               R = R + replacement;  |     99  |  381  |      4  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  381  |      5  |  2  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    87  |                         i = i + 2;  |         |  381  |      5  |  4  |   20  |           99  |             8  |  [179,98,4,5,14]  |
    88  |              resetPlaceHolder_1();  |         |  381  |      5  |  4  |   20  |           99  |             8  |  [179,98,4,5,14]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    179  |                            |
    54  |   R = R + replacement;  |     99  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      4  |                            |
    78  |   R = R + replacement;  |     99  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    179  |                            |                         0  |
    54  |   R = R + replacement;  |     99  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      4  |                            |                         0  |
    78  |   R = R + replacement;  |     99  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m7.046s
user	0m13.502s
sys	0m2.486s

2023-01-25 17:21:21,747 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:22:53,201 INFO     Done. Execution time: 91.45364904403687 seconds
2023-01-25 17:22:53,201 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `89.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1721-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1721-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m31.445s
user	3m34.384s
sys	0m17.775s

2023-01-25 17:22:53,201 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 17:22:53,201 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:23:59,376 INFO     Done. Execution time: 66.17476463317871 seconds
2023-01-25 17:23:59,377 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz5024246070761223134/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5024246070761223134/bin -o /tmp/qfuzz5024246070761223134/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5024246070761223134/bin
Found file /tmp/qfuzz5024246070761223134/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz5024246070761223134/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5024246070761223134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5024246070761223134/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5024246070761223134/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz5024246070761223134/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 132792 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
3; /tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 56, 103, 103, 150, 103, 103, 131, 95, 103, 103, 103, 103, 178, 103, 103, 103, 103, 103, 103, 103, 103, 10, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5024246070761223134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 56
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 98
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.167s
user	0m24.746s
sys	0m1.747s

2023-01-25 17:23:59,377 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-25 17:23:59,377 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 17:24:05,961 INFO     Done. Execution time: 6.584174633026123 seconds
2023-01-25 17:24:05,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 56)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 98)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            56  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            56  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            56  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            56  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            56  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            56  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            56  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            56  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            56  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            56  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            56  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            56  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m6.576s
user	0m13.295s
sys	0m2.048s

2023-01-25 17:24:05,962 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:24:28,157 INFO     Done. Execution time: 22.195213794708252 seconds
2023-01-25 17:24:28,157 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `20.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1724-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1724-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.186s
user	0m41.610s
sys	0m3.993s

2023-01-25 17:24:28,158 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 17:24:28,158 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:25:34,420 INFO     Done. Execution time: 66.26210474967957 seconds
2023-01-25 17:25:34,420 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz1396123684637216635/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1396123684637216635/bin -o /tmp/qfuzz1396123684637216635/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1396123684637216635/bin
Found file /tmp/qfuzz1396123684637216635/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz1396123684637216635/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1396123684637216635/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1396123684637216635/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1396123684637216635/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz1396123684637216635/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 122022 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [2430.00]
9; /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2; 1; 0.00; [3610.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
/tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 171, 113, 190, 4, 4, 126, 160, 40, 70, 40, 58, 64, 40, 40, 44, 89, 20, 96, 4, 4, 35, 167, 14, 61, 78, 40, 40, 40, 40, 120, 49, 113, 48, 149, 128, 173, 30, 135, 173, 61, 121, 61, 135, 173, 61, 121, 134, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(120, 171, 113, 190, 4, 4, 126, 160, 40, 40, 40, 58, 64, 40, 40, 44, 89, 20, 96, 4, 4, 35, 167, 14, 61, 78, 40, 40, 40, 40, 120, 49, 113, 48, 149, 128, 173, 61, 135, 173, 61, 121, 61, 135, 173, 61, 121, 134, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1396123684637216635/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,171,113,190,4], 4, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [120,171,113,190,4], 4, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 43, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.253s
user	0m25.285s
sys	0m1.784s

2023-01-25 17:25:34,420 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 17:25:34,421 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 17:25:38,728 INFO     Done. Execution time: 4.306716680526733 seconds
2023-01-25 17:25:38,728 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,171,113,190,4], 4, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([120,171,113,190,4], 4, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 43, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str          |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |  126  |                   |  [179,171,113,190,4]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |  126  |                   |  [179,171,113,190,4]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |  126  |                   |  [179,171,113,190,4]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |  126  |                   |  [179,171,113,190,4]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |  126  |                0  |  [179,171,113,190,4]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |  126  |                0  |  [179,171,113,190,4]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    179  |  0  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    54  |                     R = R + chunk;  |    179  |  179  |    179  |  0  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    58  |                         i = i + 1;  |         |  179  |    179  |  1  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    59  |              resetPlaceHolder_1();  |         |  179  |    179  |  1  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    65  |         chunk = arrayRead(str, i);  |         |  179  |    171  |  1  |            4  |                 0  |  126  |                0  |  [179,171,113,190,4]  |
    76  |  numberOfStrings = numberOfStri...  |         |  179  |    171  |  1  |            4  |                 0  |  126  |                1  |  [179,171,113,190,4]  |
    80  |                         i = i + 1;  |         |  179  |    171  |  2  |            4  |                 0  |  126  |                1  |  [179,171,113,190,4]  |
    81  |              resetPlaceHolder_1();  |         |  179  |    171  |  2  |            4  |                 0  |  126  |                1  |  [179,171,113,190,4]  |
    87  |         chunk = arrayRead(str, i);  |         |  179  |    113  |  2  |            4  |                 0  |  126  |                1  |  [179,171,113,190,4]  |
    98  |  numberOfStrings = numberOfStri...  |         |  179  |    113  |  2  |            4  |                 0  |  126  |                2  |  [179,171,113,190,4]  |
   102  |                         i = i + 1;  |         |  179  |    113  |  3  |            4  |                 0  |  126  |                2  |  [179,171,113,190,4]  |
   103  |              resetPlaceHolder_1();  |         |  179  |    113  |  3  |            4  |                 0  |  126  |                2  |  [179,171,113,190,4]  |
   109  |         chunk = arrayRead(str, i);  |         |  179  |    190  |  3  |            4  |                 0  |  126  |                2  |  [179,171,113,190,4]  |
   120  |  numberOfStrings = numberOfStri...  |         |  179  |    190  |  3  |            4  |                 0  |  126  |                3  |  [179,171,113,190,4]  |
   124  |                         i = i + 1;  |         |  179  |    190  |  4  |            4  |                 0  |  126  |                3  |  [179,171,113,190,4]  |
   125  |              resetPlaceHolder_1();  |         |  179  |    190  |  4  |            4  |                 0  |  126  |                3  |  [179,171,113,190,4]  |
   131  |         chunk = arrayRead(str, i);  |         |  179  |      4  |  4  |            4  |                 0  |  126  |                3  |  [179,171,113,190,4]  |
   142  |  numberOfStrings = numberOfStri...  |         |  179  |      4  |  4  |            4  |                 0  |  126  |                4  |  [179,171,113,190,4]  |
   146  |                         i = i + 1;  |         |  179  |      4  |  5  |            4  |                 0  |  126  |                4  |  [179,171,113,190,4]  |
   147  |              resetPlaceHolder_1();  |         |  179  |      4  |  5  |            4  |                 0  |  126  |                4  |  [179,171,113,190,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    179  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.299s
user	0m7.499s
sys	0m0.940s

2023-01-25 17:25:38,728 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:25:40,514 INFO     Done. Execution time: 1.7857048511505127 seconds
2023-01-25 17:25:40,514 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.778s
user	0m3.188s
sys	0m0.183s

2023-01-25 17:25:40,514 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 17:25:40,514 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:26:46,368 INFO     Done. Execution time: 65.8533399105072 seconds
2023-01-25 17:26:46,368 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2052542742101481996/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2052542742101481996/bin -o /tmp/qfuzz2052542742101481996/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2052542742101481996/bin
Found file /tmp/qfuzz2052542742101481996/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2052542742101481996/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2052542742101481996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2052542742101481996/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2052542742101481996/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz2052542742101481996/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 127100 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2052542742101481996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2052542742101481996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2052542742101481996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.846s
user	0m24.734s
sys	0m1.587s

2023-01-25 17:26:46,368 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-25 17:26:46,369 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 17:26:49,214 INFO     Done. Execution time: 2.8456170558929443 seconds
2023-01-25 17:26:49,215 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.837s
user	0m5.481s
sys	0m0.284s

2023-01-25 17:26:49,215 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:26:51,379 INFO     Done. Execution time: 2.163947582244873 seconds
2023-01-25 17:26:51,379 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1726-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1726-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.156s
user	0m3.821s
sys	0m0.249s

2023-01-25 17:26:51,379 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 17:26:51,379 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:27:57,405 INFO     Done. Execution time: 66.02596163749695 seconds
2023-01-25 17:27:57,406 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz2057554604557136134/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2057554604557136134/bin -o /tmp/qfuzz2057554604557136134/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2057554604557136134/bin
Found file /tmp/qfuzz2057554604557136134/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz2057554604557136134/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2057554604557136134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2057554604557136134/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2057554604557136134/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz2057554604557136134/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 129872 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2057554604557136134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2057554604557136134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2057554604557136134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 98, 189, false, 31
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.015s
user	0m25.483s
sys	0m1.726s

2023-01-25 17:27:57,406 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-25 17:27:57,406 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 17:28:00,515 INFO     Done. Execution time: 3.108551025390625 seconds
2023-01-25 17:28:00,515 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 98, 189, false, 31)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      31  |  189  |              false  |              98  |    2  |
    32  |     return;  |         |  0  |      31  |  189  |              false  |              98  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m3.100s
user	0m6.868s
sys	0m0.265s

2023-01-25 17:28:00,516 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:28:03,192 INFO     Done. Execution time: 2.6762380599975586 seconds
2023-01-25 17:28:03,192 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1728-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1728-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.668s
user	0m5.055s
sys	0m0.217s

2023-01-25 17:28:03,193 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 17:28:03,193 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:29:09,692 INFO     Done. Execution time: 66.49945712089539 seconds
2023-01-25 17:29:09,693 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz7514002201429210785/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7514002201429210785/bin -o /tmp/qfuzz7514002201429210785/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7514002201429210785/bin
Found file /tmp/qfuzz7514002201429210785/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz7514002201429210785/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7514002201429210785/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7514002201429210785/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7514002201429210785/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz7514002201429210785/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 114569 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m114k to 114k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7514002201429210785/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.490s
user	0m24.823s
sys	0m1.762s

2023-01-25 17:29:09,693 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-25 17:29:09,693 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 17:29:12,663 INFO     Done. Execution time: 2.969642162322998 seconds
2023-01-25 17:29:12,663 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.961s
user	0m5.471s
sys	0m0.382s

2023-01-25 17:29:12,663 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:29:15,048 INFO     Done. Execution time: 2.384124279022217 seconds
2023-01-25 17:29:15,048 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1729-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1729-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.374s
user	0m4.286s
sys	0m0.228s

2023-01-25 17:29:15,048 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 17:29:15,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:30:21,245 INFO     Done. Execution time: 66.19638752937317 seconds
2023-01-25 17:30:21,245 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz4315460808076256375/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4315460808076256375/bin -o /tmp/qfuzz4315460808076256375/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4315460808076256375/bin
Found file /tmp/qfuzz4315460808076256375/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz4315460808076256375/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4315460808076256375/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4315460808076256375/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4315460808076256375/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz4315460808076256375/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 130188 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 196.00; [638.00,3602.00,3798.00]
2; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 3; 1084.00; [1118.00,2518.00,3602.00]
3; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 4.00; [3218.00,3222.00,3438.00]
5; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 196.00; [2018.00,3602.00,3798.00]
9; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 3; 1616.00; [238.00,2282.00,3898.00]
12; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 3; 644.00; [2318.00,2962.00,3678.00]
17; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 3; 4.00; [318.00,322.00,2838.00]
39; /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 3; 1744.00; [118.00,1862.00,3778.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 55, 5, 14, 188, 42, 137, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 99, 141, 43, 15, 140, 146, 43, 15, 147, 117, 136, 173, 168, 110, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 77, 115, 98, 183, 184, 63, 96, 18, 18, 18, 76, 20, 18, 18, 18, 18, 18, 18, 18, 29, 18, 4, 160, 59, 76, 77, 31, 43, 42, 45, 46, 104, 185, 136, 158, 87, 160, 113, 5, 55, 160, 141, 174, 45, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(113, 157, 194, 5, 11, 144, 77, 15, 12, 15, 20, 4, 70, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 100, 16, 107, 46, 117, 136, 131, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 4, 160, 171, 171, 78, 175, 74, 67, 76, 67, 67, 67, 67, 67, 20, 5, 197, 78, 110, 105, 133, 67, 67, 67, 67, 107, 67, 67, 145, 171, 61, 154, 116, 116, 171, 194, 19, 71, 33, 90, 4, 69, 126, 112, 171, 6, 104, 101, 63, 63, 67, 30, 46, 13, 67, 67, 67, 67, 67, 107, 67, 67, 145, 171, 61, 154, 116, 116, 171, 194, 171, 171, 54, 4, 184, 30, 77, 67, 67, 7, 67, 67, 67, 47, 61, 154)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 55, 63, 125, 43, 48, 167, 115, 126, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4315460808076256375/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [92,55,5,14,188], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,99,141,43,15], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [147,77,115,98,183], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [113,157,194,5,11], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,100], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,4,160,171,171], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,55,63,125], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,98,189,99,31], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.188s
user	0m27.322s
sys	0m1.726s

2023-01-25 17:30:21,246 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-25 17:30:21,246 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 17:30:27,755 INFO     Done. Execution time: 6.509381055831909 seconds
2023-01-25 17:30:27,756 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([92,55,5,14,188], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,99,141,43,15], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([147,77,115,98,183], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,100], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,4,160,171,171], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([113,157,194,5,11], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,55,63,125], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,98,189,99,31], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |      template      |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [92,55,5,14,188]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [92,55,5,14,188]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [92,55,5,14,188]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [92,55,5,14,188]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [92,55,5,14,188]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [92,55,5,14,188]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [92,55,5,14,188]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     92  |  0  |          0  |  [92,55,5,14,188]  |
    32  |                     R = R + chunk;  |     92  |   92  |     2  |     92  |  0  |          0  |  [92,55,5,14,188]  |
    36  |                         i = i + 1;  |         |   92  |     2  |     92  |  1  |          0  |  [92,55,5,14,188]  |
    44  |  separator = arrayRead(template...  |         |   92  |     2  |     92  |  1  |         55  |  [92,55,5,14,188]  |
    49  |  chunk = arrayRead(template, (i...  |         |   92  |     2  |      5  |  1  |         55  |  [92,55,5,14,188]  |
    52  |                     R = R + chunk;  |      5  |   97  |     2  |      5  |  1  |         55  |  [92,55,5,14,188]  |
    56  |                         i = i + 2;  |         |   97  |     2  |      5  |  3  |         55  |  [92,55,5,14,188]  |
    57  |              resetPlaceHolder_1();  |         |   97  |     2  |      5  |  3  |         55  |  [92,55,5,14,188]  |
    65  |  separator = arrayRead(template...  |         |   97  |     2  |      5  |  3  |         14  |  [92,55,5,14,188]  |
    70  |  chunk = arrayRead(template, (i...  |         |   97  |     2  |    188  |  3  |         14  |  [92,55,5,14,188]  |
    73  |                     R = R + chunk;  |    188  |  285  |     2  |    188  |  3  |         14  |  [92,55,5,14,188]  |
    77  |                         i = i + 2;  |         |  285  |     2  |    188  |  5  |         14  |  [92,55,5,14,188]  |
    78  |              resetPlaceHolder_1();  |         |  285  |     2  |    188  |  5  |         14  |  [92,55,5,14,188]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     92  |                         0  |
    52  |         R = R + chunk;  |      5  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |    188  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.501s
user	0m11.750s
sys	0m2.754s

2023-01-25 17:30:27,756 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:30:29,498 INFO     Done. Execution time: 1.7417879104614258 seconds
2023-01-25 17:30:29,498 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.735s
user	0m3.080s
sys	0m0.225s

2023-01-25 17:30:29,498 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 17:30:29,498 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:31:35,392 INFO     Done. Execution time: 65.89395117759705 seconds
2023-01-25 17:31:35,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz4419496219185602006/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4419496219185602006/bin -o /tmp/qfuzz4419496219185602006/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4419496219185602006/bin
Found file /tmp/qfuzz4419496219185602006/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz4419496219185602006/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4419496219185602006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4419496219185602006/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4419496219185602006/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz4419496219185602006/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 127448 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [3594.00]
3; /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [634.00]
5; /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [994.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 114, 77, 99, 89, 195, 4, 68, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 6, 115, 16, 173, 164, 98, 90, 90, 90, 90, 90, 170, 90, 13, 5, 55, 90, 73, 63, 15, 131, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4419496219185602006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 49, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 31, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 179, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.885s
user	0m25.061s
sys	0m1.898s

2023-01-25 17:31:35,393 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-25 17:31:35,393 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 17:31:39,610 INFO     Done. Execution time: 4.216949224472046 seconds
2023-01-25 17:31:39,610 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(49, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(31, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(179, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      49  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      49  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      49  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      49  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      49  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  49  |      49  |
    29  |                    R = R + string;  |     49  |  49  |      |          2  |  49  |      49  |
    31  |                    int i = string;  |         |  49  |  49  |          2  |  49  |      49  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     49  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.209s
user	0m7.802s
sys	0m0.952s

2023-01-25 17:31:39,611 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:31:41,282 INFO     Done. Execution time: 1.670964002609253 seconds
2023-01-25 17:31:41,282 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.663s
user	0m2.972s
sys	0m0.184s

2023-01-25 17:31:41,282 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 17:31:41,282 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds`
2023-01-25 17:32:47,320 INFO     Done. Execution time: 66.03718996047974 seconds
2023-01-25 17:32:47,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz55223296837482867/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz55223296837482867/bin -o /tmp/qfuzz55223296837482867/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz55223296837482867/bin
Found file /tmp/qfuzz55223296837482867/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz55223296837482867/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz55223296837482867/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz55223296837482867/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz55223296837482867/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz55223296837482867/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz55223296837482867/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds -o /tmp/qfuzz55223296837482867/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 122215 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz55223296837482867/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz55223296837482867/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz55223296837482867/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 98, 189, 99, 31, 43, 15, 167, 56, 126, 12, 67, 197, 199, 46, 198, 159, 172, 136, 158, 48, 45, 46, 117, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 179, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.030s
user	0m24.748s
sys	0m1.693s

2023-01-25 17:32:47,320 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-25 17:32:47,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 17:32:50,052 INFO     Done. Execution time: 2.7318878173828125 seconds
2023-01-25 17:32:50,053 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(179, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     179  |
    22  |     return;  |         |  0  |          2  |     179  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.724s
user	0m5.396s
sys	0m0.250s

2023-01-25 17:32:50,053 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 17:32:52,077 INFO     Done. Execution time: 2.024282693862915 seconds
2023-01-25 17:32:52,077 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1732-transparentAmortize-60s-mostPrecise/guava-raw-0125-1732-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.016s
user	0m3.646s
sys	0m0.212s

2023-01-25 17:32:52,078 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.00528264045715,
    5.782627105712891,
    8.47020411491394
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.2266800403595,
    12.02082872390747,
    83.40684747695923
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.1485288143158,
    12.737857580184937,
    299.4883460998535
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    66.44666457176208,
    9.737830877304077,
    9.083234786987305
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.4617052078247,
    6.435481309890747,
    16.561679124832153
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.28290677070618,
    6.111326217651367,
    9.377156972885132
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.5645706653595,
    237.41585683822632,
    12.188430786132812
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    2.0058701038360596,
    1.9075019359588623,
    1.0731170177459717
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    65.84608554840088,
    2.8914663791656494,
    2.2704477310180664
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.06600666046143,
    2.893428087234497,
    2.1711461544036865
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    65.9485216140747,
    6.59888219833374,
    8.614006042480469
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.59004378318787,
    8.157039642333984,
    7.989831447601318
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.39299440383911,
    10.718055486679077,
    64.17179036140442
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    66.43121123313904,
    7.100566387176514,
    9.13731050491333
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.44029974937439,
    2.8533804416656494,
    2.0844063758850098
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.05170702934265,
    7.117505073547363,
    8.371325969696045
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.32190346717834,
    7.274055480957031,
    8.292436838150024
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.23254108428955,
    4.37111234664917,
    7.031934499740601
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.20065784454346,
    5.424202919006348,
    8.235506772994995
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    65.98311042785645,
    6.943337440490723,
    8.694055318832397
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.47494983673096,
    3.1017487049102783,
    2.479820489883423
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.21871566772461,
    6.997270107269287,
    11.406212091445923
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    65.93376278877258,
    5.695027589797974,
    8.570992708206177
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.16274547576904,
    4.439504623413086,
    6.959548234939575
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.10072612762451,
    4.571150779724121,
    24.377924919128418
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.39515495300293,
    2.981846809387207,
    2.3175508975982666
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.33733367919922,
    8.710723638534546,
    13.54221224784851
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    65.97148442268372,
    9.483704805374146,
    9.264817237854004
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.34737634658813,
    7.053849697113037,
    91.45364904403687
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    66.17476463317871,
    6.584174633026123,
    22.195213794708252
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.26210474967957,
    4.306716680526733,
    1.7857048511505127
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    65.8533399105072,
    2.8456170558929443,
    2.163947582244873
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.02596163749695,
    3.108551025390625,
    2.6762380599975586
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    66.49945712089539,
    2.969642162322998,
    2.384124279022217
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.19638752937317,
    6.509381055831909,
    1.7417879104614258
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    65.89395117759705,
    4.216949224472046,
    1.670964002609253
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.03718996047974,
    2.7318878173828125,
    2.024282693862915
  ]
}
2023-01-25 17:32:52,078 INFO     Total time elapsed: 3620.060992002487 seconds
2023-01-25 17:32:52,078 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-25 17:32:52,078 INFO     Number of verified programs: {
  "stac": 4,
  "lang3": 17,
  "stringutils": 7,
  "guava": 1
}
2023-01-25 17:32:52,078 INFO     Number of not verified programs: {
  "lang3": 2,
  "stringutils": 2
}
2023-01-25 17:32:52,078 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-25 17:32:52,079 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230125_15-32-52/qfuzz_00.json

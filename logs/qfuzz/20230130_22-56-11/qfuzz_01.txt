2023-01-31 02:01:46,956 INFO     Arguments:
2023-01-31 02:01:46,956 INFO     timeout	60
2023-01-31 02:01:46,956 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-31 02:01:46,956 INFO     samples	0
2023-01-31 02:01:46,956 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-31 02:01:46,956 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-31 02:01:46,956 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-31 02:01:46,956 INFO     dry	False
2023-01-31 02:01:46,956 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/qfuzz_01.txt
2023-01-31 02:01:46,956 INFO     mode	qfuzz
2023-01-31 02:01:46,956 INFO     version	master
2023-01-31 02:01:46,956 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
2023-01-31 02:01:46,956 INFO     min_int	4
2023-01-31 02:01:46,956 INFO     max_int	50
2023-01-31 02:01:46,957 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-31 02:01:46,961 INFO     Done. Execution time: 0.0043773651123046875 seconds
2023-01-31 02:01:46,961 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "e47286ad848a5763e523c9212f87dd8703e519a1"`
2023-01-31 02:01:46,965 INFO     Done. Execution time: 0.0038940906524658203 seconds
2023-01-31 02:01:46,965 INFO     Build a new version: "e47286ad848a5763e523c9212f87dd8703e519a1"
2023-01-31 02:01:46,966 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-31 02:01:58,468 INFO     Done. Execution time: 11.502286434173584 seconds
2023-01-31 02:01:58,468 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 5 s, completed Jan 31, 2023 2:01:58 AM

2023-01-31 02:01:58,473 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 02:01:58,473 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:03:04,669 INFO     Done. Execution time: 66.19544124603271 seconds
2023-01-31 02:03:04,669 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3022313977890729784/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3022313977890729784/bin -o /tmp/qfuzz3022313977890729784/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3022313977890729784/bin
Found file /tmp/qfuzz3022313977890729784/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3022313977890729784/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3022313977890729784/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3022313977890729784/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3022313977890729784/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3022313977890729784/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 123733 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 30, exec speed = 121641 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m121k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 49.00; [95.00,195.00,255.00,455.00,504.00,655.00,735.00]
1; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 40.00; [124.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 89.00; [15.00,104.00,795.00]
9; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 7; 49.00; [195.00,255.00,335.00,455.00,504.00,555.00,655.00]
11; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 6; 20.00; [95.00,175.00,195.00,455.00,504.00,775.00]
17; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 80.00; [95.00,255.00,455.00,655.00,735.00,855.00,1004.00]
19; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 20.00; [255.00,315.00,395.00,504.00,695.00,975.00,995.00]
41; /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 7; 100.00; [95.00,215.00,404.00,515.00,655.00,795.00,895.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 25, 4, 32, 44, 39, 10, 39, 31, 36, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 19, 49, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 35, 13, 12, 15, 47, 48, 37, 40, 12, 46, 6, 45, 9, 33, 34, 6, 32, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 42, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 29, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 4, 38, 22, 38, 8, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 27, 16, 22, 32, 12, 13, 12, 15, 45, 45, 45, 29, 46, 6, 45, 12, 8, 36, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3022313977890729784/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_020304_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,25,4,32,44,39,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,19,49,15,12,48,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,42,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,4,38,22,38,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,27,16,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:03:04,670 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 02:03:04,670 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 02:03:16,423 INFO     Done. Execution time: 11.752657413482666 seconds
2023-01-31 02:03:16,423 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_020304_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_020304_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,25,4,32,44,39,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,19,49,15,12,48,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,42,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,4,38,22,38,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,27,16,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [19,25,4,32,44,39,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,19,49,15,12,48,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [49,42,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,4,38,22,38,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,27,16,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |   [4]  |
    10  |     return;  |         |  0  |   [4]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [19,25,4,32,44,39,10]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [19,25,4,32,44,39,10]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [19,25,4,32,44,39,10]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [19,25,4,32,44,39,10]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [19,25,4,32,44,39,10]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [19,25,4,32,44,39,10]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     19  |  0  |  [19,25,4,32,44,39,10]  |
    25  |                     R = R + chunk;  |     19  |   19  |     19  |  0  |  [19,25,4,32,44,39,10]  |
    29  |                         i = i + 1;  |         |   19  |     19  |  1  |  [19,25,4,32,44,39,10]  |
    30  |              resetPlaceHolder_1();  |         |   19  |     19  |  1  |  [19,25,4,32,44,39,10]  |
    36  |        chunk = arrayRead(text, i);  |         |   19  |     25  |  1  |  [19,25,4,32,44,39,10]  |
    39  |                     R = R + chunk;  |     25  |   44  |     25  |  1  |  [19,25,4,32,44,39,10]  |
    43  |                         i = i + 1;  |         |   44  |     25  |  2  |  [19,25,4,32,44,39,10]  |
    44  |              resetPlaceHolder_1();  |         |   44  |     25  |  2  |  [19,25,4,32,44,39,10]  |
    50  |        chunk = arrayRead(text, i);  |         |   44  |      4  |  2  |  [19,25,4,32,44,39,10]  |
    53  |                     R = R + chunk;  |      4  |   48  |      4  |  2  |  [19,25,4,32,44,39,10]  |
    57  |                         i = i + 1;  |         |   48  |      4  |  3  |  [19,25,4,32,44,39,10]  |
    58  |              resetPlaceHolder_1();  |         |   48  |      4  |  3  |  [19,25,4,32,44,39,10]  |
    64  |        chunk = arrayRead(text, i);  |         |   48  |     32  |  3  |  [19,25,4,32,44,39,10]  |
    67  |                     R = R + chunk;  |     32  |   80  |     32  |  3  |  [19,25,4,32,44,39,10]  |
    71  |                         i = i + 1;  |         |   80  |     32  |  4  |  [19,25,4,32,44,39,10]  |
    72  |              resetPlaceHolder_1();  |         |   80  |     32  |  4  |  [19,25,4,32,44,39,10]  |
    78  |        chunk = arrayRead(text, i);  |         |   80  |     44  |  4  |  [19,25,4,32,44,39,10]  |
    81  |                     R = R + chunk;  |     44  |  124  |     44  |  4  |  [19,25,4,32,44,39,10]  |
    85  |                         i = i + 1;  |         |  124  |     44  |  5  |  [19,25,4,32,44,39,10]  |
    86  |              resetPlaceHolder_1();  |         |  124  |     44  |  5  |  [19,25,4,32,44,39,10]  |
    92  |        chunk = arrayRead(text, i);  |         |  124  |     39  |  5  |  [19,25,4,32,44,39,10]  |
    95  |                     R = R + chunk;  |     39  |  163  |     39  |  5  |  [19,25,4,32,44,39,10]  |
    99  |                         i = i + 1;  |         |  163  |     39  |  6  |  [19,25,4,32,44,39,10]  |
   100  |              resetPlaceHolder_1();  |         |  163  |     39  |  6  |  [19,25,4,32,44,39,10]  |
   106  |        chunk = arrayRead(text, i);  |         |  163  |     10  |  6  |  [19,25,4,32,44,39,10]  |
   109  |                     R = R + chunk;  |     10  |  173  |     10  |  6  |  [19,25,4,32,44,39,10]  |
   113  |                         i = i + 1;  |         |  173  |     10  |  7  |  [19,25,4,32,44,39,10]  |
   114  |              resetPlaceHolder_1();  |         |  173  |     10  |  7  |  [19,25,4,32,44,39,10]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,81,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,67,81,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     19  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     25  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |      4  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     32  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     44  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     39  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     10  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 02:03:16,423 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:03:23,534 INFO     Done. Execution time: 7.111114740371704 seconds
2023-01-31 02:03:23,535 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0203-transparentAmortize-60s-mostPrecise/stac-raw-0131-0203-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.105s
user	0m15.572s
sys	0m2.055s

2023-01-31 02:03:23,535 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 02:03:23,535 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:04:29,595 INFO     Done. Execution time: 66.06013345718384 seconds
2023-01-31 02:04:29,595 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz6571256977720933822/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6571256977720933822/bin -o /tmp/qfuzz6571256977720933822/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6571256977720933822/bin
Found file /tmp/qfuzz6571256977720933822/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz6571256977720933822/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6571256977720933822/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6571256977720933822/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6571256977720933822/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6571256977720933822/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 132402 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 127699 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m127k to 132k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 3.00; [95.00,195.00,252.00,255.00,455.00,498.00,506.00,655.00,735.00]
2; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 9; 8.00; [118.00,126.00,335.00,375.00,415.00,455.00,575.00,672.00,755.00]
4; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 9; 8.00; [98.00,106.00,152.00,615.00,655.00,735.00,755.00,935.00,955.00]
5; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 8; 3.00; [395.00,615.00,655.00,658.00,666.00,795.00,912.00,915.00]
6; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 8; 8.00; [175.00,295.00,335.00,498.00,506.00,592.00,775.00,975.00]
11; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 9; 8.00; [135.00,195.00,258.00,266.00,595.00,675.00,692.00,915.00,935.00]
16; /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 9; 3.00; [95.00,135.00,195.00,252.00,255.00,498.00,506.00,655.00,735.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 6, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 42, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 46, 6, 45, 9, 33, 29, 31, 34, 8, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 14, 48, 16, 16, 38, 8, 20, 29, 42, 26, 29, 9, 36, 32, 4, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 39, 30, 32, 19, 45, 45, 45, 45, 45, 45, 45, 45, 42, 45, 45, 45, 45, 45, 11, 29, 12, 34, 8, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 46, 30, 36, 37, 32, 47, 46, 7, 17, 8, 20, 29, 7, 6, 12, 9, 23, 45)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6571256977720933822/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_020429_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,6,32,12], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,46,6,45,9,33,29], 2, 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,14,48,16,16,38,8], 2, 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,39,30,32,19,45,45], 2, 45
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,46,30,36,37,32,47], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:04:29,596 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 02:04:29,596 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 02:04:43,780 INFO     Done. Execution time: 14.183472871780396 seconds
2023-01-31 02:04:43,780 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_020429_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_020429_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,6,32,12], 2, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,46,6,45,9,33,29], 2, 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,14,48,16,16,38,8], 2, 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,39,30,32,19,45,45], 2, 45)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,46,30,36,37,32,47], 2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,6,32,12]
templateds: 2
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,46,6,45,9,33,29]
templateds: 2
separator: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,14,48,16,16,38,8]
templateds: 2
separator: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,39,30,32,19,45,45]
templateds: 2
separator: 45
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,46,30,36,37,32,47]
templateds: 2
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
templateds: 2
separator: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
templateds: 2
separator: 12
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         12  |           2  |  [24,9,36,4,6,32,12]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     24  |  0  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    46  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    50  |                         j = j + 1;  |         |   24  |     24  |  0  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    51  |              resetPlaceHolder_2();  |         |   24  |     24  |  0  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    57  |        chunk = arrayRead(text, j);  |         |   24  |      9  |  0  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    60  |                     R = R + chunk;  |      9  |   33  |      9  |  0  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    64  |                         j = j + 1;  |         |   33  |      9  |  0  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    65  |              resetPlaceHolder_2();  |         |   33  |      9  |  0  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    71  |        chunk = arrayRead(text, j);  |         |   33  |     36  |  0  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    74  |                     R = R + chunk;  |     36  |   69  |     36  |  0  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    78  |                         j = j + 1;  |         |   69  |     36  |  0  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    79  |              resetPlaceHolder_2();  |         |   69  |     36  |  0  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    85  |        chunk = arrayRead(text, j);  |         |   69  |      4  |  0  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    88  |                     R = R + chunk;  |      4  |   73  |      4  |  0  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    92  |                         j = j + 1;  |         |   73  |      4  |  0  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    93  |              resetPlaceHolder_2();  |         |   73  |      4  |  0  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
    99  |        chunk = arrayRead(text, j);  |         |   73  |      6  |  0  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   102  |                     R = R + chunk;  |      6  |   79  |      6  |  0  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   106  |                         j = j + 1;  |         |   79  |      6  |  0  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   107  |              resetPlaceHolder_2();  |         |   79  |      6  |  0  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   113  |        chunk = arrayRead(text, j);  |         |   79  |     32  |  0  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   116  |                     R = R + chunk;  |     32  |  111  |     32  |  0  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   120  |                         j = j + 1;  |         |  111  |     32  |  0  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   121  |              resetPlaceHolder_2();  |         |  111  |     32  |  0  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   127  |        chunk = arrayRead(text, j);  |         |  111  |     12  |  0  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   130  |                     R = R + chunk;  |     12  |  123  |     12  |  0  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   134  |                         j = j + 1;  |         |  123  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   135  |              resetPlaceHolder_2();  |         |  123  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   141  |                 R = R + separator;  |     12  |  135  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   145  |                         i = i + 1;  |         |  135  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   146  |              resetPlaceHolder_1();  |         |  135  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   151  |                         int j = 0;  |         |  135  |     12  |  1  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   157  |        chunk = arrayRead(text, j);  |         |  135  |     24  |  1  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   160  |                     R = R + chunk;  |     24  |  159  |     24  |  1  |  0  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   164  |                         j = j + 1;  |         |  159  |     24  |  1  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   165  |              resetPlaceHolder_2();  |         |  159  |     24  |  1  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   171  |        chunk = arrayRead(text, j);  |         |  159  |      9  |  1  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   174  |                     R = R + chunk;  |      9  |  168  |      9  |  1  |  1  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   178  |                         j = j + 1;  |         |  168  |      9  |  1  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   179  |              resetPlaceHolder_2();  |         |  168  |      9  |  1  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   185  |        chunk = arrayRead(text, j);  |         |  168  |     36  |  1  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   188  |                     R = R + chunk;  |     36  |  204  |     36  |  1  |  2  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   192  |                         j = j + 1;  |         |  204  |     36  |  1  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   193  |              resetPlaceHolder_2();  |         |  204  |     36  |  1  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   199  |        chunk = arrayRead(text, j);  |         |  204  |      4  |  1  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   202  |                     R = R + chunk;  |      4  |  208  |      4  |  1  |  3  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   206  |                         j = j + 1;  |         |  208  |      4  |  1  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   207  |              resetPlaceHolder_2();  |         |  208  |      4  |  1  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   213  |        chunk = arrayRead(text, j);  |         |  208  |      6  |  1  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   216  |                     R = R + chunk;  |      6  |  214  |      6  |  1  |  4  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   220  |                         j = j + 1;  |         |  214  |      6  |  1  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   221  |              resetPlaceHolder_2();  |         |  214  |      6  |  1  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   227  |        chunk = arrayRead(text, j);  |         |  214  |     32  |  1  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   230  |                     R = R + chunk;  |     32  |  246  |     32  |  1  |  5  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   234  |                         j = j + 1;  |         |  246  |     32  |  1  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   235  |              resetPlaceHolder_2();  |         |  246  |     32  |  1  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   241  |        chunk = arrayRead(text, j);  |         |  246  |     12  |  1  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   244  |                     R = R + chunk;  |     12  |  258  |     12  |  1  |  6  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   248  |                         j = j + 1;  |         |  258  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   249  |              resetPlaceHolder_2();  |         |  258  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   255  |                 R = R + separator;  |     12  |  270  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   259  |                         i = i + 1;  |         |  270  |     12  |  2  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
   260  |              resetPlaceHolder_1();  |         |  270  |     12  |  2  |  7  |         12  |           2  |  [24,9,36,4,6,32,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {141}; {244}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {130}; {141}; {244}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      9  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     36  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      4  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      6  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     32  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     12  |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     12  |                         1  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     24  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      9  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     36  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |      4  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |      6  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     32  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     12  |                         2  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     12  |                         3  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 15 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5), Set(0, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(0, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188}; {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188}; {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,202}; {74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,202}; {74,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 47 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {160,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216,230}; {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4, 5), Set(0, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216,230}; {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216,230}; {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4, 5), Set(1, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216,230}; {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {188,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216,230}; {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4, 5), Set(2, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216,230}; {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {202,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {88,116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {88,216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 9 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,216,230}; {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {202,216,230}; {60,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {202,216,230}; {46,60,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4, 5), Set(3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,216,230}; {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 0), Set(3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(3, 4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {202,216,230}; {60,160,174} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      9  |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     36  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      4  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      6  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     32  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     12  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     12  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     24  |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      9  |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     36  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |      4  |                         1  |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |      6  |                         1  |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     32  |                         1  |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     12  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     12  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [88, 46, 116, 74, 102, 188]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [88, 46, 116, 74, 102, 188]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,116,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [88, 46, 116, 74, 102, 188]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {130}; {141}; {244}; {255}
GroupID(1): {202,216,230}; {60,160,174}
GroupID(2): {46,74,88,102,116,188}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                         0  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      6  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     32  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [131, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                         0  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      6  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     32  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [245, 254])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                         0  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      6  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     32  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(179)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 5) || (j == 5))
{
  if ((i < 0) || (i == 0))
  {
    if ((j < 1) || (j == 1))
    {
      if ((j < 0) || (j == 0))
      {
        R2 = R2 + chunk;
      }
      else
      {
        R1 = R1 + chunk;
      }
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      if ((j < 1) || (j == 1))
      {
        R1 = R1 + chunk;
      }
      else
      {
        R2 = R2 + chunk;
      }
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
else
{
  R0 = R0 + chunk;
}
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 2) || (j == 2))
  {
    if ((j < 1) || (j == 1))
    {
      // reset R1
    }
    else
    {
      if ((i < 0) || (i == 0))
      {
        // reset R1
      }
      else
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
    }
  }
  else
  {
    // reset R1
  }
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 02:04:43,780 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:05:46,261 INFO     Done. Execution time: 62.48015260696411 seconds
2023-01-31 02:05:46,261 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 1) || (j == 1))
            {
              if ((j < 0) || (j == 0))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D1 = D1 + chunk;
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              if ((j < 1) || (j == 1))
              {
                D1 = D1 + chunk;
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 1) || (j == 1))
            {
              if ((j < 0) || (j == 0))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D1 = D1 + chunk;
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              if ((j < 1) || (j == 1))
              {
                D1 = D1 + chunk;
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3666052337373867433.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4471489960657357126.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5887790603646375248.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2616377451415198952.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1451920252113771703.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-577473280616097225.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5198085950156903999.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6083182026967317213.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3166574517965994145.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    5)  (define-fun D2 () Int    (- 7))  (define-fun D1 () Int    5)  (define-fun C2 () Int    15)  (define-fun C1 () Int    13)  (define-fun templateds () Int    13)  (define-fun text () Int    3)  (define-fun separator () Int    7)  (define-fun D0p () Int    1)  (define-fun D2p () Int    15)  (define-fun D1p () Int    2)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0204-transparentAmortize-60s-mostPrecise/stac-raw-0131-0204-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.470s
user	4m1.558s
sys	0m2.850s

2023-01-31 02:05:46,261 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 02:05:46,261 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:06:52,316 INFO     Done. Execution time: 66.05467438697815 seconds
2023-01-31 02:06:52,316 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7304276031091744300/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7304276031091744300/bin -o /tmp/qfuzz7304276031091744300/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7304276031091744300/bin
Found file /tmp/qfuzz7304276031091744300/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7304276031091744300/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7304276031091744300/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7304276031091744300/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7304276031091744300/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7304276031091744300/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 133948 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 49, exec speed = 134700 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m133k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 3.00; [95.00,195.00,252.00,255.00,308.00,455.00,498.00,506.00,655.00,735.00]
2; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 10; 7.00; [118.00,126.00,335.00,375.00,408.00,415.00,455.00,575.00,672.00,755.00]
3; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 10; 8.00; [115.00,515.00,535.00,658.00,666.00,708.00,735.00,915.00,975.00,992.00]
4; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 10; 8.00; [95.00,155.00,192.00,215.00,248.00,315.00,498.00,506.00,675.00,695.00]
5; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 10; 8.00; [138.00,146.00,195.00,255.00,275.00,308.00,455.00,655.00,775.00,812.00]
15; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 9; 8.00; [95.00,115.00,195.00,252.00,308.00,455.00,498.00,506.00,655.00]
17; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 10; 3.00; [95.00,252.00,255.00,308.00,455.00,498.00,506.00,655.00,735.00,875.00]
18; /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 9; 3.00; [252.00,255.00,275.00,455.00,498.00,506.00,655.00,895.00,968.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 44, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 36, 29, 17, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 43, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 23, 14, 35, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 5, 4, 22, 32, 4, 36, 12, 15, 23, 48, 34, 40, 12, 46, 6, 45, 4, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 9, 38, 13, 22, 32, 12, 14, 40, 15, 12, 44, 49, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 33, 7, 10, 15, 4, 34, 34, 9, 12, 46, 6, 46, 9, 32, 26, 38, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 36, 26, 48, 5, 45, 25, 11, 49, 35, 36, 14, 26, 48, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7304276031091744300/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_020652_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,44,22,32,12,13,12], 2, 12, 48
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,43,36,4,22,32,12], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,5,4,22,32,4], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,9,38,13,22,32,12], 2, 40, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,33,7,10,15,4,34], 2, 9, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,36,26,48,5,45,25], 2, 49, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 2, 33, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:06:52,317 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 02:06:52,317 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 02:07:09,684 INFO     Done. Execution time: 17.36719250679016 seconds
2023-01-31 02:07:09,685 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_020652_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_020652_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,44,22,32,12,13,12], 2, 12, 48)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,43,36,4,22,32,12], 2, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,5,4,22,32,4], 2, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,9,38,13,22,32,12], 2, 40, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,33,7,10,15,4,34], 2, 9, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,36,26,48,5,45,25], 2, 49, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 2, 33, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2, 12, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,44,22,32,12,13,12]
ts: 2
sep: 12
rep: 48
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,43,36,4,22,32,12]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,5,4,22,32,4]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [6,9,38,13,22,32,12]
ts: 2
sep: 40
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,33,7,10,15,4,34]
ts: 2
sep: 9
rep: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,36,26,48,5,45,25]
ts: 2
sep: 49
rep: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
ts: 2
sep: 33
rep: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                          
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |           text           |  ts  |
------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    38  |                     int chunk = 0;  |         |     0  |      0  |     |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    40  |                         int i = 0;  |         |     0  |      0  |  0  |     |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    45  |                         int j = 0;  |         |     0  |      0  |  0  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |     0  |     24  |  0  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    54  |                     R = R + chunk;  |     24  |    24  |     24  |  0  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    57  |                       R = R + rep;  |     48  |    72  |     24  |  0  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    61  |                         j = j + 1;  |         |    72  |     24  |  0  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    62  |              resetPlaceHolder_2();  |         |    72  |     24  |  0  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |    72  |     44  |  0  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    71  |                     R = R + chunk;  |     44  |   116  |     44  |  0  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    74  |                       R = R + rep;  |     48  |   164  |     44  |  0  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    78  |                         j = j + 1;  |         |   164  |     44  |  0  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   164  |     44  |  0  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   164  |     22  |  0  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    88  |                     R = R + chunk;  |     22  |   186  |     22  |  0  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    91  |                       R = R + rep;  |     48  |   234  |     22  |  0  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    95  |                         j = j + 1;  |         |   234  |     22  |  0  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   234  |     22  |  0  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   234  |     32  |  0  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   105  |                     R = R + chunk;  |     32  |   266  |     32  |  0  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   108  |                       R = R + rep;  |     48  |   314  |     32  |  0  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   112  |                         j = j + 1;  |         |   314  |     32  |  0  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   113  |              resetPlaceHolder_2();  |         |   314  |     32  |  0  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |   314  |     12  |  0  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   122  |                     R = R + chunk;  |     12  |   326  |     12  |  0  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   125  |                       R = R + rep;  |     48  |   374  |     12  |  0  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   129  |                         j = j + 1;  |         |   374  |     12  |  0  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   130  |              resetPlaceHolder_2();  |         |   374  |     12  |  0  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |   374  |     13  |  0  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   139  |                     R = R + chunk;  |     13  |   387  |     13  |  0  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   142  |                       R = R + rep;  |     48  |   435  |     13  |  0  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   146  |                         j = j + 1;  |         |   435  |     13  |  0  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   147  |              resetPlaceHolder_2();  |         |   435  |     13  |  0  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |   435  |     12  |  0  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   156  |                     R = R + chunk;  |     12  |   447  |     12  |  0  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   159  |                       R = R + rep;  |     48  |   495  |     12  |  0  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   163  |                         j = j + 1;  |         |   495  |     12  |  0  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   164  |              resetPlaceHolder_2();  |         |   495  |     12  |  0  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   170  |                       R = R + sep;  |     12  |   507  |     12  |  0  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   174  |                         i = i + 1;  |         |   507  |     12  |  1  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   175  |              resetPlaceHolder_1();  |         |   507  |     12  |  1  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   180  |                         int j = 0;  |         |   507  |     12  |  1  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |   507  |     24  |  1  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   189  |                     R = R + chunk;  |     24  |   531  |     24  |  1  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   192  |                       R = R + rep;  |     48  |   579  |     24  |  1  |  0  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   196  |                         j = j + 1;  |         |   579  |     24  |  1  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   197  |              resetPlaceHolder_2();  |         |   579  |     24  |  1  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |   579  |     44  |  1  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   206  |                     R = R + chunk;  |     44  |   623  |     44  |  1  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   209  |                       R = R + rep;  |     48  |   671  |     44  |  1  |  1  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   213  |                         j = j + 1;  |         |   671  |     44  |  1  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   214  |              resetPlaceHolder_2();  |         |   671  |     44  |  1  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |   671  |     22  |  1  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   223  |                     R = R + chunk;  |     22  |   693  |     22  |  1  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   226  |                       R = R + rep;  |     48  |   741  |     22  |  1  |  2  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   230  |                         j = j + 1;  |         |   741  |     22  |  1  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   231  |              resetPlaceHolder_2();  |         |   741  |     22  |  1  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |   741  |     32  |  1  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   240  |                     R = R + chunk;  |     32  |   773  |     32  |  1  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   243  |                       R = R + rep;  |     48  |   821  |     32  |  1  |  3  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   247  |                         j = j + 1;  |         |   821  |     32  |  1  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   248  |              resetPlaceHolder_2();  |         |   821  |     32  |  1  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |   821  |     12  |  1  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   257  |                     R = R + chunk;  |     12  |   833  |     12  |  1  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   260  |                       R = R + rep;  |     48  |   881  |     12  |  1  |  4  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   264  |                         j = j + 1;  |         |   881  |     12  |  1  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   265  |              resetPlaceHolder_2();  |         |   881  |     12  |  1  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |   881  |     13  |  1  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   274  |                     R = R + chunk;  |     13  |   894  |     13  |  1  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   277  |                       R = R + rep;  |     48  |   942  |     13  |  1  |  5  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   281  |                         j = j + 1;  |         |   942  |     13  |  1  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   282  |              resetPlaceHolder_2();  |         |   942  |     13  |  1  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |   942  |     12  |  1  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   291  |                     R = R + chunk;  |     12  |   954  |     12  |  1  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   294  |                       R = R + rep;  |     48  |  1002  |     12  |  1  |  6  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   298  |                         j = j + 1;  |         |  1002  |     12  |  1  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  1002  |     12  |  1  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   305  |                       R = R + sep;  |     12  |  1014  |     12  |  1  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   309  |                         i = i + 1;  |         |  1014  |     12  |  2  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  1014  |     12  |  2  |  7  |   48  |   12  |  [24,44,22,32,12,13,12]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |
    57  |           R = R + rep;  |     48  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     44  |                            |
    74  |           R = R + rep;  |     48  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     22  |                            |
    91  |           R = R + rep;  |     48  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     32  |                            |
   108  |           R = R + rep;  |     48  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     12  |                            |
   125  |           R = R + rep;  |     48  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     13  |                            |
   142  |           R = R + rep;  |     48  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     12  |                            |
   159  |           R = R + rep;  |     48  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     12  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     24  |                            |
   192  |           R = R + rep;  |     48  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     44  |                            |
   209  |           R = R + rep;  |     48  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     22  |                            |
   226  |           R = R + rep;  |     48  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     32  |                            |
   243  |           R = R + rep;  |     48  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     12  |                            |
   260  |           R = R + rep;  |     48  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     13  |                            |
   277  |           R = R + rep;  |     48  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     12  |                            |
   294  |           R = R + rep;  |     48  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     12  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {156}; {170}; {257}; {291}; {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {122}; {156}; {170}; {257}; {291}; {305} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |
    57  |           R = R + rep;  |     48  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     44  |                            |
    74  |           R = R + rep;  |     48  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     22  |                            |
    91  |           R = R + rep;  |     48  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     32  |                            |
   108  |           R = R + rep;  |     48  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     12  |                         0  |
   125  |           R = R + rep;  |     48  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     13  |                            |
   142  |           R = R + rep;  |     48  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     12  |                         1  |
   159  |           R = R + rep;  |     48  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     12  |                         2  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     24  |                            |
   192  |           R = R + rep;  |     48  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     44  |                            |
   209  |           R = R + rep;  |     48  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     22  |                            |
   226  |           R = R + rep;  |     48  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     32  |                            |
   243  |           R = R + rep;  |     48  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     12  |                         3  |
   260  |           R = R + rep;  |     48  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     13  |                            |
   277  |           R = R + rep;  |     48  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     12  |                         4  |
   294  |           R = R + rep;  |     48  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     12  |                         5  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 10 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,240}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,240}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,240}; {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,240}; {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,274}; {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5), Set(0, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,274}; {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,274}; {71,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,274}; {71,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,274}; {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,274}; {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206}; {54,71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(0, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206}; {54,71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223}; {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223}; {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223}; {71,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223}; {71,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 28 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,240,274}; {54,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3, 5), Set(0, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,240,274}; {54,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,240,274}; {71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 5), Set(1, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,240,274}; {71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,240,274}; {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3, 5), Set(2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,240,274}; {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,240}; {54,71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3), Set(0, 1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,240}; {54,71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223,240}; {54,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 3), Set(0, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223,240}; {54,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223,240}; {71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 3), Set(1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223,240}; {71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,274}; {54,71,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 5), Set(0, 1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,274}; {54,71,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223,274}; {54,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 5), Set(0, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223,274}; {54,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223,274}; {71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 5), Set(1, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223,274}; {71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,223}; {54,71,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2), Set(0, 1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,223}; {54,71,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 33 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,71,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {54,71,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {54,71,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {71,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {71,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,240,274}; {54,71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3, 5), Set(0, 1, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,240,274}; {54,71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,88,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {54,88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {54,88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223,240,274}; {54,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 3, 5), Set(0, 2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223,240,274}; {54,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {71,88,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223,240,274}; {71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 3, 5), Set(1, 2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223,240,274}; {71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,88,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,88,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,88,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,88,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,223,240}; {54,71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 3), Set(0, 1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,223,240}; {54,71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,88,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,88,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,88,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,88,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,223,274}; {54,71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2, 5), Set(0, 1, 2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,223,274}; {54,71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 43 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,71,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,71,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {54,71,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {54,71,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {54,71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {54,71,88,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {54,71,88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {54,71,88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {54,88,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {54,88,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {54,88,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {54,88,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {71,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {71,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {71,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {71,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {71,88,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {71,88,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {71,88,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {71,88,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {88,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {88,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {88,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {88,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 31 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,206,223,240,274}; {54,71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5, 1, 2, 3), Set(0, 5, 1, 2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,206,223,240,274}; {54,71,88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {71,88,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {71,88,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {88,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {88,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {88,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {88,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {71,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {71,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 10 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 33 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,88,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,88,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,88,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,88,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,88,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,88,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,88,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,88,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {54,71,88,105,139,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {54,71,88,105,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {54,71,88,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {54,71,88,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {54,88,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {54,88,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {54,88,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {54,88,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,105,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,105,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {71,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {71,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {71,88,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {71,88,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {71,88,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {71,88,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,105,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {71,88,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {71,88,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {71,88,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {71,88,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 10 trace node indices: [88, 189, 206, 105, 71, 54, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 28 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,105,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,105,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,105,139,189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,105,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,139,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,105,139,189,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,139,189,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,71,88,105,139,189,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,71,88,105,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,71,88,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,71,88,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,105,139,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,105,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,139,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,105,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,105,139,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,139,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,105,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,139,189,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,189,206,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,139,189,206,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,139,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,88,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,88,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,88,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,71,88,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,105,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,88,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,88,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,139,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,105,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,105,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,139,189,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,105,139,206,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,105,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,189,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,139,189,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71,88,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,71,88,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,139,189,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,189,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,105,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,189,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,139,189,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,206,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,105,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,206,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,139,206,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(1): {122}; {156}; {170}; {257}; {291}; {305}
GroupID(2): {54,71,88,105,139,189,206,223,240,274}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    57  |           R = R + rep;  |     48  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    74  |           R = R + rep;  |     48  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    91  |           R = R + rep;  |     48  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   108  |           R = R + rep;  |     48  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     12  |                            |                         0  |                            |
   125  |           R = R + rep;  |     48  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   139  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   142  |           R = R + rep;  |     48  |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   159  |           R = R + rep;  |     48  |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   170  |           R = R + sep;  |     12  |                            |                         2  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   192  |           R = R + rep;  |     48  |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   209  |           R = R + rep;  |     48  |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   226  |           R = R + rep;  |     48  |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   240  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   243  |           R = R + rep;  |     48  |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   257  |         R = R + chunk;  |     12  |                            |                         3  |                            |
   260  |           R = R + rep;  |     48  |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   274  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   277  |           R = R + rep;  |     48  |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                         4  |                            |
   294  |           R = R + rep;  |     48  |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   305  |           R = R + sep;  |     12  |                            |                         5  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [123, 155])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    57  |           R = R + rep;  |     48  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    74  |           R = R + rep;  |     48  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    91  |           R = R + rep;  |     48  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   108  |           R = R + rep;  |     48  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     12  |                            |                         0  |                            |
   125  |           R = R + rep;  |     48  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   139  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   142  |           R = R + rep;  |     48  |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   159  |           R = R + rep;  |     48  |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   170  |           R = R + sep;  |     12  |                            |                         2  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   192  |           R = R + rep;  |     48  |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   209  |           R = R + rep;  |     48  |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   226  |           R = R + rep;  |     48  |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   240  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   243  |           R = R + rep;  |     48  |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   257  |         R = R + chunk;  |     12  |                            |                         3  |                            |
   260  |           R = R + rep;  |     48  |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   274  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   277  |           R = R + rep;  |     48  |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                         4  |                            |
   294  |           R = R + rep;  |     48  |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   305  |           R = R + sep;  |     12  |                            |                         5  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 1 and 2 segment (index range: [157, 169])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    57  |           R = R + rep;  |     48  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    74  |           R = R + rep;  |     48  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    91  |           R = R + rep;  |     48  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   108  |           R = R + rep;  |     48  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     12  |                            |                         0  |                            |
   125  |           R = R + rep;  |     48  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   139  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   142  |           R = R + rep;  |     48  |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   159  |           R = R + rep;  |     48  |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   170  |           R = R + sep;  |     12  |                            |                         2  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   192  |           R = R + rep;  |     48  |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   209  |           R = R + rep;  |     48  |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   226  |           R = R + rep;  |     48  |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   240  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   243  |           R = R + rep;  |     48  |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   257  |         R = R + chunk;  |     12  |                            |                         3  |                            |
   260  |           R = R + rep;  |     48  |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   274  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   277  |           R = R + rep;  |     48  |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                         4  |                            |
   294  |           R = R + rep;  |     48  |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   305  |           R = R + sep;  |     12  |                            |                         5  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 3 and 4 segment (index range: [258, 290])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    57  |           R = R + rep;  |     48  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    74  |           R = R + rep;  |     48  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    91  |           R = R + rep;  |     48  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   108  |           R = R + rep;  |     48  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     12  |                            |                         0  |                            |
   125  |           R = R + rep;  |     48  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   139  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   142  |           R = R + rep;  |     48  |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   159  |           R = R + rep;  |     48  |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   170  |           R = R + sep;  |     12  |                            |                         2  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   192  |           R = R + rep;  |     48  |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   209  |           R = R + rep;  |     48  |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   226  |           R = R + rep;  |     48  |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   240  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   243  |           R = R + rep;  |     48  |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   257  |         R = R + chunk;  |     12  |                            |                         3  |                            |
   260  |           R = R + rep;  |     48  |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   274  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   277  |           R = R + rep;  |     48  |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                         4  |                            |
   294  |           R = R + rep;  |     48  |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   305  |           R = R + sep;  |     12  |                            |                         5  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 4 and 5 segment (index range: [292, 304])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    57  |           R = R + rep;  |     48  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    74  |           R = R + rep;  |     48  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     22  |                            |                            |                         0  |
    91  |           R = R + rep;  |     48  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   108  |           R = R + rep;  |     48  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     12  |                            |                         0  |                            |
   125  |           R = R + rep;  |     48  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   139  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   142  |           R = R + rep;  |     48  |                         5  |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   159  |           R = R + rep;  |     48  |                         6  |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   170  |           R = R + sep;  |     12  |                            |                         2  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   192  |           R = R + rep;  |     48  |                         7  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   209  |           R = R + rep;  |     48  |                         8  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   226  |           R = R + rep;  |     48  |                         9  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   240  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   243  |           R = R + rep;  |     48  |                        10  |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   257  |         R = R + chunk;  |     12  |                            |                         3  |                            |
   260  |           R = R + rep;  |     48  |                        11  |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   274  |         R = R + chunk;  |     13  |                            |                            |                         0  |
   277  |           R = R + rep;  |     48  |                        12  |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                         4  |                            |
   294  |           R = R + rep;  |     48  |                        13  |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   305  |           R = R + sep;  |     12  |                            |                         5  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(1): Set(175)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R chunk -> if ((j < 3) || (j == 3))
{
  R2 = R2 + chunk;
}
else
{
  if ((j < 4) || (j == 4))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((j < 5) || (j == 5))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R rep -> R0 = R0 + rep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 02:07:09,686 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:48:37,233 INFO     Done. Execution time: 2487.5475385189056 seconds
2023-01-31 02:48:37,234 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3752994034182457298.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-16007529182225808.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-879916688428436668.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2494370093356089995.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3442165529818424280.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5080145173229834085.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2776669359206168365.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3450178492706001040.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3976558206528134270.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4276906965107404318.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2259709967253591059.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8139157575256182174.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5377804651549562513.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7653693946300001600.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5255837278782174532.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-278959657148228403.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1106786426690254393.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2175836017700558828.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6568143113943409337.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6620296556846075817.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5720761436587996045.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3597683458174268105.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-813831639451887835.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 8 1) (* 8 1 sep) (* 1 1 ts) (* 1 1 rep) (* 8 1 text)))` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6537925699222537227.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7343679043813719335.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3934043732550892206.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7865254208368754969.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1270146275400530007.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8662876273823591863.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2657810851419039304.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4296879360876591587.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5781845492349018611.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8811688254389192525.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7041472096126106386.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2226904826150864784.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2639031964402498829.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3795407281493295296.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9201504099800959864.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4956753296193860495.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2514674125257808578.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1969633969248394092.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2284100961159385440.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(let ((a!1 (+ 0
              (* 8 1)
              (* 8 (* 1 rep))
              (* 1 (* 1 sep) rep)
              (* 8 (* (* 1 ts) ts))
              (* 8 (* (* 1 text) sep))
              (* 1 (* 1 sep) sep)
              (* 8 (* (* 1 text) text) text)
              (* 8 (* (* 1 ts) ts) text)
              (* 8 (* (* 1 text) text) sep)
              (* 8 (* (* 1 ts) ts) rep)
              (* 8 (* (* 1 ts) ts) ts)
              (* 8 (* 1 rep) rep rep)
              (* 1 (* (* 1 ts) text) rep)
              (* 1 (* (* 1 ts) text) text)
              (* 8 (* (* 1 ts) text) sep)
              (* 1 (* (* 1 text) sep) sep))))
  (<= C2 a!1))` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!4 (or (<= D1p
                   (+ 0 (* 8 1) (* 8 1 sep) (* 1 1 ts) (* 1 1 rep) (* 8 1 text)))
               (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2 D2 a!3))
       true
       a!4
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (let ((a!1 (or (<= D1
                   (+ 0 (* 8 1) (* 8 1 sep) (* 1 1 ts) (* 1 1 rep) (* 8 1 text)))
               (= D1 0))))
  (and a!1 (or true (= D0 0)) (or true (= D2 0)))))
(assert (let ((a!1 (+ 0
              (* 8 1)
              (* 8 (* 1 rep))
              (* 1 (* 1 sep) rep)
              (* 8 (* (* 1 ts) ts))
              (* 8 (* (* 1 text) sep))
              (* 1 (* 1 sep) sep)
              (* 8 (* (* 1 text) text) text)
              (* 8 (* (* 1 ts) ts) text)
              (* 8 (* (* 1 text) text) sep)
              (* 8 (* (* 1 ts) ts) rep)
              (* 8 (* (* 1 ts) ts) ts)
              (* 8 (* 1 rep) rep rep)
              (* 1 (* (* 1 ts) text) rep)
              (* 1 (* (* 1 ts) text) text)
              (* 8 (* (* 1 ts) text) sep)
              (* 1 (* (* 1 text) sep) sep))))
  (and true
       (<= C0 1)
       (>= C6 0)
       (>= C35 0)
       (>= C51 0)
       (>= C24 0)
       (>= C13 0)
       (>= C46 0)
       (>= C1 0)
       (>= C31 0)
       (>= C20 0)
       (>= C40 0)
       (>= C27 0)
       (>= C52 0)
       (>= C42 0)
       (>= C8 0)
       (>= C17 0)
       (>= C7 0)
       (>= C12 0)
       (>= C23 0)
       (>= C38 0)
       (>= C28 0)
       (>= C39 0)
       (>= C45 0)
       (>= C16 0)
       (>= C34 0)
       (>= C30 0)
       (>= C0 0)
       (>= C49 0)
       (>= C41 0)
       (>= C53 0)
       (>= C18 0)
       (>= C11 0)
       (>= C9 0)
       (>= C15 0)
       (>= C26 0)
       (>= C44 0)
       (>= C4 0)
       (>= C29 0)
       (>= C37 0)
       (>= C22 0)
       (>= C19 0)
       (>= C48 0)
       (>= C33 0)
       (>= C3 0)
       (>= C43 0)
       (>= C25 0)
       (>= C36 0)
       (>= C50 0)
       (>= C14 0)
       (>= C5 0)
       (>= C10 0)
       (>= C2 0)
       (>= C47 0)
       (>= C21 0)
       (>= C32 0)
       true
       (<= C2 a!1))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    5)  (define-fun D0 () Int    6)  (define-fun D1 () Int    7)  (define-fun C2 () Int    15)  (define-fun C1 () Int    7)  (define-fun rep () Int    15)  (define-fun sep () Int    16)  (define-fun text () Int    15)  (define-fun ts () Int    1)  (define-fun D2p () Int    15)  (define-fun D0p () Int    2)  (define-fun D1p () Int    5)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `2485.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0207-transparentAmortize-60s-mostPrecise/stac-raw-0131-0207-transparentAmortize-60s-mostPrecise-000-099.csv`

real	41m27.540s
user	54m18.430s
sys	0m24.800s

2023-01-31 02:48:37,234 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 02:48:37,234 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:49:43,010 INFO     Done. Execution time: 65.77615213394165 seconds
2023-01-31 02:49:43,011 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz4861097696502182283/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4861097696502182283/bin -o /tmp/qfuzz4861097696502182283/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4861097696502182283/bin
Found file /tmp/qfuzz4861097696502182283/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz4861097696502182283/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4861097696502182283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4861097696502182283/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4861097696502182283/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4861097696502182283/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123175 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 122946 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m122k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 50.00; [95.00,195.00,255.00,455.00,505.00,655.00,735.00]
1; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 40.00; [125.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 60.00; [175.00,235.00,435.00,765.00,895.00,1015.00]
4; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 7; 40.00; [155.00,355.00,455.00,565.00,635.00,675.00,855.00]
6; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 7; 60.00; [95.00,195.00,255.00,575.00,735.00,875.00,1005.00]
7; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+cov; 7; 50.00; [95.00,195.00,315.00,395.00,455.00,505.00,775.00]
13; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 10.00; [595.00,815.00,825.00]
22; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 70.00; [215.00,295.00,365.00,455.00]
28; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 7; 70.00; [155.00,225.00,315.00,575.00,655.00,795.00,935.00]
51; /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta; 7; 80.00; [95.00,195.00,425.00,575.00,735.00,815.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 9, 36, 4, 40, 28, 50, 6, 45, 33, 7, 38, 8, 20, 47, 6, 44, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 46, 32, 39, 7, 28, 15, 15, 48, 42, 22, 5, 5, 16, 31, 15, 31, 15, 8, 23, 15, 9, 33, 23, 40, 10, 9, 9, 40, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 10, 10, 10, 10, 14, 22, 22, 22, 22, 32, 22, 22, 9, 9, 15, 26, 25, 22, 22, 32, 5, 44, 12, 42, 12, 48, 34, 15, 9, 37, 30, 45, 28, 33, 29, 20, 6, 7, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 40, 40, 40, 40, 29, 29, 29, 29, 43, 49, 29, 23, 29, 29, 31, 29, 29, 4, 24, 29, 32, 12, 50, 37, 34, 25, 29, 29, 29, 29, 30, 29, 12, 24, 32, 7, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 38, 4, 22, 15, 19, 7, 36, 16, 12, 33, 35, 23, 14, 35, 38, 8, 29, 28, 28, 44, 4, 6, 9, 30, 38, 8, 34, 48, 42, 26, 27, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 9, 36, 43, 4, 28, 12, 33, 15, 24, 39, 9, 47, 11, 33, 5, 23, 12, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 22, 33, 17, 31, 42, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 11, 21, 50, 8, 44, 44, 44, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4861097696502182283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_024942_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,9,36,4,40,28,50], 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,46,32,39,7,28,15], 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,10,10,10,10,14,22], 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,40,40,40,40,29,29], 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,38,4,22,15,19], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,9,36,43,4,28,12], 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,11,21,50,8,44,44], 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:49:43,011 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 02:49:43,011 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 02:50:00,807 INFO     Done. Execution time: 17.79547357559204 seconds
2023-01-31 02:50:00,807 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_024942_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_024942_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,9,36,4,40,28,50], 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,46,32,39,7,28,15], 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,10,10,10,10,14,22], 22)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,40,40,40,40,29,29], 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,38,4,22,15,19], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,9,36,43,4,28,12], 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,11,21,50,8,44,44], 44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [20,9,36,4,40,28,50]
choice: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,38,4,22,15,19]
choice: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,46,32,39,7,28,15]
choice: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17,10,10,10,10,14,22]
choice: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [40,40,40,40,40,29,29]
choice: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [49,9,36,43,4,28,12]
choice: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [37,11,21,50,8,44,44]
choice: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
choice: 21
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
choice: 13
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |          text          |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       6  |         |     |  [20,9,36,4,40,28,50]  |
    10  |                      // int R = 0;  |         |    0  |       6  |         |     |  [20,9,36,4,40,28,50]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       6  |         |     |  [20,9,36,4,40,28,50]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       6  |         |     |  [20,9,36,4,40,28,50]  |
    14  |                     int chunk = 0;  |         |    0  |       6  |      0  |     |  [20,9,36,4,40,28,50]  |
    25  |                         int j = 0;  |         |    0  |       6  |      0  |  0  |  [20,9,36,4,40,28,50]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       6  |     20  |  0  |  [20,9,36,4,40,28,50]  |
    34  |                     R = R + chunk;  |     20  |   20  |       6  |     20  |  0  |  [20,9,36,4,40,28,50]  |
    38  |                         j = j + 1;  |         |   20  |       6  |     20  |  1  |  [20,9,36,4,40,28,50]  |
    39  |              resetPlaceHolder_2();  |         |   20  |       6  |     20  |  1  |  [20,9,36,4,40,28,50]  |
    45  |        chunk = arrayRead(text, j);  |         |   20  |       6  |      9  |  1  |  [20,9,36,4,40,28,50]  |
    48  |                     R = R + chunk;  |      9  |   29  |       6  |      9  |  1  |  [20,9,36,4,40,28,50]  |
    52  |                         j = j + 1;  |         |   29  |       6  |      9  |  2  |  [20,9,36,4,40,28,50]  |
    53  |              resetPlaceHolder_2();  |         |   29  |       6  |      9  |  2  |  [20,9,36,4,40,28,50]  |
    59  |        chunk = arrayRead(text, j);  |         |   29  |       6  |     36  |  2  |  [20,9,36,4,40,28,50]  |
    62  |                     R = R + chunk;  |     36  |   65  |       6  |     36  |  2  |  [20,9,36,4,40,28,50]  |
    66  |                         j = j + 1;  |         |   65  |       6  |     36  |  3  |  [20,9,36,4,40,28,50]  |
    67  |              resetPlaceHolder_2();  |         |   65  |       6  |     36  |  3  |  [20,9,36,4,40,28,50]  |
    73  |        chunk = arrayRead(text, j);  |         |   65  |       6  |      4  |  3  |  [20,9,36,4,40,28,50]  |
    76  |                     R = R + chunk;  |      4  |   69  |       6  |      4  |  3  |  [20,9,36,4,40,28,50]  |
    80  |                         j = j + 1;  |         |   69  |       6  |      4  |  4  |  [20,9,36,4,40,28,50]  |
    81  |              resetPlaceHolder_2();  |         |   69  |       6  |      4  |  4  |  [20,9,36,4,40,28,50]  |
    87  |        chunk = arrayRead(text, j);  |         |   69  |       6  |     40  |  4  |  [20,9,36,4,40,28,50]  |
    90  |                     R = R + chunk;  |     40  |  109  |       6  |     40  |  4  |  [20,9,36,4,40,28,50]  |
    94  |                         j = j + 1;  |         |  109  |       6  |     40  |  5  |  [20,9,36,4,40,28,50]  |
    95  |              resetPlaceHolder_2();  |         |  109  |       6  |     40  |  5  |  [20,9,36,4,40,28,50]  |
   101  |        chunk = arrayRead(text, j);  |         |  109  |       6  |     28  |  5  |  [20,9,36,4,40,28,50]  |
   104  |                     R = R + chunk;  |     28  |  137  |       6  |     28  |  5  |  [20,9,36,4,40,28,50]  |
   108  |                         j = j + 1;  |         |  137  |       6  |     28  |  6  |  [20,9,36,4,40,28,50]  |
   109  |              resetPlaceHolder_2();  |         |  137  |       6  |     28  |  6  |  [20,9,36,4,40,28,50]  |
   115  |        chunk = arrayRead(text, j);  |         |  137  |       6  |     50  |  6  |  [20,9,36,4,40,28,50]  |
   118  |                     R = R + chunk;  |     50  |  187  |       6  |     50  |  6  |  [20,9,36,4,40,28,50]  |
   122  |                         j = j + 1;  |         |  187  |       6  |     50  |  7  |  [20,9,36,4,40,28,50]  |
   123  |              resetPlaceHolder_2();  |         |  187  |       6  |     50  |  7  |  [20,9,36,4,40,28,50]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     20  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |      9  |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     36  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |      4  |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |     40  |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     28  |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     50  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      15  |         |     |  [10,46,32,39,7,28,15]  |
    10  |                      // int R = 0;  |         |    0  |      15  |         |     |  [10,46,32,39,7,28,15]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      15  |         |     |  [10,46,32,39,7,28,15]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      15  |         |     |  [10,46,32,39,7,28,15]  |
    14  |                     int chunk = 0;  |         |    0  |      15  |      0  |     |  [10,46,32,39,7,28,15]  |
    25  |                         int i = 0;  |         |    0  |      15  |      0  |  0  |  [10,46,32,39,7,28,15]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      15  |     10  |  0  |  [10,46,32,39,7,28,15]  |
    34  |                     R = R + chunk;  |     10  |   10  |      15  |     10  |  0  |  [10,46,32,39,7,28,15]  |
    38  |                         i = i + 1;  |         |   10  |      15  |     10  |  1  |  [10,46,32,39,7,28,15]  |
    39  |              resetPlaceHolder_1();  |         |   10  |      15  |     10  |  1  |  [10,46,32,39,7,28,15]  |
    45  |        chunk = arrayRead(text, i);  |         |   10  |      15  |     46  |  1  |  [10,46,32,39,7,28,15]  |
    48  |                     R = R + chunk;  |     46  |   56  |      15  |     46  |  1  |  [10,46,32,39,7,28,15]  |
    52  |                         i = i + 1;  |         |   56  |      15  |     46  |  2  |  [10,46,32,39,7,28,15]  |
    53  |              resetPlaceHolder_1();  |         |   56  |      15  |     46  |  2  |  [10,46,32,39,7,28,15]  |
    59  |        chunk = arrayRead(text, i);  |         |   56  |      15  |     32  |  2  |  [10,46,32,39,7,28,15]  |
    62  |                     R = R + chunk;  |     32  |   88  |      15  |     32  |  2  |  [10,46,32,39,7,28,15]  |
    66  |                         i = i + 1;  |         |   88  |      15  |     32  |  3  |  [10,46,32,39,7,28,15]  |
    67  |              resetPlaceHolder_1();  |         |   88  |      15  |     32  |  3  |  [10,46,32,39,7,28,15]  |
    73  |        chunk = arrayRead(text, i);  |         |   88  |      15  |     39  |  3  |  [10,46,32,39,7,28,15]  |
    76  |                     R = R + chunk;  |     39  |  127  |      15  |     39  |  3  |  [10,46,32,39,7,28,15]  |
    80  |                         i = i + 1;  |         |  127  |      15  |     39  |  4  |  [10,46,32,39,7,28,15]  |
    81  |              resetPlaceHolder_1();  |         |  127  |      15  |     39  |  4  |  [10,46,32,39,7,28,15]  |
    87  |        chunk = arrayRead(text, i);  |         |  127  |      15  |      7  |  4  |  [10,46,32,39,7,28,15]  |
    90  |                     R = R + chunk;  |      7  |  134  |      15  |      7  |  4  |  [10,46,32,39,7,28,15]  |
    94  |                         i = i + 1;  |         |  134  |      15  |      7  |  5  |  [10,46,32,39,7,28,15]  |
    95  |              resetPlaceHolder_1();  |         |  134  |      15  |      7  |  5  |  [10,46,32,39,7,28,15]  |
   101  |        chunk = arrayRead(text, i);  |         |  134  |      15  |     28  |  5  |  [10,46,32,39,7,28,15]  |
   104  |                     R = R + chunk;  |     28  |  162  |      15  |     28  |  5  |  [10,46,32,39,7,28,15]  |
   108  |                         i = i + 1;  |         |  162  |      15  |     28  |  6  |  [10,46,32,39,7,28,15]  |
   109  |              resetPlaceHolder_1();  |         |  162  |      15  |     28  |  6  |  [10,46,32,39,7,28,15]  |
   115  |        chunk = arrayRead(text, i);  |         |  162  |      15  |     15  |  6  |  [10,46,32,39,7,28,15]  |
   118  |                     R = R + chunk;  |     15  |  177  |      15  |     15  |  6  |  [10,46,32,39,7,28,15]  |
   122  |                         i = i + 1;  |         |  177  |      15  |     15  |  7  |  [10,46,32,39,7,28,15]  |
   123  |              resetPlaceHolder_1();  |         |  177  |      15  |     15  |  7  |  [10,46,32,39,7,28,15]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     10  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |     46  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     32  |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     39  |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |      7  |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     28  |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     15  |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_2(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 02:50:00,807 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:50:08,257 INFO     Done. Execution time: 7.449510335922241 seconds
2023-01-31 02:50:08,257 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        i = i + 1;
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun text () Int    4)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0250-transparentAmortize-60s-mostPrecise/stac-raw-0131-0250-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.442s
user	0m11.898s
sys	0m1.435s

2023-01-31 02:50:08,257 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 02:50:08,257 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:51:14,015 INFO     Done. Execution time: 65.75781321525574 seconds
2023-01-31 02:51:14,016 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2027090117931452514/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2027090117931452514/bin -o /tmp/qfuzz2027090117931452514/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2027090117931452514/bin
Found file /tmp/qfuzz2027090117931452514/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2027090117931452514/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2027090117931452514/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2027090117931452514/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2027090117931452514/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2027090117931452514/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 131497 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 41, exec speed = 125309 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m125k to 131k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 47.00; [95.00,195.00,255.00,455.00,502.00,655.00,735.00]
2; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 40.00; [122.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 7; 20.00; [95.00,255.00,442.00,535.00,595.00,915.00,935.00]
4; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 60.00; [195.00,415.00,535.00,595.00,722.00,855.00,935.00]
9; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 7; 40.00; [95.00,195.00,362.00,455.00,615.00,655.00,735.00]
11; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 7; 40.00; [95.00,195.00,235.00,415.00,502.00,575.00,695.00]
12; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 4; 7.00; [195.00,375.00,535.00,542.00]
26; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 7; 80.00; [95.00,195.00,502.00,655.00,735.00,815.00,995.00]
33; /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 100.00; [95.00,195.00,295.00,502.00,655.00,795.00,915.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 4, 45, 39, 14, 32, 9, 4, 25, 12, 34, 11, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 49, 32, 40, 19, 46, 6, 45, 9, 33, 29, 12, 34, 7, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 26, 26, 26, 26, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 11, 4, 20, 34, 28, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 9, 36, 4, 22, 32, 30, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 9, 46, 20, 29, 42, 26, 33, 15, 25, 39, 30, 32, 11, 33, 35, 23, 50, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 26, 4, 12, 45, 29, 46, 35, 27, 7, 30, 4, 39, 38, 15, 7, 9, 45, 26, 39, 7, 45, 12, 45, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2027090117931452514/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_025113_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,4,45,39,14,32,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,49,32,40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,26,26,26,26,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,11,4,20,34,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,9,36,4,22,32,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,9,46,20,29,42,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,26,4,12,45,29,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:51:14,016 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 02:51:14,016 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 02:51:25,079 INFO     Done. Execution time: 11.062851667404175 seconds
2023-01-31 02:51:25,079 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_025113_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_025113_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,4,45,39,14,32,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,49,32,40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,26,26,26,26,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,11,4,20,34,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,9,36,4,22,32,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,26,4,12,45,29,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,9,46,20,29,42,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,4,45,39,14,32,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,49,32,40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [26,26,26,26,26,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,11,4,20,34,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17,9,36,4,22,32,30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [35,9,46,20,29,42,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [21,26,4,12,45,29,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [24,4,45,39,14,32,9]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [24,4,45,39,14,32,9]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [24,4,45,39,14,32,9]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [24,4,45,39,14,32,9]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [24,4,45,39,14,32,9]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [24,4,45,39,14,32,9]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [24,4,45,39,14,32,9]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     24  |  0  |    0  |  [24,4,45,39,14,32,9]  |
    24  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |    0  |  [24,4,45,39,14,32,9]  |
    28  |                         i = i + 1;  |         |   24  |     24  |  1  |    0  |  [24,4,45,39,14,32,9]  |
    34  |        chunk = arrayRead(text, i);  |         |   24  |      4  |  1  |    0  |  [24,4,45,39,14,32,9]  |
    37  |                     R = R + chunk;  |      4  |   28  |      4  |  1  |    0  |  [24,4,45,39,14,32,9]  |
    41  |                         i = i + 1;  |         |   28  |      4  |  2  |    0  |  [24,4,45,39,14,32,9]  |
    42  |              resetPlaceHolder_1();  |         |   28  |      4  |  2  |    0  |  [24,4,45,39,14,32,9]  |
    48  |        chunk = arrayRead(text, i);  |         |   28  |     45  |  2  |    0  |  [24,4,45,39,14,32,9]  |
    51  |                     R = R + chunk;  |     45  |   73  |     45  |  2  |    0  |  [24,4,45,39,14,32,9]  |
    55  |                         i = i + 1;  |         |   73  |     45  |  3  |    0  |  [24,4,45,39,14,32,9]  |
    56  |              resetPlaceHolder_1();  |         |   73  |     45  |  3  |    0  |  [24,4,45,39,14,32,9]  |
    62  |        chunk = arrayRead(text, i);  |         |   73  |     39  |  3  |    0  |  [24,4,45,39,14,32,9]  |
    65  |                     R = R + chunk;  |     39  |  112  |     39  |  3  |    0  |  [24,4,45,39,14,32,9]  |
    69  |                         i = i + 1;  |         |  112  |     39  |  4  |    0  |  [24,4,45,39,14,32,9]  |
    70  |              resetPlaceHolder_1();  |         |  112  |     39  |  4  |    0  |  [24,4,45,39,14,32,9]  |
    76  |        chunk = arrayRead(text, i);  |         |  112  |     14  |  4  |    0  |  [24,4,45,39,14,32,9]  |
    79  |                     R = R + chunk;  |     14  |  126  |     14  |  4  |    0  |  [24,4,45,39,14,32,9]  |
    83  |                         i = i + 1;  |         |  126  |     14  |  5  |    0  |  [24,4,45,39,14,32,9]  |
    84  |              resetPlaceHolder_1();  |         |  126  |     14  |  5  |    0  |  [24,4,45,39,14,32,9]  |
    90  |        chunk = arrayRead(text, i);  |         |  126  |     32  |  5  |    0  |  [24,4,45,39,14,32,9]  |
    93  |                     R = R + chunk;  |     32  |  158  |     32  |  5  |    0  |  [24,4,45,39,14,32,9]  |
    97  |                         i = i + 1;  |         |  158  |     32  |  6  |    0  |  [24,4,45,39,14,32,9]  |
    98  |              resetPlaceHolder_1();  |         |  158  |     32  |  6  |    0  |  [24,4,45,39,14,32,9]  |
   104  |        chunk = arrayRead(text, i);  |         |  158  |      9  |  6  |    0  |  [24,4,45,39,14,32,9]  |
   107  |                     R = R + chunk;  |      9  |  167  |      9  |  6  |    0  |  [24,4,45,39,14,32,9]  |
   111  |                         i = i + 1;  |         |  167  |      9  |  7  |    0  |  [24,4,45,39,14,32,9]  |
   112  |              resetPlaceHolder_1();  |         |  167  |      9  |  7  |    0  |  [24,4,45,39,14,32,9]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79,93,107}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     24  |                         0  |
    37  |         R = R + chunk;  |      4  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     45  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     39  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     14  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     32  |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |      9  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 02:51:25,079 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:51:32,274 INFO     Done. Execution time: 7.194790840148926 seconds
2023-01-31 02:51:32,275 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0251-transparentAmortize-60s-mostPrecise/stac-raw-0131-0251-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.188s
user	0m16.053s
sys	0m2.001s

2023-01-31 02:51:32,275 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 02:51:32,275 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:52:38,136 INFO     Done. Execution time: 65.86070728302002 seconds
2023-01-31 02:52:38,136 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz294647478741400146/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz294647478741400146/bin -o /tmp/qfuzz294647478741400146/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz294647478741400146/bin
Found file /tmp/qfuzz294647478741400146/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz294647478741400146/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz294647478741400146/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz294647478741400146/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz294647478741400146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz294647478741400146/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz294647478741400146/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz294647478741400146/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 121608 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 126018 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m121k to 126k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 49.00; [28.00,95.00,195.00,255.00,455.00,504.00,655.00,735.00]
1; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 8; 40.00; [28.00,124.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 8; 20.00; [28.00,195.00,255.00,435.00,455.00,504.00,655.00,735.00]
6; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 8; 11.00; [28.00,95.00,195.00,235.00,504.00,515.00,575.00,655.00]
8; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 13.00; [15.00,28.00,155.00,424.00,995.00]
9; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 8; 60.00; [28.00,95.00,195.00,255.00,355.00,504.00,735.00,935.00]
34; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 8; 67.00; [28.00,95.00,195.00,295.00,415.00,504.00,655.00,995.00]
40; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 8; 60.00; [28.00,95.00,195.00,255.00,455.00,655.00,735.00,844.00]
52; /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 8; 80.00; [28.00,135.00,255.00,355.00,504.00,595.00,675.00,895.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 44, 17, 33, 29, 6, 12, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 9, 36, 4, 22, 32, 12, 13, 12, 33, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 20, 4, 49, 32, 14, 33, 37, 23, 14, 35, 38, 8, 20, 29, 29, 26, 27, 26, 35, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 17, 46, 12, 13, 25, 15, 34, 24, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 7, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 11, 4, 25, 32, 28, 28, 11, 11, 11, 33, 11, 11, 30, 32, 28, 28, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 35, 18, 34, 11, 20, 14, 43, 26, 11, 45, 9, 33, 29, 50, 50, 24, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 21, 22, 32, 12, 13, 12, 15, 11, 48, 34, 10, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz294647478741400146/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_025237_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,44,17,33,29,6,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,20,4,49,32,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,17,46,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,7,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,11,4,25,32,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,21,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:52:38,136 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 02:52:38,136 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 02:52:47,954 INFO     Done. Execution time: 9.817517518997192 seconds
2023-01-31 02:52:47,954 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_025237_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_025237_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,44,17,33,29,6,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,20,4,49,32,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,17,46,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,7,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,11,4,25,32,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,21,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,44,17,33,29,6,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [41,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,20,4,49,32,14]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,17,46,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [20,7,49]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,11,4,25,32,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,21,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [24,44,17,33,29,6,12]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [24,44,17,33,29,6,12]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [24,44,17,33,29,6,12]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [24,44,17,33,29,6,12]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [24,44,17,33,29,6,12]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [24,44,17,33,29,6,12]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     24  |  0  |  [24,44,17,33,29,6,12]  |
    25  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  [24,44,17,33,29,6,12]  |
    28  |                         R = R + 1;  |      1  |   25  |     24  |  0  |  [24,44,17,33,29,6,12]  |
    32  |                         i = i + 1;  |         |   25  |     24  |  1  |  [24,44,17,33,29,6,12]  |
    33  |              resetPlaceHolder_1();  |         |   25  |     24  |  1  |  [24,44,17,33,29,6,12]  |
    39  |        chunk = arrayRead(text, i);  |         |   25  |     44  |  1  |  [24,44,17,33,29,6,12]  |
    42  |                     R = R + chunk;  |     44  |   69  |     44  |  1  |  [24,44,17,33,29,6,12]  |
    45  |                         R = R + 1;  |      1  |   70  |     44  |  1  |  [24,44,17,33,29,6,12]  |
    49  |                         i = i + 1;  |         |   70  |     44  |  2  |  [24,44,17,33,29,6,12]  |
    50  |              resetPlaceHolder_1();  |         |   70  |     44  |  2  |  [24,44,17,33,29,6,12]  |
    56  |        chunk = arrayRead(text, i);  |         |   70  |     17  |  2  |  [24,44,17,33,29,6,12]  |
    59  |                     R = R + chunk;  |     17  |   87  |     17  |  2  |  [24,44,17,33,29,6,12]  |
    62  |                         R = R + 1;  |      1  |   88  |     17  |  2  |  [24,44,17,33,29,6,12]  |
    66  |                         i = i + 1;  |         |   88  |     17  |  3  |  [24,44,17,33,29,6,12]  |
    67  |              resetPlaceHolder_1();  |         |   88  |     17  |  3  |  [24,44,17,33,29,6,12]  |
    73  |        chunk = arrayRead(text, i);  |         |   88  |     33  |  3  |  [24,44,17,33,29,6,12]  |
    76  |                     R = R + chunk;  |     33  |  121  |     33  |  3  |  [24,44,17,33,29,6,12]  |
    79  |                         R = R + 1;  |      1  |  122  |     33  |  3  |  [24,44,17,33,29,6,12]  |
    83  |                         i = i + 1;  |         |  122  |     33  |  4  |  [24,44,17,33,29,6,12]  |
    84  |              resetPlaceHolder_1();  |         |  122  |     33  |  4  |  [24,44,17,33,29,6,12]  |
    90  |        chunk = arrayRead(text, i);  |         |  122  |     29  |  4  |  [24,44,17,33,29,6,12]  |
    93  |                     R = R + chunk;  |     29  |  151  |     29  |  4  |  [24,44,17,33,29,6,12]  |
    96  |                         R = R + 1;  |      1  |  152  |     29  |  4  |  [24,44,17,33,29,6,12]  |
   100  |                         i = i + 1;  |         |  152  |     29  |  5  |  [24,44,17,33,29,6,12]  |
   101  |              resetPlaceHolder_1();  |         |  152  |     29  |  5  |  [24,44,17,33,29,6,12]  |
   107  |        chunk = arrayRead(text, i);  |         |  152  |      6  |  5  |  [24,44,17,33,29,6,12]  |
   110  |                     R = R + chunk;  |      6  |  158  |      6  |  5  |  [24,44,17,33,29,6,12]  |
   113  |                         R = R + 1;  |      1  |  159  |      6  |  5  |  [24,44,17,33,29,6,12]  |
   117  |                         i = i + 1;  |         |  159  |      6  |  6  |  [24,44,17,33,29,6,12]  |
   118  |              resetPlaceHolder_1();  |         |  159  |      6  |  6  |  [24,44,17,33,29,6,12]  |
   124  |        chunk = arrayRead(text, i);  |         |  159  |     12  |  6  |  [24,44,17,33,29,6,12]  |
   127  |                     R = R + chunk;  |     12  |  171  |     12  |  6  |  [24,44,17,33,29,6,12]  |
   130  |                         R = R + 1;  |      1  |  172  |     12  |  6  |  [24,44,17,33,29,6,12]  |
   134  |                         i = i + 1;  |         |  172  |     12  |  7  |  [24,44,17,33,29,6,12]  |
   135  |              resetPlaceHolder_1();  |         |  172  |     12  |  7  |  [24,44,17,33,29,6,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     44  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     17  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     33  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     29  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |      6  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     12  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25,59}; {93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25,59}; {93,127} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                         0  |
    28  |             R = R + 1;  |      1  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     44  |                            |
    45  |             R = R + 1;  |      1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     17  |                         0  |
    62  |             R = R + 1;  |      1  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     33  |                            |
    79  |             R = R + 1;  |      1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     29  |                         1  |
    96  |             R = R + 1;  |      1  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |      6  |                            |
   113  |             R = R + 1;  |      1  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     12  |                         1  |
   130  |             R = R + 1;  |      1  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,110}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [42, 110, 76]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25,59}; {93,127}
GroupID(2): {42,76,110}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                            |                         0  |                            |
    28  |             R = R + 1;  |      1  |                         0  |                            |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    42  |         R = R + chunk;  |     44  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    59  |         R = R + chunk;  |     17  |                            |                         0  |                            |
    62  |             R = R + 1;  |      1  |                         2  |                            |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    76  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    93  |         R = R + chunk;  |     29  |                            |                         1  |                            |
    96  |             R = R + 1;  |      1  |                         4  |                            |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   110  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   127  |         R = R + chunk;  |     12  |                            |                         1  |                            |
   130  |             R = R + 1;  |      1  |                         6  |                            |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set(67)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 3) || (i == 3))
  {
    if ((i < 2) || (i == 2))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 1) || (i == 1))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      R1 = R1 + chunk;
    }
    else
    {
      if ((i < 3) || (i == 3))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          R1 = R1 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            R2 = R2 + chunk;
          }
          else
          {
            R1 = R1 + chunk;
          }
        }
      }
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 02:52:47,955 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:53:50,213 INFO     Done. Execution time: 62.257781744003296 seconds
2023-01-31 02:53:50,213 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 1) || (i == 1))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((i < 4) || (i == 4))
              {
                D1 = D1 + chunk;
              }
              else
              {
                if ((i < 5) || (i == 5))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
            }
          }
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 1) || (i == 1))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((i < 4) || (i == 4))
              {
                D1 = D1 + chunk;
              }
              else
              {
                if ((i < 5) || (i == 5))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
            }
          }
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6317147316829943463.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2309225243436296045.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8661702979307189381.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4365810496978097174.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8237865847166585293.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4284451358534755677.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5408231595443510099.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6445051717532845322.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2296182530637720185.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       (or true (= D2p 0))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ text text)) (= a!1 (+ text text))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    7)  (define-fun D2 () Int    7)  (define-fun C2 () Int    10)  (define-fun C1 () Int    14)  (define-fun text () Int    9)  (define-fun D0p () Int    1)  (define-fun D1p () Int    6)  (define-fun D2p () Int    15)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `60.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0252-transparentAmortize-60s-mostPrecise/stac-raw-0131-0252-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.251s
user	4m1.238s
sys	0m2.414s

2023-01-31 02:53:50,213 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 02:53:50,213 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:54:56,356 INFO     Done. Execution time: 66.14211082458496 seconds
2023-01-31 02:54:56,356 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz8730281947971279449/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8730281947971279449/bin -o /tmp/qfuzz8730281947971279449/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8730281947971279449/bin
Found file /tmp/qfuzz8730281947971279449/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz8730281947971279449/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8730281947971279449/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8730281947971279449/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8730281947971279449/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8730281947971279449/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 121460 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 30, exec speed = 123307 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m121k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 49.00; [95.00,195.00,255.00,455.00,504.00,655.00,735.00]
1; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 40.00; [124.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 5; 9.00; [115.00,124.00,195.00,435.00,855.00]
4; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 5; 20.00; [95.00,115.00,195.00,504.00,735.00]
7; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 6; 80.00; [95.00,184.00,395.00,495.00,635.00,715.00]
8; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 7; 9.00; [95.00,195.00,255.00,455.00,655.00,664.00,735.00]
11; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta; 7; 60.00; [95.00,195.00,255.00,504.00,655.00,735.00,875.00]
29; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 7; 89.00; [95.00,195.00,415.00,504.00,615.00,715.00,935.00]
32; /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 100.00; [95.00,195.00,315.00,535.00,635.00,735.00,944.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 9, 36, 15, 4, 26, 31, 13, 12, 15, 12, 28, 34, 40, 12, 46, 6, 15, 24, 9, 30, 32, 11, 33, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 46, 20, 4, 30, 35, 12, 15, 24, 39, 25, 46, 5, 38, 9, 33, 31, 12, 34, 47, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 43, 32, 12, 13, 12, 15, 12, 48, 34, 39, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 9, 36, 4, 22, 32, 12, 13, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 16, 11, 5, 49, 23, 14, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 24, 4, 24, 35, 31, 19, 5, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 5, 5, 4, 23, 12, 15, 12, 48, 34, 40, 12, 46, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 21, 9, 42, 5, 5, 5, 5, 5, 27, 37, 5, 32, 5, 5, 19, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8730281947971279449/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_025456_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,9,36,15,4,26,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,46,20,4,30,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,43,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,24,4,24,35,31,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,5,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,21,9,42,5,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:54:56,356 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 02:54:56,356 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 02:55:07,773 INFO     Done. Execution time: 11.41675353050232 seconds
2023-01-31 02:55:07,773 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_025456_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_025456_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,9,36,15,4,26,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,46,20,4,30,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,43,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,24,4,24,35,31,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,5,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,21,9,42,5,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [46,9,36,15,4,26,31]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,46,20,4,30,35]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,43,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [8,24,4,24,35,31,19]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,5,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,5,21,9,42,5,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [46,9,36,15,4,26,31]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [46,9,36,15,4,26,31]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [46,9,36,15,4,26,31]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [46,9,36,15,4,26,31]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [46,9,36,15,4,26,31]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [46,9,36,15,4,26,31]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     46  |  0  |  [46,9,36,15,4,26,31]  |
    25  |                     R = R + chunk;  |     46  |   46  |     46  |  0  |  [46,9,36,15,4,26,31]  |
    29  |                         i = i + 1;  |         |   46  |     46  |  1  |  [46,9,36,15,4,26,31]  |
    30  |              resetPlaceHolder_1();  |         |   46  |     46  |  1  |  [46,9,36,15,4,26,31]  |
    36  |        chunk = arrayRead(text, i);  |         |   46  |      9  |  1  |  [46,9,36,15,4,26,31]  |
    39  |                     R = R + chunk;  |      9  |   55  |      9  |  1  |  [46,9,36,15,4,26,31]  |
    43  |                         i = i + 1;  |         |   55  |      9  |  2  |  [46,9,36,15,4,26,31]  |
    44  |              resetPlaceHolder_1();  |         |   55  |      9  |  2  |  [46,9,36,15,4,26,31]  |
    50  |        chunk = arrayRead(text, i);  |         |   55  |     36  |  2  |  [46,9,36,15,4,26,31]  |
    53  |                     R = R + chunk;  |     36  |   91  |     36  |  2  |  [46,9,36,15,4,26,31]  |
    57  |                         i = i + 1;  |         |   91  |     36  |  3  |  [46,9,36,15,4,26,31]  |
    58  |              resetPlaceHolder_1();  |         |   91  |     36  |  3  |  [46,9,36,15,4,26,31]  |
    64  |        chunk = arrayRead(text, i);  |         |   91  |     15  |  3  |  [46,9,36,15,4,26,31]  |
    67  |                     R = R + chunk;  |     15  |  106  |     15  |  3  |  [46,9,36,15,4,26,31]  |
    71  |                         i = i + 1;  |         |  106  |     15  |  4  |  [46,9,36,15,4,26,31]  |
    72  |              resetPlaceHolder_1();  |         |  106  |     15  |  4  |  [46,9,36,15,4,26,31]  |
    78  |        chunk = arrayRead(text, i);  |         |  106  |      4  |  4  |  [46,9,36,15,4,26,31]  |
    81  |                     R = R + chunk;  |      4  |  110  |      4  |  4  |  [46,9,36,15,4,26,31]  |
    85  |                         i = i + 1;  |         |  110  |      4  |  5  |  [46,9,36,15,4,26,31]  |
    86  |              resetPlaceHolder_1();  |         |  110  |      4  |  5  |  [46,9,36,15,4,26,31]  |
    92  |        chunk = arrayRead(text, i);  |         |  110  |     26  |  5  |  [46,9,36,15,4,26,31]  |
    95  |                     R = R + chunk;  |     26  |  136  |     26  |  5  |  [46,9,36,15,4,26,31]  |
    99  |                         i = i + 1;  |         |  136  |     26  |  6  |  [46,9,36,15,4,26,31]  |
   100  |              resetPlaceHolder_1();  |         |  136  |     26  |  6  |  [46,9,36,15,4,26,31]  |
   106  |        chunk = arrayRead(text, i);  |         |  136  |     31  |  6  |  [46,9,36,15,4,26,31]  |
   109  |                     R = R + chunk;  |     31  |  167  |     31  |  6  |  [46,9,36,15,4,26,31]  |
   113  |                         i = i + 1;  |         |  167  |     31  |  7  |  [46,9,36,15,4,26,31]  |
   114  |              resetPlaceHolder_1();  |         |  167  |     31  |  7  |  [46,9,36,15,4,26,31]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,53,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,67,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     46  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |      9  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     36  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     15  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      4  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     26  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     31  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 02:55:07,774 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:55:15,437 INFO     Done. Execution time: 7.663073778152466 seconds
2023-01-31 02:55:15,437 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0255-transparentAmortize-60s-mostPrecise/stac-raw-0131-0255-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.656s
user	0m16.814s
sys	0m2.153s

2023-01-31 02:55:15,437 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 02:55:15,437 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:56:21,388 INFO     Done. Execution time: 65.9502522945404 seconds
2023-01-31 02:56:21,388 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz9166058184740101877/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9166058184740101877/bin -o /tmp/qfuzz9166058184740101877/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9166058184740101877/bin
Found file /tmp/qfuzz9166058184740101877/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz9166058184740101877/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9166058184740101877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9166058184740101877/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9166058184740101877/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz9166058184740101877/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 124100 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 40, exec speed = 119785 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m119k to 124k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,491.00]
1; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [29.00,34.00,111.00]
3; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,111.00]
17; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16; 3; 5.00; [29.00,34.00,911.00]
30; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:32; 3; 5.00; [29.00,34.00,871.00]
31; /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:32; 3; 5.00; [29.00,34.00,611.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:32
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:32
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 37, 37, 48, 8, 12, 33, 11, 33, 43, 4, 37, 20, 14, 14, 5, 40, 8, 12, 24, 17, 12, 33, 11, 33, 43, 4, 37, 21, 14, 14, 5, 40, 8, 12, 38, 35, 34, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 24, 7, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 34, 9, 36, 4, 39, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 11, 41, 36, 28, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9166058184740101877/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_025621_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 30, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 43, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 45, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:56:21,388 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 02:56:21,388 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 02:56:27,962 INFO     Done. Execution time: 6.573808670043945 seconds
2023-01-31 02:56:27,963 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_025621_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_025621_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(30, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(43, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(45, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 30
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 43
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 45
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 5
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 5
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 24
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   30  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   30  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   30  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   30  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   30  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   30  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   30  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   30  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       31  |  1  |   30  |      2  |
    41  |                       R = R + sep;  |     30  |  31  |       31  |  1  |   30  |      2  |
    45  |             builder = builder + 1;  |         |  31  |       32  |  1  |   30  |      2  |
    48  |                         R = R + 1;  |      1  |  32  |       32  |  1  |   30  |      2  |
    52  |                         i = i + 1;  |         |  32  |       32  |  2  |   30  |      2  |
    53  |              resetPlaceHolder_1();  |         |  32  |       32  |  2  |   30  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     30  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     30  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     30  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 02:56:27,963 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:56:42,314 INFO     Done. Execution time: 14.351083993911743 seconds
2023-01-31 02:56:42,314 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0256-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0256-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.344s
user	0m37.193s
sys	0m5.711s

2023-01-31 02:56:42,315 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 02:56:42,315 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:57:48,408 INFO     Done. Execution time: 66.09269618988037 seconds
2023-01-31 02:57:48,408 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7062721039783065944/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7062721039783065944/bin -o /tmp/qfuzz7062721039783065944/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7062721039783065944/bin
Found file /tmp/qfuzz7062721039783065944/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7062721039783065944/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7062721039783065944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7062721039783065944/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7062721039783065944/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7062721039783065944/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 128383 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 34, exec speed = 122672 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m122k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7062721039783065944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_025748_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:57:48,408 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 02:57:48,408 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 02:57:54,695 INFO     Done. Execution time: 6.2870166301727295 seconds
2023-01-31 02:57:54,696 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_025748_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_025748_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 02:57:54,696 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:58:02,479 INFO     Done. Execution time: 7.783463716506958 seconds
2023-01-31 02:58:02,480 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0257-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0257-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.776s
user	0m16.581s
sys	0m2.386s

2023-01-31 02:58:02,480 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 02:58:02,480 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:59:08,531 INFO     Done. Execution time: 66.05114459991455 seconds
2023-01-31 02:59:08,532 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz1939177958342716591/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1939177958342716591/bin -o /tmp/qfuzz1939177958342716591/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1939177958342716591/bin
Found file /tmp/qfuzz1939177958342716591/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz1939177958342716591/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1939177958342716591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1939177958342716591/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1939177958342716591/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1939177958342716591/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 124744 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 130395 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m124k to 130k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
6; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
8; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
15; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
19; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
23; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
24; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
25; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
28; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
30; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
32; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
37; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
42; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
43; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
47; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
50; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
54; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
56; /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:2
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:8
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 5, 12, 5, 11, 30, 43, 17, 45, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 40, 5, 23, 5, 5, 5, 5, 5, 5, 46, 5, 10, 40, 21, 5, 5, 5, 5, 5, 5, 5, 40, 5, 48, 46, 5, 10, 45, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 6, 13, 24, 24, 4, 11, 24, 24, 24, 24, 24, 37, 24, 24, 24, 42, 24, 8, 37, 36, 5, 31, 24, 16, 24, 24, 46, 35, 45, 9, 33, 29, 50, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 25, 32, 11, 33, 35, 23, 14, 35, 38, 8, 20, 29, 42, 24, 31, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 9, 36, 21, 22, 9, 22, 22, 22, 15, 39, 30, 23, 14, 41, 33, 15, 39, 11, 33, 36, 23, 14, 42, 40, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 12, 37, 44, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 9, 36, 4, 22, 32, 12, 39, 44, 16, 12, 48, 34, 40, 12, 46, 6, 45, 9, 22, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 12, 45, 12, 48, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 9, 8, 4, 25, 9, 37, 24, 19, 26, 24, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 37, 4, 22, 32, 12, 13, 19, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 12, 36, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 32, 15, 35, 26, 26, 10, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 10, 32, 33, 10, 32, 34, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 16, 32, 8, 16, 50, 20, 6, 15, 8, 36, 19, 40, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 24, 34, 24, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 8, 50, 25, 34, 27, 48, 6, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 49, 9, 36, 4, 12, 9, 33, 29, 12, 34, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 5, 36, 4, 23, 14, 49, 38, 8, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 28, 4, 23, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 34, 41, 34, 21, 4, 15, 24, 20, 30, 32, 25, 33, 35, 8, 38, 8, 20, 30, 32, 25, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 9, 36, 4, 22, 32, 12, 5, 12, 15, 12, 48, 34, 40, 12, 46, 41, 20, 48, 33, 48, 40, 12, 46, 14, 5, 48, 33, 29, 18, 27, 26, 24, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 8, 34, 27, 34, 7, 24, 44, 36, 4, 41, 38, 41, 33, 12, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 35, 39, 12, 49, 6, 45, 9, 33, 29, 12, 20, 5, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 43, 33, 33, 10, 46, 9, 33, 21, 9, 6, 16, 38, 4, 21, 42, 21, 40, 31, 33, 27, 26, 21, 21, 33, 16, 13, 4, 47, 21, 21, 21, 42, 21, 38, 14, 48, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 20, 12, 11, 17, 22, 7, 4, 32, 35, 25, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 9, 9, 4, 7, 41, 45, 46, 28, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1939177958342716591/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_025908_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,5,12,5,11,30,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,40,5,23,5,5,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,6,13,24,24,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,25,32,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,9,36,21,22,9,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,12,45,12,48,12,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,9,8,4,25,9,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,37,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,32,15,35,26,26,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,10,32,33,10,32,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,16,32,8,16,50,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,24,34,24,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,8,50,25,34,27,48]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,49,9,36,4,12,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,5,36,4,23,14,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,28,4,23,24,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,28,28,28,28,28,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,8,34,27,34,7,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,43,33,33,10,46,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,20,12,11,17,22,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,9,9,4,7,41,45]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 02:59:08,532 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 02:59:08,532 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 02:59:16,758 INFO     Done. Execution time: 8.22588300704956 seconds
2023-01-31 02:59:16,759 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_025908_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_025908_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 36 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,5,12,5,11,30,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,40,5,23,5,5,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,6,13,24,24,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,25,32,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,9,36,21,22,9,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,12,45,12,48,12,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 36 (22.22%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,9,8,4,25,9,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,37,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,32,15,35,26,26,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,10,32,33,10,32,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,23])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,16,32,8,16,50,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 36 (44.44%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,24,34,24,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,8,50,25,34,27,48])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,49,9,36,4,12,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,5,36,4,23,14,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,28,4,23,24,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,28,28,28,28,28,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,8,34,27,34,7,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,43,33,33,10,46,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,20,12,11,17,22,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,9,9,4,7,41,45])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 36)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 36 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [22,5,12,5,11,30,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [26,40,5,23,5,5,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,6,13,24,24,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,25,32,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [32,9,36,21,22,9,22]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [38,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [6,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,12,45,12,48,12,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [48,9,8,4,25,9,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,37,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4,32,15,35,26,26,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [33,10,32,33,10,32,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,23]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [5,16,32,8,16,50,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [27,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [18,24,34,24,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [27,8,50,25,34,27,48]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,49,9,36,4,12,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,5,36,4,23,14,49]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,28,4,23,24,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [28,28,28,28,28,28,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [33,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [17,8,34,27,34,7,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [47,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [40,43,33,33,10,46,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [40,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [20,20,12,11,17,22,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4,9,9,4,7,41,45]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [31]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 32 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 1561):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [22,5,12,5,11,30,43]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [22,5,12,5,11,30,43]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [22,5,12,5,11,30,43]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [22,5,12,5,11,30,43]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [22,5,12,5,11,30,43]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [22,5,12,5,11,30,43]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     22  |  0  |      |  [22,5,12,5,11,30,43]  |
    24  |                         int j = 0;  |         |    0  |     22  |  0  |   0  |  [22,5,12,5,11,30,43]  |
    30  |                         R = R + 2;  |      2  |    2  |     22  |  0  |   0  |  [22,5,12,5,11,30,43]  |
    34  |                         j = j + 1;  |         |    2  |     22  |  0  |   1  |  [22,5,12,5,11,30,43]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     22  |  0  |   1  |  [22,5,12,5,11,30,43]  |
    41  |                         R = R + 2;  |      2  |    4  |     22  |  0  |   1  |  [22,5,12,5,11,30,43]  |
    45  |                         j = j + 1;  |         |    4  |     22  |  0  |   2  |  [22,5,12,5,11,30,43]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     22  |  0  |   2  |  [22,5,12,5,11,30,43]  |
    52  |                         R = R + 2;  |      2  |    6  |     22  |  0  |   2  |  [22,5,12,5,11,30,43]  |
    56  |                         j = j + 1;  |         |    6  |     22  |  0  |   3  |  [22,5,12,5,11,30,43]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     22  |  0  |   3  |  [22,5,12,5,11,30,43]  |
    63  |                         R = R + 2;  |      2  |    8  |     22  |  0  |   3  |  [22,5,12,5,11,30,43]  |
    67  |                         j = j + 1;  |         |    8  |     22  |  0  |   4  |  [22,5,12,5,11,30,43]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     22  |  0  |   4  |  [22,5,12,5,11,30,43]  |
    74  |                         R = R + 2;  |      2  |   10  |     22  |  0  |   4  |  [22,5,12,5,11,30,43]  |
    78  |                         j = j + 1;  |         |   10  |     22  |  0  |   5  |  [22,5,12,5,11,30,43]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     22  |  0  |   5  |  [22,5,12,5,11,30,43]  |
    85  |                         R = R + 2;  |      2  |   12  |     22  |  0  |   5  |  [22,5,12,5,11,30,43]  |
    89  |                         j = j + 1;  |         |   12  |     22  |  0  |   6  |  [22,5,12,5,11,30,43]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     22  |  0  |   6  |  [22,5,12,5,11,30,43]  |
    96  |                         R = R + 2;  |      2  |   14  |     22  |  0  |   6  |  [22,5,12,5,11,30,43]  |
   100  |                         j = j + 1;  |         |   14  |     22  |  0  |   7  |  [22,5,12,5,11,30,43]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     22  |  0  |   7  |  [22,5,12,5,11,30,43]  |
   107  |                         R = R + 2;  |      2  |   16  |     22  |  0  |   7  |  [22,5,12,5,11,30,43]  |
   111  |                         j = j + 1;  |         |   16  |     22  |  0  |   8  |  [22,5,12,5,11,30,43]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     22  |  0  |   8  |  [22,5,12,5,11,30,43]  |
   118  |                         R = R + 2;  |      2  |   18  |     22  |  0  |   8  |  [22,5,12,5,11,30,43]  |
   122  |                         j = j + 1;  |         |   18  |     22  |  0  |   9  |  [22,5,12,5,11,30,43]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     22  |  0  |   9  |  [22,5,12,5,11,30,43]  |
   129  |                         R = R + 2;  |      2  |   20  |     22  |  0  |   9  |  [22,5,12,5,11,30,43]  |
   133  |                         j = j + 1;  |         |   20  |     22  |  0  |  10  |  [22,5,12,5,11,30,43]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     22  |  0  |  10  |  [22,5,12,5,11,30,43]  |
   140  |                         R = R + 2;  |      2  |   22  |     22  |  0  |  10  |  [22,5,12,5,11,30,43]  |
   144  |                         j = j + 1;  |         |   22  |     22  |  0  |  11  |  [22,5,12,5,11,30,43]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     22  |  0  |  11  |  [22,5,12,5,11,30,43]  |
   151  |                         R = R + 2;  |      2  |   24  |     22  |  0  |  11  |  [22,5,12,5,11,30,43]  |
   155  |                         j = j + 1;  |         |   24  |     22  |  0  |  12  |  [22,5,12,5,11,30,43]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     22  |  0  |  12  |  [22,5,12,5,11,30,43]  |
   162  |                         R = R + 2;  |      2  |   26  |     22  |  0  |  12  |  [22,5,12,5,11,30,43]  |
   166  |                         j = j + 1;  |         |   26  |     22  |  0  |  13  |  [22,5,12,5,11,30,43]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     22  |  0  |  13  |  [22,5,12,5,11,30,43]  |
   173  |                         R = R + 2;  |      2  |   28  |     22  |  0  |  13  |  [22,5,12,5,11,30,43]  |
   177  |                         j = j + 1;  |         |   28  |     22  |  0  |  14  |  [22,5,12,5,11,30,43]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     22  |  0  |  14  |  [22,5,12,5,11,30,43]  |
   184  |                         R = R + 2;  |      2  |   30  |     22  |  0  |  14  |  [22,5,12,5,11,30,43]  |
   188  |                         j = j + 1;  |         |   30  |     22  |  0  |  15  |  [22,5,12,5,11,30,43]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     22  |  0  |  15  |  [22,5,12,5,11,30,43]  |
   195  |                         R = R + 2;  |      2  |   32  |     22  |  0  |  15  |  [22,5,12,5,11,30,43]  |
   199  |                         j = j + 1;  |         |   32  |     22  |  0  |  16  |  [22,5,12,5,11,30,43]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     22  |  0  |  16  |  [22,5,12,5,11,30,43]  |
   206  |                         R = R + 2;  |      2  |   34  |     22  |  0  |  16  |  [22,5,12,5,11,30,43]  |
   210  |                         j = j + 1;  |         |   34  |     22  |  0  |  17  |  [22,5,12,5,11,30,43]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     22  |  0  |  17  |  [22,5,12,5,11,30,43]  |
   217  |                         R = R + 2;  |      2  |   36  |     22  |  0  |  17  |  [22,5,12,5,11,30,43]  |
   221  |                         j = j + 1;  |         |   36  |     22  |  0  |  18  |  [22,5,12,5,11,30,43]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     22  |  0  |  18  |  [22,5,12,5,11,30,43]  |
   228  |                         R = R + 2;  |      2  |   38  |     22  |  0  |  18  |  [22,5,12,5,11,30,43]  |
   232  |                         j = j + 1;  |         |   38  |     22  |  0  |  19  |  [22,5,12,5,11,30,43]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     22  |  0  |  19  |  [22,5,12,5,11,30,43]  |
   239  |                         R = R + 2;  |      2  |   40  |     22  |  0  |  19  |  [22,5,12,5,11,30,43]  |
   243  |                         j = j + 1;  |         |   40  |     22  |  0  |  20  |  [22,5,12,5,11,30,43]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     22  |  0  |  20  |  [22,5,12,5,11,30,43]  |
   250  |                         R = R + 2;  |      2  |   42  |     22  |  0  |  20  |  [22,5,12,5,11,30,43]  |
   254  |                         j = j + 1;  |         |   42  |     22  |  0  |  21  |  [22,5,12,5,11,30,43]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     22  |  0  |  21  |  [22,5,12,5,11,30,43]  |
   261  |                         R = R + 2;  |      2  |   44  |     22  |  0  |  21  |  [22,5,12,5,11,30,43]  |
   265  |                         j = j + 1;  |         |   44  |     22  |  0  |  22  |  [22,5,12,5,11,30,43]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     22  |  0  |  22  |  [22,5,12,5,11,30,43]  |
   272  |                         R = R + 1;  |      1  |   45  |     22  |  0  |  22  |  [22,5,12,5,11,30,43]  |
   276  |                         i = i + 1;  |         |   45  |     22  |  1  |  22  |  [22,5,12,5,11,30,43]  |
   277  |              resetPlaceHolder_1();  |         |   45  |     22  |  1  |  22  |  [22,5,12,5,11,30,43]  |
   283  |      entry = arrayRead(sorted, i);  |         |   45  |      5  |  1  |  22  |  [22,5,12,5,11,30,43]  |
   285  |                         int j = 0;  |         |   45  |      5  |  1  |   0  |  [22,5,12,5,11,30,43]  |
   291  |                         R = R + 2;  |      2  |   47  |      5  |  1  |   0  |  [22,5,12,5,11,30,43]  |
   295  |                         j = j + 1;  |         |   47  |      5  |  1  |   1  |  [22,5,12,5,11,30,43]  |
   296  |              resetPlaceHolder_2();  |         |   47  |      5  |  1  |   1  |  [22,5,12,5,11,30,43]  |
   302  |                         R = R + 2;  |      2  |   49  |      5  |  1  |   1  |  [22,5,12,5,11,30,43]  |
   306  |                         j = j + 1;  |         |   49  |      5  |  1  |   2  |  [22,5,12,5,11,30,43]  |
   307  |              resetPlaceHolder_2();  |         |   49  |      5  |  1  |   2  |  [22,5,12,5,11,30,43]  |
   313  |                         R = R + 2;  |      2  |   51  |      5  |  1  |   2  |  [22,5,12,5,11,30,43]  |
   317  |                         j = j + 1;  |         |   51  |      5  |  1  |   3  |  [22,5,12,5,11,30,43]  |
   318  |              resetPlaceHolder_2();  |         |   51  |      5  |  1  |   3  |  [22,5,12,5,11,30,43]  |
   324  |                         R = R + 2;  |      2  |   53  |      5  |  1  |   3  |  [22,5,12,5,11,30,43]  |
   328  |                         j = j + 1;  |         |   53  |      5  |  1  |   4  |  [22,5,12,5,11,30,43]  |
   329  |              resetPlaceHolder_2();  |         |   53  |      5  |  1  |   4  |  [22,5,12,5,11,30,43]  |
   335  |                         R = R + 2;  |      2  |   55  |      5  |  1  |   4  |  [22,5,12,5,11,30,43]  |
   339  |                         j = j + 1;  |         |   55  |      5  |  1  |   5  |  [22,5,12,5,11,30,43]  |
   340  |              resetPlaceHolder_2();  |         |   55  |      5  |  1  |   5  |  [22,5,12,5,11,30,43]  |
   346  |                         R = R + 1;  |      1  |   56  |      5  |  1  |   5  |  [22,5,12,5,11,30,43]  |
   350  |                         i = i + 1;  |         |   56  |      5  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   351  |              resetPlaceHolder_1();  |         |   56  |      5  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   357  |      entry = arrayRead(sorted, i);  |         |   56  |     12  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   359  |                         int j = 0;  |         |   56  |     12  |  2  |   0  |  [22,5,12,5,11,30,43]  |
   365  |                         R = R + 2;  |      2  |   58  |     12  |  2  |   0  |  [22,5,12,5,11,30,43]  |
   369  |                         j = j + 1;  |         |   58  |     12  |  2  |   1  |  [22,5,12,5,11,30,43]  |
   370  |              resetPlaceHolder_2();  |         |   58  |     12  |  2  |   1  |  [22,5,12,5,11,30,43]  |
   376  |                         R = R + 2;  |      2  |   60  |     12  |  2  |   1  |  [22,5,12,5,11,30,43]  |
   380  |                         j = j + 1;  |         |   60  |     12  |  2  |   2  |  [22,5,12,5,11,30,43]  |
   381  |              resetPlaceHolder_2();  |         |   60  |     12  |  2  |   2  |  [22,5,12,5,11,30,43]  |
   387  |                         R = R + 2;  |      2  |   62  |     12  |  2  |   2  |  [22,5,12,5,11,30,43]  |
   391  |                         j = j + 1;  |         |   62  |     12  |  2  |   3  |  [22,5,12,5,11,30,43]  |
   392  |              resetPlaceHolder_2();  |         |   62  |     12  |  2  |   3  |  [22,5,12,5,11,30,43]  |
   398  |                         R = R + 2;  |      2  |   64  |     12  |  2  |   3  |  [22,5,12,5,11,30,43]  |
   402  |                         j = j + 1;  |         |   64  |     12  |  2  |   4  |  [22,5,12,5,11,30,43]  |
   403  |              resetPlaceHolder_2();  |         |   64  |     12  |  2  |   4  |  [22,5,12,5,11,30,43]  |
   409  |                         R = R + 2;  |      2  |   66  |     12  |  2  |   4  |  [22,5,12,5,11,30,43]  |
   413  |                         j = j + 1;  |         |   66  |     12  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   414  |              resetPlaceHolder_2();  |         |   66  |     12  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   420  |                         R = R + 2;  |      2  |   68  |     12  |  2  |   5  |  [22,5,12,5,11,30,43]  |
   424  |                         j = j + 1;  |         |   68  |     12  |  2  |   6  |  [22,5,12,5,11,30,43]  |
   425  |              resetPlaceHolder_2();  |         |   68  |     12  |  2  |   6  |  [22,5,12,5,11,30,43]  |
   431  |                         R = R + 2;  |      2  |   70  |     12  |  2  |   6  |  [22,5,12,5,11,30,43]  |
   435  |                         j = j + 1;  |         |   70  |     12  |  2  |   7  |  [22,5,12,5,11,30,43]  |
   436  |              resetPlaceHolder_2();  |         |   70  |     12  |  2  |   7  |  [22,5,12,5,11,30,43]  |
   442  |                         R = R + 2;  |      2  |   72  |     12  |  2  |   7  |  [22,5,12,5,11,30,43]  |
   446  |                         j = j + 1;  |         |   72  |     12  |  2  |   8  |  [22,5,12,5,11,30,43]  |
   447  |              resetPlaceHolder_2();  |         |   72  |     12  |  2  |   8  |  [22,5,12,5,11,30,43]  |
   453  |                         R = R + 2;  |      2  |   74  |     12  |  2  |   8  |  [22,5,12,5,11,30,43]  |
   457  |                         j = j + 1;  |         |   74  |     12  |  2  |   9  |  [22,5,12,5,11,30,43]  |
   458  |              resetPlaceHolder_2();  |         |   74  |     12  |  2  |   9  |  [22,5,12,5,11,30,43]  |
   464  |                         R = R + 2;  |      2  |   76  |     12  |  2  |   9  |  [22,5,12,5,11,30,43]  |
   468  |                         j = j + 1;  |         |   76  |     12  |  2  |  10  |  [22,5,12,5,11,30,43]  |
   469  |              resetPlaceHolder_2();  |         |   76  |     12  |  2  |  10  |  [22,5,12,5,11,30,43]  |
   475  |                         R = R + 2;  |      2  |   78  |     12  |  2  |  10  |  [22,5,12,5,11,30,43]  |
   479  |                         j = j + 1;  |         |   78  |     12  |  2  |  11  |  [22,5,12,5,11,30,43]  |
   480  |              resetPlaceHolder_2();  |         |   78  |     12  |  2  |  11  |  [22,5,12,5,11,30,43]  |
   486  |                         R = R + 2;  |      2  |   80  |     12  |  2  |  11  |  [22,5,12,5,11,30,43]  |
   490  |                         j = j + 1;  |         |   80  |     12  |  2  |  12  |  [22,5,12,5,11,30,43]  |
   491  |              resetPlaceHolder_2();  |         |   80  |     12  |  2  |  12  |  [22,5,12,5,11,30,43]  |
   497  |                         R = R + 1;  |      1  |   81  |     12  |  2  |  12  |  [22,5,12,5,11,30,43]  |
   501  |                         i = i + 1;  |         |   81  |     12  |  3  |  12  |  [22,5,12,5,11,30,43]  |
   502  |              resetPlaceHolder_1();  |         |   81  |     12  |  3  |  12  |  [22,5,12,5,11,30,43]  |
   508  |      entry = arrayRead(sorted, i);  |         |   81  |      5  |  3  |  12  |  [22,5,12,5,11,30,43]  |
   510  |                         int j = 0;  |         |   81  |      5  |  3  |   0  |  [22,5,12,5,11,30,43]  |
   516  |                         R = R + 2;  |      2  |   83  |      5  |  3  |   0  |  [22,5,12,5,11,30,43]  |
   520  |                         j = j + 1;  |         |   83  |      5  |  3  |   1  |  [22,5,12,5,11,30,43]  |
   521  |              resetPlaceHolder_2();  |         |   83  |      5  |  3  |   1  |  [22,5,12,5,11,30,43]  |
   527  |                         R = R + 2;  |      2  |   85  |      5  |  3  |   1  |  [22,5,12,5,11,30,43]  |
   531  |                         j = j + 1;  |         |   85  |      5  |  3  |   2  |  [22,5,12,5,11,30,43]  |
   532  |              resetPlaceHolder_2();  |         |   85  |      5  |  3  |   2  |  [22,5,12,5,11,30,43]  |
   538  |                         R = R + 2;  |      2  |   87  |      5  |  3  |   2  |  [22,5,12,5,11,30,43]  |
   542  |                         j = j + 1;  |         |   87  |      5  |  3  |   3  |  [22,5,12,5,11,30,43]  |
   543  |              resetPlaceHolder_2();  |         |   87  |      5  |  3  |   3  |  [22,5,12,5,11,30,43]  |
   549  |                         R = R + 2;  |      2  |   89  |      5  |  3  |   3  |  [22,5,12,5,11,30,43]  |
   553  |                         j = j + 1;  |         |   89  |      5  |  3  |   4  |  [22,5,12,5,11,30,43]  |
   554  |              resetPlaceHolder_2();  |         |   89  |      5  |  3  |   4  |  [22,5,12,5,11,30,43]  |
   560  |                         R = R + 2;  |      2  |   91  |      5  |  3  |   4  |  [22,5,12,5,11,30,43]  |
   564  |                         j = j + 1;  |         |   91  |      5  |  3  |   5  |  [22,5,12,5,11,30,43]  |
   565  |              resetPlaceHolder_2();  |         |   91  |      5  |  3  |   5  |  [22,5,12,5,11,30,43]  |
   571  |                         R = R + 1;  |      1  |   92  |      5  |  3  |   5  |  [22,5,12,5,11,30,43]  |
   575  |                         i = i + 1;  |         |   92  |      5  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   576  |              resetPlaceHolder_1();  |         |   92  |      5  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   582  |      entry = arrayRead(sorted, i);  |         |   92  |     11  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   584  |                         int j = 0;  |         |   92  |     11  |  4  |   0  |  [22,5,12,5,11,30,43]  |
   590  |                         R = R + 2;  |      2  |   94  |     11  |  4  |   0  |  [22,5,12,5,11,30,43]  |
   594  |                         j = j + 1;  |         |   94  |     11  |  4  |   1  |  [22,5,12,5,11,30,43]  |
   595  |              resetPlaceHolder_2();  |         |   94  |     11  |  4  |   1  |  [22,5,12,5,11,30,43]  |
   601  |                         R = R + 2;  |      2  |   96  |     11  |  4  |   1  |  [22,5,12,5,11,30,43]  |
   605  |                         j = j + 1;  |         |   96  |     11  |  4  |   2  |  [22,5,12,5,11,30,43]  |
   606  |              resetPlaceHolder_2();  |         |   96  |     11  |  4  |   2  |  [22,5,12,5,11,30,43]  |
   612  |                         R = R + 2;  |      2  |   98  |     11  |  4  |   2  |  [22,5,12,5,11,30,43]  |
   616  |                         j = j + 1;  |         |   98  |     11  |  4  |   3  |  [22,5,12,5,11,30,43]  |
   617  |              resetPlaceHolder_2();  |         |   98  |     11  |  4  |   3  |  [22,5,12,5,11,30,43]  |
   623  |                         R = R + 2;  |      2  |  100  |     11  |  4  |   3  |  [22,5,12,5,11,30,43]  |
   627  |                         j = j + 1;  |         |  100  |     11  |  4  |   4  |  [22,5,12,5,11,30,43]  |
   628  |              resetPlaceHolder_2();  |         |  100  |     11  |  4  |   4  |  [22,5,12,5,11,30,43]  |
   634  |                         R = R + 2;  |      2  |  102  |     11  |  4  |   4  |  [22,5,12,5,11,30,43]  |
   638  |                         j = j + 1;  |         |  102  |     11  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   639  |              resetPlaceHolder_2();  |         |  102  |     11  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   645  |                         R = R + 2;  |      2  |  104  |     11  |  4  |   5  |  [22,5,12,5,11,30,43]  |
   649  |                         j = j + 1;  |         |  104  |     11  |  4  |   6  |  [22,5,12,5,11,30,43]  |
   650  |              resetPlaceHolder_2();  |         |  104  |     11  |  4  |   6  |  [22,5,12,5,11,30,43]  |
   656  |                         R = R + 2;  |      2  |  106  |     11  |  4  |   6  |  [22,5,12,5,11,30,43]  |
   660  |                         j = j + 1;  |         |  106  |     11  |  4  |   7  |  [22,5,12,5,11,30,43]  |
   661  |              resetPlaceHolder_2();  |         |  106  |     11  |  4  |   7  |  [22,5,12,5,11,30,43]  |
   667  |                         R = R + 2;  |      2  |  108  |     11  |  4  |   7  |  [22,5,12,5,11,30,43]  |
   671  |                         j = j + 1;  |         |  108  |     11  |  4  |   8  |  [22,5,12,5,11,30,43]  |
   672  |              resetPlaceHolder_2();  |         |  108  |     11  |  4  |   8  |  [22,5,12,5,11,30,43]  |
   678  |                         R = R + 2;  |      2  |  110  |     11  |  4  |   8  |  [22,5,12,5,11,30,43]  |
   682  |                         j = j + 1;  |         |  110  |     11  |  4  |   9  |  [22,5,12,5,11,30,43]  |
   683  |              resetPlaceHolder_2();  |         |  110  |     11  |  4  |   9  |  [22,5,12,5,11,30,43]  |
   689  |                         R = R + 2;  |      2  |  112  |     11  |  4  |   9  |  [22,5,12,5,11,30,43]  |
   693  |                         j = j + 1;  |         |  112  |     11  |  4  |  10  |  [22,5,12,5,11,30,43]  |
   694  |              resetPlaceHolder_2();  |         |  112  |     11  |  4  |  10  |  [22,5,12,5,11,30,43]  |
   700  |                         R = R + 2;  |      2  |  114  |     11  |  4  |  10  |  [22,5,12,5,11,30,43]  |
   704  |                         j = j + 1;  |         |  114  |     11  |  4  |  11  |  [22,5,12,5,11,30,43]  |
   705  |              resetPlaceHolder_2();  |         |  114  |     11  |  4  |  11  |  [22,5,12,5,11,30,43]  |
   711  |                         R = R + 1;  |      1  |  115  |     11  |  4  |  11  |  [22,5,12,5,11,30,43]  |
   715  |                         i = i + 1;  |         |  115  |     11  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   716  |              resetPlaceHolder_1();  |         |  115  |     11  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   722  |      entry = arrayRead(sorted, i);  |         |  115  |     30  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   724  |                         int j = 0;  |         |  115  |     30  |  5  |   0  |  [22,5,12,5,11,30,43]  |
   730  |                         R = R + 2;  |      2  |  117  |     30  |  5  |   0  |  [22,5,12,5,11,30,43]  |
   734  |                         j = j + 1;  |         |  117  |     30  |  5  |   1  |  [22,5,12,5,11,30,43]  |
   735  |              resetPlaceHolder_2();  |         |  117  |     30  |  5  |   1  |  [22,5,12,5,11,30,43]  |
   741  |                         R = R + 2;  |      2  |  119  |     30  |  5  |   1  |  [22,5,12,5,11,30,43]  |
   745  |                         j = j + 1;  |         |  119  |     30  |  5  |   2  |  [22,5,12,5,11,30,43]  |
   746  |              resetPlaceHolder_2();  |         |  119  |     30  |  5  |   2  |  [22,5,12,5,11,30,43]  |
   752  |                         R = R + 2;  |      2  |  121  |     30  |  5  |   2  |  [22,5,12,5,11,30,43]  |
   756  |                         j = j + 1;  |         |  121  |     30  |  5  |   3  |  [22,5,12,5,11,30,43]  |
   757  |              resetPlaceHolder_2();  |         |  121  |     30  |  5  |   3  |  [22,5,12,5,11,30,43]  |
   763  |                         R = R + 2;  |      2  |  123  |     30  |  5  |   3  |  [22,5,12,5,11,30,43]  |
   767  |                         j = j + 1;  |         |  123  |     30  |  5  |   4  |  [22,5,12,5,11,30,43]  |
   768  |              resetPlaceHolder_2();  |         |  123  |     30  |  5  |   4  |  [22,5,12,5,11,30,43]  |
   774  |                         R = R + 2;  |      2  |  125  |     30  |  5  |   4  |  [22,5,12,5,11,30,43]  |
   778  |                         j = j + 1;  |         |  125  |     30  |  5  |   5  |  [22,5,12,5,11,30,43]  |
   779  |              resetPlaceHolder_2();  |         |  125  |     30  |  5  |   5  |  [22,5,12,5,11,30,43]  |
   785  |                         R = R + 2;  |      2  |  127  |     30  |  5  |   5  |  [22,5,12,5,11,30,43]  |
   789  |                         j = j + 1;  |         |  127  |     30  |  5  |   6  |  [22,5,12,5,11,30,43]  |
   790  |              resetPlaceHolder_2();  |         |  127  |     30  |  5  |   6  |  [22,5,12,5,11,30,43]  |
   796  |                         R = R + 2;  |      2  |  129  |     30  |  5  |   6  |  [22,5,12,5,11,30,43]  |
   800  |                         j = j + 1;  |         |  129  |     30  |  5  |   7  |  [22,5,12,5,11,30,43]  |
   801  |              resetPlaceHolder_2();  |         |  129  |     30  |  5  |   7  |  [22,5,12,5,11,30,43]  |
   807  |                         R = R + 2;  |      2  |  131  |     30  |  5  |   7  |  [22,5,12,5,11,30,43]  |
   811  |                         j = j + 1;  |         |  131  |     30  |  5  |   8  |  [22,5,12,5,11,30,43]  |
   812  |              resetPlaceHolder_2();  |         |  131  |     30  |  5  |   8  |  [22,5,12,5,11,30,43]  |
   818  |                         R = R + 2;  |      2  |  133  |     30  |  5  |   8  |  [22,5,12,5,11,30,43]  |
   822  |                         j = j + 1;  |         |  133  |     30  |  5  |   9  |  [22,5,12,5,11,30,43]  |
   823  |              resetPlaceHolder_2();  |         |  133  |     30  |  5  |   9  |  [22,5,12,5,11,30,43]  |
   829  |                         R = R + 2;  |      2  |  135  |     30  |  5  |   9  |  [22,5,12,5,11,30,43]  |
   833  |                         j = j + 1;  |         |  135  |     30  |  5  |  10  |  [22,5,12,5,11,30,43]  |
   834  |              resetPlaceHolder_2();  |         |  135  |     30  |  5  |  10  |  [22,5,12,5,11,30,43]  |
   840  |                         R = R + 2;  |      2  |  137  |     30  |  5  |  10  |  [22,5,12,5,11,30,43]  |
   844  |                         j = j + 1;  |         |  137  |     30  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   845  |              resetPlaceHolder_2();  |         |  137  |     30  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   851  |                         R = R + 2;  |      2  |  139  |     30  |  5  |  11  |  [22,5,12,5,11,30,43]  |
   855  |                         j = j + 1;  |         |  139  |     30  |  5  |  12  |  [22,5,12,5,11,30,43]  |
   856  |              resetPlaceHolder_2();  |         |  139  |     30  |  5  |  12  |  [22,5,12,5,11,30,43]  |
   862  |                         R = R + 2;  |      2  |  141  |     30  |  5  |  12  |  [22,5,12,5,11,30,43]  |
   866  |                         j = j + 1;  |         |  141  |     30  |  5  |  13  |  [22,5,12,5,11,30,43]  |
   867  |              resetPlaceHolder_2();  |         |  141  |     30  |  5  |  13  |  [22,5,12,5,11,30,43]  |
   873  |                         R = R + 2;  |      2  |  143  |     30  |  5  |  13  |  [22,5,12,5,11,30,43]  |
   877  |                         j = j + 1;  |         |  143  |     30  |  5  |  14  |  [22,5,12,5,11,30,43]  |
   878  |              resetPlaceHolder_2();  |         |  143  |     30  |  5  |  14  |  [22,5,12,5,11,30,43]  |
   884  |                         R = R + 2;  |      2  |  145  |     30  |  5  |  14  |  [22,5,12,5,11,30,43]  |
   888  |                         j = j + 1;  |         |  145  |     30  |  5  |  15  |  [22,5,12,5,11,30,43]  |
   889  |              resetPlaceHolder_2();  |         |  145  |     30  |  5  |  15  |  [22,5,12,5,11,30,43]  |
   895  |                         R = R + 2;  |      2  |  147  |     30  |  5  |  15  |  [22,5,12,5,11,30,43]  |
   899  |                         j = j + 1;  |         |  147  |     30  |  5  |  16  |  [22,5,12,5,11,30,43]  |
   900  |              resetPlaceHolder_2();  |         |  147  |     30  |  5  |  16  |  [22,5,12,5,11,30,43]  |
   906  |                         R = R + 2;  |      2  |  149  |     30  |  5  |  16  |  [22,5,12,5,11,30,43]  |
   910  |                         j = j + 1;  |         |  149  |     30  |  5  |  17  |  [22,5,12,5,11,30,43]  |
   911  |              resetPlaceHolder_2();  |         |  149  |     30  |  5  |  17  |  [22,5,12,5,11,30,43]  |
   917  |                         R = R + 2;  |      2  |  151  |     30  |  5  |  17  |  [22,5,12,5,11,30,43]  |
   921  |                         j = j + 1;  |         |  151  |     30  |  5  |  18  |  [22,5,12,5,11,30,43]  |
   922  |              resetPlaceHolder_2();  |         |  151  |     30  |  5  |  18  |  [22,5,12,5,11,30,43]  |
   928  |                         R = R + 2;  |      2  |  153  |     30  |  5  |  18  |  [22,5,12,5,11,30,43]  |
   932  |                         j = j + 1;  |         |  153  |     30  |  5  |  19  |  [22,5,12,5,11,30,43]  |
   933  |              resetPlaceHolder_2();  |         |  153  |     30  |  5  |  19  |  [22,5,12,5,11,30,43]  |
   939  |                         R = R + 2;  |      2  |  155  |     30  |  5  |  19  |  [22,5,12,5,11,30,43]  |
   943  |                         j = j + 1;  |         |  155  |     30  |  5  |  20  |  [22,5,12,5,11,30,43]  |
   944  |              resetPlaceHolder_2();  |         |  155  |     30  |  5  |  20  |  [22,5,12,5,11,30,43]  |
   950  |                         R = R + 2;  |      2  |  157  |     30  |  5  |  20  |  [22,5,12,5,11,30,43]  |
   954  |                         j = j + 1;  |         |  157  |     30  |  5  |  21  |  [22,5,12,5,11,30,43]  |
   955  |              resetPlaceHolder_2();  |         |  157  |     30  |  5  |  21  |  [22,5,12,5,11,30,43]  |
   961  |                         R = R + 2;  |      2  |  159  |     30  |  5  |  21  |  [22,5,12,5,11,30,43]  |
   965  |                         j = j + 1;  |         |  159  |     30  |  5  |  22  |  [22,5,12,5,11,30,43]  |
   966  |              resetPlaceHolder_2();  |         |  159  |     30  |  5  |  22  |  [22,5,12,5,11,30,43]  |
   972  |                         R = R + 2;  |      2  |  161  |     30  |  5  |  22  |  [22,5,12,5,11,30,43]  |
   976  |                         j = j + 1;  |         |  161  |     30  |  5  |  23  |  [22,5,12,5,11,30,43]  |
   977  |              resetPlaceHolder_2();  |         |  161  |     30  |  5  |  23  |  [22,5,12,5,11,30,43]  |
   983  |                         R = R + 2;  |      2  |  163  |     30  |  5  |  23  |  [22,5,12,5,11,30,43]  |
   987  |                         j = j + 1;  |         |  163  |     30  |  5  |  24  |  [22,5,12,5,11,30,43]  |
   988  |              resetPlaceHolder_2();  |         |  163  |     30  |  5  |  24  |  [22,5,12,5,11,30,43]  |
   994  |                         R = R + 2;  |      2  |  165  |     30  |  5  |  24  |  [22,5,12,5,11,30,43]  |
   998  |                         j = j + 1;  |         |  165  |     30  |  5  |  25  |  [22,5,12,5,11,30,43]  |
   999  |              resetPlaceHolder_2();  |         |  165  |     30  |  5  |  25  |  [22,5,12,5,11,30,43]  |
  1005  |                         R = R + 2;  |      2  |  167  |     30  |  5  |  25  |  [22,5,12,5,11,30,43]  |
  1009  |                         j = j + 1;  |         |  167  |     30  |  5  |  26  |  [22,5,12,5,11,30,43]  |
  1010  |              resetPlaceHolder_2();  |         |  167  |     30  |  5  |  26  |  [22,5,12,5,11,30,43]  |
  1016  |                         R = R + 2;  |      2  |  169  |     30  |  5  |  26  |  [22,5,12,5,11,30,43]  |
  1020  |                         j = j + 1;  |         |  169  |     30  |  5  |  27  |  [22,5,12,5,11,30,43]  |
  1021  |              resetPlaceHolder_2();  |         |  169  |     30  |  5  |  27  |  [22,5,12,5,11,30,43]  |
  1027  |                         R = R + 2;  |      2  |  171  |     30  |  5  |  27  |  [22,5,12,5,11,30,43]  |
  1031  |                         j = j + 1;  |         |  171  |     30  |  5  |  28  |  [22,5,12,5,11,30,43]  |
  1032  |              resetPlaceHolder_2();  |         |  171  |     30  |  5  |  28  |  [22,5,12,5,11,30,43]  |
  1038  |                         R = R + 2;  |      2  |  173  |     30  |  5  |  28  |  [22,5,12,5,11,30,43]  |
  1042  |                         j = j + 1;  |         |  173  |     30  |  5  |  29  |  [22,5,12,5,11,30,43]  |
  1043  |              resetPlaceHolder_2();  |         |  173  |     30  |  5  |  29  |  [22,5,12,5,11,30,43]  |
  1049  |                         R = R + 2;  |      2  |  175  |     30  |  5  |  29  |  [22,5,12,5,11,30,43]  |
  1053  |                         j = j + 1;  |         |  175  |     30  |  5  |  30  |  [22,5,12,5,11,30,43]  |
  1054  |              resetPlaceHolder_2();  |         |  175  |     30  |  5  |  30  |  [22,5,12,5,11,30,43]  |
  1060  |                         R = R + 1;  |      1  |  176  |     30  |  5  |  30  |  [22,5,12,5,11,30,43]  |
  1064  |                         i = i + 1;  |         |  176  |     30  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1065  |              resetPlaceHolder_1();  |         |  176  |     30  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1071  |      entry = arrayRead(sorted, i);  |         |  176  |     43  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1073  |                         int j = 0;  |         |  176  |     43  |  6  |   0  |  [22,5,12,5,11,30,43]  |
  1079  |                         R = R + 2;  |      2  |  178  |     43  |  6  |   0  |  [22,5,12,5,11,30,43]  |
  1083  |                         j = j + 1;  |         |  178  |     43  |  6  |   1  |  [22,5,12,5,11,30,43]  |
  1084  |              resetPlaceHolder_2();  |         |  178  |     43  |  6  |   1  |  [22,5,12,5,11,30,43]  |
  1090  |                         R = R + 2;  |      2  |  180  |     43  |  6  |   1  |  [22,5,12,5,11,30,43]  |
  1094  |                         j = j + 1;  |         |  180  |     43  |  6  |   2  |  [22,5,12,5,11,30,43]  |
  1095  |              resetPlaceHolder_2();  |         |  180  |     43  |  6  |   2  |  [22,5,12,5,11,30,43]  |
  1101  |                         R = R + 2;  |      2  |  182  |     43  |  6  |   2  |  [22,5,12,5,11,30,43]  |
  1105  |                         j = j + 1;  |         |  182  |     43  |  6  |   3  |  [22,5,12,5,11,30,43]  |
  1106  |              resetPlaceHolder_2();  |         |  182  |     43  |  6  |   3  |  [22,5,12,5,11,30,43]  |
  1112  |                         R = R + 2;  |      2  |  184  |     43  |  6  |   3  |  [22,5,12,5,11,30,43]  |
  1116  |                         j = j + 1;  |         |  184  |     43  |  6  |   4  |  [22,5,12,5,11,30,43]  |
  1117  |              resetPlaceHolder_2();  |         |  184  |     43  |  6  |   4  |  [22,5,12,5,11,30,43]  |
  1123  |                         R = R + 2;  |      2  |  186  |     43  |  6  |   4  |  [22,5,12,5,11,30,43]  |
  1127  |                         j = j + 1;  |         |  186  |     43  |  6  |   5  |  [22,5,12,5,11,30,43]  |
  1128  |              resetPlaceHolder_2();  |         |  186  |     43  |  6  |   5  |  [22,5,12,5,11,30,43]  |
  1134  |                         R = R + 2;  |      2  |  188  |     43  |  6  |   5  |  [22,5,12,5,11,30,43]  |
  1138  |                         j = j + 1;  |         |  188  |     43  |  6  |   6  |  [22,5,12,5,11,30,43]  |
  1139  |              resetPlaceHolder_2();  |         |  188  |     43  |  6  |   6  |  [22,5,12,5,11,30,43]  |
  1145  |                         R = R + 2;  |      2  |  190  |     43  |  6  |   6  |  [22,5,12,5,11,30,43]  |
  1149  |                         j = j + 1;  |         |  190  |     43  |  6  |   7  |  [22,5,12,5,11,30,43]  |
  1150  |              resetPlaceHolder_2();  |         |  190  |     43  |  6  |   7  |  [22,5,12,5,11,30,43]  |
  1156  |                         R = R + 2;  |      2  |  192  |     43  |  6  |   7  |  [22,5,12,5,11,30,43]  |
  1160  |                         j = j + 1;  |         |  192  |     43  |  6  |   8  |  [22,5,12,5,11,30,43]  |
  1161  |              resetPlaceHolder_2();  |         |  192  |     43  |  6  |   8  |  [22,5,12,5,11,30,43]  |
  1167  |                         R = R + 2;  |      2  |  194  |     43  |  6  |   8  |  [22,5,12,5,11,30,43]  |
  1171  |                         j = j + 1;  |         |  194  |     43  |  6  |   9  |  [22,5,12,5,11,30,43]  |
  1172  |              resetPlaceHolder_2();  |         |  194  |     43  |  6  |   9  |  [22,5,12,5,11,30,43]  |
  1178  |                         R = R + 2;  |      2  |  196  |     43  |  6  |   9  |  [22,5,12,5,11,30,43]  |
  1182  |                         j = j + 1;  |         |  196  |     43  |  6  |  10  |  [22,5,12,5,11,30,43]  |
  1183  |              resetPlaceHolder_2();  |         |  196  |     43  |  6  |  10  |  [22,5,12,5,11,30,43]  |
  1189  |                         R = R + 2;  |      2  |  198  |     43  |  6  |  10  |  [22,5,12,5,11,30,43]  |
  1193  |                         j = j + 1;  |         |  198  |     43  |  6  |  11  |  [22,5,12,5,11,30,43]  |
  1194  |              resetPlaceHolder_2();  |         |  198  |     43  |  6  |  11  |  [22,5,12,5,11,30,43]  |
  1200  |                         R = R + 2;  |      2  |  200  |     43  |  6  |  11  |  [22,5,12,5,11,30,43]  |
  1204  |                         j = j + 1;  |         |  200  |     43  |  6  |  12  |  [22,5,12,5,11,30,43]  |
  1205  |              resetPlaceHolder_2();  |         |  200  |     43  |  6  |  12  |  [22,5,12,5,11,30,43]  |
  1211  |                         R = R + 2;  |      2  |  202  |     43  |  6  |  12  |  [22,5,12,5,11,30,43]  |
  1215  |                         j = j + 1;  |         |  202  |     43  |  6  |  13  |  [22,5,12,5,11,30,43]  |
  1216  |              resetPlaceHolder_2();  |         |  202  |     43  |  6  |  13  |  [22,5,12,5,11,30,43]  |
  1222  |                         R = R + 2;  |      2  |  204  |     43  |  6  |  13  |  [22,5,12,5,11,30,43]  |
  1226  |                         j = j + 1;  |         |  204  |     43  |  6  |  14  |  [22,5,12,5,11,30,43]  |
  1227  |              resetPlaceHolder_2();  |         |  204  |     43  |  6  |  14  |  [22,5,12,5,11,30,43]  |
  1233  |                         R = R + 2;  |      2  |  206  |     43  |  6  |  14  |  [22,5,12,5,11,30,43]  |
  1237  |                         j = j + 1;  |         |  206  |     43  |  6  |  15  |  [22,5,12,5,11,30,43]  |
  1238  |              resetPlaceHolder_2();  |         |  206  |     43  |  6  |  15  |  [22,5,12,5,11,30,43]  |
  1244  |                         R = R + 2;  |      2  |  208  |     43  |  6  |  15  |  [22,5,12,5,11,30,43]  |
  1248  |                         j = j + 1;  |         |  208  |     43  |  6  |  16  |  [22,5,12,5,11,30,43]  |
  1249  |              resetPlaceHolder_2();  |         |  208  |     43  |  6  |  16  |  [22,5,12,5,11,30,43]  |
  1255  |                         R = R + 2;  |      2  |  210  |     43  |  6  |  16  |  [22,5,12,5,11,30,43]  |
  1259  |                         j = j + 1;  |         |  210  |     43  |  6  |  17  |  [22,5,12,5,11,30,43]  |
  1260  |              resetPlaceHolder_2();  |         |  210  |     43  |  6  |  17  |  [22,5,12,5,11,30,43]  |
  1266  |                         R = R + 2;  |      2  |  212  |     43  |  6  |  17  |  [22,5,12,5,11,30,43]  |
  1270  |                         j = j + 1;  |         |  212  |     43  |  6  |  18  |  [22,5,12,5,11,30,43]  |
  1271  |              resetPlaceHolder_2();  |         |  212  |     43  |  6  |  18  |  [22,5,12,5,11,30,43]  |
  1277  |                         R = R + 2;  |      2  |  214  |     43  |  6  |  18  |  [22,5,12,5,11,30,43]  |
  1281  |                         j = j + 1;  |         |  214  |     43  |  6  |  19  |  [22,5,12,5,11,30,43]  |
  1282  |              resetPlaceHolder_2();  |         |  214  |     43  |  6  |  19  |  [22,5,12,5,11,30,43]  |
  1288  |                         R = R + 2;  |      2  |  216  |     43  |  6  |  19  |  [22,5,12,5,11,30,43]  |
  1292  |                         j = j + 1;  |         |  216  |     43  |  6  |  20  |  [22,5,12,5,11,30,43]  |
  1293  |              resetPlaceHolder_2();  |         |  216  |     43  |  6  |  20  |  [22,5,12,5,11,30,43]  |
  1299  |                         R = R + 2;  |      2  |  218  |     43  |  6  |  20  |  [22,5,12,5,11,30,43]  |
  1303  |                         j = j + 1;  |         |  218  |     43  |  6  |  21  |  [22,5,12,5,11,30,43]  |
  1304  |              resetPlaceHolder_2();  |         |  218  |     43  |  6  |  21  |  [22,5,12,5,11,30,43]  |
  1310  |                         R = R + 2;  |      2  |  220  |     43  |  6  |  21  |  [22,5,12,5,11,30,43]  |
  1314  |                         j = j + 1;  |         |  220  |     43  |  6  |  22  |  [22,5,12,5,11,30,43]  |
  1315  |              resetPlaceHolder_2();  |         |  220  |     43  |  6  |  22  |  [22,5,12,5,11,30,43]  |
  1321  |                         R = R + 2;  |      2  |  222  |     43  |  6  |  22  |  [22,5,12,5,11,30,43]  |
  1325  |                         j = j + 1;  |         |  222  |     43  |  6  |  23  |  [22,5,12,5,11,30,43]  |
  1326  |              resetPlaceHolder_2();  |         |  222  |     43  |  6  |  23  |  [22,5,12,5,11,30,43]  |
  1332  |                         R = R + 2;  |      2  |  224  |     43  |  6  |  23  |  [22,5,12,5,11,30,43]  |
  1336  |                         j = j + 1;  |         |  224  |     43  |  6  |  24  |  [22,5,12,5,11,30,43]  |
  1337  |              resetPlaceHolder_2();  |         |  224  |     43  |  6  |  24  |  [22,5,12,5,11,30,43]  |
  1343  |                         R = R + 2;  |      2  |  226  |     43  |  6  |  24  |  [22,5,12,5,11,30,43]  |
  1347  |                         j = j + 1;  |         |  226  |     43  |  6  |  25  |  [22,5,12,5,11,30,43]  |
  1348  |              resetPlaceHolder_2();  |         |  226  |     43  |  6  |  25  |  [22,5,12,5,11,30,43]  |
  1354  |                         R = R + 2;  |      2  |  228  |     43  |  6  |  25  |  [22,5,12,5,11,30,43]  |
  1358  |                         j = j + 1;  |         |  228  |     43  |  6  |  26  |  [22,5,12,5,11,30,43]  |
  1359  |              resetPlaceHolder_2();  |         |  228  |     43  |  6  |  26  |  [22,5,12,5,11,30,43]  |
  1365  |                         R = R + 2;  |      2  |  230  |     43  |  6  |  26  |  [22,5,12,5,11,30,43]  |
  1369  |                         j = j + 1;  |         |  230  |     43  |  6  |  27  |  [22,5,12,5,11,30,43]  |
  1370  |              resetPlaceHolder_2();  |         |  230  |     43  |  6  |  27  |  [22,5,12,5,11,30,43]  |
  1376  |                         R = R + 2;  |      2  |  232  |     43  |  6  |  27  |  [22,5,12,5,11,30,43]  |
  1380  |                         j = j + 1;  |         |  232  |     43  |  6  |  28  |  [22,5,12,5,11,30,43]  |
  1381  |              resetPlaceHolder_2();  |         |  232  |     43  |  6  |  28  |  [22,5,12,5,11,30,43]  |
  1387  |                         R = R + 2;  |      2  |  234  |     43  |  6  |  28  |  [22,5,12,5,11,30,43]  |
  1391  |                         j = j + 1;  |         |  234  |     43  |  6  |  29  |  [22,5,12,5,11,30,43]  |
  1392  |              resetPlaceHolder_2();  |         |  234  |     43  |  6  |  29  |  [22,5,12,5,11,30,43]  |
  1398  |                         R = R + 2;  |      2  |  236  |     43  |  6  |  29  |  [22,5,12,5,11,30,43]  |
  1402  |                         j = j + 1;  |         |  236  |     43  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1403  |              resetPlaceHolder_2();  |         |  236  |     43  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1409  |                         R = R + 2;  |      2  |  238  |     43  |  6  |  30  |  [22,5,12,5,11,30,43]  |
  1413  |                         j = j + 1;  |         |  238  |     43  |  6  |  31  |  [22,5,12,5,11,30,43]  |
  1414  |              resetPlaceHolder_2();  |         |  238  |     43  |  6  |  31  |  [22,5,12,5,11,30,43]  |
  1420  |                         R = R + 2;  |      2  |  240  |     43  |  6  |  31  |  [22,5,12,5,11,30,43]  |
  1424  |                         j = j + 1;  |         |  240  |     43  |  6  |  32  |  [22,5,12,5,11,30,43]  |
  1425  |              resetPlaceHolder_2();  |         |  240  |     43  |  6  |  32  |  [22,5,12,5,11,30,43]  |
  1431  |                         R = R + 2;  |      2  |  242  |     43  |  6  |  32  |  [22,5,12,5,11,30,43]  |
  1435  |                         j = j + 1;  |         |  242  |     43  |  6  |  33  |  [22,5,12,5,11,30,43]  |
  1436  |              resetPlaceHolder_2();  |         |  242  |     43  |  6  |  33  |  [22,5,12,5,11,30,43]  |
  1442  |                         R = R + 2;  |      2  |  244  |     43  |  6  |  33  |  [22,5,12,5,11,30,43]  |
  1446  |                         j = j + 1;  |         |  244  |     43  |  6  |  34  |  [22,5,12,5,11,30,43]  |
  1447  |              resetPlaceHolder_2();  |         |  244  |     43  |  6  |  34  |  [22,5,12,5,11,30,43]  |
  1453  |                         R = R + 2;  |      2  |  246  |     43  |  6  |  34  |  [22,5,12,5,11,30,43]  |
  1457  |                         j = j + 1;  |         |  246  |     43  |  6  |  35  |  [22,5,12,5,11,30,43]  |
  1458  |              resetPlaceHolder_2();  |         |  246  |     43  |  6  |  35  |  [22,5,12,5,11,30,43]  |
  1464  |                         R = R + 2;  |      2  |  248  |     43  |  6  |  35  |  [22,5,12,5,11,30,43]  |
  1468  |                         j = j + 1;  |         |  248  |     43  |  6  |  36  |  [22,5,12,5,11,30,43]  |
  1469  |              resetPlaceHolder_2();  |         |  248  |     43  |  6  |  36  |  [22,5,12,5,11,30,43]  |
  1475  |                         R = R + 2;  |      2  |  250  |     43  |  6  |  36  |  [22,5,12,5,11,30,43]  |
  1479  |                         j = j + 1;  |         |  250  |     43  |  6  |  37  |  [22,5,12,5,11,30,43]  |
  1480  |              resetPlaceHolder_2();  |         |  250  |     43  |  6  |  37  |  [22,5,12,5,11,30,43]  |
  1486  |                         R = R + 2;  |      2  |  252  |     43  |  6  |  37  |  [22,5,12,5,11,30,43]  |
  1490  |                         j = j + 1;  |         |  252  |     43  |  6  |  38  |  [22,5,12,5,11,30,43]  |
  1491  |              resetPlaceHolder_2();  |         |  252  |     43  |  6  |  38  |  [22,5,12,5,11,30,43]  |
  1497  |                         R = R + 2;  |      2  |  254  |     43  |  6  |  38  |  [22,5,12,5,11,30,43]  |
  1501  |                         j = j + 1;  |         |  254  |     43  |  6  |  39  |  [22,5,12,5,11,30,43]  |
  1502  |              resetPlaceHolder_2();  |         |  254  |     43  |  6  |  39  |  [22,5,12,5,11,30,43]  |
  1508  |                         R = R + 2;  |      2  |  256  |     43  |  6  |  39  |  [22,5,12,5,11,30,43]  |
  1512  |                         j = j + 1;  |         |  256  |     43  |  6  |  40  |  [22,5,12,5,11,30,43]  |
  1513  |              resetPlaceHolder_2();  |         |  256  |     43  |  6  |  40  |  [22,5,12,5,11,30,43]  |
  1519  |                         R = R + 2;  |      2  |  258  |     43  |  6  |  40  |  [22,5,12,5,11,30,43]  |
  1523  |                         j = j + 1;  |         |  258  |     43  |  6  |  41  |  [22,5,12,5,11,30,43]  |
  1524  |              resetPlaceHolder_2();  |         |  258  |     43  |  6  |  41  |  [22,5,12,5,11,30,43]  |
  1530  |                         R = R + 2;  |      2  |  260  |     43  |  6  |  41  |  [22,5,12,5,11,30,43]  |
  1534  |                         j = j + 1;  |         |  260  |     43  |  6  |  42  |  [22,5,12,5,11,30,43]  |
  1535  |              resetPlaceHolder_2();  |         |  260  |     43  |  6  |  42  |  [22,5,12,5,11,30,43]  |
  1541  |                         R = R + 2;  |      2  |  262  |     43  |  6  |  42  |  [22,5,12,5,11,30,43]  |
  1545  |                         j = j + 1;  |         |  262  |     43  |  6  |  43  |  [22,5,12,5,11,30,43]  |
  1546  |              resetPlaceHolder_2();  |         |  262  |     43  |  6  |  43  |  [22,5,12,5,11,30,43]  |
  1552  |                         R = R + 1;  |      1  |  263  |     43  |  6  |  43  |  [22,5,12,5,11,30,43]  |
  1556  |                         i = i + 1;  |         |  263  |     43  |  7  |  43  |  [22,5,12,5,11,30,43]  |
  1557  |              resetPlaceHolder_1();  |         |  263  |     43  |  7  |  43  |  [22,5,12,5,11,30,43]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 135 trace node indices: [645, 365, 1200, 1211, 1005, 730, 217, 994, 741, 873, 1486, 1497, 1310, 1233, 538, 1354, 1222, 829, 1475, 52, 1409, 184, 785, 917, 1398, 228, 261, 475, 376, 623, 634, 453, 774, 527, 74, 206, 678, 85, 1387, 1343, 1519, 1255, 302, 1123, 862, 1365, 1178, 1079, 1027, 324, 1541, 420, 884, 1016, 590, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 398, 1167, 906, 689, 601, 711, 291, 118, 313, 1332, 335, 1090, 1464, 1376, 387, 140, 700, 895, 1112, 983, 851, 431, 162, 1420, 1277, 1134, 516, 939, 1145, 1049, 63, 1156, 409, 1038, 840, 656, 571, 612, 497, 250, 1321, 1189, 1453, 961, 1508, 1101, 1244, 667, 763, 272, 346, 549, 1442, 151, 752, 950, 30, 818, 107, 239, 807, 195, 1288, 796, 928, 464, 1431, 1299, 442, 486, 560, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,291,302,313,324,335,346,365,376,387,398,409,420,431,442,453,464,475,486,497,516,527,538,549,560,571,590,601,612,623,634,645,656,667,678,689,700,711,730,741,752,763,774,785,796,807,818,829,840,851,862,873,884,895,906,917,928,939,950,961,972,983,994,1005,1016,1027,1038,1049,1060,1079,1090,1101,1112,1123,1134,1145,1156,1167,1178,1189,1200,1211,1222,1233,1244,1255,1266,1277,1288,1299,1310,1321,1332,1343,1354,1365,1376,1387,1398,1409,1420,1431,1442,1453,1464,1475,1486,1497,1508,1519,1530,1541,1552}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 1;  |      1  |                         0  |
   277  |  resetPlaceHolder_1();  |         |                            |
   291  |             R = R + 2;  |      2  |                         0  |
   296  |  resetPlaceHolder_2();  |         |                            |
   302  |             R = R + 2;  |      2  |                         0  |
   307  |  resetPlaceHolder_2();  |         |                            |
   313  |             R = R + 2;  |      2  |                         0  |
   318  |  resetPlaceHolder_2();  |         |                            |
   324  |             R = R + 2;  |      2  |                         0  |
   329  |  resetPlaceHolder_2();  |         |                            |
   335  |             R = R + 2;  |      2  |                         0  |
   340  |  resetPlaceHolder_2();  |         |                            |
   346  |             R = R + 1;  |      1  |                         0  |
   351  |  resetPlaceHolder_1();  |         |                            |
   365  |             R = R + 2;  |      2  |                         0  |
   370  |  resetPlaceHolder_2();  |         |                            |
   376  |             R = R + 2;  |      2  |                         0  |
   381  |  resetPlaceHolder_2();  |         |                            |
   387  |             R = R + 2;  |      2  |                         0  |
   392  |  resetPlaceHolder_2();  |         |                            |
   398  |             R = R + 2;  |      2  |                         0  |
   403  |  resetPlaceHolder_2();  |         |                            |
   409  |             R = R + 2;  |      2  |                         0  |
   414  |  resetPlaceHolder_2();  |         |                            |
   420  |             R = R + 2;  |      2  |                         0  |
   425  |  resetPlaceHolder_2();  |         |                            |
   431  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_2();  |         |                            |
   442  |             R = R + 2;  |      2  |                         0  |
   447  |  resetPlaceHolder_2();  |         |                            |
   453  |             R = R + 2;  |      2  |                         0  |
   458  |  resetPlaceHolder_2();  |         |                            |
   464  |             R = R + 2;  |      2  |                         0  |
   469  |  resetPlaceHolder_2();  |         |                            |
   475  |             R = R + 2;  |      2  |                         0  |
   480  |  resetPlaceHolder_2();  |         |                            |
   486  |             R = R + 2;  |      2  |                         0  |
   491  |  resetPlaceHolder_2();  |         |                            |
   497  |             R = R + 1;  |      1  |                         0  |
   502  |  resetPlaceHolder_1();  |         |                            |
   516  |             R = R + 2;  |      2  |                         0  |
   521  |  resetPlaceHolder_2();  |         |                            |
   527  |             R = R + 2;  |      2  |                         0  |
   532  |  resetPlaceHolder_2();  |         |                            |
   538  |             R = R + 2;  |      2  |                         0  |
   543  |  resetPlaceHolder_2();  |         |                            |
   549  |             R = R + 2;  |      2  |                         0  |
   554  |  resetPlaceHolder_2();  |         |                            |
   560  |             R = R + 2;  |      2  |                         0  |
   565  |  resetPlaceHolder_2();  |         |                            |
   571  |             R = R + 1;  |      1  |                         0  |
   576  |  resetPlaceHolder_1();  |         |                            |
   590  |             R = R + 2;  |      2  |                         0  |
   595  |  resetPlaceHolder_2();  |         |                            |
   601  |             R = R + 2;  |      2  |                         0  |
   606  |  resetPlaceHolder_2();  |         |                            |
   612  |             R = R + 2;  |      2  |                         0  |
   617  |  resetPlaceHolder_2();  |         |                            |
   623  |             R = R + 2;  |      2  |                         0  |
   628  |  resetPlaceHolder_2();  |         |                            |
   634  |             R = R + 2;  |      2  |                         0  |
   639  |  resetPlaceHolder_2();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   650  |  resetPlaceHolder_2();  |         |                            |
   656  |             R = R + 2;  |      2  |                         0  |
   661  |  resetPlaceHolder_2();  |         |                            |
   667  |             R = R + 2;  |      2  |                         0  |
   672  |  resetPlaceHolder_2();  |         |                            |
   678  |             R = R + 2;  |      2  |                         0  |
   683  |  resetPlaceHolder_2();  |         |                            |
   689  |             R = R + 2;  |      2  |                         0  |
   694  |  resetPlaceHolder_2();  |         |                            |
   700  |             R = R + 2;  |      2  |                         0  |
   705  |  resetPlaceHolder_2();  |         |                            |
   711  |             R = R + 1;  |      1  |                         0  |
   716  |  resetPlaceHolder_1();  |         |                            |
   730  |             R = R + 2;  |      2  |                         0  |
   735  |  resetPlaceHolder_2();  |         |                            |
   741  |             R = R + 2;  |      2  |                         0  |
   746  |  resetPlaceHolder_2();  |         |                            |
   752  |             R = R + 2;  |      2  |                         0  |
   757  |  resetPlaceHolder_2();  |         |                            |
   763  |             R = R + 2;  |      2  |                         0  |
   768  |  resetPlaceHolder_2();  |         |                            |
   774  |             R = R + 2;  |      2  |                         0  |
   779  |  resetPlaceHolder_2();  |         |                            |
   785  |             R = R + 2;  |      2  |                         0  |
   790  |  resetPlaceHolder_2();  |         |                            |
   796  |             R = R + 2;  |      2  |                         0  |
   801  |  resetPlaceHolder_2();  |         |                            |
   807  |             R = R + 2;  |      2  |                         0  |
   812  |  resetPlaceHolder_2();  |         |                            |
   818  |             R = R + 2;  |      2  |                         0  |
   823  |  resetPlaceHolder_2();  |         |                            |
   829  |             R = R + 2;  |      2  |                         0  |
   834  |  resetPlaceHolder_2();  |         |                            |
   840  |             R = R + 2;  |      2  |                         0  |
   845  |  resetPlaceHolder_2();  |         |                            |
   851  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_2();  |         |                            |
   862  |             R = R + 2;  |      2  |                         0  |
   867  |  resetPlaceHolder_2();  |         |                            |
   873  |             R = R + 2;  |      2  |                         0  |
   878  |  resetPlaceHolder_2();  |         |                            |
   884  |             R = R + 2;  |      2  |                         0  |
   889  |  resetPlaceHolder_2();  |         |                            |
   895  |             R = R + 2;  |      2  |                         0  |
   900  |  resetPlaceHolder_2();  |         |                            |
   906  |             R = R + 2;  |      2  |                         0  |
   911  |  resetPlaceHolder_2();  |         |                            |
   917  |             R = R + 2;  |      2  |                         0  |
   922  |  resetPlaceHolder_2();  |         |                            |
   928  |             R = R + 2;  |      2  |                         0  |
   933  |  resetPlaceHolder_2();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   944  |  resetPlaceHolder_2();  |         |                            |
   950  |             R = R + 2;  |      2  |                         0  |
   955  |  resetPlaceHolder_2();  |         |                            |
   961  |             R = R + 2;  |      2  |                         0  |
   966  |  resetPlaceHolder_2();  |         |                            |
   972  |             R = R + 2;  |      2  |                         0  |
   977  |  resetPlaceHolder_2();  |         |                            |
   983  |             R = R + 2;  |      2  |                         0  |
   988  |  resetPlaceHolder_2();  |         |                            |
   994  |             R = R + 2;  |      2  |                         0  |
   999  |  resetPlaceHolder_2();  |         |                            |
  1005  |             R = R + 2;  |      2  |                         0  |
  1010  |  resetPlaceHolder_2();  |         |                            |
  1016  |             R = R + 2;  |      2  |                         0  |
  1021  |  resetPlaceHolder_2();  |         |                            |
  1027  |             R = R + 2;  |      2  |                         0  |
  1032  |  resetPlaceHolder_2();  |         |                            |
  1038  |             R = R + 2;  |      2  |                         0  |
  1043  |  resetPlaceHolder_2();  |         |                            |
  1049  |             R = R + 2;  |      2  |                         0  |
  1054  |  resetPlaceHolder_2();  |         |                            |
  1060  |             R = R + 1;  |      1  |                         0  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1079  |             R = R + 2;  |      2  |                         0  |
  1084  |  resetPlaceHolder_2();  |         |                            |
  1090  |             R = R + 2;  |      2  |                         0  |
  1095  |  resetPlaceHolder_2();  |         |                            |
  1101  |             R = R + 2;  |      2  |                         0  |
  1106  |  resetPlaceHolder_2();  |         |                            |
  1112  |             R = R + 2;  |      2  |                         0  |
  1117  |  resetPlaceHolder_2();  |         |                            |
  1123  |             R = R + 2;  |      2  |                         0  |
  1128  |  resetPlaceHolder_2();  |         |                            |
  1134  |             R = R + 2;  |      2  |                         0  |
  1139  |  resetPlaceHolder_2();  |         |                            |
  1145  |             R = R + 2;  |      2  |                         0  |
  1150  |  resetPlaceHolder_2();  |         |                            |
  1156  |             R = R + 2;  |      2  |                         0  |
  1161  |  resetPlaceHolder_2();  |         |                            |
  1167  |             R = R + 2;  |      2  |                         0  |
  1172  |  resetPlaceHolder_2();  |         |                            |
  1178  |             R = R + 2;  |      2  |                         0  |
  1183  |  resetPlaceHolder_2();  |         |                            |
  1189  |             R = R + 2;  |      2  |                         0  |
  1194  |  resetPlaceHolder_2();  |         |                            |
  1200  |             R = R + 2;  |      2  |                         0  |
  1205  |  resetPlaceHolder_2();  |         |                            |
  1211  |             R = R + 2;  |      2  |                         0  |
  1216  |  resetPlaceHolder_2();  |         |                            |
  1222  |             R = R + 2;  |      2  |                         0  |
  1227  |  resetPlaceHolder_2();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1238  |  resetPlaceHolder_2();  |         |                            |
  1244  |             R = R + 2;  |      2  |                         0  |
  1249  |  resetPlaceHolder_2();  |         |                            |
  1255  |             R = R + 2;  |      2  |                         0  |
  1260  |  resetPlaceHolder_2();  |         |                            |
  1266  |             R = R + 2;  |      2  |                         0  |
  1271  |  resetPlaceHolder_2();  |         |                            |
  1277  |             R = R + 2;  |      2  |                         0  |
  1282  |  resetPlaceHolder_2();  |         |                            |
  1288  |             R = R + 2;  |      2  |                         0  |
  1293  |  resetPlaceHolder_2();  |         |                            |
  1299  |             R = R + 2;  |      2  |                         0  |
  1304  |  resetPlaceHolder_2();  |         |                            |
  1310  |             R = R + 2;  |      2  |                         0  |
  1315  |  resetPlaceHolder_2();  |         |                            |
  1321  |             R = R + 2;  |      2  |                         0  |
  1326  |  resetPlaceHolder_2();  |         |                            |
  1332  |             R = R + 2;  |      2  |                         0  |
  1337  |  resetPlaceHolder_2();  |         |                            |
  1343  |             R = R + 2;  |      2  |                         0  |
  1348  |  resetPlaceHolder_2();  |         |                            |
  1354  |             R = R + 2;  |      2  |                         0  |
  1359  |  resetPlaceHolder_2();  |         |                            |
  1365  |             R = R + 2;  |      2  |                         0  |
  1370  |  resetPlaceHolder_2();  |         |                            |
  1376  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_2();  |         |                            |
  1387  |             R = R + 2;  |      2  |                         0  |
  1392  |  resetPlaceHolder_2();  |         |                            |
  1398  |             R = R + 2;  |      2  |                         0  |
  1403  |  resetPlaceHolder_2();  |         |                            |
  1409  |             R = R + 2;  |      2  |                         0  |
  1414  |  resetPlaceHolder_2();  |         |                            |
  1420  |             R = R + 2;  |      2  |                         0  |
  1425  |  resetPlaceHolder_2();  |         |                            |
  1431  |             R = R + 2;  |      2  |                         0  |
  1436  |  resetPlaceHolder_2();  |         |                            |
  1442  |             R = R + 2;  |      2  |                         0  |
  1447  |  resetPlaceHolder_2();  |         |                            |
  1453  |             R = R + 2;  |      2  |                         0  |
  1458  |  resetPlaceHolder_2();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1469  |  resetPlaceHolder_2();  |         |                            |
  1475  |             R = R + 2;  |      2  |                         0  |
  1480  |  resetPlaceHolder_2();  |         |                            |
  1486  |             R = R + 2;  |      2  |                         0  |
  1491  |  resetPlaceHolder_2();  |         |                            |
  1497  |             R = R + 2;  |      2  |                         0  |
  1502  |  resetPlaceHolder_2();  |         |                            |
  1508  |             R = R + 2;  |      2  |                         0  |
  1513  |  resetPlaceHolder_2();  |         |                            |
  1519  |             R = R + 2;  |      2  |                         0  |
  1524  |  resetPlaceHolder_2();  |         |                            |
  1530  |             R = R + 2;  |      2  |                         0  |
  1535  |  resetPlaceHolder_2();  |         |                            |
  1541  |             R = R + 2;  |      2  |                         0  |
  1546  |  resetPlaceHolder_2();  |         |                            |
  1552  |             R = R + 1;  |      1  |                         0  |
  1557  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [4]  |
    10  |     return;  |         |  0  |     [4]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 02:59:16,759 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:59:26,817 INFO     Done. Execution time: 10.058203935623169 seconds
2023-01-31 02:59:26,818 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0259-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0259-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.052s
user	0m22.159s
sys	0m2.209s

2023-01-31 02:59:26,818 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 02:59:26,818 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 02:59:28,530 INFO     Done. Execution time: 1.711510181427002 seconds
2023-01-31 02:59:28,530 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 02:59:28,530 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 02:59:28,530 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 02:59:30,244 INFO     Done. Execution time: 1.7134227752685547 seconds
2023-01-31 02:59:30,244 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 02:59:30,244 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 02:59:31,201 INFO     Done. Execution time: 0.9569005966186523 seconds
2023-01-31 02:59:31,201 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.949s
user	0m1.590s
sys	0m0.099s

2023-01-31 02:59:31,202 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 02:59:31,202 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:00:37,406 INFO     Done. Execution time: 66.20389533042908 seconds
2023-01-31 03:00:37,406 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2102606140924824336/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2102606140924824336/bin -o /tmp/qfuzz2102606140924824336/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2102606140924824336/bin
Found file /tmp/qfuzz2102606140924824336/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2102606140924824336/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2102606140924824336/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2102606140924824336/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2102606140924824336/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2102606140924824336/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 119617 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 27, exec speed = 120590 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m119k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [53.00]
7; /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 4, 36, 4, 22, 29, 32, 30, 12, 13, 4, 25, 38, 46, 20, 29, 6, 45, 9, 44, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 4, 4, 4, 9, 22, 28, 11, 39, 20, 24, 24, 19, 4, 4, 9, 22, 28, 11, 20, 6, 13, 24, 14, 26, 19, 9, 26, 43, 28, 12, 4, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2102606140924824336/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_030037_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,36,4,22,29,32,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,9,22,28,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [22,20,16,28,37,18,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,36,4,22,32,12,13]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:00:37,406 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-31 03:00:37,407 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 03:00:43,878 INFO     Done. Execution time: 6.471259832382202 seconds
2023-01-31 03:00:43,878 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_030037_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_030037_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,36,4,22,29,32,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,9,22,28,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [22,20,16,28,37,18,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,36,4,22,32,12,13])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [4,4,4,9,22,28,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [4,36,4,22,29,32,30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [22,20,16,28,37,18,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [9,36,4,22,32,12,13]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                                                               
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |      stopIndex       |
---------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [4,4,4,9,22,28,11]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,9,22,28,11]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,9,22,28,11]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,9,22,28,11]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,9,22,28,11]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [4,4,4,9,22,28,11]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [4,4,4,9,22,28,11]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [4,4,4,9,22,28,11]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [4,4,4,9,22,28,11]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,9,22,28,11]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |       4  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,9,22,28,11]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,9,22,28,11]  |
    59  |  appendTo = appendTo + (pos - l...  |         |  0  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,9,22,28,11]  |
    64  |          R = R + (pos - lastHold);  |      1  |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,9,22,28,11]  |
    65  |                             break;  |         |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,9,22,28,11]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                              
 Index  |          Commands           |  Costs  |  SegmentIDs in GroupID(0)  |
------------------------------------------------------------------------------
    64  |  R = R + (pos - lastHold);  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex        |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [4,36,4,22,29,32,30]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,36,4,22,29,32,30]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,36,4,22,29,32,30]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,36,4,22,29,32,30]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,36,4,22,29,32,30]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [4,36,4,22,29,32,30]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [4,36,4,22,29,32,30]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [4,36,4,22,29,32,30]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [4,36,4,22,29,32,30]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [4,36,4,22,29,32,30]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      36  |  1  |         1  |        2  |    1  |      1  |  [4,36,4,22,29,32,30]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      36  |  1  |         1  |        2  |    2  |      1  |  [4,36,4,22,29,32,30]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      36  |  2  |         1  |        2  |    2  |      1  |  [4,36,4,22,29,32,30]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      36  |  2  |         1  |        2  |    2  |      1  |  [4,36,4,22,29,32,30]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (pos - lastHold) -> R0 = R0 + (pos - lastHold);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-31 03:00:43,879 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:01:00,606 INFO     Done. Execution time: 16.727280616760254 seconds
2023-01-31 03:01:00,606 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `14.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0300-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0300-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.717s
user	0m31.128s
sys	0m3.767s

2023-01-31 03:01:00,607 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 03:01:00,607 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:02:07,087 INFO     Done. Execution time: 66.47961187362671 seconds
2023-01-31 03:02:07,087 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz7371237548984672932/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7371237548984672932/bin -o /tmp/qfuzz7371237548984672932/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7371237548984672932/bin
Found file /tmp/qfuzz7371237548984672932/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz7371237548984672932/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7371237548984672932/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7371237548984672932/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7371237548984672932/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7371237548984672932/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 127934 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 123371 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m123k to 127k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7371237548984672932/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_030206_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2, 36
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:02:07,087 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-31 03:02:07,087 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 03:02:10,894 INFO     Done. Execution time: 3.8060827255249023 seconds
2023-01-31 03:02:10,894 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_030206_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_030206_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2, 36)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 24
recursiveTypeIndexes: 2
d: 36
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |              5  |  20  |                     2  |
    32  |     return;  |         |  0  |              5  |  20  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-31 03:02:10,894 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:02:13,074 INFO     Done. Execution time: 2.179837226867676 seconds
2023-01-31 03:02:13,074 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0302-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0302-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.173s
user	0m3.751s
sys	0m0.263s

2023-01-31 03:02:13,074 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 03:02:13,074 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:03:19,385 INFO     Done. Execution time: 66.31023287773132 seconds
2023-01-31 03:03:19,385 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz5721311275877385297/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5721311275877385297/bin -o /tmp/qfuzz5721311275877385297/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5721311275877385297/bin
Found file /tmp/qfuzz5721311275877385297/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz5721311275877385297/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5721311275877385297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5721311275877385297/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5721311275877385297/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5721311275877385297/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 109305 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 120731 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m109k to 120k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5721311275877385297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_030319_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:03:19,385 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-31 03:03:19,386 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 03:03:26,129 INFO     Done. Execution time: 6.742934703826904 seconds
2023-01-31 03:03:26,129 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_030319_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_030319_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-31 03:03:26,129 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:03:33,947 INFO     Done. Execution time: 7.817871332168579 seconds
2023-01-31 03:03:33,947 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0303-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0303-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.811s
user	0m16.405s
sys	0m2.274s

2023-01-31 03:03:33,947 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 03:03:33,947 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:04:39,690 INFO     Done. Execution time: 65.7425708770752 seconds
2023-01-31 03:04:39,690 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz3680475831152565489/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3680475831152565489/bin -o /tmp/qfuzz3680475831152565489/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3680475831152565489/bin
Found file /tmp/qfuzz3680475831152565489/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz3680475831152565489/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3680475831152565489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3680475831152565489/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3680475831152565489/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3680475831152565489/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123230 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 124190 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m123k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 51.00; [95.00,195.00,255.00,455.00,506.00,655.00,735.00]
1; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 40.00; [126.00,335.00,375.00,415.00,455.00,575.00,755.00]
3; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 7; 20.00; [235.00,295.00,426.00,475.00,655.00,675.00,715.00]
5; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 7; 69.00; [155.00,295.00,375.00,446.00,515.00,655.00,815.00]
10; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 7; 9.00; [155.00,175.00,255.00,606.00,615.00,655.00,695.00]
15; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 6; 29.00; [175.00,295.00,475.00,686.00,715.00,775.00]
20; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 7; 80.00; [175.00,255.00,375.00,506.00,675.00,755.00,995.00]
27; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 7; 60.00; [255.00,315.00,375.00,506.00,695.00,815.00,975.00]
57; /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta; 7; 91.00; [15.00,106.00,255.00,455.00,555.00,755.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 50, 37, 27, 12, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 15, 18, 12, 48, 34, 40, 12, 35, 6, 45, 9, 33, 9, 18, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 49, 37, 12, 8, 33, 18, 23, 18, 36, 38, 30, 20, 29, 42, 26, 27, 4, 25, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 35, 23, 14, 35, 38, 8, 14, 9, 41, 39, 12, 24, 39, 30, 32, 11, 33, 35, 15, 14, 35, 38, 12, 34, 28, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 12, 34, 8, 7, 32, 30, 30, 30, 30, 30, 30, 49, 30, 32, 31, 30, 21, 30, 30, 30, 36, 30, 30, 30, 50, 30, 26, 30, 30, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 40, 7, 18, 14, 32, 25, 7, 7, 7, 7, 7, 49, 7, 7, 17, 4, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 32, 11, 33, 35, 23, 14, 35, 38, 8, 20, 29, 42, 27, 27, 26, 24, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3680475831152565489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_030439_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,50,37,27,12,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,15,18,12,48,34,40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,49,37,12,8,33,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,35,23,14,35,38,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,12,34,8,7,32,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,40,7,18,14,32,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,32,11,33,35,23,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:04:39,691 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-31 03:04:39,691 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 03:04:49,760 INFO     Done. Execution time: 10.069406986236572 seconds
2023-01-31 03:04:49,760 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_030439_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_030439_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,50,37,27,12,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,15,18,12,48,34,40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,49,37,12,8,33,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,35,23,14,35,38,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,12,34,8,7,32,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,40,7,18,14,32,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,32,11,33,35,23,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [4,50,37,27,12,22]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,15,18,12,48,34,40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,49,37,12,8,33,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [33,35,23,14,35,38,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [29,12,34,8,7,32,30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [21,40,7,18,14,32,25]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [20,32,11,33,35,23,14]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [4,50,37,27,12,22]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [4,50,37,27,12,22]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [4,50,37,27,12,22]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [4,50,37,27,12,22]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [4,50,37,27,12,22]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [4,50,37,27,12,22]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [4,50,37,27,12,22]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [4,50,37,27,12,22]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |      4  |  [4,50,37,27,12,22]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |      4  |    4  |      4  |  [4,50,37,27,12,22]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |    4  |      4  |  [4,50,37,27,12,22]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |    4  |      4  |  [4,50,37,27,12,22]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |    4  |     50  |  [4,50,37,27,12,22]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     50  |   54  |     50  |  [4,50,37,27,12,22]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |   54  |     50  |  [4,50,37,27,12,22]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |   54  |     50  |  [4,50,37,27,12,22]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |   54  |     37  |  [4,50,37,27,12,22]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     37  |   91  |     37  |  [4,50,37,27,12,22]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |   91  |     37  |  [4,50,37,27,12,22]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |   91  |     37  |  [4,50,37,27,12,22]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |   91  |     27  |  [4,50,37,27,12,22]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     27  |  118  |     27  |  [4,50,37,27,12,22]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  118  |     27  |  [4,50,37,27,12,22]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  118  |     27  |  [4,50,37,27,12,22]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  118  |     12  |  [4,50,37,27,12,22]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     12  |  130  |     12  |  [4,50,37,27,12,22]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  130  |     12  |  [4,50,37,27,12,22]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  130  |     12  |  [4,50,37,27,12,22]  |  5  |           0  |           0  |
    96  |        chunk = arrayRead(diff, i);  |         |  130  |     22  |  [4,50,37,27,12,22]  |  5  |           0  |           0  |
    99  |                     R = R + chunk;  |     22  |  152  |     22  |  [4,50,37,27,12,22]  |  5  |           0  |           0  |
   103  |                         i = i + 1;  |         |  152  |     22  |  [4,50,37,27,12,22]  |  6  |           0  |           0  |
   104  |              resetPlaceHolder_1();  |         |  152  |     22  |  [4,50,37,27,12,22]  |  6  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {57,85}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,99}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {57,71,85}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,57,85}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {29,71,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {43,57,85}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {43,71,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,57,85}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {29,43,71,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [57, 29, 85, 71, 43, 99]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43,57,71,85,99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |      4  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     50  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     37  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     27  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     12  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     22  |                         0  |
   104  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-31 03:04:49,761 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:04:56,836 INFO     Done. Execution time: 7.075076341629028 seconds
2023-01-31 03:04:56,836 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0304-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0304-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.068s
user	0m15.376s
sys	0m1.937s

2023-01-31 03:04:56,836 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 03:04:56,836 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:06:02,790 INFO     Done. Execution time: 65.95314407348633 seconds
2023-01-31 03:06:02,790 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz6076715192327162726/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6076715192327162726/bin -o /tmp/qfuzz6076715192327162726/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6076715192327162726/bin
Found file /tmp/qfuzz6076715192327162726/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz6076715192327162726/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6076715192327162726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6076715192327162726/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6076715192327162726/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6076715192327162726/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 106225 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 127013 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m106k to 127k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 7.00; [95.00,195.00,248.00,255.00,268.00,455.00,504.00,655.00,735.00]
1; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 9; 13.00; [124.00,335.00,375.00,415.00,428.00,455.00,575.00,668.00,755.00]
3; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 7; 9.00; [95.00,104.00,195.00,235.00,668.00,775.00,928.00]
4; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 7.00; [408.00,415.00,1024.00]
6; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 9; 16.00; [175.00,288.00,415.00,448.00,464.00,675.00,695.00,775.00,835.00]
11; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 9; 20.00; [95.00,175.00,195.00,408.00,588.00,715.00,735.00,775.00,824.00]
14; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 9; 33.00; [175.00,255.00,535.00,575.00,655.00,688.00,808.00,884.00,975.00]
18; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 9; 44.00; [95.00,195.00,255.00,348.00,455.00,504.00,548.00,655.00,735.00]
22; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 9; 20.00; [95.00,124.00,248.00,268.00,455.00,475.00,635.00,655.00,735.00]
32; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 9; 13.00; [108.00,155.00,195.00,255.00,268.00,504.00,655.00,815.00,995.00]
53; /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta; 9; 53.00; [135.00,255.00,355.00,448.00,504.00,575.00,635.00,688.00,955.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 17, 28, 6, 31, 12, 47, 22, 34, 8, 5, 39, 26, 33, 46, 5, 26, 12, 26, 26, 26, 26, 26, 26, 23, 8, 41, 26, 38, 26, 26, 15, 48, 47, 14, 26, 26, 31, 26, 41, 11, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 40, 7, 49, 32, 12, 13, 5, 5, 34, 24, 39, 30, 32, 11, 31, 35, 23, 14, 11, 31, 35, 22, 39, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 36, 23, 22, 32, 31, 13, 12, 15, 12, 48, 34, 40, 12, 31, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 27, 17, 14, 35, 38, 8, 20, 29, 42, 11, 17, 35, 23, 14, 35, 38, 8, 20, 29, 42, 26, 27, 14, 35, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 26, 32, 8, 28, 12, 48, 34, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 14, 40, 27, 34, 40, 21, 19, 40, 17, 15, 40, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 9, 36, 4, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 38, 8, 20, 34, 41, 33, 14, 22, 32, 12, 13, 7, 34, 40, 12, 46, 6, 45, 9, 33, 46, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 9, 11, 38, 33, 46, 29, 9, 24, 28, 6, 20, 42, 12, 45, 35, 39, 7, 45, 12, 31, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6076715192327162726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_030602_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,17,28,6,31,12,47], 22, 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,40,7,49,32,12], 13, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,4,36,23,22,32,31], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 27, 17
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,26,32,8,28,12,48], 34, 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,9,36,4,35,38,8], 20, 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,38,8,20,34,41,33], 14, 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,20,20,20,20,20,20], 20, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,9,11,38], 33, 46
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:06:02,790 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-31 03:06:02,790 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 03:06:14,606 INFO     Done. Execution time: 11.814902782440186 seconds
2023-01-31 03:06:14,606 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_030602_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_030602_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,17,28,6,31,12,47], 22, 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,40,7,49,32,12], 13, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,4,36,23,22,32,31], 13, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 27, 17)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,26,32,8,28,12,48], 34, 40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,9,36,4,35,38,8], 20, 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,38,8,20,34,41,33], 14, 22)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,20,20,20,20,20,20], 20, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,9,11,38], 33, 46)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,17,28,6,31,12,47]
years: 22
months: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,40,7,49,32,12]
years: 13
months: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [5,4,36,23,22,32,31]
years: 13
months: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,12]
years: 27
months: 17
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [43,26,32,8,28,12,48]
years: 34
months: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [40,9,36,4,35,38,8]
years: 20
months: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [22,38,8,20,34,41,33]
years: 14
months: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [50,20,20,20,20,20,20]
years: 20
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [4,4,4,4,9,11,38]
years: 33
months: 46
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [5,22,20,16,28,37,18]
years: 21
months: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,12]
years: 13
months: 12
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 176):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |         tokens          |  years  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      34  |  [24,17,28,6,31,12,47]  |     22  |
    26  |                      // int R = 0;  |         |    0  |         |     |      34  |  [24,17,28,6,31,12,47]  |     22  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      34  |  [24,17,28,6,31,12,47]  |     22  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      34  |  [24,17,28,6,31,12,47]  |     22  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      34  |  [24,17,28,6,31,12,47]  |     22  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |     24  |  0  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    41  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    44  |                     R = R + years;  |     22  |   46  |     24  |  0  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    47  |                    R = R + months;  |     34  |   80  |     24  |  0  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    51  |                         i = i + 1;  |         |   80  |     24  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    52  |              resetPlaceHolder_1();  |         |   80  |     24  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    58  |      chunk = arrayRead(tokens, i);  |         |   80  |     17  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    61  |                     R = R + chunk;  |     17  |   97  |     17  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    64  |                     R = R + years;  |     22  |  119  |     17  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    67  |                    R = R + months;  |     34  |  153  |     17  |  1  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    71  |                         i = i + 1;  |         |  153  |     17  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    72  |              resetPlaceHolder_1();  |         |  153  |     17  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    78  |      chunk = arrayRead(tokens, i);  |         |  153  |     28  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    81  |                     R = R + chunk;  |     28  |  181  |     28  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    84  |                     R = R + years;  |     22  |  203  |     28  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    87  |                    R = R + months;  |     34  |  237  |     28  |  2  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    91  |                         i = i + 1;  |         |  237  |     28  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    92  |              resetPlaceHolder_1();  |         |  237  |     28  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
    98  |      chunk = arrayRead(tokens, i);  |         |  237  |      6  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   101  |                     R = R + chunk;  |      6  |  243  |      6  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   104  |                     R = R + years;  |     22  |  265  |      6  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   107  |                    R = R + months;  |     34  |  299  |      6  |  3  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   111  |                         i = i + 1;  |         |  299  |      6  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   112  |              resetPlaceHolder_1();  |         |  299  |      6  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   118  |      chunk = arrayRead(tokens, i);  |         |  299  |     31  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   121  |                     R = R + chunk;  |     31  |  330  |     31  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   124  |                     R = R + years;  |     22  |  352  |     31  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   127  |                    R = R + months;  |     34  |  386  |     31  |  4  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   131  |                         i = i + 1;  |         |  386  |     31  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   132  |              resetPlaceHolder_1();  |         |  386  |     31  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   138  |      chunk = arrayRead(tokens, i);  |         |  386  |     12  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   141  |                     R = R + chunk;  |     12  |  398  |     12  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   144  |                     R = R + years;  |     22  |  420  |     12  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   147  |                    R = R + months;  |     34  |  454  |     12  |  5  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   151  |                         i = i + 1;  |         |  454  |     12  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   152  |              resetPlaceHolder_1();  |         |  454  |     12  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   158  |      chunk = arrayRead(tokens, i);  |         |  454  |     47  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   161  |                     R = R + chunk;  |     47  |  501  |     47  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   164  |                     R = R + years;  |     22  |  523  |     47  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   167  |                    R = R + months;  |     34  |  557  |     47  |  6  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   171  |                         i = i + 1;  |         |  557  |     47  |  7  |      34  |  [24,17,28,6,31,12,47]  |     22  |
   172  |              resetPlaceHolder_1();  |         |  557  |     47  |  7  |      34  |  [24,17,28,6,31,12,47]  |     22  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 21 trace node indices: [101, 164, 121, 84, 147, 61, 141, 124, 41, 161, 64, 44, 144, 81, 167, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {144}; {164}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {144}; {164}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |
    44  |         R = R + years;  |     22  |                         0  |
    47  |        R = R + months;  |     34  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     17  |                            |
    64  |         R = R + years;  |     22  |                         1  |
    67  |        R = R + months;  |     34  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     28  |                            |
    84  |         R = R + years;  |     22  |                         2  |
    87  |        R = R + months;  |     34  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      6  |                            |
   104  |         R = R + years;  |     22  |                         3  |
   107  |        R = R + months;  |     34  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     31  |                            |
   124  |         R = R + years;  |     22  |                         4  |
   127  |        R = R + months;  |     34  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     12  |                            |
   144  |         R = R + years;  |     22  |                         5  |
   147  |        R = R + months;  |     34  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     47  |                            |
   164  |         R = R + years;  |     22  |                         6  |
   167  |        R = R + months;  |     34  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {147}; {167}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {147}; {167}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |
    44  |         R = R + years;  |     22  |                            |
    47  |        R = R + months;  |     34  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     17  |                            |
    64  |         R = R + years;  |     22  |                            |
    67  |        R = R + months;  |     34  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     28  |                            |
    84  |         R = R + years;  |     22  |                            |
    87  |        R = R + months;  |     34  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      6  |                            |
   104  |         R = R + years;  |     22  |                            |
   107  |        R = R + months;  |     34  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     31  |                            |
   124  |         R = R + years;  |     22  |                            |
   127  |        R = R + months;  |     34  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     12  |                            |
   144  |         R = R + years;  |     22  |                            |
   147  |        R = R + months;  |     34  |                         5  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     47  |                            |
   164  |         R = R + years;  |     22  |                            |
   167  |        R = R + months;  |     34  |                         6  |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {141,161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {141,161}; {81,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {141,161}; {81,121} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |
    44  |         R = R + years;  |     22  |                            |
    47  |        R = R + months;  |     34  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     17  |                            |
    64  |         R = R + years;  |     22  |                            |
    67  |        R = R + months;  |     34  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     28  |                         0  |
    84  |         R = R + years;  |     22  |                            |
    87  |        R = R + months;  |     34  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      6  |                            |
   104  |         R = R + years;  |     22  |                            |
   107  |        R = R + months;  |     34  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     31  |                         0  |
   124  |         R = R + years;  |     22  |                            |
   127  |        R = R + months;  |     34  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     12  |                         1  |
   144  |         R = R + years;  |     22  |                            |
   147  |        R = R + months;  |     34  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     47  |                         1  |
   164  |         R = R + years;  |     22  |                            |
   167  |        R = R + months;  |     34  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [101, 61, 41]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {144}; {164}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {147}; {167}; {47}; {67}; {87}
GroupID(2): {141,161}; {81,121}
GroupID(3): {41,61,101}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    44  |         R = R + years;  |     22  |                         0  |                            |                            |                            |
    47  |        R = R + months;  |     34  |                            |                         0  |                            |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    61  |         R = R + chunk;  |     17  |                            |                            |                            |                         0  |
    64  |         R = R + years;  |     22  |                         1  |                            |                            |                            |
    67  |        R = R + months;  |     34  |                            |                         1  |                            |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    81  |         R = R + chunk;  |     28  |                            |                            |                         0  |                            |
    84  |         R = R + years;  |     22  |                         2  |                            |                            |                            |
    87  |        R = R + months;  |     34  |                            |                         2  |                            |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   101  |         R = R + chunk;  |      6  |                            |                            |                            |                         0  |
   104  |         R = R + years;  |     22  |                         3  |                            |                            |                            |
   107  |        R = R + months;  |     34  |                            |                         3  |                            |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   121  |         R = R + chunk;  |     31  |                            |                            |                         0  |                            |
   124  |         R = R + years;  |     22  |                         4  |                            |                            |                            |
   127  |        R = R + months;  |     34  |                            |                         4  |                            |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   141  |         R = R + chunk;  |     12  |                            |                            |                         1  |                            |
   144  |         R = R + years;  |     22  |                         5  |                            |                            |                            |
   147  |        R = R + months;  |     34  |                            |                         5  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   161  |         R = R + chunk;  |     47  |                            |                            |                         1  |                            |
   164  |         R = R + years;  |     22  |                         6  |                            |                            |                            |
   167  |        R = R + months;  |     34  |                            |                         6  |                            |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 152, 132, 92, 112, 72)
GroupID(1): Set(52, 152, 132, 92, 112, 72)
GroupID(2): Set(132)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 1) || (i == 1))
  {
    R3 = R3 + chunk;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R3 = R3 + chunk;
    }
  }
}
else
{
  R2 = R2 + chunk;
}
use R months -> R1 = R1 + months;
resetPlaceHolder_1(); -> {
  // reset R3
  if ((i < 4) || (i == 4))
  {
    // reset R2
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
    else
    {
      // reset R2
    }
  }
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-31 03:06:14,606 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:07:17,170 INFO     Done. Execution time: 62.56346821784973 seconds
2023-01-31 03:07:17,170 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-200031610903750615.c`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1239985603262142336.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-428298396268679322.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1122486991868395052.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-893695291907895868.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-699761567490922503.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-668088977507003234.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2854943009966070261.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8230484574326587968.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7080886160823734398.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-276447033937403609.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1033103139530122069.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (and (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    6)  (define-fun D0 () Int    2)  (define-fun D3 () Int    0)  (define-fun D1 () Int    7)  (define-fun C2 () Int    15)  (define-fun C1 () Int    7)  (define-fun C3 () Int    10)  (define-fun months () Int    13)  (define-fun tokens () Int    13)  (define-fun years () Int    1)  (define-fun D2p () Int    6)  (define-fun D0p () Int    2)  (define-fun D3p () Int    6)  (define-fun D1p () Int    15)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `60.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0306-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0306-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.557s
user	4m2.255s
sys	0m2.920s

2023-01-31 03:07:17,170 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 03:07:17,170 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:08:23,116 INFO     Done. Execution time: 65.94566202163696 seconds
2023-01-31 03:08:23,116 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz737862574643816574/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz737862574643816574/bin -o /tmp/qfuzz737862574643816574/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz737862574643816574/bin
Found file /tmp/qfuzz737862574643816574/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz737862574643816574/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz737862574643816574/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz737862574643816574/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz737862574643816574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz737862574643816574/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz737862574643816574/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz737862574643816574/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 117008 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 121195 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m117k to 121k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
1; /tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz737862574643816574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_030822_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:08:23,116 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-31 03:08:23,117 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 03:08:29,507 INFO     Done. Execution time: 6.390626907348633 seconds
2023-01-31 03:08:29,508 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_030822_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_030822_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-31 03:08:29,508 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:08:36,994 INFO     Done. Execution time: 7.486221075057983 seconds
2023-01-31 03:08:36,994 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0308-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0308-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.479s
user	0m15.946s
sys	0m2.524s

2023-01-31 03:08:36,995 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 03:08:36,995 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:09:43,070 INFO     Done. Execution time: 66.0756106376648 seconds
2023-01-31 03:09:43,071 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz484014163343568642/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz484014163343568642/bin -o /tmp/qfuzz484014163343568642/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz484014163343568642/bin
Found file /tmp/qfuzz484014163343568642/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz484014163343568642/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz484014163343568642/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz484014163343568642/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz484014163343568642/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz484014163343568642/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz484014163343568642/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz484014163343568642/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 127517 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 94, exec speed = 125618 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m125k to 127k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 11; 1.00; [28.00,32.00,35.50,37.00,88.00,188.00,248.00,448.00,488.00,648.00,728.00]
2; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 11; 1.00; [28.00,32.00,35.50,37.00,108.00,328.00,368.00,408.00,448.00,568.00,748.00]
3; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,168.00]
4; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,128.00]
6; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,928.00]
9; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 9; 1.00; [28.00,32.00,35.50,37.00,248.00,288.00,328.00,628.00,928.00]
11; /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 9; 1.00; [28.00,32.00,35.50,37.00,88.00,488.00,548.00,668.00,1008.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 27, 4, 4, 4, 50, 33, 48, 34, 40, 12, 46, 31, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 16, 12, 46, 14, 14, 12, 39, 38, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 7, 14, 14, 9, 9, 6, 28, 14, 20, 35, 24, 39, 50, 17, 14, 29, 15, 16, 16, 12, 46, 14, 46, 12, 46, 14, 14, 14, 17, 14, 20, 38, 39, 50, 13, 39, 29, 15, 30, 32, 20, 14, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz484014163343568642/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_030942_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,27,4,4,4,50,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,16,12,46,14,14,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:09:43,071 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-31 03:09:43,071 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 03:09:56,214 INFO     Done. Execution time: 13.142933368682861 seconds
2023-01-31 03:09:56,215 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_030942_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_030942_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,27,4,4,4,50,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,16,12,46,14,14,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [24,27,4,4,4,50,33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [31,16,12,46,14,14,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [24,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: []
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 255):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |      baseMessage      |  buffer  |  chunk  |  i  |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [24,27,4,4,4,50,33]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [24,27,4,4,4,50,33]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [24,27,4,4,4,50,33]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [24,27,4,4,4,50,33]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    42  |                     R = R + chunk;  |     24  |   29  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    45  |                         R = R + 1;  |      1  |   30  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    48  |                         R = R + 1;  |      1  |   31  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    51  |                         R = R + 1;  |      1  |   32  |  [24,27,4,4,4,50,33]  |       0  |     24  |  0  |
    55  |                         i = i + 1;  |         |   32  |  [24,27,4,4,4,50,33]  |       0  |     24  |  1  |
    56  |              resetPlaceHolder_1();  |         |   32  |  [24,27,4,4,4,50,33]  |       0  |     24  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   32  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    65  |                         R = R + 1;  |      1  |   33  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    68  |                         R = R + 1;  |      1  |   34  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    71  |                         R = R + 1;  |      1  |   35  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    74  |                     R = R + chunk;  |     27  |   62  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    77  |                         R = R + 1;  |      1  |   63  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    80  |                         R = R + 1;  |      1  |   64  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    83  |                         R = R + 1;  |      1  |   65  |  [24,27,4,4,4,50,33]  |       0  |     27  |  1  |
    87  |                         i = i + 1;  |         |   65  |  [24,27,4,4,4,50,33]  |       0  |     27  |  2  |
    88  |              resetPlaceHolder_1();  |         |   65  |  [24,27,4,4,4,50,33]  |       0  |     27  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |   65  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
    97  |                         R = R + 1;  |      1  |   66  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   100  |                         R = R + 1;  |      1  |   67  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   103  |                         R = R + 1;  |      1  |   68  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   106  |                     R = R + chunk;  |      4  |   72  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   109  |                         R = R + 1;  |      1  |   73  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   112  |                         R = R + 1;  |      1  |   74  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   115  |                         R = R + 1;  |      1  |   75  |  [24,27,4,4,4,50,33]  |       0  |      4  |  2  |
   119  |                         i = i + 1;  |         |   75  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   120  |              resetPlaceHolder_1();  |         |   75  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |   75  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   129  |                         R = R + 1;  |      1  |   76  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   132  |                         R = R + 1;  |      1  |   77  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   135  |                         R = R + 1;  |      1  |   78  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   138  |                     R = R + chunk;  |      4  |   82  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   141  |                         R = R + 1;  |      1  |   83  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   144  |                         R = R + 1;  |      1  |   84  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   147  |                         R = R + 1;  |      1  |   85  |  [24,27,4,4,4,50,33]  |       0  |      4  |  3  |
   151  |                         i = i + 1;  |         |   85  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   152  |              resetPlaceHolder_1();  |         |   85  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |   85  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   161  |                         R = R + 1;  |      1  |   86  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   164  |                         R = R + 1;  |      1  |   87  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   167  |                         R = R + 1;  |      1  |   88  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   170  |                     R = R + chunk;  |      4  |   92  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   173  |                         R = R + 1;  |      1  |   93  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   176  |                         R = R + 1;  |      1  |   94  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   179  |                         R = R + 1;  |      1  |   95  |  [24,27,4,4,4,50,33]  |       0  |      4  |  4  |
   183  |                         i = i + 1;  |         |   95  |  [24,27,4,4,4,50,33]  |       0  |      4  |  5  |
   184  |              resetPlaceHolder_1();  |         |   95  |  [24,27,4,4,4,50,33]  |       0  |      4  |  5  |
   190  |  chunk = arrayRead(baseMessage,...  |         |   95  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   193  |                         R = R + 1;  |      1  |   96  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   196  |                         R = R + 1;  |      1  |   97  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   199  |                         R = R + 1;  |      1  |   98  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   202  |                     R = R + chunk;  |     50  |  148  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   205  |                         R = R + 1;  |      1  |  149  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   208  |                         R = R + 1;  |      1  |  150  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   211  |                         R = R + 1;  |      1  |  151  |  [24,27,4,4,4,50,33]  |       0  |     50  |  5  |
   215  |                         i = i + 1;  |         |  151  |  [24,27,4,4,4,50,33]  |       0  |     50  |  6  |
   216  |              resetPlaceHolder_1();  |         |  151  |  [24,27,4,4,4,50,33]  |       0  |     50  |  6  |
   222  |  chunk = arrayRead(baseMessage,...  |         |  151  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   225  |                         R = R + 1;  |      1  |  152  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   228  |                         R = R + 1;  |      1  |  153  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   231  |                         R = R + 1;  |      1  |  154  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   234  |                     R = R + chunk;  |     33  |  187  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   237  |                         R = R + 1;  |      1  |  188  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   240  |                         R = R + 1;  |      1  |  189  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   243  |                         R = R + 1;  |      1  |  190  |  [24,27,4,4,4,50,33]  |       0  |     33  |  6  |
   247  |                         i = i + 1;  |         |  190  |  [24,27,4,4,4,50,33]  |       0  |     33  |  7  |
   248  |              resetPlaceHolder_1();  |         |  190  |  [24,27,4,4,4,50,33]  |       0  |     33  |  7  |
   254  |                         R = R + 1;  |      1  |  191  |  [24,27,4,4,4,50,33]  |       0  |     33  |  7  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 52 trace node indices: [138, 234, 170, 115, 202, 42, 196, 20, 228, 164, 179, 211, 106, 147, 132, 243, 74, 33, 65, 97, 141, 109, 225, 77, 193, 173, 129, 237, 205, 45, 161, 17, 176, 71, 144, 39, 208, 103, 240, 135, 80, 167, 112, 48, 199, 231, 36, 51, 68, 254, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {193}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {196}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {199}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {205}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {208}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {228}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {231}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     24  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     27  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |      4  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |      4  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |      4  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                        32  |
   196  |             R = R + 1;  |      1  |                        33  |
   199  |             R = R + 1;  |      1  |                        34  |
   202  |         R = R + chunk;  |     50  |                            |
   205  |             R = R + 1;  |      1  |                        35  |
   208  |             R = R + 1;  |      1  |                        36  |
   211  |             R = R + 1;  |      1  |                        37  |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                        38  |
   228  |             R = R + 1;  |      1  |                        39  |
   231  |             R = R + 1;  |      1  |                        40  |
   234  |         R = R + chunk;  |     33  |                            |
   237  |             R = R + 1;  |      1  |                        41  |
   240  |             R = R + 1;  |      1  |                        42  |
   243  |             R = R + 1;  |      1  |                        43  |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                        44  |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {138}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {170}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {138}; {170}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {106}; {138}; {170} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |     24  |                            |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |     27  |                            |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |      4  |                         0  |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |      4  |                         1  |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |      4  |                         2  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                            |
   196  |             R = R + 1;  |      1  |                            |
   199  |             R = R + 1;  |      1  |                            |
   202  |         R = R + chunk;  |     50  |                            |
   205  |             R = R + 1;  |      1  |                            |
   208  |             R = R + 1;  |      1  |                            |
   211  |             R = R + 1;  |      1  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                            |
   228  |             R = R + 1;  |      1  |                            |
   231  |             R = R + 1;  |      1  |                            |
   234  |         R = R + chunk;  |     33  |                            |
   237  |             R = R + 1;  |      1  |                            |
   240  |             R = R + 1;  |      1  |                            |
   243  |             R = R + 1;  |      1  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [234, 202, 42, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [234, 202, 42, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [234, 202, 42, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {106}; {138}; {170}
GroupID(2): {42,74,202,234}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 192])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 32 and 33 segment (index range: [194, 195])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 33 and 34 segment (index range: [197, 198])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 34 and 35 segment (index range: [200, 204])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 35 and 36 segment (index range: [206, 207])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 36 and 37 segment (index range: [209, 210])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 37 and 38 segment (index range: [212, 224])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 38 and 39 segment (index range: [226, 227])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 39 and 40 segment (index range: [229, 230])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 40 and 41 segment (index range: [232, 236])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 41 and 42 segment (index range: [238, 239])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 42 and 43 segment (index range: [241, 242])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 43 and 44 segment (index range: [244, 253])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     27  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(120, 152)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                        
 Index  |   Commands   |  Costs  |  R  |  baseMessage  |
--------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           []  |
    10  |     return;  |         |  0  |           []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 2) || (i == 2))
  {
    // reset R1
  }
  else
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 1) || (i == 1))
{
  R2 = R2 + chunk;
}
else
{
  if ((i < 4) || (i == 4))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R2 = R2 + chunk;
  }
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-31 03:09:56,217 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:11:40,438 INFO     Done. Execution time: 104.22126722335815 seconds
2023-01-31 03:11:40,439 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 8 1 baseMessage)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 baseMessage)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 8 1 baseMessage))) (= D2p 0)))
      (a!5 (or (<= D0p (+ 0 (* 8 1 baseMessage))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       true
       (or true (= D1p 0))
       (<= D0p 0)
       a!5)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 8 1 baseMessage))) (= D2 0)))
      (a!2 (or (<= D0 (+ 0 (* 8 1 baseMessage))) (= D0 0))))
  (and a!1 (or true (= D1 0)) a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1 baseMessage)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    7)  (define-fun D2 () Int    (- 2))  (define-fun C1 () Int    13)  (define-fun baseMessage () Int    13)  (define-fun D1p () Int    15)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `102.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0309-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0309-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m44.214s
user	6m19.356s
sys	0m8.658s

2023-01-31 03:11:40,440 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 03:11:40,440 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:12:46,749 INFO     Done. Execution time: 66.30865502357483 seconds
2023-01-31 03:12:46,749 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz2404105941012564282/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2404105941012564282/bin -o /tmp/qfuzz2404105941012564282/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2404105941012564282/bin
Found file /tmp/qfuzz2404105941012564282/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz2404105941012564282/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2404105941012564282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2404105941012564282/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2404105941012564282/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2404105941012564282/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 133715 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 110702 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m110k to 133k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
1; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
14; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
18; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
27; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
28; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
30; /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 36, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 12, 13, 40, 15, 12, 20, 26, 24, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 4, 33, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 13, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 4, 50, 15, 29, 47, 27, 34, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2404105941012564282/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_031246_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:12:46,749 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-31 03:12:46,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 03:12:53,708 INFO     Done. Execution time: 6.957914113998413 seconds
2023-01-31 03:12:53,708 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_031246_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_031246_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(32)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(22)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 32
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 24
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 866):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         40  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         40  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         40  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         40  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         40  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         40  |          40  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         40  |          39  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         40  |          39  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         40  |          39  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         40  |          39  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         40  |          38  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         40  |          38  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         40  |          38  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         40  |          38  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         40  |          37  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         40  |          37  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         40  |          37  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         40  |          37  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         40  |          36  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         40  |          36  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         40  |          36  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         40  |          36  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         40  |          35  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         40  |          35  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         40  |          35  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         40  |          35  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         40  |          34  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         40  |          34  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         40  |          34  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         40  |          34  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         40  |          33  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         40  |          33  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         40  |          33  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         40  |          33  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         40  |          32  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         40  |          32  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         40  |          32  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         40  |          32  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         40  |          31  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         40  |          31  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         40  |          31  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         40  |          31  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         40  |          30  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         40  |          30  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         40  |          30  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         40  |          30  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         40  |          29  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         40  |          29  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         40  |          29  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         40  |          29  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         40  |          28  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         40  |          28  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         40  |          28  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         40  |          28  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         40  |          27  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         40  |          27  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         40  |          27  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         40  |          27  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         40  |          26  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         40  |          26  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         40  |          26  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         40  |          26  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         40  |          25  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         40  |          25  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         40  |          25  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         40  |          25  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         40  |          24  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         40  |          24  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         40  |          24  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         40  |          24  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         40  |          23  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         40  |          23  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         40  |          23  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         40  |          23  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         40  |          22  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         40  |          22  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         40  |          22  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         40  |          22  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         40  |          21  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         40  |          21  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         40  |          21  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         40  |          21  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         40  |          20  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         40  |          20  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         40  |          20  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         40  |          20  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         40  |          19  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         40  |          19  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         40  |          19  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         40  |          19  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         40  |          18  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         40  |          18  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         40  |          18  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         40  |          18  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         40  |          17  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         40  |          17  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         40  |          17  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         40  |          17  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         40  |          16  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         40  |          16  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         40  |          16  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         40  |          16  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         40  |          15  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         40  |          15  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         40  |          15  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         40  |          15  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         40  |          14  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         40  |          14  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         40  |          14  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         40  |          14  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         40  |          13  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         40  |          13  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         40  |          13  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         40  |          13  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         40  |          12  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         40  |          12  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         40  |          12  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         40  |          12  |
   617  |       className_ = className_ - 1;  |         |  56  |           56  |         40  |          11  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |  56  |           58  |         40  |          11  |
   624  |                         R = R + 2;  |      2  |  58  |           58  |         40  |          11  |
   625  |              resetPlaceHolder_1();  |         |  58  |           58  |         40  |          11  |
   638  |       className_ = className_ - 1;  |         |  58  |           58  |         40  |          10  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |  58  |           60  |         40  |          10  |
   645  |                         R = R + 2;  |      2  |  60  |           60  |         40  |          10  |
   646  |              resetPlaceHolder_1();  |         |  60  |           60  |         40  |          10  |
   659  |       className_ = className_ - 1;  |         |  60  |           60  |         40  |           9  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |  60  |           62  |         40  |           9  |
   666  |                         R = R + 2;  |      2  |  62  |           62  |         40  |           9  |
   667  |              resetPlaceHolder_1();  |         |  62  |           62  |         40  |           9  |
   680  |       className_ = className_ - 1;  |         |  62  |           62  |         40  |           8  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |  62  |           64  |         40  |           8  |
   687  |                         R = R + 2;  |      2  |  64  |           64  |         40  |           8  |
   688  |              resetPlaceHolder_1();  |         |  64  |           64  |         40  |           8  |
   701  |       className_ = className_ - 1;  |         |  64  |           64  |         40  |           7  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |  64  |           66  |         40  |           7  |
   708  |                         R = R + 2;  |      2  |  66  |           66  |         40  |           7  |
   709  |              resetPlaceHolder_1();  |         |  66  |           66  |         40  |           7  |
   722  |       className_ = className_ - 1;  |         |  66  |           66  |         40  |           6  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |  66  |           68  |         40  |           6  |
   729  |                         R = R + 2;  |      2  |  68  |           68  |         40  |           6  |
   730  |              resetPlaceHolder_1();  |         |  68  |           68  |         40  |           6  |
   743  |       className_ = className_ - 1;  |         |  68  |           68  |         40  |           5  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |  68  |           70  |         40  |           5  |
   750  |                         R = R + 2;  |      2  |  70  |           70  |         40  |           5  |
   751  |              resetPlaceHolder_1();  |         |  70  |           70  |         40  |           5  |
   764  |       className_ = className_ - 1;  |         |  70  |           70  |         40  |           4  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |  70  |           72  |         40  |           4  |
   771  |                         R = R + 2;  |      2  |  72  |           72  |         40  |           4  |
   772  |              resetPlaceHolder_1();  |         |  72  |           72  |         40  |           4  |
   785  |       className_ = className_ - 1;  |         |  72  |           72  |         40  |           3  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |  72  |           74  |         40  |           3  |
   792  |                         R = R + 2;  |      2  |  74  |           74  |         40  |           3  |
   793  |              resetPlaceHolder_1();  |         |  74  |           74  |         40  |           3  |
   806  |       className_ = className_ - 1;  |         |  74  |           74  |         40  |           2  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |  74  |           76  |         40  |           2  |
   813  |                         R = R + 2;  |      2  |  76  |           76  |         40  |           2  |
   814  |              resetPlaceHolder_1();  |         |  76  |           76  |         40  |           2  |
   827  |       className_ = className_ - 1;  |         |  76  |           76  |         40  |           1  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |  76  |           78  |         40  |           1  |
   834  |                         R = R + 2;  |      2  |  78  |           78  |         40  |           1  |
   835  |              resetPlaceHolder_1();  |         |  78  |           78  |         40  |           1  |
   848  |       className_ = className_ - 1;  |         |  78  |           78  |         40  |           0  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |  78  |           80  |         40  |           0  |
   855  |                         R = R + 2;  |      2  |  80  |           80  |         40  |           0  |
   856  |              resetPlaceHolder_1();  |         |  80  |           80  |         40  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 40 trace node indices: [645, 666, 582, 120, 288, 372, 57, 78, 834, 687, 561, 729, 435, 456, 519, 141, 225, 393, 792, 750, 204, 498, 540, 477, 330, 267, 162, 855, 414, 99, 771, 813, 351, 246, 36, 183, 603, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 730, 247, 142, 814, 709, 436, 37, 184, 751, 289, 646, 121, 793, 625, 583, 499, 457, 205, 541, 562, 772, 604, 520, 394, 226, 310, 331, 688, 58, 667, 478, 835, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-31 03:12:53,708 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:13:01,239 INFO     Done. Execution time: 7.530520915985107 seconds
2023-01-31 03:13:01,239 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0312-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0312-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.524s
user	0m16.218s
sys	0m2.360s

2023-01-31 03:13:01,239 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 03:13:01,239 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:14:07,445 INFO     Done. Execution time: 66.20555996894836 seconds
2023-01-31 03:14:07,445 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz1494844167497303813/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1494844167497303813/bin -o /tmp/qfuzz1494844167497303813/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1494844167497303813/bin
Found file /tmp/qfuzz1494844167497303813/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz1494844167497303813/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1494844167497303813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1494844167497303813/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1494844167497303813/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1494844167497303813/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 128649 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 125919 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m125k to 128k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 16.00; [18.00,34.00]
2; /tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1494844167497303813/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_031407_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:14:07,446 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-31 03:14:07,446 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 03:14:14,202 INFO     Done. Execution time: 6.756427526473999 seconds
2023-01-31 03:14:14,203 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_031407_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_031407_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-31 03:14:14,203 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:14:22,575 INFO     Done. Execution time: 8.37163519859314 seconds
2023-01-31 03:14:22,575 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0314-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0314-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.362s
user	0m18.483s
sys	0m2.327s

2023-01-31 03:14:22,575 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 03:14:22,575 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:15:28,580 INFO     Done. Execution time: 66.00445508956909 seconds
2023-01-31 03:15:28,580 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz9199845566416211687/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9199845566416211687/bin -o /tmp/qfuzz9199845566416211687/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9199845566416211687/bin
Found file /tmp/qfuzz9199845566416211687/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz9199845566416211687/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9199845566416211687/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9199845566416211687/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9199845566416211687/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz9199845566416211687/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 123476 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 28, exec speed = 120625 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m120k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [41.00]
1; /tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz9199845566416211687/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_031528_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:15:28,580 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-31 03:15:28,581 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 03:15:34,628 INFO     Done. Execution time: 6.047400236129761 seconds
2023-01-31 03:15:34,628 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_031528_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_031528_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

2023-01-31 03:15:34,629 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:15:41,687 INFO     Done. Execution time: 7.058228492736816 seconds
2023-01-31 03:15:41,687 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0315-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0315-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.050s
user	0m15.378s
sys	0m2.136s

2023-01-31 03:15:41,687 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 03:15:41,688 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:16:47,464 INFO     Done. Execution time: 65.77652788162231 seconds
2023-01-31 03:16:47,464 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz3604777754170236688/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3604777754170236688/bin -o /tmp/qfuzz3604777754170236688/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3604777754170236688/bin
Found file /tmp/qfuzz3604777754170236688/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz3604777754170236688/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3604777754170236688/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3604777754170236688/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3604777754170236688/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3604777754170236688/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 134488 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 123534 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m123k to 134k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3604777754170236688/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_031647_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:16:47,465 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-31 03:16:47,465 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 03:16:53,875 INFO     Done. Execution time: 6.40996527671814 seconds
2023-01-31 03:16:53,875 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_031647_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_031647_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-31 03:16:53,876 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:17:01,622 INFO     Done. Execution time: 7.7464659214019775 seconds
2023-01-31 03:17:01,623 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0316-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0316-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.738s
user	0m16.713s
sys	0m2.503s

2023-01-31 03:17:01,623 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 03:17:01,623 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:18:08,102 INFO     Done. Execution time: 66.47851824760437 seconds
2023-01-31 03:18:08,102 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz4915064834078078374/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4915064834078078374/bin -o /tmp/qfuzz4915064834078078374/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4915064834078078374/bin
Found file /tmp/qfuzz4915064834078078374/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz4915064834078078374/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4915064834078078374/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4915064834078078374/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4915064834078078374/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4915064834078078374/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 118313 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 121008 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m118k to 121k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4915064834078078374/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_031807_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:18:08,102 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-31 03:18:08,102 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 03:18:14,461 INFO     Done. Execution time: 6.358842372894287 seconds
2023-01-31 03:18:14,461 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_031807_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_031807_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-31 03:18:14,462 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:18:22,375 INFO     Done. Execution time: 7.913202285766602 seconds
2023-01-31 03:18:22,375 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0318-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0318-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.905s
user	0m16.642s
sys	0m2.490s

2023-01-31 03:18:22,375 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 03:18:22,375 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:19:28,539 INFO     Done. Execution time: 66.16311836242676 seconds
2023-01-31 03:19:28,539 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz3655863073540451825/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3655863073540451825/bin -o /tmp/qfuzz3655863073540451825/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3655863073540451825/bin
Found file /tmp/qfuzz3655863073540451825/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz3655863073540451825/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3655863073540451825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3655863073540451825/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3655863073540451825/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3655863073540451825/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 131964 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 21, exec speed = 122831 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 21 bits (average: 13.50 bits)
[1;90m        Exec timing : [0m122k to 131k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3655863073540451825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_031928_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:19:28,539 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-31 03:19:28,539 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 03:19:33,220 INFO     Done. Execution time: 4.680553197860718 seconds
2023-01-31 03:19:33,220 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_031928_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_031928_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-31 03:19:33,221 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:19:35,320 INFO     Done. Execution time: 2.0990638732910156 seconds
2023-01-31 03:19:35,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0319-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0319-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.092s
user	0m3.674s
sys	0m0.228s

2023-01-31 03:19:35,320 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 03:19:35,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:20:41,734 INFO     Done. Execution time: 66.41391730308533 seconds
2023-01-31 03:20:41,735 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz8518156364638837706/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8518156364638837706/bin -o /tmp/qfuzz8518156364638837706/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8518156364638837706/bin
Found file /tmp/qfuzz8518156364638837706/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz8518156364638837706/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8518156364638837706/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8518156364638837706/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8518156364638837706/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8518156364638837706/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 114325 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 124272 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m114k to 124k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
1; /tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8518156364638837706/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_032041_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:20:41,735 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-31 03:20:41,735 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 03:20:49,933 INFO     Done. Execution time: 8.197760105133057 seconds
2023-01-31 03:20:49,933 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_032041_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_032041_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-31 03:20:49,934 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:21:00,102 INFO     Done. Execution time: 10.167882919311523 seconds
2023-01-31 03:21:00,102 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0320-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0320-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.158s
user	0m27.127s
sys	0m4.083s

2023-01-31 03:21:00,102 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 03:21:00,103 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:22:06,389 INFO     Done. Execution time: 66.28660917282104 seconds
2023-01-31 03:22:06,390 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4974194588231651787/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4974194588231651787/bin -o /tmp/qfuzz4974194588231651787/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4974194588231651787/bin
Found file /tmp/qfuzz4974194588231651787/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4974194588231651787/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4974194588231651787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4974194588231651787/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4974194588231651787/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4974194588231651787/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 123555 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 124925 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m123k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4974194588231651787/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_032206_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:22:06,390 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-31 03:22:06,390 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 03:22:13,316 INFO     Done. Execution time: 6.9260032176971436 seconds
2023-01-31 03:22:13,316 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_032206_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_032206_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-31 03:22:13,316 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:22:21,264 INFO     Done. Execution time: 7.947960615158081 seconds
2023-01-31 03:22:21,265 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0322-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0322-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.941s
user	0m16.845s
sys	0m2.269s

2023-01-31 03:22:21,265 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 03:22:21,265 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:23:27,346 INFO     Done. Execution time: 66.08073472976685 seconds
2023-01-31 03:23:27,346 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz4049604553592140953/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4049604553592140953/bin -o /tmp/qfuzz4049604553592140953/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4049604553592140953/bin
Found file /tmp/qfuzz4049604553592140953/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz4049604553592140953/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4049604553592140953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4049604553592140953/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4049604553592140953/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4049604553592140953/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 131962 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 110667 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m110k to 131k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [36.00]
1; /tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4049604553592140953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_032327_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:23:27,346 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-31 03:23:27,346 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 03:23:32,538 INFO     Done. Execution time: 5.191933870315552 seconds
2023-01-31 03:23:32,539 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_032327_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_032327_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-31 03:23:32,539 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:23:38,805 INFO     Done. Execution time: 6.266434192657471 seconds
2023-01-31 03:23:38,806 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0323-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0323-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.260s
user	0m13.764s
sys	0m1.930s

2023-01-31 03:23:38,806 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 03:23:38,806 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:24:44,650 INFO     Done. Execution time: 65.84413170814514 seconds
2023-01-31 03:24:44,650 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz6263208861179175382/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6263208861179175382/bin -o /tmp/qfuzz6263208861179175382/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6263208861179175382/bin
Found file /tmp/qfuzz6263208861179175382/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz6263208861179175382/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6263208861179175382/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6263208861179175382/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6263208861179175382/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6263208861179175382/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 118056 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 31, exec speed = 122600 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m31 to 32 bits (average: 31.50 bits)
[1;90m        Exec timing : [0m118k to 122k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [49.00]
1; /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [35.00,43.00]
3; /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 8.00; [35.00,43.00]
19; /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4,+delta
/tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 9, 20, 23, 15, 15, 18, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 19, 46, 29, 5, 15, 18, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6263208861179175382/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_032444_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,20,23,15,15,18,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [19,46,29,5,15,18,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [22,20,16,28,37,18,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,36,4,22,32,12,13]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:24:44,651 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-31 03:24:44,651 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 03:24:49,598 INFO     Done. Execution time: 4.94746994972229 seconds
2023-01-31 03:24:49,599 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_032444_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_032444_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,20,23,15,15,18,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [22,20,16,28,37,18,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [19,46,29,5,15,18,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,36,4,22,32,12,13])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [9,20,23,15,15,18,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [19,46,29,5,15,18,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [22,20,16,28,37,18,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [9,36,4,22,32,12,13]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 73):
                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  choice  |         choices         |  i  |  str  |  strDigits  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [9,20,23,15,15,18,24]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [9,20,23,15,15,18,24]  |     |    2  |             |
    15  |  // mostPreciseBound(R <= str |...  |         |  0  |          |  [9,20,23,15,15,18,24]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [9,20,23,15,15,18,24]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [9,20,23,15,15,18,24]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [9,20,23,15,15,18,24]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [9,20,23,15,15,18,24]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |       9  |  [9,20,23,15,15,18,24]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |       9  |  [9,20,23,15,15,18,24]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |       9  |  [9,20,23,15,15,18,24]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |      20  |  [9,20,23,15,15,18,24]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |      20  |  [9,20,23,15,15,18,24]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |      20  |  [9,20,23,15,15,18,24]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |      20  |  [9,20,23,15,15,18,24]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |      20  |  [9,20,23,15,15,18,24]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-31 03:24:49,599 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:25:08,600 INFO     Done. Execution time: 19.00068163871765 seconds
2023-01-31 03:25:08,600 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `17.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0324-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0324-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.994s
user	0m41.165s
sys	0m3.692s

2023-01-31 03:25:08,600 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 03:25:08,600 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:26:14,607 INFO     Done. Execution time: 66.00690937042236 seconds
2023-01-31 03:26:14,608 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz8279390481516136611/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8279390481516136611/bin -o /tmp/qfuzz8279390481516136611/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8279390481516136611/bin
Found file /tmp/qfuzz8279390481516136611/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz8279390481516136611/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8279390481516136611/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8279390481516136611/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8279390481516136611/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8279390481516136611/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 118427 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 119778 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m118k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8279390481516136611/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_032614_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:26:14,608 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-31 03:26:14,608 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 03:26:18,308 INFO     Done. Execution time: 3.700110912322998 seconds
2023-01-31 03:26:18,309 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_032614_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_032614_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [5,22,20,16,28,37,18]
startIndex: 21
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [24,9,36,4,22,32,12]
startIndex: 13
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                              
 Index  |   Commands   |  Costs  |  R  |          array          |  endIndex  |  startIndex  |
----------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [5,22,20,16,28,37,18]  |         2  |          21  |
    48  |     return;  |         |  0  |  [5,22,20,16,28,37,18]  |         2  |          21  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-31 03:26:18,309 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:26:20,213 INFO     Done. Execution time: 1.9042026996612549 seconds
2023-01-31 03:26:20,214 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0326-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0326-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.897s
user	0m3.369s
sys	0m0.211s

2023-01-31 03:26:20,214 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 03:26:20,214 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:27:26,226 INFO     Done. Execution time: 66.01234102249146 seconds
2023-01-31 03:27:26,227 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5482933939253167953/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5482933939253167953/bin -o /tmp/qfuzz5482933939253167953/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5482933939253167953/bin
Found file /tmp/qfuzz5482933939253167953/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5482933939253167953/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5482933939253167953/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5482933939253167953/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5482933939253167953/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5482933939253167953/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 125294 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 124651 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m124k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 50.00; [32.00,91.00,191.00,251.00,451.00,501.00,651.00,731.00]
2; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 8; 40.00; [32.00,121.00,331.00,371.00,411.00,451.00,571.00,751.00]
3; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 8; 10.00; [32.00,151.00,251.00,591.00,651.00,691.00,931.00,941.00]
4; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 8; 60.00; [32.00,111.00,191.00,251.00,501.00,651.00,891.00,971.00]
6; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 5; 20.00; [11.00,32.00,461.00,531.00,551.00]
8; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 7; 50.00; [32.00,91.00,251.00,451.00,501.00,651.00,731.00]
27; /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 8; 99.00; [32.00,131.00,371.00,491.00,591.00,731.00,831.00,961.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 18, 24, 6, 41, 36, 29, 39, 5, 32, 46, 37, 15, 37, 38, 21, 40, 18, 5, 17, 38, 26, 23, 31, 28, 40, 47, 38, 7, 14, 47, 6, 25, 38, 29, 18, 31, 14, 20, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 32, 36, 4, 22, 32, 12, 4, 11, 15, 12, 48, 34, 28, 33, 15, 24, 39, 34, 5, 13, 13, 13, 13, 13, 13, 13, 13, 20, 47, 47, 13, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 27, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 5, 44, 48, 32, 12, 13, 12, 34, 12, 48, 4, 6, 33, 46, 6, 45, 9, 33, 29, 49, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 32, 29, 12, 34, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5482933939253167953/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_032726_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,18,24,6,41,36,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,32,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,27,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,5,44,48,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,32,29,12,34,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:27:26,227 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-31 03:27:26,227 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 03:27:36,023 INFO     Done. Execution time: 9.796096801757812 seconds
2023-01-31 03:27:36,023 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_032726_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_032726_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,18,24,6,41,36,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,32,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,27,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,5,44,48,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,32,29,12,34,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [47,18,24,6,41,36,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,32,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [22,27,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,5,44,48,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [46,32,29,12,34,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,22,20,16,28,37,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects         |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [47,18,24,6,41,36,29]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [47,18,24,6,41,36,29]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [47,18,24,6,41,36,29]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [47,18,24,6,41,36,29]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [47,18,24,6,41,36,29]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [47,18,24,6,41,36,29]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     47  |  0  |  [47,18,24,6,41,36,29]  |
    22  |                     R = R + chunk;  |     47  |   47  |     47  |  0  |  [47,18,24,6,41,36,29]  |
    26  |                         i = i + 1;  |         |   47  |     47  |  1  |  [47,18,24,6,41,36,29]  |
    32  |                         R = R + 1;  |      1  |   48  |     47  |  1  |  [47,18,24,6,41,36,29]  |
    35  |     chunk = arrayRead(objects, i);  |         |   48  |     18  |  1  |  [47,18,24,6,41,36,29]  |
    38  |                     R = R + chunk;  |     18  |   66  |     18  |  1  |  [47,18,24,6,41,36,29]  |
    42  |                         i = i + 1;  |         |   66  |     18  |  2  |  [47,18,24,6,41,36,29]  |
    43  |              resetPlaceHolder_1();  |         |   66  |     18  |  2  |  [47,18,24,6,41,36,29]  |
    49  |                         R = R + 1;  |      1  |   67  |     18  |  2  |  [47,18,24,6,41,36,29]  |
    52  |     chunk = arrayRead(objects, i);  |         |   67  |     24  |  2  |  [47,18,24,6,41,36,29]  |
    55  |                     R = R + chunk;  |     24  |   91  |     24  |  2  |  [47,18,24,6,41,36,29]  |
    59  |                         i = i + 1;  |         |   91  |     24  |  3  |  [47,18,24,6,41,36,29]  |
    60  |              resetPlaceHolder_1();  |         |   91  |     24  |  3  |  [47,18,24,6,41,36,29]  |
    66  |                         R = R + 1;  |      1  |   92  |     24  |  3  |  [47,18,24,6,41,36,29]  |
    69  |     chunk = arrayRead(objects, i);  |         |   92  |      6  |  3  |  [47,18,24,6,41,36,29]  |
    72  |                     R = R + chunk;  |      6  |   98  |      6  |  3  |  [47,18,24,6,41,36,29]  |
    76  |                         i = i + 1;  |         |   98  |      6  |  4  |  [47,18,24,6,41,36,29]  |
    77  |              resetPlaceHolder_1();  |         |   98  |      6  |  4  |  [47,18,24,6,41,36,29]  |
    83  |                         R = R + 1;  |      1  |   99  |      6  |  4  |  [47,18,24,6,41,36,29]  |
    86  |     chunk = arrayRead(objects, i);  |         |   99  |     41  |  4  |  [47,18,24,6,41,36,29]  |
    89  |                     R = R + chunk;  |     41  |  140  |     41  |  4  |  [47,18,24,6,41,36,29]  |
    93  |                         i = i + 1;  |         |  140  |     41  |  5  |  [47,18,24,6,41,36,29]  |
    94  |              resetPlaceHolder_1();  |         |  140  |     41  |  5  |  [47,18,24,6,41,36,29]  |
   100  |                         R = R + 1;  |      1  |  141  |     41  |  5  |  [47,18,24,6,41,36,29]  |
   103  |     chunk = arrayRead(objects, i);  |         |  141  |     36  |  5  |  [47,18,24,6,41,36,29]  |
   106  |                     R = R + chunk;  |     36  |  177  |     36  |  5  |  [47,18,24,6,41,36,29]  |
   110  |                         i = i + 1;  |         |  177  |     36  |  6  |  [47,18,24,6,41,36,29]  |
   111  |              resetPlaceHolder_1();  |         |  177  |     36  |  6  |  [47,18,24,6,41,36,29]  |
   117  |                         R = R + 1;  |      1  |  178  |     36  |  6  |  [47,18,24,6,41,36,29]  |
   120  |     chunk = arrayRead(objects, i);  |         |  178  |     29  |  6  |  [47,18,24,6,41,36,29]  |
   123  |                     R = R + chunk;  |     29  |  207  |     29  |  6  |  [47,18,24,6,41,36,29]  |
   127  |                         i = i + 1;  |         |  207  |     29  |  7  |  [47,18,24,6,41,36,29]  |
   128  |              resetPlaceHolder_1();  |         |  207  |     29  |  7  |  [47,18,24,6,41,36,29]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     47  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     18  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     24  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |      6  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     41  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                         4  |
   106  |         R = R + chunk;  |     36  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                         5  |
   123  |         R = R + chunk;  |     29  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106,123}; {22,38}; {55,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(2, 4), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {106,123}; {22,38}; {55,89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     47  |                         0  |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |     18  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |     24  |                         1  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |      6  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |     41  |                         1  |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     36  |                         2  |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                            |
   123  |         R = R + chunk;  |     29  |                         2  |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {106,123}; {22,38}; {55,89}
GroupID(2): {72}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     47  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     24  |                            |                         1  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     41  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     36  |                            |                         2  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [39, 54])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     47  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     24  |                            |                         1  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     41  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     36  |                            |                         2  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 1 and 2 segment (index range: [90, 105])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     47  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |     18  |                            |                         0  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     24  |                            |                         1  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     41  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     36  |                            |                         2  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 2) || (i == 2))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R2 = R2 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-31 03:27:36,024 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:28:55,553 INFO     Done. Execution time: 79.52911949157715 seconds
2023-01-31 03:28:55,553 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 objects))) (= D2p 0)))
      (a!5 (or (<= D1p (+ 0 (* 1 1 objects))) (= D1p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p 0)
       a!5
       (<= D0p (+ 0 (* 1 1)))
       a!6)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 objects))) (= D2 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 objects))) (= D1 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 objects)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    1)  (define-fun D1 () Int    6)  (define-fun D2 () Int    6)  (define-fun objects () Int    6)  (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `77.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0327-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0327-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m19.522s
user	4m35.050s
sys	0m8.294s

2023-01-31 03:28:55,553 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 03:28:55,554 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:30:01,472 INFO     Done. Execution time: 65.91830492019653 seconds
2023-01-31 03:30:01,472 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz1637105585076205005/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1637105585076205005/bin -o /tmp/qfuzz1637105585076205005/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1637105585076205005/bin
Found file /tmp/qfuzz1637105585076205005/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz1637105585076205005/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1637105585076205005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1637105585076205005/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1637105585076205005/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1637105585076205005/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 135136 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 127872 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m127k to 135k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 21.00; [91.00,191.00,251.00,272.00,451.00,501.00,651.00,731.00]
2; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 8; 19.00; [121.00,331.00,371.00,411.00,432.00,451.00,571.00,751.00]
3; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 20.00; [191.50,501.00,711.00,731.00]
4; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 8; 50.00; [91.00,191.00,272.00,451.00,501.00,571.00,651.00,731.00]
6; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 8; 50.00; [191.00,291.00,392.00,451.00,501.00,651.00,731.00,991.00]
14; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 6; 40.00; [141.00,491.00,531.00,711.00,911.00,951.50]
38; /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 8; 60.00; [131.00,191.00,252.00,501.00,591.00,671.00,811.00,911.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 6, 45, 9, 33, 29, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 45, 26, 24, 35, 45, 47, 47, 47, 47, 26, 47, 47, 47, 42, 40, 12, 46, 11, 45, 9, 14, 29, 12, 34, 23, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 14, 22, 32, 49, 19, 48, 34, 4, 12, 46, 6, 45, 9, 33, 29, 12, 33, 29, 12, 34, 15, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 28, 13, 12, 15, 9, 48, 34, 40, 12, 46, 6, 45, 9, 33, 43, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 35, 9, 9, 9, 9, 45, 28, 46, 9, 9, 9, 50, 38, 44, 46, 14, 44, 21, 35, 13, 30, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1637105585076205005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_033001_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,6,45,9,33,29,40], 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,45,26,24,35,45,47], 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,14,22,32,49], 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,28], 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,35,9,9,9], 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:30:01,473 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-31 03:30:01,473 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 03:30:12,459 INFO     Done. Execution time: 10.985845804214478 seconds
2023-01-31 03:30:12,459 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_033001_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_033001_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,6,45,9,33,29,40], 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,14,22,32,49], 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,45,26,24,35,45,47], 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,28], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,35,9,9,9], 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,6,45,9,33,29,40]
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [6,45,26,24,35,45,47]
separator: 47
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,14,22,32,49]
separator: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,28]
separator: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,35,9,9,9]
separator: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,22,20,16,28,37,18]
separator: 21
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,12]
separator: 13
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects         |  separator  |
------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [24,6,45,9,33,29,40]  |         12  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [24,6,45,9,33,29,40]  |         12  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [24,6,45,9,33,29,40]  |         12  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [24,6,45,9,33,29,40]  |         12  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [24,6,45,9,33,29,40]  |         12  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [24,6,45,9,33,29,40]  |         12  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     24  |  0  |  [24,6,45,9,33,29,40]  |         12  |
    22  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  [24,6,45,9,33,29,40]  |         12  |
    26  |                         i = i + 1;  |         |   24  |     24  |  1  |  [24,6,45,9,33,29,40]  |         12  |
    32  |                 R = R + separator;  |     12  |   36  |     24  |  1  |  [24,6,45,9,33,29,40]  |         12  |
    35  |     chunk = arrayRead(objects, i);  |         |   36  |      6  |  1  |  [24,6,45,9,33,29,40]  |         12  |
    38  |                     R = R + chunk;  |      6  |   42  |      6  |  1  |  [24,6,45,9,33,29,40]  |         12  |
    42  |                         i = i + 1;  |         |   42  |      6  |  2  |  [24,6,45,9,33,29,40]  |         12  |
    43  |              resetPlaceHolder_1();  |         |   42  |      6  |  2  |  [24,6,45,9,33,29,40]  |         12  |
    49  |                 R = R + separator;  |     12  |   54  |      6  |  2  |  [24,6,45,9,33,29,40]  |         12  |
    52  |     chunk = arrayRead(objects, i);  |         |   54  |     45  |  2  |  [24,6,45,9,33,29,40]  |         12  |
    55  |                     R = R + chunk;  |     45  |   99  |     45  |  2  |  [24,6,45,9,33,29,40]  |         12  |
    59  |                         i = i + 1;  |         |   99  |     45  |  3  |  [24,6,45,9,33,29,40]  |         12  |
    60  |              resetPlaceHolder_1();  |         |   99  |     45  |  3  |  [24,6,45,9,33,29,40]  |         12  |
    66  |                 R = R + separator;  |     12  |  111  |     45  |  3  |  [24,6,45,9,33,29,40]  |         12  |
    69  |     chunk = arrayRead(objects, i);  |         |  111  |      9  |  3  |  [24,6,45,9,33,29,40]  |         12  |
    72  |                     R = R + chunk;  |      9  |  120  |      9  |  3  |  [24,6,45,9,33,29,40]  |         12  |
    76  |                         i = i + 1;  |         |  120  |      9  |  4  |  [24,6,45,9,33,29,40]  |         12  |
    77  |              resetPlaceHolder_1();  |         |  120  |      9  |  4  |  [24,6,45,9,33,29,40]  |         12  |
    83  |                 R = R + separator;  |     12  |  132  |      9  |  4  |  [24,6,45,9,33,29,40]  |         12  |
    86  |     chunk = arrayRead(objects, i);  |         |  132  |     33  |  4  |  [24,6,45,9,33,29,40]  |         12  |
    89  |                     R = R + chunk;  |     33  |  165  |     33  |  4  |  [24,6,45,9,33,29,40]  |         12  |
    93  |                         i = i + 1;  |         |  165  |     33  |  5  |  [24,6,45,9,33,29,40]  |         12  |
    94  |              resetPlaceHolder_1();  |         |  165  |     33  |  5  |  [24,6,45,9,33,29,40]  |         12  |
   100  |                 R = R + separator;  |     12  |  177  |     33  |  5  |  [24,6,45,9,33,29,40]  |         12  |
   103  |     chunk = arrayRead(objects, i);  |         |  177  |     29  |  5  |  [24,6,45,9,33,29,40]  |         12  |
   106  |                     R = R + chunk;  |     29  |  206  |     29  |  5  |  [24,6,45,9,33,29,40]  |         12  |
   110  |                         i = i + 1;  |         |  206  |     29  |  6  |  [24,6,45,9,33,29,40]  |         12  |
   111  |              resetPlaceHolder_1();  |         |  206  |     29  |  6  |  [24,6,45,9,33,29,40]  |         12  |
   117  |                 R = R + separator;  |     12  |  218  |     29  |  6  |  [24,6,45,9,33,29,40]  |         12  |
   120  |     chunk = arrayRead(objects, i);  |         |  218  |     40  |  6  |  [24,6,45,9,33,29,40]  |         12  |
   123  |                     R = R + chunk;  |     40  |  258  |     40  |  6  |  [24,6,45,9,33,29,40]  |         12  |
   127  |                         i = i + 1;  |         |  258  |     40  |  7  |  [24,6,45,9,33,29,40]  |         12  |
   128  |              resetPlaceHolder_1();  |         |  258  |     40  |  7  |  [24,6,45,9,33,29,40]  |         12  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |
    32  |     R = R + separator;  |     12  |                         0  |
    38  |         R = R + chunk;  |      6  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     12  |                         1  |
    55  |         R = R + chunk;  |     45  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     12  |                         2  |
    72  |         R = R + chunk;  |      9  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     12  |                         3  |
    89  |         R = R + chunk;  |     33  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     12  |                         4  |
   106  |         R = R + chunk;  |     29  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     12  |                         5  |
   123  |         R = R + chunk;  |     40  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,55}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106,123}; {22,55}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {106,123}; {22,55} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                         0  |
    32  |     R = R + separator;  |     12  |                            |
    38  |         R = R + chunk;  |      6  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     12  |                            |
    55  |         R = R + chunk;  |     45  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     12  |                            |
    72  |         R = R + chunk;  |      9  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     12  |                            |
    89  |         R = R + chunk;  |     33  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     12  |                            |
   106  |         R = R + chunk;  |     29  |                         1  |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     12  |                            |
   123  |         R = R + chunk;  |     40  |                         1  |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [89, 38, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {106,123}; {22,55}
GroupID(2): {38,72,89}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |                         0  |                            |
    32  |     R = R + separator;  |     12  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |     R = R + separator;  |     12  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     45  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |     R = R + separator;  |     12  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      9  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |     R = R + separator;  |     12  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |     R = R + separator;  |     12  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |     R = R + separator;  |     12  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [56, 105])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |                         0  |                            |
    32  |     R = R + separator;  |     12  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |     R = R + separator;  |     12  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     45  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |     R = R + separator;  |     12  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      9  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |     R = R + separator;  |     12  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |     R = R + separator;  |     12  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |     R = R + separator;  |     12  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     40  |                            |                         1  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> if ((i < 4) || (i == 4))
{
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
  else
  {
    R2 = R2 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-31 03:30:12,459 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:31:26,235 INFO     Done. Execution time: 73.7759861946106 seconds
2023-01-31 03:31:26,236 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        if ((i < 2) || (i == 2))
        {
          if ((i < 1) || (i == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        if ((i < 2) || (i == 2))
        {
          if ((i < 1) || (i == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or true (= D2p 0))
       (<= D1p 0)
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun D0 () Int    4)  (define-fun D1 () Int    5)  (define-fun D2 () Int    7)  (define-fun objects () Int    2)  (define-fun separator () Int    3)  (define-fun D0p () Int    8)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `71.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0330-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0330-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m13.769s
user	4m7.495s
sys	0m4.078s

2023-01-31 03:31:26,236 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 03:31:26,236 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:32:32,098 INFO     Done. Execution time: 65.86185050010681 seconds
2023-01-31 03:32:32,098 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz2811912634017584726/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2811912634017584726/bin -o /tmp/qfuzz2811912634017584726/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2811912634017584726/bin
Found file /tmp/qfuzz2811912634017584726/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz2811912634017584726/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2811912634017584726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2811912634017584726/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2811912634017584726/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2811912634017584726/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 130924 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 122898 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m122k to 130k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 46.00; [248.00,458.00,504.00,738.00]
2; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 90.00; [124.00,418.00,578.00,668.00]
3; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 76.00; [88.00,164.00,478.00,718.00]
4; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128,+delta; 4; 140.00; [108.00,504.00,818.00,958.00]
5; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 4; 180.00; [248.00,504.00,738.00,918.00]
8; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 10.00; [344.00,368.00,378.00]
12; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta; 4; 246.00; [98.00,344.00,698.00,968.00]
14; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 90.00; [128.00,218.00,504.00,738.00]
19; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 4; 170.00; [104.00,318.00,488.00,878.00]
56; /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2; 4; 30.00; [458.00,708.00,738.00,784.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 9, 36, 4, 22, 8, 23, 14, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 41, 15, 23, 43, 36, 25, 9, 24, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 10, 12, 48, 48, 6, 6, 9, 33, 29, 12, 46, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 48, 34, 36, 4, 37, 19, 31, 48, 4, 18, 4, 48, 38, 48, 39, 49, 48, 48, 14, 48, 4, 48, 19, 25, 34, 11, 26, 48, 48, 48, 6, 40, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 18, 18, 18, 18, 18, 18, 18, 18, 18, 33, 4, 5, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 45, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 4, 47, 39, 40, 5, 5, 32, 5, 5, 5, 5, 29, 48, 5, 4, 38, 42, 17, 13, 47, 37, 20, 42, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 23, 49, 35, 10, 25, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 48, 24, 31, 13, 25, 25, 47, 4, 4, 13, 10, 12, 7, 4, 48, 24, 31, 13, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2811912634017584726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_033231_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,9,36,4,22,8,23], 14, 35, 38
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,41,15,23,43,36,25], 9, 24, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,10,12,48], 48, 6, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,48,34,36,4,37,19], 31, 48, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,18,18,18,18,18,18], 18, 18, 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,45,32,12], 13, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,4,47,39,40,5,5], 32, 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,23,49,35,10,25], 4, 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21, 33, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:32:32,099 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-31 03:32:32,099 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 03:32:40,491 INFO     Done. Execution time: 8.392178058624268 seconds
2023-01-31 03:32:40,491 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_033231_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_033231_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,9,36,4,22,8,23], 14, 35, 38)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,41,15,23,43,36,25], 9, 24, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,10,12,48], 48, 6, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,48,34,36,4,37,19], 31, 48, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,18,18,18,18,18,18], 18, 18, 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,45,32,12], 13, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,4,47,39,40,5,5], 32, 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,23,49,35,10,25], 4, 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21, 33, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [38,9,36,4,22,8,23]
searchString: 14
replacement: 35
max: 38
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,41,15,23,43,36,25]
searchString: 9
replacement: 24
max: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,10,12,48]
searchString: 48
replacement: 6
max: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [16,48,34,36,4,37,19]
searchString: 31
replacement: 48
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [16,18,18,18,18,18,18]
searchString: 18
replacement: 18
max: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,45,32,12]
searchString: 13
replacement: 12
max: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,4,47,39,40,5,5]
searchString: 32
replacement: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,11,23,49,35,10,25]
searchString: 4
replacement: 4
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,22,20,16,28,37,18]
searchString: 21
replacement: 33
max: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
searchString: 13
replacement: 12
max: 15
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     38  |  0  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    51  |                     R = R + chunk;  |     38  |   38  |     38  |  0  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    54  |               R = R + replacement;  |     35  |   73  |     38  |  0  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |   73  |      9  |  0  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    63  |                         i = i + 2;  |         |   73  |      9  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    64  |              resetPlaceHolder_1();  |         |   73  |      9  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    72  |        chunk = arrayRead(text, i);  |         |   73  |     36  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    75  |                     R = R + chunk;  |     36  |  109  |     36  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    78  |               R = R + replacement;  |     35  |  144  |     36  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  144  |      4  |  2  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    87  |                         i = i + 2;  |         |  144  |      4  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    88  |              resetPlaceHolder_1();  |         |  144  |      4  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    96  |        chunk = arrayRead(text, i);  |         |  144  |     22  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
    99  |                     R = R + chunk;  |     22  |  166  |     22  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
   102  |               R = R + replacement;  |     35  |  201  |     22  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
   107  |  chunk = arrayRead(text, (i + 1...  |         |  201  |      8  |  4  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
   111  |                         i = i + 2;  |         |  201  |      8  |  6  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
   112  |              resetPlaceHolder_1();  |         |  201  |      8  |  6  |   38  |           35  |            14  |  [38,9,36,4,22,8,23]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [78, 102, 54, 99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     38  |                            |
    54  |   R = R + replacement;  |     35  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     36  |                            |
    78  |   R = R + replacement;  |     35  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     22  |                            |
   102  |   R = R + replacement;  |     35  |                         2  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [99, 75, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {54}; {78}
GroupID(1): {51,75,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     38  |                            |                         0  |
    54  |   R = R + replacement;  |     35  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     36  |                            |                         0  |
    78  |   R = R + replacement;  |     35  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     22  |                            |                         0  |
   102  |   R = R + replacement;  |     35  |                         2  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64, 88)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-31 03:32:40,491 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:34:04,234 INFO     Done. Execution time: 83.74201512336731 seconds
2023-01-31 03:34:04,234 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8657103458325532385.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `81.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0332-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0332-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m23.733s
user	3m8.766s
sys	0m17.742s

2023-01-31 03:34:04,234 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 03:34:04,234 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:35:10,045 INFO     Done. Execution time: 65.81057858467102 seconds
2023-01-31 03:35:10,045 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz7050775583011020183/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7050775583011020183/bin -o /tmp/qfuzz7050775583011020183/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7050775583011020183/bin
Found file /tmp/qfuzz7050775583011020183/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz7050775583011020183/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7050775583011020183/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7050775583011020183/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7050775583011020183/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7050775583011020183/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 127189 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 122442 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m122k to 127k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
1; /tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7050775583011020183/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_033509_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 9
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:35:10,045 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-31 03:35:10,046 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 03:35:16,398 INFO     Done. Execution time: 6.3520283699035645 seconds
2023-01-31 03:35:16,398 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_033509_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_033509_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 22)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 9)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 9
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            22  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            22  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            22  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            22  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            22  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            22  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            22  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            22  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            22  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            22  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            22  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            22  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-31 03:35:16,398 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:35:36,732 INFO     Done. Execution time: 20.333667516708374 seconds
2023-01-31 03:35:36,732 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `18.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0335-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0335-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.327s
user	0m37.956s
sys	0m4.070s

2023-01-31 03:35:36,732 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 03:35:36,733 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:36:42,552 INFO     Done. Execution time: 65.81935334205627 seconds
2023-01-31 03:36:42,552 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz2347596255845186446/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2347596255845186446/bin -o /tmp/qfuzz2347596255845186446/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2347596255845186446/bin
Found file /tmp/qfuzz2347596255845186446/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz2347596255845186446/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2347596255845186446/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2347596255845186446/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2347596255845186446/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2347596255845186446/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 120622 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 123924 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m120k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [190.00]
9; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 1; 0.00; [390.00]
15; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 3; 221.00; [190.00,776.00,997.00]
18; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 2; 344.00; [166.00,510.00]
55; /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:64; 1; 0.00; [1010.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:64
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 48, 10, 39, 50, 5, 9, 4, 6, 41, 48, 17, 36, 5, 30, 35, 20, 34, 44, 12, 5, 11, 41, 15, 35, 4, 45, 26, 17, 5, 28, 5, 47, 10, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 39, 16, 38, 7, 32, 5, 5, 5, 5, 5, 5, 34, 4, 15, 33, 17, 4, 14, 6, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 10, 36, 4, 22, 36, 49, 6, 4, 22, 30, 48, 34, 16, 12, 28, 6, 45, 9, 37, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 5, 22, 11, 4, 4, 31, 4, 38, 25, 34, 11, 4, 4, 4, 8, 4, 4, 4, 40, 46, 16, 9, 10, 43, 5, 12, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 35, 45, 25, 4, 6, 5, 6, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2347596255845186446/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_033642_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,48,10,39,50,5,9], 4, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,39,16,38,7,32,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,10,36,4,22,36,49], 6, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,5,22,11,4,4,31], 4, 38
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,35,45,25,4,6,5], 6, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 21, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:36:42,553 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 03:36:42,553 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 03:36:47,631 INFO     Done. Execution time: 5.078153848648071 seconds
2023-01-31 03:36:47,631 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_033642_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_033642_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,48,10,39,50,5,9], 4, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,39,16,38,7,32,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,10,36,4,22,36,49], 6, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,5,22,11,4,4,31], 4, 38)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,35,45,25,4,6,5], 6, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 21, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [5,22,20,16,28,37,18]
isSeparator: 21
max: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,9,36,4,22,32,12]
isSeparator: 13
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [49,48,10,39,50,5,9]
isSeparator: 4
max: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,39,16,38,7,32,5]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [8,10,36,4,22,36,49]
isSeparator: 6
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [18,5,22,11,4,4,31]
isSeparator: 4
max: 38
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [8,35,45,25,4,6,5]
isSeparator: 6
max: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 29):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |           str           |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           21  |   33  |  [5,22,20,16,28,37,18]  |
    28  |     return;  |         |  0  |           21  |   33  |  [5,22,20,16,28,37,18]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 195):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |            4  |                    |    6  |                   |  [49,48,10,39,50,5,9]  |
    28  |                      // int R = 0;  |         |   0  |         |     |            4  |                    |    6  |                   |  [49,48,10,39,50,5,9]  |
    29  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |            4  |                    |    6  |                   |  [49,48,10,39,50,5,9]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |            4  |                    |    6  |                   |  [49,48,10,39,50,5,9]  |
    32  |           int numberOfStrings = 0;  |         |   0  |         |     |            4  |                    |    6  |                0  |  [49,48,10,39,50,5,9]  |
    34  |                     int chunk = 0;  |         |   0  |      0  |     |            4  |                    |    6  |                0  |  [49,48,10,39,50,5,9]  |
    36  |          int isSeparatorChunk = 0;  |         |   0  |      0  |     |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    38  |                         int i = 0;  |         |   0  |      0  |  0  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    44  |         chunk = arrayRead(str, i);  |         |   0  |     49  |  0  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    54  |                     R = R + chunk;  |     49  |  49  |     49  |  0  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    58  |                         i = i + 1;  |         |  49  |     49  |  1  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    59  |              resetPlaceHolder_1();  |         |  49  |     49  |  1  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    65  |         chunk = arrayRead(str, i);  |         |  49  |     48  |  1  |            4  |                 0  |    6  |                0  |  [49,48,10,39,50,5,9]  |
    76  |  numberOfStrings = numberOfStri...  |         |  49  |     48  |  1  |            4  |                 0  |    6  |                1  |  [49,48,10,39,50,5,9]  |
    80  |                         i = i + 1;  |         |  49  |     48  |  2  |            4  |                 0  |    6  |                1  |  [49,48,10,39,50,5,9]  |
    81  |              resetPlaceHolder_1();  |         |  49  |     48  |  2  |            4  |                 0  |    6  |                1  |  [49,48,10,39,50,5,9]  |
    87  |         chunk = arrayRead(str, i);  |         |  49  |     10  |  2  |            4  |                 0  |    6  |                1  |  [49,48,10,39,50,5,9]  |
    98  |  numberOfStrings = numberOfStri...  |         |  49  |     10  |  2  |            4  |                 0  |    6  |                2  |  [49,48,10,39,50,5,9]  |
   102  |                         i = i + 1;  |         |  49  |     10  |  3  |            4  |                 0  |    6  |                2  |  [49,48,10,39,50,5,9]  |
   103  |              resetPlaceHolder_1();  |         |  49  |     10  |  3  |            4  |                 0  |    6  |                2  |  [49,48,10,39,50,5,9]  |
   109  |         chunk = arrayRead(str, i);  |         |  49  |     39  |  3  |            4  |                 0  |    6  |                2  |  [49,48,10,39,50,5,9]  |
   120  |  numberOfStrings = numberOfStri...  |         |  49  |     39  |  3  |            4  |                 0  |    6  |                3  |  [49,48,10,39,50,5,9]  |
   124  |                         i = i + 1;  |         |  49  |     39  |  4  |            4  |                 0  |    6  |                3  |  [49,48,10,39,50,5,9]  |
   125  |              resetPlaceHolder_1();  |         |  49  |     39  |  4  |            4  |                 0  |    6  |                3  |  [49,48,10,39,50,5,9]  |
   131  |         chunk = arrayRead(str, i);  |         |  49  |     50  |  4  |            4  |                 0  |    6  |                3  |  [49,48,10,39,50,5,9]  |
   142  |  numberOfStrings = numberOfStri...  |         |  49  |     50  |  4  |            4  |                 0  |    6  |                4  |  [49,48,10,39,50,5,9]  |
   146  |                         i = i + 1;  |         |  49  |     50  |  5  |            4  |                 0  |    6  |                4  |  [49,48,10,39,50,5,9]  |
   147  |              resetPlaceHolder_1();  |         |  49  |     50  |  5  |            4  |                 0  |    6  |                4  |  [49,48,10,39,50,5,9]  |
   153  |         chunk = arrayRead(str, i);  |         |  49  |      5  |  5  |            4  |                 0  |    6  |                4  |  [49,48,10,39,50,5,9]  |
   164  |  numberOfStrings = numberOfStri...  |         |  49  |      5  |  5  |            4  |                 0  |    6  |                5  |  [49,48,10,39,50,5,9]  |
   168  |                         i = i + 1;  |         |  49  |      5  |  6  |            4  |                 0  |    6  |                5  |  [49,48,10,39,50,5,9]  |
   169  |              resetPlaceHolder_1();  |         |  49  |      5  |  6  |            4  |                 0  |    6  |                5  |  [49,48,10,39,50,5,9]  |
   175  |         chunk = arrayRead(str, i);  |         |  49  |      9  |  6  |            4  |                 0  |    6  |                5  |  [49,48,10,39,50,5,9]  |
   186  |  numberOfStrings = numberOfStri...  |         |  49  |      9  |  6  |            4  |                 0  |    6  |                6  |  [49,48,10,39,50,5,9]  |
   190  |                         i = i + 1;  |         |  49  |      9  |  7  |            4  |                 0  |    6  |                6  |  [49,48,10,39,50,5,9]  |
   191  |              resetPlaceHolder_1();  |         |  49  |      9  |  7  |            4  |                 0  |    6  |                6  |  [49,48,10,39,50,5,9]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     49  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   169  |  resetPlaceHolder_1();  |         |                            |
   191  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-31 03:36:47,631 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:36:49,140 INFO     Done. Execution time: 1.5080230236053467 seconds
2023-01-31 03:36:49,140 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.502s
user	0m2.682s
sys	0m0.140s

2023-01-31 03:36:49,140 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 03:36:49,140 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:37:55,006 INFO     Done. Execution time: 65.86633706092834 seconds
2023-01-31 03:37:55,007 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2095513388877128363/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2095513388877128363/bin -o /tmp/qfuzz2095513388877128363/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2095513388877128363/bin
Found file /tmp/qfuzz2095513388877128363/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2095513388877128363/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2095513388877128363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2095513388877128363/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2095513388877128363/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2095513388877128363/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 114458 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 43, exec speed = 122142 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 43 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m114k to 122k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2095513388877128363/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_033754_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:37:55,007 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-31 03:37:55,007 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 03:37:58,845 INFO     Done. Execution time: 3.837536573410034 seconds
2023-01-31 03:37:58,845 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_033754_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_033754_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-31 03:37:58,846 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:38:00,745 INFO     Done. Execution time: 1.8990418910980225 seconds
2023-01-31 03:38:00,745 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0337-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0337-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.891s
user	0m3.270s
sys	0m0.246s

2023-01-31 03:38:00,745 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 03:38:00,745 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:39:06,875 INFO     Done. Execution time: 66.12942814826965 seconds
2023-01-31 03:39:06,875 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz1664350004388746783/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1664350004388746783/bin -o /tmp/qfuzz1664350004388746783/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1664350004388746783/bin
Found file /tmp/qfuzz1664350004388746783/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz1664350004388746783/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1664350004388746783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1664350004388746783/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1664350004388746783/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1664350004388746783/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 119832 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 122659 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m119k to 122k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1664350004388746783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_033906_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 22, 20, false, 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 9, 36, false, 22
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:39:06,875 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-31 03:39:06,875 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 03:39:10,719 INFO     Done. Execution time: 3.8435213565826416 seconds
2023-01-31 03:39:10,719 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_033906_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_033906_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 22, 20, false, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 9, 36, false, 22)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 22
max: 20
choice: 28
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
str: 2
separatorChars: 9
max: 36
choice: 22
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      28  |   20  |              false  |              22  |    2  |
    32  |     return;  |         |  0  |      28  |   20  |              false  |              22  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-31 03:39:10,719 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:39:12,958 INFO     Done. Execution time: 2.2382166385650635 seconds
2023-01-31 03:39:12,958 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0339-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0339-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.231s
user	0m4.062s
sys	0m0.270s

2023-01-31 03:39:12,958 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 03:39:12,958 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:40:18,872 INFO     Done. Execution time: 65.91333270072937 seconds
2023-01-31 03:40:18,872 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz394037572342026882/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz394037572342026882/bin -o /tmp/qfuzz394037572342026882/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz394037572342026882/bin
Found file /tmp/qfuzz394037572342026882/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz394037572342026882/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz394037572342026882/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz394037572342026882/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz394037572342026882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz394037572342026882/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz394037572342026882/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz394037572342026882/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 25, exec speed = 123972 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 120634 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 25 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m120k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz394037572342026882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_034018_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:40:18,872 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-31 03:40:18,873 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 03:40:23,072 INFO     Done. Execution time: 4.19922661781311 seconds
2023-01-31 03:40:23,072 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_034018_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_034018_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-31 03:40:23,072 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:40:25,270 INFO     Done. Execution time: 2.1979711055755615 seconds
2023-01-31 03:40:25,271 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0340-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0340-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.190s
user	0m3.743s
sys	0m0.259s

2023-01-31 03:40:25,271 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 03:40:25,271 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:41:31,321 INFO     Done. Execution time: 66.04982614517212 seconds
2023-01-31 03:41:31,321 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz3502553109007974890/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3502553109007974890/bin -o /tmp/qfuzz3502553109007974890/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3502553109007974890/bin
Found file /tmp/qfuzz3502553109007974890/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz3502553109007974890/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3502553109007974890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3502553109007974890/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3502553109007974890/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3502553109007974890/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 128115 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 108359 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m108k to 128k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 44.00; [258.00,458.00,502.00,738.00]
1; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 40.00; [122.00,378.00,418.00,578.00]
3; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 4; 100.00; [98.00,198.00,542.00,658.00]
4; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 36.00; [258.00,738.00,782.00,818.00]
5; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 264.00; [318.00,582.00]
6; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 4; 176.00; [138.00,502.00,678.00,918.00]
8; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 4; 80.00; [382.00,518.00,938.00,1018.00]
12; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 4; 220.00; [258.00,502.00,738.00,958.00]
33; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 4; 236.00; [258.00,502.00,738.00,998.00]
47; /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 4; 116.00; [118.00,522.00,638.00,818.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 33, 5, 6, 31, 31, 40, 31, 37, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 49, 32, 12, 18, 4, 15, 12, 48, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 22, 36, 4, 47, 32, 12, 13, 12, 15, 12, 34, 34, 15, 12, 25, 5, 10, 34, 9, 9, 14, 34, 9, 9, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 29, 46, 47, 25, 22, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 25, 6, 6, 45, 9, 33, 29, 12, 34, 19, 21, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 14, 8, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 24, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 29, 15, 43, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 9, 36, 4, 40, 15, 12, 48, 34, 35, 24, 40, 12, 46, 6, 45, 9, 33, 39, 12, 34, 27, 36, 35, 26, 27, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 19, 32, 25, 9, 36, 4, 22, 31, 12, 36, 13, 4, 15, 30, 6, 45, 12, 27, 47, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3502553109007974890/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_034131_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,33,5,6,31,31,40], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,49,32,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,22,36,4,47,32,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,25,6,6,45,9,33], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,24,15,15,15,15,15], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,9,36,4,40,15,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,19,32,25,9,36,4], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,20,16,28,37,18], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:41:31,321 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-31 03:41:31,322 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 03:41:39,946 INFO     Done. Execution time: 8.623812437057495 seconds
2023-01-31 03:41:39,946 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_034131_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_034131_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,33,5,6,31,31,40], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,49,32,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,22,36,4,47,32,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,25,6,6,45,9,33], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,24,15,15,15,15,15], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,9,36,4,40,15,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,20,16,28,37,18], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,19,32,25,9,36,4], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [25,33,5,6,31,31,40]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,36,4,49,32,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,22,36,4,47,32,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,25,6,6,45,9,33]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [28,24,15,15,15,15,15]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [38,9,36,4,40,15,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [26,19,32,25,9,36,4]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [5,22,20,16,28,37,18]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,36,4,22,32,12]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |        template        |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [25,33,5,6,31,31,40]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [25,33,5,6,31,31,40]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [25,33,5,6,31,31,40]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [25,33,5,6,31,31,40]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [25,33,5,6,31,31,40]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [25,33,5,6,31,31,40]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [25,33,5,6,31,31,40]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     25  |  0  |          0  |  [25,33,5,6,31,31,40]  |
    32  |                     R = R + chunk;  |     25  |   25  |     2  |     25  |  0  |          0  |  [25,33,5,6,31,31,40]  |
    36  |                         i = i + 1;  |         |   25  |     2  |     25  |  1  |          0  |  [25,33,5,6,31,31,40]  |
    44  |  separator = arrayRead(template...  |         |   25  |     2  |     25  |  1  |         33  |  [25,33,5,6,31,31,40]  |
    49  |  chunk = arrayRead(template, (i...  |         |   25  |     2  |      5  |  1  |         33  |  [25,33,5,6,31,31,40]  |
    52  |                     R = R + chunk;  |      5  |   30  |     2  |      5  |  1  |         33  |  [25,33,5,6,31,31,40]  |
    56  |                         i = i + 2;  |         |   30  |     2  |      5  |  3  |         33  |  [25,33,5,6,31,31,40]  |
    57  |              resetPlaceHolder_1();  |         |   30  |     2  |      5  |  3  |         33  |  [25,33,5,6,31,31,40]  |
    65  |  separator = arrayRead(template...  |         |   30  |     2  |      5  |  3  |          6  |  [25,33,5,6,31,31,40]  |
    70  |  chunk = arrayRead(template, (i...  |         |   30  |     2  |     31  |  3  |          6  |  [25,33,5,6,31,31,40]  |
    73  |                     R = R + chunk;  |     31  |   61  |     2  |     31  |  3  |          6  |  [25,33,5,6,31,31,40]  |
    77  |                         i = i + 2;  |         |   61  |     2  |     31  |  5  |          6  |  [25,33,5,6,31,31,40]  |
    78  |              resetPlaceHolder_1();  |         |   61  |     2  |     31  |  5  |          6  |  [25,33,5,6,31,31,40]  |
    86  |  separator = arrayRead(template...  |         |   61  |     2  |     31  |  5  |         31  |  [25,33,5,6,31,31,40]  |
    91  |  chunk = arrayRead(template, (i...  |         |   61  |     2  |     40  |  5  |         31  |  [25,33,5,6,31,31,40]  |
    94  |                     R = R + chunk;  |     40  |  101  |     2  |     40  |  5  |         31  |  [25,33,5,6,31,31,40]  |
    98  |                         i = i + 2;  |         |  101  |     2  |     40  |  7  |         31  |  [25,33,5,6,31,31,40]  |
    99  |              resetPlaceHolder_1();  |         |  101  |     2  |     40  |  7  |         31  |  [25,33,5,6,31,31,40]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [32, 52, 73, 94]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52,73,94}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     25  |                         0  |
    52  |         R = R + chunk;  |      5  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     31  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     40  |                         0  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-31 03:41:39,946 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:41:41,630 INFO     Done. Execution time: 1.6841230392456055 seconds
2023-01-31 03:41:41,631 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.676s
user	0m2.983s
sys	0m0.203s

2023-01-31 03:41:41,631 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 03:41:41,631 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:42:47,563 INFO     Done. Execution time: 65.9316668510437 seconds
2023-01-31 03:42:47,563 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz5174838813480732476/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5174838813480732476/bin -o /tmp/qfuzz5174838813480732476/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5174838813480732476/bin
Found file /tmp/qfuzz5174838813480732476/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz5174838813480732476/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5174838813480732476/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5174838813480732476/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5174838813480732476/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5174838813480732476/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 122745 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 119999 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m119k to 122k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [494.00]
1; /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [114.00]
7; /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8; 1; 0.00; [994.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
/tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 10, 40, 38, 11, 28, 29, 33, 13, 38, 29, 33, 10, 12, 11, 16, 16, 11, 27, 7, 45, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5174838813480732476/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_034247_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 49, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:42:47,563 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-31 03:42:47,563 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 03:42:52,668 INFO     Done. Execution time: 5.104729413986206 seconds
2023-01-31 03:42:52,668 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_034247_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_034247_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(49, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 49
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 5
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 24
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      49  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      49  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      49  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      49  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      49  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  49  |      49  |
    29  |                    R = R + string;  |     49  |  49  |      |          2  |  49  |      49  |
    31  |                    int i = string;  |         |  49  |  49  |          2  |  49  |      49  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     49  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-31 03:42:52,668 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:42:54,252 INFO     Done. Execution time: 1.5830821990966797 seconds
2023-01-31 03:42:54,252 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.575s
user	0m2.834s
sys	0m0.206s

2023-01-31 03:42:54,252 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 03:42:54,252 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 03:43:59,923 INFO     Done. Execution time: 65.67038822174072 seconds
2023-01-31 03:43:59,923 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz3337128648867398260/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3337128648867398260/bin -o /tmp/qfuzz3337128648867398260/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3337128648867398260/bin
Found file /tmp/qfuzz3337128648867398260/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz3337128648867398260/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3337128648867398260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3337128648867398260/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3337128648867398260/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3337128648867398260/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 123522 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 7, exec speed = 123660 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 20, 16, 28, 37, 18, 21, 33, 20, 4, 28, 8, 42, 9, 11, 16, 16, 11, 27, 7, 45, 5, 31, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3337128648867398260/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_034359_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 03:43:59,923 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-31 03:43:59,923 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 03:44:03,775 INFO     Done. Execution time: 3.851740837097168 seconds
2023-01-31 03:44:03,775 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_034359_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_034359_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 5
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 24
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |       5  |
    22  |     return;  |         |  0  |          2  |       5  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-31 03:44:03,776 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 03:44:05,739 INFO     Done. Execution time: 1.9628136157989502 seconds
2023-01-31 03:44:05,739 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0344-transparentAmortize-60s-mostPrecise/guava-raw-0131-0344-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.956s
user	0m3.347s
sys	0m0.210s

2023-01-31 03:44:05,739 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.19544124603271,
    11.752657413482666,
    7.111114740371704
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.06013345718384,
    14.183472871780396,
    62.48015260696411
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.05467438697815,
    17.36719250679016,
    2487.5475385189056
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    65.77615213394165,
    17.79547357559204,
    7.449510335922241
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    65.75781321525574,
    11.062851667404175,
    7.194790840148926
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": [
    65.86070728302002,
    9.817517518997192,
    62.257781744003296
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": [
    66.14211082458496,
    11.41675353050232,
    7.663073778152466
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    65.9502522945404,
    6.573808670043945,
    14.351083993911743
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.09269618988037,
    6.2870166301727295,
    7.783463716506958
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.05114459991455,
    8.22588300704956,
    10.058203935623169
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.711510181427002,
    1.7134227752685547,
    0.9569005966186523
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.20389533042908,
    6.471259832382202,
    16.727280616760254
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.47961187362671,
    3.8060827255249023,
    2.179837226867676
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.31023287773132,
    6.742934703826904,
    7.817871332168579
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    65.7425708770752,
    10.069406986236572,
    7.075076341629028
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    65.95314407348633,
    11.814902782440186,
    62.56346821784973
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    65.94566202163696,
    6.390626907348633,
    7.486221075057983
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.0756106376648,
    13.142933368682861,
    104.22126722335815
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.30865502357483,
    6.957914113998413,
    7.530520915985107
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.20555996894836,
    6.756427526473999,
    8.37163519859314
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.00445508956909,
    6.047400236129761,
    7.058228492736816
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    65.77652788162231,
    6.40996527671814,
    7.7464659214019775
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.47851824760437,
    6.358842372894287,
    7.913202285766602
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.16311836242676,
    4.680553197860718,
    2.0990638732910156
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.41391730308533,
    8.197760105133057,
    10.167882919311523
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.28660917282104,
    6.9260032176971436,
    7.947960615158081
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.08073472976685,
    5.191933870315552,
    6.266434192657471
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    65.84413170814514,
    4.94746994972229,
    19.00068163871765
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.00690937042236,
    3.700110912322998,
    1.9042026996612549
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.01234102249146,
    9.796096801757812,
    79.52911949157715
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    65.91830492019653,
    10.985845804214478,
    73.7759861946106
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    65.86185050010681,
    8.392178058624268,
    83.74201512336731
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    65.81057858467102,
    6.3520283699035645,
    20.333667516708374
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    65.81935334205627,
    5.078153848648071,
    1.5080230236053467
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    65.86633706092834,
    3.837536573410034,
    1.8990418910980225
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.12942814826965,
    3.8435213565826416,
    2.2382166385650635
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    65.91333270072937,
    4.19922661781311,
    2.1979711055755615
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.04982614517212,
    8.623812437057495,
    1.6841230392456055
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    65.9316668510437,
    5.104729413986206,
    1.5830821990966797
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    65.67038822174072,
    3.851740837097168,
    1.9628136157989502
  ]
}
2023-01-31 03:44:05,739 INFO     Total time elapsed: 6127.174331665039 seconds
2023-01-31 03:44:05,740 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-31 03:44:05,740 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 15,
  "stringutils": 7,
  "guava": 1
}
2023-01-31 03:44:05,740 INFO     Number of not verified programs: {
  "stac": 4,
  "lang3": 4,
  "stringutils": 2
}
2023-01-31 03:44:05,740 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-31 03:44:05,740 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 1
}
2023-01-31 03:44:05,740 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/qfuzz_01.json
